(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var o,i,s=e[0],l=e[1],c=e[2],d=0,u=[];d<s.length;d++)i=s[d],Object.prototype.hasOwnProperty.call(r,i)&&r[i]&&u.push(r[i][0]),r[i]=0;for(o in l)Object.prototype.hasOwnProperty.call(l,o)&&(n[o]=l[o]);for(p&&p(e);u.length;)u.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],o=!0,s=1;s<t.length;s++){var l=t[s];0!==r[l]&&(o=!1)}o&&(a.splice(e--,1),n=i(i.s=t[0]))}return n}var o={},r={3:0},a=[];function i(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.e=function(n){var e=[],t=r[n];if(0!==t)if(t)e.push(t[2]);else{var o=new Promise((function(e,o){t=r[n]=[e,o]}));e.push(t[2]=o);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(n){return i.p+"assets/js/"+({}[n]||n)+"."+{1:"d2920358",2:"245be42e",4:"ec8df83f",5:"83420c85",6:"5faf5a50",7:"13c62f03",8:"b2b362e0",9:"0fd0389d",10:"a2ab4732",11:"cb2a446e",12:"44af248e",13:"fe5d2510",14:"a86b66a0",15:"db93f4b6",16:"315be0a7",17:"bb33c2d3",18:"aa3bc2d5",19:"eb6674e0",20:"26398a86",21:"8573d310",22:"f39eb1c6",23:"70b63e87",24:"780f4265",25:"087b890e",26:"a3432377",27:"c82078d0",28:"3f62dff1",29:"c935e9bc",30:"4acfb7de",31:"3bd52897",32:"cd6a4df7",33:"4f206021",34:"ad299da7",35:"a74cd3c6",36:"a6d81e30",37:"e3323ce2",38:"18d7dd67",39:"833f42ab",40:"ed6400f3",41:"81e6fc53",42:"d0e39d51",43:"047ac597",44:"6e407d3e",45:"234ad067",46:"3eaaa14c",47:"cd7ab522",48:"d146214c",49:"5412d8fd",50:"361271e2",51:"2488c147",52:"a5eb5e9f",53:"c3859002",54:"c572a44d",55:"30248800",56:"248288b0",57:"3a11d1c7",58:"95fa43c5",59:"d002a857",60:"26b4ef39",61:"7c152e5e",62:"baeb52bb",63:"8978958b",64:"b14585b3"}[n]+".js"}(n);var l=new Error;a=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=r[n];if(0!==t){if(t){var o=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+o+": "+a+")",l.name="ChunkLoadError",l.type=o,l.request=a,t[1](l)}r[n]=void 0}};var c=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(e)},i.m=n,i.c=o,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)i.d(t,o,function(e){return n[e]}.bind(null,o));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/",i.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var p=l;a.push([288,0]),t()}([function(n,e,t){"use strict";t.d(e,"e",(function(){return _})),t.d(e,"d",(function(){return k})),t.d(e,"c",(function(){return w})),t.d(e,"f",(function(){return j})),t.d(e,"a",(function(){return E})),t.d(e,"g",(function(){return S})),t.d(e,"b",(function(){return A})),t.d(e,"h",(function(){return z})),t.d(e,"i",(function(){return T}));t(54),t(75),t(15),t(96),t(21),t(24);function o(n){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}var r=t(36),a=t(56),i=(t(128),t(219),t(46),t(59),t(37),t(280),t(281),t(61),t(27),t(1)),s={NotFound:function(){return Promise.all([t.e(0),t.e(8)]).then(t.bind(null,620))},About:function(){return Promise.all([t.e(0),t.e(2),t.e(1),t.e(9)]).then(t.bind(null,621))},Category:function(){return Promise.all([t.e(0),t.e(2),t.e(1),t.e(7)]).then(t.bind(null,622))},Layout:function(){return Promise.all([t.e(0),t.e(2),t.e(1),t.e(4)]).then(t.bind(null,618))},Tag:function(){return Promise.all([t.e(0),t.e(2),t.e(1),t.e(5)]).then(t.bind(null,623))},Tags:function(){return Promise.all([t.e(0),t.e(2),t.e(1),t.e(6)]).then(t.bind(null,624))},TimeLines:function(){return Promise.all([t.e(0),t.e(2),t.e(1),t.e(11)]).then(t.bind(null,625))}},l={"v-48d9f322":function(){return t.e(14).then(t.bind(null,626))},"v-79ac7268":function(){return t.e(13).then(t.bind(null,627))},"v-2131ff62":function(){return t.e(17).then(t.bind(null,628))},"v-5ebb7c74":function(){return t.e(18).then(t.bind(null,629))},"v-4d64a25c":function(){return t.e(15).then(t.bind(null,630))},"v-6db14b88":function(){return t.e(16).then(t.bind(null,631))},"v-31c8e948":function(){return t.e(19).then(t.bind(null,632))},"v-20d1bd8f":function(){return t.e(21).then(t.bind(null,633))},"v-ed415422":function(){return t.e(22).then(t.bind(null,634))},"v-5ce04cb6":function(){return t.e(26).then(t.bind(null,635))},"v-5a7a86af":function(){return t.e(23).then(t.bind(null,636))},"v-74d4bdbb":function(){return t.e(25).then(t.bind(null,637))},"v-07f3dd22":function(){return t.e(24).then(t.bind(null,638))},"v-5c35c01c":function(){return t.e(20).then(t.bind(null,639))},"v-6fac1a4f":function(){return t.e(29).then(t.bind(null,640))},"v-8a36e722":function(){return t.e(28).then(t.bind(null,641))},"v-398a4a4f":function(){return t.e(30).then(t.bind(null,642))},"v-f1875250":function(){return t.e(27).then(t.bind(null,643))},"v-2e5792a2":function(){return t.e(32).then(t.bind(null,644))},"v-5680aca3":function(){return t.e(34).then(t.bind(null,645))},"v-7476a83e":function(){return t.e(31).then(t.bind(null,646))},"v-7e771070":function(){return t.e(36).then(t.bind(null,647))},"v-132be533":function(){return t.e(37).then(t.bind(null,648))},"v-3ce254cc":function(){return t.e(35).then(t.bind(null,649))},"v-d63eacf6":function(){return t.e(41).then(t.bind(null,650))},"v-4c624479":function(){return t.e(39).then(t.bind(null,651))},"v-7851ce0c":function(){return t.e(38).then(t.bind(null,652))},"v-76aea4b8":function(){return t.e(40).then(t.bind(null,653))},"v-0089f5e2":function(){return t.e(33).then(t.bind(null,654))},"v-3a771900":function(){return t.e(42).then(t.bind(null,655))},"v-7743345c":function(){return t.e(45).then(t.bind(null,656))},"v-23ba8d92":function(){return t.e(43).then(t.bind(null,657))},"v-7a3989dc":function(){return t.e(47).then(t.bind(null,658))},"v-56fded9c":function(){return t.e(46).then(t.bind(null,659))},"v-5c6715f2":function(){return t.e(48).then(t.bind(null,660))},"v-c119c20c":function(){return t.e(50).then(t.bind(null,661))},"v-553f9a5c":function(){return t.e(49).then(t.bind(null,662))},"v-377761dc":function(){return t.e(44).then(t.bind(null,663))},"v-1d22ef68":function(){return t.e(51).then(t.bind(null,664))},"v-ff763138":function(){return t.e(53).then(t.bind(null,665))},"v-1500dd1e":function(){return t.e(52).then(t.bind(null,666))},"v-3705dc52":function(){return t.e(58).then(t.bind(null,667))},"v-464eb01e":function(){return t.e(54).then(t.bind(null,668))},"v-9a9115a4":function(){return t.e(57).then(t.bind(null,669))},"v-5fede7f9":function(){return t.e(61).then(t.bind(null,670))},"v-59464431":function(){return t.e(59).then(t.bind(null,671))},"v-0f87b710":function(){return t.e(56).then(t.bind(null,672))},"v-cb7920d6":function(){return t.e(55).then(t.bind(null,673))},"v-225e74a0":function(){return t.e(62).then(t.bind(null,674))},"v-50934d48":function(){return t.e(63).then(t.bind(null,675))},"v-3ce3331c":function(){return t.e(60).then(t.bind(null,676))}};function c(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var p=/-(\w)/g,d=c((function(n){return n.replace(p,(function(n,e){return e?e.toUpperCase():""}))})),u=/\B([A-Z])/g,m=c((function(n){return n.replace(u,"-$1").toLowerCase()})),h=c((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function f(n,e){if(e)return n(e)?n(e):e.includes("-")?n(h(d(e))):n(h(e))||n(m(e))}var v=Object.assign({},s,l),g=function(n){return v[n]},y=function(n){return l[n]},b=function(n){return s[n]},x=function(n){return i.a.component(n)};function _(n){return f(y,n)}function k(n){return f(b,n)}function w(n){return f(g,n)}function j(n){return f(x,n)}function E(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(a.a)(regeneratorRuntime.mark((function n(e){var t;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(j(e)||!w(e)){n.next=5;break}return n.next=3,w(e)();case 3:t=n.sent,i.a.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function S(n,e,t){var o;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(o=n[e]).push.apply(o,Object(r.a)(t));break;default:throw new Error("Unknown option name.")}}function A(n,e){for(var t=0;t<n.length;t++){var o=n[t];if(o.key===e)return o}return{path:"",frontmatter:{}}}function z(n,e){var t=n.$localePath;return"object"===o(e)&&e[t]?e[t]:e}function T(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}},function(n,e,t){"use strict";
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */var o=Object.freeze({});function r(n){return null==n}function a(n){return null!=n}function i(n){return!0===n}function s(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function l(n){return null!==n&&"object"==typeof n}var c=Object.prototype.toString;function p(n){return"[object Object]"===c.call(n)}function d(n){return"[object RegExp]"===c.call(n)}function u(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function m(n){return a(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function h(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===c?JSON.stringify(n,null,2):String(n)}function f(n){var e=parseFloat(n);return isNaN(e)?n:e}function v(n,e){for(var t=Object.create(null),o=n.split(","),r=0;r<o.length;r++)t[o[r]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}v("slot,component",!0);var g=v("key,ref,slot,slot-scope,is");function y(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var b=Object.prototype.hasOwnProperty;function x(n,e){return b.call(n,e)}function _(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var k=/-(\w)/g,w=_((function(n){return n.replace(k,(function(n,e){return e?e.toUpperCase():""}))})),j=_((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),E=/\B([A-Z])/g,S=_((function(n){return n.replace(E,"-$1").toLowerCase()}));var A=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var o=arguments.length;return o?o>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function z(n,e){e=e||0;for(var t=n.length-e,o=new Array(t);t--;)o[t]=n[t+e];return o}function T(n,e){for(var t in e)n[t]=e[t];return n}function O(n){for(var e={},t=0;t<n.length;t++)n[t]&&T(e,n[t]);return e}function C(n,e,t){}var I=function(n,e,t){return!1},$=function(n){return n};function P(n,e){if(n===e)return!0;var t=l(n),o=l(e);if(!t||!o)return!t&&!o&&String(n)===String(e);try{var r=Array.isArray(n),a=Array.isArray(e);if(r&&a)return n.length===e.length&&n.every((function(n,t){return P(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(r||a)return!1;var i=Object.keys(n),s=Object.keys(e);return i.length===s.length&&i.every((function(t){return P(n[t],e[t])}))}catch(n){return!1}}function M(n,e){for(var t=0;t<n.length;t++)if(P(n[t],e))return t;return-1}function q(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var R=["component","directive","filter"],D=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],L={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:I,isReservedAttr:I,isUnknownElement:I,getTagNamespace:C,parsePlatformTagName:$,mustUseProp:I,async:!0,_lifecycleHooks:D},B=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function N(n,e,t,o){Object.defineProperty(n,e,{value:t,enumerable:!!o,writable:!0,configurable:!0})}var H=new RegExp("[^"+B.source+".$_\\d]");var F,U="__proto__"in{},V="undefined"!=typeof window,W="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,K=W&&WXEnvironment.platform.toLowerCase(),G=V&&window.navigator.userAgent.toLowerCase(),J=G&&/msie|trident/.test(G),Y=G&&G.indexOf("msie 9.0")>0,X=G&&G.indexOf("edge/")>0,Q=(G&&G.indexOf("android"),G&&/iphone|ipad|ipod|ios/.test(G)||"ios"===K),Z=(G&&/chrome\/\d+/.test(G),G&&/phantomjs/.test(G),G&&G.match(/firefox\/(\d+)/)),nn={}.watch,en=!1;if(V)try{var tn={};Object.defineProperty(tn,"passive",{get:function(){en=!0}}),window.addEventListener("test-passive",null,tn)}catch(n){}var on=function(){return void 0===F&&(F=!V&&!W&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),F},rn=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function an(n){return"function"==typeof n&&/native code/.test(n.toString())}var sn,ln="undefined"!=typeof Symbol&&an(Symbol)&&"undefined"!=typeof Reflect&&an(Reflect.ownKeys);sn="undefined"!=typeof Set&&an(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var cn=C,pn=0,dn=function(){this.id=pn++,this.subs=[]};dn.prototype.addSub=function(n){this.subs.push(n)},dn.prototype.removeSub=function(n){y(this.subs,n)},dn.prototype.depend=function(){dn.target&&dn.target.addDep(this)},dn.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},dn.target=null;var un=[];function mn(n){un.push(n),dn.target=n}function hn(){un.pop(),dn.target=un[un.length-1]}var fn=function(n,e,t,o,r,a,i,s){this.tag=n,this.data=e,this.children=t,this.text=o,this.elm=r,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},vn={child:{configurable:!0}};vn.child.get=function(){return this.componentInstance},Object.defineProperties(fn.prototype,vn);var gn=function(n){void 0===n&&(n="");var e=new fn;return e.text=n,e.isComment=!0,e};function yn(n){return new fn(void 0,void 0,void 0,String(n))}function bn(n){var e=new fn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var xn=Array.prototype,_n=Object.create(xn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=xn[n];N(_n,n,(function(){for(var t=[],o=arguments.length;o--;)t[o]=arguments[o];var r,a=e.apply(this,t),i=this.__ob__;switch(n){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&i.observeArray(r),i.dep.notify(),a}))}));var kn=Object.getOwnPropertyNames(_n),wn=!0;function jn(n){wn=n}var En=function(n){this.value=n,this.dep=new dn,this.vmCount=0,N(n,"__ob__",this),Array.isArray(n)?(U?function(n,e){n.__proto__=e}(n,_n):function(n,e,t){for(var o=0,r=t.length;o<r;o++){var a=t[o];N(n,a,e[a])}}(n,_n,kn),this.observeArray(n)):this.walk(n)};function Sn(n,e){var t;if(l(n)&&!(n instanceof fn))return x(n,"__ob__")&&n.__ob__ instanceof En?t=n.__ob__:wn&&!on()&&(Array.isArray(n)||p(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new En(n)),e&&t&&t.vmCount++,t}function An(n,e,t,o,r){var a=new dn,i=Object.getOwnPropertyDescriptor(n,e);if(!i||!1!==i.configurable){var s=i&&i.get,l=i&&i.set;s&&!l||2!==arguments.length||(t=n[e]);var c=!r&&Sn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return dn.target&&(a.depend(),c&&(c.dep.depend(),Array.isArray(e)&&On(e))),e},set:function(e){var o=s?s.call(n):t;e===o||e!=e&&o!=o||s&&!l||(l?l.call(n,e):t=e,c=!r&&Sn(e),a.notify())}})}}function zn(n,e,t){if(Array.isArray(n)&&u(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var o=n.__ob__;return n._isVue||o&&o.vmCount?t:o?(An(o.value,e,t),o.dep.notify(),t):(n[e]=t,t)}function Tn(n,e){if(Array.isArray(n)&&u(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||x(n,e)&&(delete n[e],t&&t.dep.notify())}}function On(n){for(var e=void 0,t=0,o=n.length;t<o;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&On(e)}En.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)An(n,e[t])},En.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Sn(n[e])};var Cn=L.optionMergeStrategies;function In(n,e){if(!e)return n;for(var t,o,r,a=ln?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++)"__ob__"!==(t=a[i])&&(o=n[t],r=e[t],x(n,t)?o!==r&&p(o)&&p(r)&&In(o,r):zn(n,t,r));return n}function $n(n,e,t){return t?function(){var o="function"==typeof e?e.call(t,t):e,r="function"==typeof n?n.call(t,t):n;return o?In(o,r):r}:e?n?function(){return In("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function Pn(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Mn(n,e,t,o){var r=Object.create(n||null);return e?T(r,e):r}Cn.data=function(n,e,t){return t?$n(n,e,t):e&&"function"!=typeof e?n:$n(n,e)},D.forEach((function(n){Cn[n]=Pn})),R.forEach((function(n){Cn[n+"s"]=Mn})),Cn.watch=function(n,e,t,o){if(n===nn&&(n=void 0),e===nn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var r={};for(var a in T(r,n),e){var i=r[a],s=e[a];i&&!Array.isArray(i)&&(i=[i]),r[a]=i?i.concat(s):Array.isArray(s)?s:[s]}return r},Cn.props=Cn.methods=Cn.inject=Cn.computed=function(n,e,t,o){if(!n)return e;var r=Object.create(null);return T(r,n),e&&T(r,e),r},Cn.provide=$n;var qn=function(n,e){return void 0===e?n:e};function Rn(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var o,r,a={};if(Array.isArray(t))for(o=t.length;o--;)"string"==typeof(r=t[o])&&(a[w(r)]={type:null});else if(p(t))for(var i in t)r=t[i],a[w(i)]=p(r)?r:{type:r};else 0;n.props=a}}(e),function(n,e){var t=n.inject;if(t){var o=n.inject={};if(Array.isArray(t))for(var r=0;r<t.length;r++)o[t[r]]={from:t[r]};else if(p(t))for(var a in t){var i=t[a];o[a]=p(i)?T({from:a},i):{from:i}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var o=e[t];"function"==typeof o&&(e[t]={bind:o,update:o})}}(e),!e._base&&(e.extends&&(n=Rn(n,e.extends,t)),e.mixins))for(var o=0,r=e.mixins.length;o<r;o++)n=Rn(n,e.mixins[o],t);var a,i={};for(a in n)s(a);for(a in e)x(n,a)||s(a);function s(o){var r=Cn[o]||qn;i[o]=r(n[o],e[o],t,o)}return i}function Dn(n,e,t,o){if("string"==typeof t){var r=n[e];if(x(r,t))return r[t];var a=w(t);if(x(r,a))return r[a];var i=j(a);return x(r,i)?r[i]:r[t]||r[a]||r[i]}}function Ln(n,e,t,o){var r=e[n],a=!x(t,n),i=t[n],s=Fn(Boolean,r.type);if(s>-1)if(a&&!x(r,"default"))i=!1;else if(""===i||i===S(n)){var l=Fn(String,r.type);(l<0||s<l)&&(i=!0)}if(void 0===i){i=function(n,e,t){if(!x(e,"default"))return;var o=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof o&&"Function"!==Nn(e.type)?o.call(n):o}(o,r,n);var c=wn;jn(!0),Sn(i),jn(c)}return i}var Bn=/^\s*function (\w+)/;function Nn(n){var e=n&&n.toString().match(Bn);return e?e[1]:""}function Hn(n,e){return Nn(n)===Nn(e)}function Fn(n,e){if(!Array.isArray(e))return Hn(e,n)?0:-1;for(var t=0,o=e.length;t<o;t++)if(Hn(e[t],n))return t;return-1}function Un(n,e,t){mn();try{if(e)for(var o=e;o=o.$parent;){var r=o.$options.errorCaptured;if(r)for(var a=0;a<r.length;a++)try{if(!1===r[a].call(o,n,e,t))return}catch(n){Wn(n,o,"errorCaptured hook")}}Wn(n,e,t)}finally{hn()}}function Vn(n,e,t,o,r){var a;try{(a=t?n.apply(e,t):n.call(e))&&!a._isVue&&m(a)&&!a._handled&&(a.catch((function(n){return Un(n,o,r+" (Promise/async)")})),a._handled=!0)}catch(n){Un(n,o,r)}return a}function Wn(n,e,t){if(L.errorHandler)try{return L.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Kn(e,null,"config.errorHandler")}Kn(n,e,t)}function Kn(n,e,t){if(!V&&!W||"undefined"==typeof console)throw n;console.error(n)}var Gn,Jn=!1,Yn=[],Xn=!1;function Qn(){Xn=!1;var n=Yn.slice(0);Yn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&an(Promise)){var Zn=Promise.resolve();Gn=function(){Zn.then(Qn),Q&&setTimeout(C)},Jn=!0}else if(J||"undefined"==typeof MutationObserver||!an(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Gn="undefined"!=typeof setImmediate&&an(setImmediate)?function(){setImmediate(Qn)}:function(){setTimeout(Qn,0)};else{var ne=1,ee=new MutationObserver(Qn),te=document.createTextNode(String(ne));ee.observe(te,{characterData:!0}),Gn=function(){ne=(ne+1)%2,te.data=String(ne)},Jn=!0}function oe(n,e){var t;if(Yn.push((function(){if(n)try{n.call(e)}catch(n){Un(n,e,"nextTick")}else t&&t(e)})),Xn||(Xn=!0,Gn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var re=new sn;function ae(n){!function n(e,t){var o,r,a=Array.isArray(e);if(!a&&!l(e)||Object.isFrozen(e)||e instanceof fn)return;if(e.__ob__){var i=e.__ob__.dep.id;if(t.has(i))return;t.add(i)}if(a)for(o=e.length;o--;)n(e[o],t);else for(r=Object.keys(e),o=r.length;o--;)n(e[r[o]],t)}(n,re),re.clear()}var ie=_((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),o="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=o?n.slice(1):n,once:t,capture:o,passive:e}}));function se(n,e){function t(){var n=arguments,o=t.fns;if(!Array.isArray(o))return Vn(o,null,arguments,e,"v-on handler");for(var r=o.slice(),a=0;a<r.length;a++)Vn(r[a],null,n,e,"v-on handler")}return t.fns=n,t}function le(n,e,t,o,a,s){var l,c,p,d;for(l in n)c=n[l],p=e[l],d=ie(l),r(c)||(r(p)?(r(c.fns)&&(c=n[l]=se(c,s)),i(d.once)&&(c=n[l]=a(d.name,c,d.capture)),t(d.name,c,d.capture,d.passive,d.params)):c!==p&&(p.fns=c,n[l]=p));for(l in e)r(n[l])&&o((d=ie(l)).name,e[l],d.capture)}function ce(n,e,t){var o;n instanceof fn&&(n=n.data.hook||(n.data.hook={}));var s=n[e];function l(){t.apply(this,arguments),y(o.fns,l)}r(s)?o=se([l]):a(s.fns)&&i(s.merged)?(o=s).fns.push(l):o=se([s,l]),o.merged=!0,n[e]=o}function pe(n,e,t,o,r){if(a(e)){if(x(e,t))return n[t]=e[t],r||delete e[t],!0;if(x(e,o))return n[t]=e[o],r||delete e[o],!0}return!1}function de(n){return s(n)?[yn(n)]:Array.isArray(n)?function n(e,t){var o,l,c,p,d=[];for(o=0;o<e.length;o++)r(l=e[o])||"boolean"==typeof l||(c=d.length-1,p=d[c],Array.isArray(l)?l.length>0&&(ue((l=n(l,(t||"")+"_"+o))[0])&&ue(p)&&(d[c]=yn(p.text+l[0].text),l.shift()),d.push.apply(d,l)):s(l)?ue(p)?d[c]=yn(p.text+l):""!==l&&d.push(yn(l)):ue(l)&&ue(p)?d[c]=yn(p.text+l.text):(i(e._isVList)&&a(l.tag)&&r(l.key)&&a(t)&&(l.key="__vlist"+t+"_"+o+"__"),d.push(l)));return d}(n):void 0}function ue(n){return a(n)&&a(n.text)&&!1===n.isComment}function me(n,e){if(n){for(var t=Object.create(null),o=ln?Reflect.ownKeys(n):Object.keys(n),r=0;r<o.length;r++){var a=o[r];if("__ob__"!==a){for(var i=n[a].from,s=e;s;){if(s._provided&&x(s._provided,i)){t[a]=s._provided[i];break}s=s.$parent}if(!s)if("default"in n[a]){var l=n[a].default;t[a]="function"==typeof l?l.call(e):l}else 0}}return t}}function he(n,e){if(!n||!n.length)return{};for(var t={},o=0,r=n.length;o<r;o++){var a=n[o],i=a.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,a.context!==e&&a.fnContext!==e||!i||null==i.slot)(t.default||(t.default=[])).push(a);else{var s=i.slot,l=t[s]||(t[s]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var c in t)t[c].every(fe)&&delete t[c];return t}function fe(n){return n.isComment&&!n.asyncFactory||" "===n.text}function ve(n){return n.isComment&&n.asyncFactory}function ge(n,e,t){var r,a=Object.keys(e).length>0,i=n?!!n.$stable:!a,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(i&&t&&t!==o&&s===t.$key&&!a&&!t.$hasNormal)return t;for(var l in r={},n)n[l]&&"$"!==l[0]&&(r[l]=ye(e,l,n[l]))}else r={};for(var c in e)c in r||(r[c]=be(e,c));return n&&Object.isExtensible(n)&&(n._normalized=r),N(r,"$stable",i),N(r,"$key",s),N(r,"$hasNormal",a),r}function ye(n,e,t){var o=function(){var n=arguments.length?t.apply(null,arguments):t({}),e=(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:de(n))&&n[0];return n&&(!e||1===n.length&&e.isComment&&!ve(e))?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:o,enumerable:!0,configurable:!0}),o}function be(n,e){return function(){return n[e]}}function xe(n,e){var t,o,r,i,s;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),o=0,r=n.length;o<r;o++)t[o]=e(n[o],o);else if("number"==typeof n)for(t=new Array(n),o=0;o<n;o++)t[o]=e(o+1,o);else if(l(n))if(ln&&n[Symbol.iterator]){t=[];for(var c=n[Symbol.iterator](),p=c.next();!p.done;)t.push(e(p.value,t.length)),p=c.next()}else for(i=Object.keys(n),t=new Array(i.length),o=0,r=i.length;o<r;o++)s=i[o],t[o]=e(n[s],s,o);return a(t)||(t=[]),t._isVList=!0,t}function _e(n,e,t,o){var r,a=this.$scopedSlots[n];a?(t=t||{},o&&(t=T(T({},o),t)),r=a(t)||("function"==typeof e?e():e)):r=this.$slots[n]||("function"==typeof e?e():e);var i=t&&t.slot;return i?this.$createElement("template",{slot:i},r):r}function ke(n){return Dn(this.$options,"filters",n)||$}function we(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function je(n,e,t,o,r){var a=L.keyCodes[e]||t;return r&&o&&!L.keyCodes[e]?we(r,o):a?we(a,n):o?S(o)!==e:void 0===n}function Ee(n,e,t,o,r){if(t)if(l(t)){var a;Array.isArray(t)&&(t=O(t));var i=function(i){if("class"===i||"style"===i||g(i))a=n;else{var s=n.attrs&&n.attrs.type;a=o||L.mustUseProp(e,s,i)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=w(i),c=S(i);l in a||c in a||(a[i]=t[i],r&&((n.on||(n.on={}))["update:"+i]=function(n){t[i]=n}))};for(var s in t)i(s)}else;return n}function Se(n,e){var t=this._staticTrees||(this._staticTrees=[]),o=t[n];return o&&!e||ze(o=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),o}function Ae(n,e,t){return ze(n,"__once__"+e+(t?"_"+t:""),!0),n}function ze(n,e,t){if(Array.isArray(n))for(var o=0;o<n.length;o++)n[o]&&"string"!=typeof n[o]&&Te(n[o],e+"_"+o,t);else Te(n,e,t)}function Te(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function Oe(n,e){if(e)if(p(e)){var t=n.on=n.on?T({},n.on):{};for(var o in e){var r=t[o],a=e[o];t[o]=r?[].concat(r,a):a}}else;return n}function Ce(n,e,t,o){e=e||{$stable:!t};for(var r=0;r<n.length;r++){var a=n[r];Array.isArray(a)?Ce(a,e,t):a&&(a.proxy&&(a.fn.proxy=!0),e[a.key]=a.fn)}return o&&(e.$key=o),e}function Ie(n,e){for(var t=0;t<e.length;t+=2){var o=e[t];"string"==typeof o&&o&&(n[e[t]]=e[t+1])}return n}function $e(n,e){return"string"==typeof n?e+n:n}function Pe(n){n._o=Ae,n._n=f,n._s=h,n._l=xe,n._t=_e,n._q=P,n._i=M,n._m=Se,n._f=ke,n._k=je,n._b=Ee,n._v=yn,n._e=gn,n._u=Ce,n._g=Oe,n._d=Ie,n._p=$e}function Me(n,e,t,r,a){var s,l=this,c=a.options;x(r,"_uid")?(s=Object.create(r))._original=r:(s=r,r=r._original);var p=i(c._compiled),d=!p;this.data=n,this.props=e,this.children=t,this.parent=r,this.listeners=n.on||o,this.injections=me(c.inject,r),this.slots=function(){return l.$slots||ge(n.scopedSlots,l.$slots=he(t,r)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ge(n.scopedSlots,this.slots())}}),p&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=ge(n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,o){var a=He(s,n,e,t,o,d);return a&&!Array.isArray(a)&&(a.fnScopeId=c._scopeId,a.fnContext=r),a}:this._c=function(n,e,t,o){return He(s,n,e,t,o,d)}}function qe(n,e,t,o,r){var a=bn(n);return a.fnContext=t,a.fnOptions=o,e.slot&&((a.data||(a.data={})).slot=e.slot),a}function Re(n,e){for(var t in e)n[w(t)]=e[t]}Pe(Me.prototype);var De={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;De.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},o=n.data.inlineTemplate;a(o)&&(t.render=o.render,t.staticRenderFns=o.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Xe)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,r,a){0;var i=r.data.scopedSlots,s=n.$scopedSlots,l=!!(i&&!i.$stable||s!==o&&!s.$stable||i&&n.$scopedSlots.$key!==i.$key||!i&&n.$scopedSlots.$key),c=!!(a||n.$options._renderChildren||l);n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r);if(n.$options._renderChildren=a,n.$attrs=r.data.attrs||o,n.$listeners=t||o,e&&n.$options.props){jn(!1);for(var p=n._props,d=n.$options._propKeys||[],u=0;u<d.length;u++){var m=d[u],h=n.$options.props;p[m]=Ln(m,h,e,n)}jn(!0),n.$options.propsData=e}t=t||o;var f=n.$options._parentListeners;n.$options._parentListeners=t,Ye(n,t,f),c&&(n.$slots=he(a,r.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,o=n.componentInstance;o._isMounted||(o._isMounted=!0,et(o,"mounted")),n.data.keepAlive&&(t._isMounted?((e=o)._inactive=!1,ot.push(e)):nt(o,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,Ze(e)))return;if(!e._inactive){e._inactive=!0;for(var o=0;o<e.$children.length;o++)n(e.$children[o]);et(e,"deactivated")}}(e,!0):e.$destroy())}},Le=Object.keys(De);function Be(n,e,t,s,c){if(!r(n)){var p=t.$options._base;if(l(n)&&(n=p.extend(n)),"function"==typeof n){var d;if(r(n.cid)&&void 0===(n=function(n,e){if(i(n.error)&&a(n.errorComp))return n.errorComp;if(a(n.resolved))return n.resolved;var t=Ue;t&&a(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(i(n.loading)&&a(n.loadingComp))return n.loadingComp;if(t&&!a(n.owners)){var o=n.owners=[t],s=!0,c=null,p=null;t.$on("hook:destroyed",(function(){return y(o,t)}));var d=function(n){for(var e=0,t=o.length;e<t;e++)o[e].$forceUpdate();n&&(o.length=0,null!==c&&(clearTimeout(c),c=null),null!==p&&(clearTimeout(p),p=null))},u=q((function(t){n.resolved=Ve(t,e),s?o.length=0:d(!0)})),h=q((function(e){a(n.errorComp)&&(n.error=!0,d(!0))})),f=n(u,h);return l(f)&&(m(f)?r(n.resolved)&&f.then(u,h):m(f.component)&&(f.component.then(u,h),a(f.error)&&(n.errorComp=Ve(f.error,e)),a(f.loading)&&(n.loadingComp=Ve(f.loading,e),0===f.delay?n.loading=!0:c=setTimeout((function(){c=null,r(n.resolved)&&r(n.error)&&(n.loading=!0,d(!1))}),f.delay||200)),a(f.timeout)&&(p=setTimeout((function(){p=null,r(n.resolved)&&h(null)}),f.timeout)))),s=!1,n.loading?n.loadingComp:n.resolved}}(d=n,p)))return function(n,e,t,o,r){var a=gn();return a.asyncFactory=n,a.asyncMeta={data:e,context:t,children:o,tag:r},a}(d,e,t,s,c);e=e||{},wt(n),a(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",o=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var r=e.on||(e.on={}),i=r[o],s=e.model.callback;a(i)?(Array.isArray(i)?-1===i.indexOf(s):i!==s)&&(r[o]=[s].concat(i)):r[o]=s}(n.options,e);var u=function(n,e,t){var o=e.options.props;if(!r(o)){var i={},s=n.attrs,l=n.props;if(a(s)||a(l))for(var c in o){var p=S(c);pe(i,l,c,p,!0)||pe(i,s,c,p,!1)}return i}}(e,n);if(i(n.options.functional))return function(n,e,t,r,i){var s=n.options,l={},c=s.props;if(a(c))for(var p in c)l[p]=Ln(p,c,e||o);else a(t.attrs)&&Re(l,t.attrs),a(t.props)&&Re(l,t.props);var d=new Me(t,l,i,r,n),u=s.render.call(null,d._c,d);if(u instanceof fn)return qe(u,t,d.parent,s,d);if(Array.isArray(u)){for(var m=de(u)||[],h=new Array(m.length),f=0;f<m.length;f++)h[f]=qe(m[f],t,d.parent,s,d);return h}}(n,u,e,t,s);var h=e.on;if(e.on=e.nativeOn,i(n.options.abstract)){var f=e.slot;e={},f&&(e.slot=f)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<Le.length;t++){var o=Le[t],r=e[o],a=De[o];r===a||r&&r._merged||(e[o]=r?Ne(a,r):a)}}(e);var v=n.options.name||c;return new fn("vue-component-"+n.cid+(v?"-"+v:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:u,listeners:h,tag:c,children:s},d)}}}function Ne(n,e){var t=function(t,o){n(t,o),e(t,o)};return t._merged=!0,t}function He(n,e,t,o,c,p){return(Array.isArray(t)||s(t))&&(c=o,o=t,t=void 0),i(p)&&(c=2),function(n,e,t,o,s){if(a(t)&&a(t.__ob__))return gn();a(t)&&a(t.is)&&(e=t.is);if(!e)return gn();0;Array.isArray(o)&&"function"==typeof o[0]&&((t=t||{}).scopedSlots={default:o[0]},o.length=0);2===s?o=de(o):1===s&&(o=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(o));var c,p;if("string"==typeof e){var d;p=n.$vnode&&n.$vnode.ns||L.getTagNamespace(e),c=L.isReservedTag(e)?new fn(L.parsePlatformTagName(e),t,o,void 0,void 0,n):t&&t.pre||!a(d=Dn(n.$options,"components",e))?new fn(e,t,o,void 0,void 0,n):Be(d,t,n,o,e)}else c=Be(e,t,n,o);return Array.isArray(c)?c:a(c)?(a(p)&&function n(e,t,o){e.ns=t,"foreignObject"===e.tag&&(t=void 0,o=!0);if(a(e.children))for(var s=0,l=e.children.length;s<l;s++){var c=e.children[s];a(c.tag)&&(r(c.ns)||i(o)&&"svg"!==c.tag)&&n(c,t,o)}}(c,p),a(t)&&function(n){l(n.style)&&ae(n.style);l(n.class)&&ae(n.class)}(t),c):gn()}(n,e,t,o,c)}var Fe,Ue=null;function Ve(n,e){return(n.__esModule||ln&&"Module"===n[Symbol.toStringTag])&&(n=n.default),l(n)?e.extend(n):n}function We(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(a(t)&&(a(t.componentOptions)||ve(t)))return t}}function Ke(n,e){Fe.$on(n,e)}function Ge(n,e){Fe.$off(n,e)}function Je(n,e){var t=Fe;return function o(){var r=e.apply(null,arguments);null!==r&&t.$off(n,o)}}function Ye(n,e,t){Fe=n,le(e,t||{},Ke,Ge,Je,n),Fe=void 0}var Xe=null;function Qe(n){var e=Xe;return Xe=n,function(){Xe=e}}function Ze(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function nt(n,e){if(e){if(n._directInactive=!1,Ze(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)nt(n.$children[t]);et(n,"activated")}}function et(n,e){mn();var t=n.$options[e],o=e+" hook";if(t)for(var r=0,a=t.length;r<a;r++)Vn(t[r],n,null,n,o);n._hasHookEvent&&n.$emit("hook:"+e),hn()}var tt=[],ot=[],rt={},at=!1,it=!1,st=0;var lt=0,ct=Date.now;if(V&&!J){var pt=window.performance;pt&&"function"==typeof pt.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return pt.now()})}function dt(){var n,e;for(lt=ct(),it=!0,tt.sort((function(n,e){return n.id-e.id})),st=0;st<tt.length;st++)(n=tt[st]).before&&n.before(),e=n.id,rt[e]=null,n.run();var t=ot.slice(),o=tt.slice();st=tt.length=ot.length=0,rt={},at=it=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,nt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],o=t.vm;o._watcher===t&&o._isMounted&&!o._isDestroyed&&et(o,"updated")}}(o),rn&&L.devtools&&rn.emit("flush")}var ut=0,mt=function(n,e,t,o,r){this.vm=n,r&&(n._watcher=this),n._watchers.push(this),o?(this.deep=!!o.deep,this.user=!!o.user,this.lazy=!!o.lazy,this.sync=!!o.sync,this.before=o.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++ut,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new sn,this.newDepIds=new sn,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!H.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=C)),this.value=this.lazy?void 0:this.get()};mt.prototype.get=function(){var n;mn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Un(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ae(n),hn(),this.cleanupDeps()}return n},mt.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},mt.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},mt.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==rt[e]){if(rt[e]=!0,it){for(var t=tt.length-1;t>st&&tt[t].id>n.id;)t--;tt.splice(t+1,0,n)}else tt.push(n);at||(at=!0,oe(dt))}}(this)},mt.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||l(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'+this.expression+'"';Vn(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},mt.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},mt.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},mt.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||y(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var ht={enumerable:!0,configurable:!0,get:C,set:C};function ft(n,e,t){ht.get=function(){return this[e][t]},ht.set=function(n){this[e][t]=n},Object.defineProperty(n,t,ht)}function vt(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},o=n._props={},r=n.$options._propKeys=[];n.$parent&&jn(!1);var a=function(a){r.push(a);var i=Ln(a,e,t,n);An(o,a,i),a in n||ft(n,"_props",a)};for(var i in e)a(i);jn(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?C:A(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;p(e=n._data="function"==typeof e?function(n,e){mn();try{return n.call(e,e)}catch(n){return Un(n,e,"data()"),{}}finally{hn()}}(e,n):e||{})||(e={});var t=Object.keys(e),o=n.$options.props,r=(n.$options.methods,t.length);for(;r--;){var a=t[r];0,o&&x(o,a)||(i=void 0,36!==(i=(a+"").charCodeAt(0))&&95!==i&&ft(n,"_data",a))}var i;Sn(e,!0)}(n):Sn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),o=on();for(var r in e){var a=e[r],i="function"==typeof a?a:a.get;0,o||(t[r]=new mt(n,i||C,C,gt)),r in n||yt(n,r,a)}}(n,e.computed),e.watch&&e.watch!==nn&&function(n,e){for(var t in e){var o=e[t];if(Array.isArray(o))for(var r=0;r<o.length;r++)_t(n,t,o[r]);else _t(n,t,o)}}(n,e.watch)}var gt={lazy:!0};function yt(n,e,t){var o=!on();"function"==typeof t?(ht.get=o?bt(e):xt(t),ht.set=C):(ht.get=t.get?o&&!1!==t.cache?bt(e):xt(t.get):C,ht.set=t.set||C),Object.defineProperty(n,e,ht)}function bt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),dn.target&&e.depend(),e.value}}function xt(n){return function(){return n.call(this,this)}}function _t(n,e,t,o){return p(t)&&(o=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,o)}var kt=0;function wt(n){var e=n.options;if(n.super){var t=wt(n.super);if(t!==n.superOptions){n.superOptions=t;var o=function(n){var e,t=n.options,o=n.sealedOptions;for(var r in t)t[r]!==o[r]&&(e||(e={}),e[r]=t[r]);return e}(n);o&&T(n.extendOptions,o),(e=n.options=Rn(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function jt(n){this._init(n)}function Et(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,o=t.cid,r=n._Ctor||(n._Ctor={});if(r[o])return r[o];var a=n.name||t.options.name;var i=function(n){this._init(n)};return(i.prototype=Object.create(t.prototype)).constructor=i,i.cid=e++,i.options=Rn(t.options,n),i.super=t,i.options.props&&function(n){var e=n.options.props;for(var t in e)ft(n.prototype,"_props",t)}(i),i.options.computed&&function(n){var e=n.options.computed;for(var t in e)yt(n.prototype,t,e[t])}(i),i.extend=t.extend,i.mixin=t.mixin,i.use=t.use,R.forEach((function(n){i[n]=t[n]})),a&&(i.options.components[a]=i),i.superOptions=t.options,i.extendOptions=n,i.sealedOptions=T({},i.options),r[o]=i,i}}function St(n){return n&&(n.Ctor.options.name||n.tag)}function At(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!d(n)&&n.test(e)}function zt(n,e){var t=n.cache,o=n.keys,r=n._vnode;for(var a in t){var i=t[a];if(i){var s=i.name;s&&!e(s)&&Tt(t,a,o,r)}}}function Tt(n,e,t,o){var r=n[e];!r||o&&r.tag===o.tag||r.componentInstance.$destroy(),n[e]=null,y(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=kt++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),o=e._parentVnode;t.parent=e.parent,t._parentVnode=o;var r=o.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Rn(wt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ye(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,r=t&&t.context;n.$slots=he(e._renderChildren,r),n.$scopedSlots=o,n._c=function(e,t,o,r){return He(n,e,t,o,r,!1)},n.$createElement=function(e,t,o,r){return He(n,e,t,o,r,!0)};var a=t&&t.data;An(n,"$attrs",a&&a.attrs||o,null,!0),An(n,"$listeners",e._parentListeners||o,null,!0)}(e),et(e,"beforeCreate"),function(n){var e=me(n.$options.inject,n);e&&(jn(!1),Object.keys(e).forEach((function(t){An(n,t,e[t])})),jn(!0))}(e),vt(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),et(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(jt),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=zn,n.prototype.$delete=Tn,n.prototype.$watch=function(n,e,t){if(p(e))return _t(this,n,e,t);(t=t||{}).user=!0;var o=new mt(this,n,e,t);if(t.immediate){var r='callback for immediate watcher "'+o.expression+'"';mn(),Vn(e,this,[o.value],this,r),hn()}return function(){o.teardown()}}}(jt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var o=this;if(Array.isArray(n))for(var r=0,a=n.length;r<a;r++)o.$on(n[r],t);else(o._events[n]||(o._events[n]=[])).push(t),e.test(n)&&(o._hasHookEvent=!0);return o},n.prototype.$once=function(n,e){var t=this;function o(){t.$off(n,o),e.apply(t,arguments)}return o.fn=e,t.$on(n,o),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var o=0,r=n.length;o<r;o++)t.$off(n[o],e);return t}var a,i=t._events[n];if(!i)return t;if(!e)return t._events[n]=null,t;for(var s=i.length;s--;)if((a=i[s])===e||a.fn===e){i.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?z(t):t;for(var o=z(arguments,1),r='event handler for "'+n+'"',a=0,i=t.length;a<i;a++)Vn(t[a],e,o,e,r)}return e}}(jt),function(n){n.prototype._update=function(n,e){var t=this,o=t.$el,r=t._vnode,a=Qe(t);t._vnode=n,t.$el=r?t.__patch__(r,n):t.__patch__(t.$el,n,e,!1),a(),o&&(o.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){et(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||y(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),et(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(jt),function(n){Pe(n.prototype),n.prototype.$nextTick=function(n){return oe(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,o=t.render,r=t._parentVnode;r&&(e.$scopedSlots=ge(r.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=r;try{Ue=e,n=o.call(e._renderProxy,e.$createElement)}catch(t){Un(t,e,"render"),n=e._vnode}finally{Ue=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof fn||(n=gn()),n.parent=r,n}}(jt);var Ot=[String,RegExp,Array],Ct={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Ot,exclude:Ot,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,o=this.keyToCache;if(t){var r=t.tag,a=t.componentInstance,i=t.componentOptions;n[o]={name:St(i),tag:r,componentInstance:a},e.push(o),this.max&&e.length>parseInt(this.max)&&Tt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Tt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){zt(n,(function(n){return At(e,n)}))})),this.$watch("exclude",(function(e){zt(n,(function(n){return!At(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=We(n),t=e&&e.componentOptions;if(t){var o=St(t),r=this.include,a=this.exclude;if(r&&(!o||!At(r,o))||a&&o&&At(a,o))return e;var i=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;i[l]?(e.componentInstance=i[l].componentInstance,y(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return L}};Object.defineProperty(n,"config",e),n.util={warn:cn,extend:T,mergeOptions:Rn,defineReactive:An},n.set=zn,n.delete=Tn,n.nextTick=oe,n.observable=function(n){return Sn(n),n},n.options=Object.create(null),R.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,T(n.options.components,Ct),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=z(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Rn(this.options,n),this}}(n),Et(n),function(n){R.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(jt),Object.defineProperty(jt.prototype,"$isServer",{get:on}),Object.defineProperty(jt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(jt,"FunctionalRenderContext",{value:Me}),jt.version="2.6.14";var It=v("style,class"),$t=v("input,textarea,option,select,progress"),Pt=v("contenteditable,draggable,spellcheck"),Mt=v("events,caret,typing,plaintext-only"),qt=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Rt="http://www.w3.org/1999/xlink",Dt=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Lt=function(n){return Dt(n)?n.slice(6,n.length):""},Bt=function(n){return null==n||!1===n};function Nt(n){for(var e=n.data,t=n,o=n;a(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(e=Ht(o.data,e));for(;a(t=t.parent);)t&&t.data&&(e=Ht(e,t.data));return function(n,e){if(a(n)||a(e))return Ft(n,Ut(e));return""}(e.staticClass,e.class)}function Ht(n,e){return{staticClass:Ft(n.staticClass,e.staticClass),class:a(n.class)?[n.class,e.class]:e.class}}function Ft(n,e){return n?e?n+" "+e:n:e||""}function Ut(n){return Array.isArray(n)?function(n){for(var e,t="",o=0,r=n.length;o<r;o++)a(e=Ut(n[o]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):l(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Vt={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Wt=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Kt=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Gt=function(n){return Wt(n)||Kt(n)};var Jt=Object.create(null);var Yt=v("text,number,password,search,email,tel,url");var Xt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Vt[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Qt={create:function(n,e){Zt(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Zt(n,!0),Zt(e))},destroy:function(n){Zt(n,!0)}};function Zt(n,e){var t=n.data.ref;if(a(t)){var o=n.context,r=n.componentInstance||n.elm,i=o.$refs;e?Array.isArray(i[t])?y(i[t],r):i[t]===r&&(i[t]=void 0):n.data.refInFor?Array.isArray(i[t])?i[t].indexOf(r)<0&&i[t].push(r):i[t]=[r]:i[t]=r}}var no=new fn("",{},[]),eo=["create","activate","update","remove","destroy"];function to(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&a(n.data)===a(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,o=a(t=n.data)&&a(t=t.attrs)&&t.type,r=a(t=e.data)&&a(t=t.attrs)&&t.type;return o===r||Yt(o)&&Yt(r)}(n,e)||i(n.isAsyncPlaceholder)&&r(e.asyncFactory.error))}function oo(n,e,t){var o,r,i={};for(o=e;o<=t;++o)a(r=n[o].key)&&(i[r]=o);return i}var ro={create:ao,update:ao,destroy:function(n){ao(n,no)}};function ao(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,o,r,a=n===no,i=e===no,s=so(n.data.directives,n.context),l=so(e.data.directives,e.context),c=[],p=[];for(t in l)o=s[t],r=l[t],o?(r.oldValue=o.value,r.oldArg=o.arg,co(r,"update",e,n),r.def&&r.def.componentUpdated&&p.push(r)):(co(r,"bind",e,n),r.def&&r.def.inserted&&c.push(r));if(c.length){var d=function(){for(var t=0;t<c.length;t++)co(c[t],"inserted",e,n)};a?ce(e,"insert",d):d()}p.length&&ce(e,"postpatch",(function(){for(var t=0;t<p.length;t++)co(p[t],"componentUpdated",e,n)}));if(!a)for(t in s)l[t]||co(s[t],"unbind",n,n,i)}(n,e)}var io=Object.create(null);function so(n,e){var t,o,r=Object.create(null);if(!n)return r;for(t=0;t<n.length;t++)(o=n[t]).modifiers||(o.modifiers=io),r[lo(o)]=o,o.def=Dn(e.$options,"directives",o.name);return r}function lo(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function co(n,e,t,o,r){var a=n.def&&n.def[e];if(a)try{a(t.elm,n,t,o,r)}catch(o){Un(o,t.context,"directive "+n.name+" "+e+" hook")}}var po=[Qt,ro];function uo(n,e){var t=e.componentOptions;if(!(a(t)&&!1===t.Ctor.options.inheritAttrs||r(n.data.attrs)&&r(e.data.attrs))){var o,i,s=e.elm,l=n.data.attrs||{},c=e.data.attrs||{};for(o in a(c.__ob__)&&(c=e.data.attrs=T({},c)),c)i=c[o],l[o]!==i&&mo(s,o,i,e.data.pre);for(o in(J||X)&&c.value!==l.value&&mo(s,"value",c.value),l)r(c[o])&&(Dt(o)?s.removeAttributeNS(Rt,Lt(o)):Pt(o)||s.removeAttribute(o))}}function mo(n,e,t,o){o||n.tagName.indexOf("-")>-1?ho(n,e,t):qt(e)?Bt(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):Pt(e)?n.setAttribute(e,function(n,e){return Bt(e)||"false"===e?"false":"contenteditable"===n&&Mt(e)?e:"true"}(e,t)):Dt(e)?Bt(t)?n.removeAttributeNS(Rt,Lt(e)):n.setAttributeNS(Rt,e,t):ho(n,e,t)}function ho(n,e,t){if(Bt(t))n.removeAttribute(e);else{if(J&&!Y&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var o=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",o)};n.addEventListener("input",o),n.__ieph=!0}n.setAttribute(e,t)}}var fo={create:uo,update:uo};function vo(n,e){var t=e.elm,o=e.data,i=n.data;if(!(r(o.staticClass)&&r(o.class)&&(r(i)||r(i.staticClass)&&r(i.class)))){var s=Nt(e),l=t._transitionClasses;a(l)&&(s=Ft(s,Ut(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var go,yo={create:vo,update:vo};function bo(n,e,t){var o=go;return function r(){var a=e.apply(null,arguments);null!==a&&ko(n,r,t,o)}}var xo=Jn&&!(Z&&Number(Z[1])<=53);function _o(n,e,t,o){if(xo){var r=lt,a=e;e=a._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=r||n.timeStamp<=0||n.target.ownerDocument!==document)return a.apply(this,arguments)}}go.addEventListener(n,e,en?{capture:t,passive:o}:t)}function ko(n,e,t,o){(o||go).removeEventListener(n,e._wrapper||e,t)}function wo(n,e){if(!r(n.data.on)||!r(e.data.on)){var t=e.data.on||{},o=n.data.on||{};go=e.elm,function(n){if(a(n.__r)){var e=J?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}a(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),le(t,o,_o,ko,bo,e.context),go=void 0}}var jo,Eo={create:wo,update:wo};function So(n,e){if(!r(n.data.domProps)||!r(e.data.domProps)){var t,o,i=e.elm,s=n.data.domProps||{},l=e.data.domProps||{};for(t in a(l.__ob__)&&(l=e.data.domProps=T({},l)),s)t in l||(i[t]="");for(t in l){if(o=l[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),o===s[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=o;var c=r(o)?"":String(o);Ao(i,c)&&(i.value=c)}else if("innerHTML"===t&&Kt(i.tagName)&&r(i.innerHTML)){(jo=jo||document.createElement("div")).innerHTML="<svg>"+o+"</svg>";for(var p=jo.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;p.firstChild;)i.appendChild(p.firstChild)}else if(o!==s[t])try{i[t]=o}catch(n){}}}}function Ao(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,o=n._vModifiers;if(a(o)){if(o.number)return f(t)!==f(e);if(o.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var zo={create:So,update:So},To=_((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var o=n.split(t);o.length>1&&(e[o[0].trim()]=o[1].trim())}})),e}));function Oo(n){var e=Co(n.style);return n.staticStyle?T(n.staticStyle,e):e}function Co(n){return Array.isArray(n)?O(n):"string"==typeof n?To(n):n}var Io,$o=/^--/,Po=/\s*!important$/,Mo=function(n,e,t){if($o.test(e))n.style.setProperty(e,t);else if(Po.test(t))n.style.setProperty(S(e),t.replace(Po,""),"important");else{var o=Ro(e);if(Array.isArray(t))for(var r=0,a=t.length;r<a;r++)n.style[o]=t[r];else n.style[o]=t}},qo=["Webkit","Moz","ms"],Ro=_((function(n){if(Io=Io||document.createElement("div").style,"filter"!==(n=w(n))&&n in Io)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<qo.length;t++){var o=qo[t]+e;if(o in Io)return o}}));function Do(n,e){var t=e.data,o=n.data;if(!(r(t.staticStyle)&&r(t.style)&&r(o.staticStyle)&&r(o.style))){var i,s,l=e.elm,c=o.staticStyle,p=o.normalizedStyle||o.style||{},d=c||p,u=Co(e.data.style)||{};e.data.normalizedStyle=a(u.__ob__)?T({},u):u;var m=function(n,e){var t,o={};if(e)for(var r=n;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=Oo(r.data))&&T(o,t);(t=Oo(n.data))&&T(o,t);for(var a=n;a=a.parent;)a.data&&(t=Oo(a.data))&&T(o,t);return o}(e,!0);for(s in d)r(m[s])&&Mo(l,s,"");for(s in m)(i=m[s])!==d[s]&&Mo(l,s,null==i?"":i)}}var Lo={create:Do,update:Do},Bo=/\s+/;function No(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Bo).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Ho(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Bo).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",o=" "+e+" ";t.indexOf(o)>=0;)t=t.replace(o," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function Fo(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&T(e,Uo(n.name||"v")),T(e,n),e}return"string"==typeof n?Uo(n):void 0}}var Uo=_((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Vo=V&&!Y,Wo="transition",Ko="transitionend",Go="animation",Jo="animationend";Vo&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Wo="WebkitTransition",Ko="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Go="WebkitAnimation",Jo="webkitAnimationEnd"));var Yo=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Xo(n){Yo((function(){Yo(n)}))}function Qo(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),No(n,e))}function Zo(n,e){n._transitionClasses&&y(n._transitionClasses,e),Ho(n,e)}function nr(n,e,t){var o=tr(n,e),r=o.type,a=o.timeout,i=o.propCount;if(!r)return t();var s="transition"===r?Ko:Jo,l=0,c=function(){n.removeEventListener(s,p),t()},p=function(e){e.target===n&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),a+1),n.addEventListener(s,p)}var er=/\b(transform|all)(,|$)/;function tr(n,e){var t,o=window.getComputedStyle(n),r=(o[Wo+"Delay"]||"").split(", "),a=(o[Wo+"Duration"]||"").split(", "),i=or(r,a),s=(o[Go+"Delay"]||"").split(", "),l=(o[Go+"Duration"]||"").split(", "),c=or(s,l),p=0,d=0;return"transition"===e?i>0&&(t="transition",p=i,d=a.length):"animation"===e?c>0&&(t="animation",p=c,d=l.length):d=(t=(p=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===t?a.length:l.length:0,{type:t,timeout:p,propCount:d,hasTransform:"transition"===t&&er.test(o[Wo+"Property"])}}function or(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return rr(e)+rr(n[t])})))}function rr(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function ar(n,e){var t=n.elm;a(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var o=Fo(n.data.transition);if(!r(o)&&!a(t._enterCb)&&1===t.nodeType){for(var i=o.css,s=o.type,c=o.enterClass,p=o.enterToClass,d=o.enterActiveClass,u=o.appearClass,m=o.appearToClass,h=o.appearActiveClass,v=o.beforeEnter,g=o.enter,y=o.afterEnter,b=o.enterCancelled,x=o.beforeAppear,_=o.appear,k=o.afterAppear,w=o.appearCancelled,j=o.duration,E=Xe,S=Xe.$vnode;S&&S.parent;)E=S.context,S=S.parent;var A=!E._isMounted||!n.isRootInsert;if(!A||_||""===_){var z=A&&u?u:c,T=A&&h?h:d,O=A&&m?m:p,C=A&&x||v,I=A&&"function"==typeof _?_:g,$=A&&k||y,P=A&&w||b,M=f(l(j)?j.enter:j);0;var R=!1!==i&&!Y,D=lr(I),L=t._enterCb=q((function(){R&&(Zo(t,O),Zo(t,T)),L.cancelled?(R&&Zo(t,z),P&&P(t)):$&&$(t),t._enterCb=null}));n.data.show||ce(n,"insert",(function(){var e=t.parentNode,o=e&&e._pending&&e._pending[n.key];o&&o.tag===n.tag&&o.elm._leaveCb&&o.elm._leaveCb(),I&&I(t,L)})),C&&C(t),R&&(Qo(t,z),Qo(t,T),Xo((function(){Zo(t,z),L.cancelled||(Qo(t,O),D||(sr(M)?setTimeout(L,M):nr(t,s,L)))}))),n.data.show&&(e&&e(),I&&I(t,L)),R||D||L()}}}function ir(n,e){var t=n.elm;a(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var o=Fo(n.data.transition);if(r(o)||1!==t.nodeType)return e();if(!a(t._leaveCb)){var i=o.css,s=o.type,c=o.leaveClass,p=o.leaveToClass,d=o.leaveActiveClass,u=o.beforeLeave,m=o.leave,h=o.afterLeave,v=o.leaveCancelled,g=o.delayLeave,y=o.duration,b=!1!==i&&!Y,x=lr(m),_=f(l(y)?y.leave:y);0;var k=t._leaveCb=q((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),b&&(Zo(t,p),Zo(t,d)),k.cancelled?(b&&Zo(t,c),v&&v(t)):(e(),h&&h(t)),t._leaveCb=null}));g?g(w):w()}function w(){k.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),u&&u(t),b&&(Qo(t,c),Qo(t,d),Xo((function(){Zo(t,c),k.cancelled||(Qo(t,p),x||(sr(_)?setTimeout(k,_):nr(t,s,k)))}))),m&&m(t,k),b||x||k())}}function sr(n){return"number"==typeof n&&!isNaN(n)}function lr(n){if(r(n))return!1;var e=n.fns;return a(e)?lr(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function cr(n,e){!0!==e.data.show&&ar(e)}var pr=function(n){var e,t,o={},l=n.modules,c=n.nodeOps;for(e=0;e<eo.length;++e)for(o[eo[e]]=[],t=0;t<l.length;++t)a(l[t][eo[e]])&&o[eo[e]].push(l[t][eo[e]]);function p(n){var e=c.parentNode(n);a(e)&&c.removeChild(e,n)}function d(n,e,t,r,s,l,p){if(a(n.elm)&&a(l)&&(n=l[p]=bn(n)),n.isRootInsert=!s,!function(n,e,t,r){var s=n.data;if(a(s)){var l=a(n.componentInstance)&&s.keepAlive;if(a(s=s.hook)&&a(s=s.init)&&s(n,!1),a(n.componentInstance))return u(n,e),m(t,n.elm,r),i(l)&&function(n,e,t,r){var i,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(i=s.data)&&a(i=i.transition)){for(i=0;i<o.activate.length;++i)o.activate[i](no,s);e.push(s);break}m(t,n.elm,r)}(n,e,t,r),!0}}(n,e,t,r)){var d=n.data,f=n.children,v=n.tag;a(v)?(n.elm=n.ns?c.createElementNS(n.ns,v):c.createElement(v,n),y(n),h(n,f,e),a(d)&&g(n,e),m(t,n.elm,r)):i(n.isComment)?(n.elm=c.createComment(n.text),m(t,n.elm,r)):(n.elm=c.createTextNode(n.text),m(t,n.elm,r))}}function u(n,e){a(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,f(n)?(g(n,e),y(n)):(Zt(n),e.push(n))}function m(n,e,t){a(n)&&(a(t)?c.parentNode(t)===n&&c.insertBefore(n,e,t):c.appendChild(n,e))}function h(n,e,t){if(Array.isArray(e)){0;for(var o=0;o<e.length;++o)d(e[o],t,n.elm,null,!0,e,o)}else s(n.text)&&c.appendChild(n.elm,c.createTextNode(String(n.text)))}function f(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return a(n.tag)}function g(n,t){for(var r=0;r<o.create.length;++r)o.create[r](no,n);a(e=n.data.hook)&&(a(e.create)&&e.create(no,n),a(e.insert)&&t.push(n))}function y(n){var e;if(a(e=n.fnScopeId))c.setStyleScope(n.elm,e);else for(var t=n;t;)a(e=t.context)&&a(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e),t=t.parent;a(e=Xe)&&e!==n.context&&e!==n.fnContext&&a(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e)}function b(n,e,t,o,r,a){for(;o<=r;++o)d(t[o],a,n,e,!1,t,o)}function x(n){var e,t,r=n.data;if(a(r))for(a(e=r.hook)&&a(e=e.destroy)&&e(n),e=0;e<o.destroy.length;++e)o.destroy[e](n);if(a(e=n.children))for(t=0;t<n.children.length;++t)x(n.children[t])}function _(n,e,t){for(;e<=t;++e){var o=n[e];a(o)&&(a(o.tag)?(k(o),x(o)):p(o.elm))}}function k(n,e){if(a(e)||a(n.data)){var t,r=o.remove.length+1;for(a(e)?e.listeners+=r:e=function(n,e){function t(){0==--t.listeners&&p(n)}return t.listeners=e,t}(n.elm,r),a(t=n.componentInstance)&&a(t=t._vnode)&&a(t.data)&&k(t,e),t=0;t<o.remove.length;++t)o.remove[t](n,e);a(t=n.data.hook)&&a(t=t.remove)?t(n,e):e()}else p(n.elm)}function w(n,e,t,o){for(var r=t;r<o;r++){var i=e[r];if(a(i)&&to(n,i))return r}}function j(n,e,t,s,l,p){if(n!==e){a(e.elm)&&a(s)&&(e=s[l]=bn(e));var u=e.elm=n.elm;if(i(n.isAsyncPlaceholder))a(e.asyncFactory.resolved)?A(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(i(e.isStatic)&&i(n.isStatic)&&e.key===n.key&&(i(e.isCloned)||i(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,h=e.data;a(h)&&a(m=h.hook)&&a(m=m.prepatch)&&m(n,e);var v=n.children,g=e.children;if(a(h)&&f(e)){for(m=0;m<o.update.length;++m)o.update[m](n,e);a(m=h.hook)&&a(m=m.update)&&m(n,e)}r(e.text)?a(v)&&a(g)?v!==g&&function(n,e,t,o,i){var s,l,p,u=0,m=0,h=e.length-1,f=e[0],v=e[h],g=t.length-1,y=t[0],x=t[g],k=!i;for(0;u<=h&&m<=g;)r(f)?f=e[++u]:r(v)?v=e[--h]:to(f,y)?(j(f,y,o,t,m),f=e[++u],y=t[++m]):to(v,x)?(j(v,x,o,t,g),v=e[--h],x=t[--g]):to(f,x)?(j(f,x,o,t,g),k&&c.insertBefore(n,f.elm,c.nextSibling(v.elm)),f=e[++u],x=t[--g]):to(v,y)?(j(v,y,o,t,m),k&&c.insertBefore(n,v.elm,f.elm),v=e[--h],y=t[++m]):(r(s)&&(s=oo(e,u,h)),r(l=a(y.key)?s[y.key]:w(y,e,u,h))?d(y,o,n,f.elm,!1,t,m):to(p=e[l],y)?(j(p,y,o,t,m),e[l]=void 0,k&&c.insertBefore(n,p.elm,f.elm)):d(y,o,n,f.elm,!1,t,m),y=t[++m]);u>h?b(n,r(t[g+1])?null:t[g+1].elm,t,m,g,o):m>g&&_(e,u,h)}(u,v,g,t,p):a(g)?(a(n.text)&&c.setTextContent(u,""),b(u,null,g,0,g.length-1,t)):a(v)?_(v,0,v.length-1):a(n.text)&&c.setTextContent(u,""):n.text!==e.text&&c.setTextContent(u,e.text),a(h)&&a(m=h.hook)&&a(m=m.postpatch)&&m(n,e)}}}function E(n,e,t){if(i(t)&&a(n.parent))n.parent.data.pendingInsert=e;else for(var o=0;o<e.length;++o)e[o].data.hook.insert(e[o])}var S=v("attrs,class,staticClass,staticStyle,key");function A(n,e,t,o){var r,s=e.tag,l=e.data,c=e.children;if(o=o||l&&l.pre,e.elm=n,i(e.isComment)&&a(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(a(l)&&(a(r=l.hook)&&a(r=r.init)&&r(e,!0),a(r=e.componentInstance)))return u(e,t),!0;if(a(s)){if(a(c))if(n.hasChildNodes())if(a(r=l)&&a(r=r.domProps)&&a(r=r.innerHTML)){if(r!==n.innerHTML)return!1}else{for(var p=!0,d=n.firstChild,m=0;m<c.length;m++){if(!d||!A(d,c[m],t,o)){p=!1;break}d=d.nextSibling}if(!p||d)return!1}else h(e,c,t);if(a(l)){var f=!1;for(var v in l)if(!S(v)){f=!0,g(e,t);break}!f&&l.class&&ae(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,s){if(!r(e)){var l,p=!1,u=[];if(r(n))p=!0,d(e,u);else{var m=a(n.nodeType);if(!m&&to(n,e))j(n,e,u,null,null,s);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),i(t)&&A(n,e,u))return E(e,u,!0),n;l=n,n=new fn(c.tagName(l).toLowerCase(),{},[],void 0,l)}var h=n.elm,v=c.parentNode(h);if(d(e,u,h._leaveCb?null:v,c.nextSibling(h)),a(e.parent))for(var g=e.parent,y=f(e);g;){for(var b=0;b<o.destroy.length;++b)o.destroy[b](g);if(g.elm=e.elm,y){for(var k=0;k<o.create.length;++k)o.create[k](no,g);var w=g.data.hook.insert;if(w.merged)for(var S=1;S<w.fns.length;S++)w.fns[S]()}else Zt(g);g=g.parent}a(v)?_([n],0,0):a(n.tag)&&x(n)}}return E(e,u,p),e.elm}a(n)&&x(n)}}({nodeOps:Xt,modules:[fo,yo,Eo,zo,Lo,V?{create:cr,activate:cr,remove:function(n,e){!0!==n.data.show?ir(n,e):e()}}:{}].concat(po)});Y&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&yr(n,"input")}));var dr={inserted:function(n,e,t,o){"select"===t.tag?(o.elm&&!o.elm._vOptions?ce(t,"postpatch",(function(){dr.componentUpdated(n,e,t)})):ur(n,e,t.context),n._vOptions=[].map.call(n.options,fr)):("textarea"===t.tag||Yt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",vr),n.addEventListener("compositionend",gr),n.addEventListener("change",gr),Y&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){ur(n,e,t.context);var o=n._vOptions,r=n._vOptions=[].map.call(n.options,fr);if(r.some((function(n,e){return!P(n,o[e])})))(n.multiple?e.value.some((function(n){return hr(n,r)})):e.value!==e.oldValue&&hr(e.value,r))&&yr(n,"change")}}};function ur(n,e,t){mr(n,e,t),(J||X)&&setTimeout((function(){mr(n,e,t)}),0)}function mr(n,e,t){var o=e.value,r=n.multiple;if(!r||Array.isArray(o)){for(var a,i,s=0,l=n.options.length;s<l;s++)if(i=n.options[s],r)a=M(o,fr(i))>-1,i.selected!==a&&(i.selected=a);else if(P(fr(i),o))return void(n.selectedIndex!==s&&(n.selectedIndex=s));r||(n.selectedIndex=-1)}}function hr(n,e){return e.every((function(e){return!P(e,n)}))}function fr(n){return"_value"in n?n._value:n.value}function vr(n){n.target.composing=!0}function gr(n){n.target.composing&&(n.target.composing=!1,yr(n.target,"input"))}function yr(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function br(n){return!n.componentInstance||n.data&&n.data.transition?n:br(n.componentInstance._vnode)}var xr={model:dr,show:{bind:function(n,e,t){var o=e.value,r=(t=br(t)).data&&t.data.transition,a=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;o&&r?(t.data.show=!0,ar(t,(function(){n.style.display=a}))):n.style.display=o?a:"none"},update:function(n,e,t){var o=e.value;!o!=!e.oldValue&&((t=br(t)).data&&t.data.transition?(t.data.show=!0,o?ar(t,(function(){n.style.display=n.__vOriginalDisplay})):ir(t,(function(){n.style.display="none"}))):n.style.display=o?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,o,r){r||(n.style.display=n.__vOriginalDisplay)}}},_r={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function kr(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?kr(We(e.children)):n}function wr(n){var e={},t=n.$options;for(var o in t.propsData)e[o]=n[o];var r=t._parentListeners;for(var a in r)e[w(a)]=r[a];return e}function jr(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Er=function(n){return n.tag||ve(n)},Sr=function(n){return"show"===n.name},Ar={name:"transition",props:_r,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Er)).length){0;var o=this.mode;0;var r=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return r;var a=kr(r);if(!a)return r;if(this._leaving)return jr(n,r);var i="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?i+"comment":i+a.tag:s(a.key)?0===String(a.key).indexOf(i)?a.key:i+a.key:a.key;var l=(a.data||(a.data={})).transition=wr(this),c=this._vnode,p=kr(c);if(a.data.directives&&a.data.directives.some(Sr)&&(a.data.show=!0),p&&p.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(a,p)&&!ve(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var d=p.data.transition=T({},l);if("out-in"===o)return this._leaving=!0,ce(d,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),jr(n,r);if("in-out"===o){if(ve(a))return c;var u,m=function(){u()};ce(l,"afterEnter",m),ce(l,"enterCancelled",m),ce(d,"delayLeave",(function(n){u=n}))}}return r}}},zr=T({tag:String,moveClass:String},_r);function Tr(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Or(n){n.data.newPos=n.elm.getBoundingClientRect()}function Cr(n){var e=n.data.pos,t=n.data.newPos,o=e.left-t.left,r=e.top-t.top;if(o||r){n.data.moved=!0;var a=n.elm.style;a.transform=a.WebkitTransform="translate("+o+"px,"+r+"px)",a.transitionDuration="0s"}}delete zr.mode;var Ir={Transition:Ar,TransitionGroup:{props:zr,beforeMount:function(){var n=this,e=this._update;this._update=function(t,o){var r=Qe(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,r(),e.call(n,t,o)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),o=this.prevChildren=this.children,r=this.$slots.default||[],a=this.children=[],i=wr(this),s=0;s<r.length;s++){var l=r[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))a.push(l),t[l.key]=l,(l.data||(l.data={})).transition=i;else;}if(o){for(var c=[],p=[],d=0;d<o.length;d++){var u=o[d];u.data.transition=i,u.data.pos=u.elm.getBoundingClientRect(),t[u.key]?c.push(u):p.push(u)}this.kept=n(e,null,c),this.removed=p}return n(e,null,a)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Tr),n.forEach(Or),n.forEach(Cr),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,o=t.style;Qo(t,e),o.transform=o.WebkitTransform=o.transitionDuration="",t.addEventListener(Ko,t._moveCb=function n(o){o&&o.target!==t||o&&!/transform$/.test(o.propertyName)||(t.removeEventListener(Ko,n),t._moveCb=null,Zo(t,e))})}})))},methods:{hasMove:function(n,e){if(!Vo)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Ho(t,n)})),No(t,e),t.style.display="none",this.$el.appendChild(t);var o=tr(t);return this.$el.removeChild(t),this._hasMove=o.hasTransform}}}};jt.config.mustUseProp=function(n,e,t){return"value"===t&&$t(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},jt.config.isReservedTag=Gt,jt.config.isReservedAttr=It,jt.config.getTagNamespace=function(n){return Kt(n)?"svg":"math"===n?"math":void 0},jt.config.isUnknownElement=function(n){if(!V)return!0;if(Gt(n))return!1;if(n=n.toLowerCase(),null!=Jt[n])return Jt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Jt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Jt[n]=/HTMLUnknownElement/.test(e.toString())},T(jt.options.directives,xr),T(jt.options.components,Ir),jt.prototype.__patch__=V?pr:C,jt.prototype.$mount=function(n,e){return function(n,e,t){var o;return n.$el=e,n.$options.render||(n.$options.render=gn),et(n,"beforeMount"),o=function(){n._update(n._render(),t)},new mt(n,o,C,{before:function(){n._isMounted&&!n._isDestroyed&&et(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,et(n,"mounted")),n}(this,n=n&&V?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},V&&setTimeout((function(){L.devtools&&rn&&rn.emit("init",jt)}),0),e.a=jt},function(n,e,t){var o=t(6),r=t(42).f,a=t(26),i=t(30),s=t(125),l=t(199),c=t(131);n.exports=function(n,e){var t,p,d,u,m,h=n.target,f=n.global,v=n.stat;if(t=f?o:v?o[h]||s(h,{}):(o[h]||{}).prototype)for(p in e){if(u=e[p],d=n.noTargetGet?(m=r(t,p))&&m.value:t[p],!c(f?p:h+(v?".":"#")+p,n.forced)&&void 0!==d){if(typeof u==typeof d)continue;l(u,d)}(n.sham||d&&d.sham)&&a(u,"sham",!0),i(t,p,u,n)}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";function o(n,e,t,o,r,a,i,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),o&&(c.functional=!0),a&&(c._scopeId="data-v-"+a),i?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),r&&r.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},c._ssrRegister=l):r&&(l=s?function(){r.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:r),l)if(c.functional){c._injectStyles=l;var p=c.render;c.render=function(n,e){return l.call(e),p(n,e)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return o}))},function(n,e,t){var o=t(6),r=t(91),a=t(12),i=t(92),s=t(126),l=t(193),c=r("wks"),p=o.Symbol,d=l?p:p&&p.withoutSetter||i;n.exports=function(n){return a(c,n)&&(s||"string"==typeof c[n])||(s&&a(p,n)?c[n]=p[n]:c[n]=d("Symbol."+n)),c[n]}},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e,t){var o=t(69);n.exports=function(n){if(o(n))throw TypeError("Cannot convert a Symbol value to a string");return String(n)}},function(n,e,t){var o=t(3);n.exports=!o((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(83),t(54),t(27),t(457),t(48),t(49),t(210),t(458),t(103);var o=t(79);function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){Object(o.a)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}},function(n,e,t){var o=t(17),r={}.hasOwnProperty;n.exports=Object.hasOwn||function(n,e){return r.call(o(n),e)}},function(n,e,t){var o=t(10),r=t(194),a=t(14),i=t(93),s=Object.defineProperty;e.f=o?s:function(n,e,t){if(a(n),e=i(e),a(t),r)try{return s(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var o=t(8);n.exports=function(n){if(!o(n))throw TypeError(String(n)+" is not an object");return n}},function(n,e,t){var o=t(123),r=t(30),a=t(326);o||r(Object.prototype,"toString",a,{unsafe:!0})},function(n,e,t){var o=t(60),r=Math.min;n.exports=function(n){return n>0?r(o(n),9007199254740991):0}},function(n,e,t){var o=t(22);n.exports=function(n){return Object(o(n))}},function(n,e,t){var o=t(7),r=t(166),a=t(28),i=t(167),s=t(168),l=t(170),c=r("wks"),p=o.Symbol,d=l?p:p&&p.withoutSetter||i;n.exports=function(n){return a(c,n)&&(s||"string"==typeof c[n])||(s&&a(p,n)?c[n]=p[n]:c[n]=d("Symbol."+n)),c[n]}},function(n,e,t){"use strict";var o=t(255),r=Object.prototype.toString;function a(n){return"[object Array]"===r.call(n)}function i(n){return void 0===n}function s(n){return null!==n&&"object"==typeof n}function l(n){if("[object Object]"!==r.call(n))return!1;var e=Object.getPrototypeOf(n);return null===e||e===Object.prototype}function c(n){return"[object Function]"===r.call(n)}function p(n,e){if(null!=n)if("object"!=typeof n&&(n=[n]),a(n))for(var t=0,o=n.length;t<o;t++)e.call(null,n[t],t,n);else for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.call(null,n[r],r,n)}n.exports={isArray:a,isArrayBuffer:function(n){return"[object ArrayBuffer]"===r.call(n)},isBuffer:function(n){return null!==n&&!i(n)&&null!==n.constructor&&!i(n.constructor)&&"function"==typeof n.constructor.isBuffer&&n.constructor.isBuffer(n)},isFormData:function(n){return"undefined"!=typeof FormData&&n instanceof FormData},isArrayBufferView:function(n){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(n):n&&n.buffer&&n.buffer instanceof ArrayBuffer},isString:function(n){return"string"==typeof n},isNumber:function(n){return"number"==typeof n},isObject:s,isPlainObject:l,isUndefined:i,isDate:function(n){return"[object Date]"===r.call(n)},isFile:function(n){return"[object File]"===r.call(n)},isBlob:function(n){return"[object Blob]"===r.call(n)},isFunction:c,isStream:function(n){return s(n)&&c(n.pipe)},isURLSearchParams:function(n){return"undefined"!=typeof URLSearchParams&&n instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:p,merge:function n(){var e={};function t(t,o){l(e[o])&&l(t)?e[o]=n(e[o],t):l(t)?e[o]=n({},t):a(t)?e[o]=t.slice():e[o]=t}for(var o=0,r=arguments.length;o<r;o++)p(arguments[o],t);return e},extend:function(n,e,t){return p(e,(function(e,r){n[r]=t&&"function"==typeof e?o(e,t):e})),n},trim:function(n){return n.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(n){return 65279===n.charCodeAt(0)&&(n=n.slice(1)),n}}},function(n,e,t){n.exports=t(490)},function(n,e,t){"use strict";var o=t(203).charAt,r=t(9),a=t(51),i=t(204),s=a.set,l=a.getterFor("String Iterator");i(String,"String",(function(n){s(this,{type:"String Iterator",string:r(n),index:0})}),(function(){var n,e=l(this),t=e.string,r=e.index;return r>=t.length?{value:void 0,done:!0}:(n=o(t,r),e.index+=n.length,{value:n,done:!1})}))},function(n,e){n.exports=function(n){if(null==n)throw TypeError("Can't call method on "+n);return n}},function(n,e,t){var o=t(95),r=t(22);n.exports=function(n){return o(r(n))}},function(n,e,t){var o=t(6),r=t(208),a=t(330),i=t(26),s=t(5),l=s("iterator"),c=s("toStringTag"),p=a.values;for(var d in r){var u=o[d],m=u&&u.prototype;if(m){if(m[l]!==p)try{i(m,l,p)}catch(n){m[l]=p}if(m[c]||i(m,c,d),r[d])for(var h in a)if(m[h]!==a[h])try{i(m,h,a[h])}catch(n){m[h]=a[h]}}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var o=t(10),r=t(13),a=t(70);n.exports=o?function(n,e,t){return r.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){"use strict";var o=t(2),r=t(74).filter;o({target:"Array",proto:!0,forced:!t(85)("filter")},{filter:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var o=t(112),r={}.hasOwnProperty;n.exports=Object.hasOwn||function(n,e){return r.call(o(n),e)}},function(n,e,t){var o=t(34);n.exports=function(n){if(!o(n))throw TypeError(String(n)+" is not an object");return n}},function(n,e,t){var o=t(6),r=t(26),a=t(12),i=t(125),s=t(196),l=t(51),c=l.get,p=l.enforce,d=String(String).split("String");(n.exports=function(n,e,t,s){var l,c=!!s&&!!s.unsafe,u=!!s&&!!s.enumerable,m=!!s&&!!s.noTargetGet;"function"==typeof t&&("string"!=typeof e||a(t,"name")||r(t,"name",e),(l=p(t)).source||(l.source=d.join("string"==typeof e?e:""))),n!==o?(c?!m&&n[e]&&(u=!0):delete n[e],u?n[e]=t:r(n,e,t)):u?n[e]=t:i(e,t)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(n,e,t){var o=t(224),r="object"==typeof self&&self&&self.Object===Object&&self,a=o||r||Function("return this")();n.exports=a},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){"use strict";t.d(e,"d",(function(){return a})),t.d(e,"k",(function(){return i})),t.d(e,"h",(function(){return l})),t.d(e,"i",(function(){return c})),t.d(e,"j",(function(){return p})),t.d(e,"e",(function(){return d})),t.d(e,"g",(function(){return u})),t.d(e,"m",(function(){return m})),t.d(e,"n",(function(){return h})),t.d(e,"l",(function(){return f})),t.d(e,"f",(function(){return v})),t.d(e,"c",(function(){return y})),t.d(e,"a",(function(){return b})),t.d(e,"b",(function(){return x}));t(46),t(59),t(279),t(450),t(222),t(61),t(48),t(49),t(27),t(86),t(82),t(81),t(285),t(286),t(453),t(455);var o=/#.*$/,r=/\.(md|html)$/,a=/\/$/,i=/^(https?:|mailto:|tel:)/;function s(n){return decodeURI(n).replace(o,"").replace(r,"")}function l(n){return i.test(n)}function c(n){return/^mailto:/.test(n)}function p(n){return/^tel:/.test(n)}function d(n){if(l(n))return n;var e=n.match(o),t=e?e[0]:"",r=s(n);return a.test(r)?n:r+".html"+t}function u(n,e){var t=n.hash,r=function(n){var e=n.match(o);if(e)return e[0]}(e);return(!r||t===r)&&s(n.path)===s(e)}function m(n,e,t){t&&(e=function(n,e,t){var o=n.charAt(0);if("/"===o)return n;if("?"===o||"#"===o)return e+n;var r=e.split("/");t&&r[r.length-1]||r.pop();for(var a=n.replace(/^\//,"").split("/"),i=0;i<a.length;i++){var s=a[i];".."===s?r.pop():"."!==s&&r.push(s)}""!==r[0]&&r.unshift("");return r.join("/")}(e,t));for(var o=s(e),r=0;r<n.length;r++)if(s(n[r].regularPath)===o)return Object.assign({},n[r],{type:"page",path:d(n[r].path)});return console.error('[vuepress] No matching page found for sidebar item "'.concat(e,'"')),{}}function h(n,e,t,o){var r=t.pages,a=t.themeConfig,i=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(var t in e)if(0===(o=n,/(\.html|\/)$/.test(o)?o:o+"/").indexOf(encodeURI(t)))return{base:t,config:e[t]};var o;return{}}(e,(o&&a.locales&&a.locales[o]||a).sidebar||a.sidebar),s=i.base,l=i.config;return l?l.map((function(n){return function n(e,t,o){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if("string"==typeof e)return m(t,e,o);if(Array.isArray(e))return Object.assign(m(t,e[0],o),{title:e[1]});r>3&&console.error("[vuepress] detected a too deep nested sidebar group.");var a=e.children||[];return 0===a.length&&e.path?Object.assign(m(t,e.path,o),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,children:a.map((function(e){return n(e,t,o,r+1)})),collapsable:!1!==e.collapsable}}(n,r,s)})):[]}function f(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function v(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yyyy-MM-dd hh:mm:ss";n=n.replace(/-/g,"/");var t=new Date(n);/(y+)/.test(e)&&(e=e.replace(RegExp.$1,t.getFullYear()+"").substr(4-RegExp.$1.length));var o={"M+":t.getMonth()+1,"d+":t.getDate(),"h+":t.getHours(),"m+":t.getMinutes(),"s+":t.getSeconds()};for(var r in o)if(RegExp("(".concat(r,")")).test(e)){var a=o[r]+"";e=e.replace(RegExp.$1,2===a.length?a:"0"+a)}return e}function g(n){return new Date(n.frontmatter.date).getTime()}function y(n,e){return g(e)-g(n)}function b(n){var e=document.createElement("link");e.rel="stylesheet",e.href=n,document.head.append(e)}function x(n){var e,t,o,r,a=!0,i=[],s=n||{color:"rgba(255,255,255,.5)",radius:10,density:.3,clearOffset:.2},l=document.getElementById("smart");function c(){a=!(document.body.scrollTop>t)}function p(){e=l.clientWidth,t=l.clientHeight,l.height=t+"px",o.width=e,o.height=t}function d(){if(a)for(var n in r.clearRect(0,0,e,t),i)i[n].draw();requestAnimationFrame(d)}function u(){var n=this;function o(){n.pos.x=Math.random()*e,n.pos.y=t+100*Math.random(),n.alpha=.1+Math.random()*s.clearOffset,n.scale=.1+.3*Math.random(),n.speed=Math.random(),"random"===s.color?n.color="rgba("+Math.floor(255*Math.random())+", "+Math.floor(255*Math.random())+", "+Math.floor(255*Math.random())+", "+Math.random().toPrecision(2)+")":n.color=s.color}n.pos={},o(),this.draw=function(){n.alpha<=0&&o(),n.pos.y-=n.speed,n.alpha-=5e-4,r.beginPath(),r.arc(n.pos.x,n.pos.y,n.scale*s.radius,0,2*Math.PI,!1),r.fillStyle=n.color,r.fill(),r.closePath()}}!function(){e=l.offsetWidth,t=l.offsetHeight-120,n=document.createElement("canvas"),n.id="homeTopCanvas",n.style.pointerEvents="none",l.appendChild(n),n.parentElement.style.overflow="hidden",(o=document.getElementById("homeTopCanvas")).width=e,o.height=t,o.style.position="absolute",o.style.left="0",o.style.bottom="0",r=o.getContext("2d");var n;for(var a=0;a<e*s.density;a++){var c=new u;i.push(c)}d()}(),window.addEventListener("scroll",c,!1),window.addEventListener("resize",p,!1)}},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e){var t={}.toString;n.exports=function(n){return t.call(n).slice(8,-1)}},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(86);var o=t(80);t(54),t(75),t(15),t(96),t(21),t(24),t(139);var r=t(104);function a(n){return function(n){if(Array.isArray(n))return Object(o.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Object(r.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";var o=t(2),r=t(8),a=t(72),i=t(107),s=t(16),l=t(23),c=t(84),p=t(5),d=t(85)("slice"),u=p("species"),m=[].slice,h=Math.max;o({target:"Array",proto:!0,forced:!d},{slice:function(n,e){var t,o,p,d=l(this),f=s(d.length),v=i(n,f),g=i(void 0===e?f:e,f);if(a(d)&&("function"!=typeof(t=d.constructor)||t!==Array&&!a(t.prototype)?r(t)&&null===(t=t[u])&&(t=void 0):t=void 0,t===Array||void 0===t))return m.call(d,v,g);for(o=new(void 0===t?Array:t)(h(g-v,0)),p=0;v<g;v++,p++)v in d&&c(o,p,d[v]);return o.length=p,o}})},function(n,e,t){var o=t(2),r=t(6),a=t(68),i=[].slice,s=function(n){return function(e,t){var o=arguments.length>2,r=o?i.call(arguments,2):void 0;return n(o?function(){("function"==typeof e?e:Function(e)).apply(this,r)}:e,t)}};o({global:!0,bind:!0,forced:/MSIE .\./.test(a)},{setTimeout:s(r.setTimeout),setInterval:s(r.setInterval)})},function(n,e,t){var o=t(7),r=function(n){return"function"==typeof n?n:void 0};n.exports=function(n,e){return arguments.length<2?r(o[n]):o[n]&&o[n][e]}},function(n,e,t){var o=t(25);n.exports=!o((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){var o=t(6),r=function(n){return"function"==typeof n?n:void 0};n.exports=function(n,e){return arguments.length<2?r(o[n]):o[n]&&o[n][e]}},function(n,e,t){var o=t(10),r=t(198),a=t(70),i=t(23),s=t(93),l=t(12),c=t(194),p=Object.getOwnPropertyDescriptor;e.f=o?p:function(n,e){if(n=i(n),e=s(e),c)try{return p(n,e)}catch(n){}if(l(n,e))return a(!r.f.call(n,e),n[e])}},function(n,e,t){var o,r=t(14),a=t(207),i=t(130),s=t(71),l=t(328),c=t(195),p=t(94),d=p("IE_PROTO"),u=function(){},m=function(n){return"<script>"+n+"<\/script>"},h=function(n){n.write(m("")),n.close();var e=n.parentWindow.Object;return n=null,e},f=function(){try{o=new ActiveXObject("htmlfile")}catch(n){}var n,e;f="undefined"!=typeof document?document.domain&&o?h(o):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(m("document.F=Object")),n.close(),n.F):h(o);for(var t=i.length;t--;)delete f.prototype[i[t]];return f()};s[d]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(u.prototype=r(n),t=new u,u.prototype=null,t[d]=n):t=f(),void 0===e?t:a(t,e)}},function(n,e,t){var o=t(363),r=t(366);n.exports=function(n,e){var t=r(n,e);return o(t)?t:void 0}},function(n,e,t){var o=t(478),r=t(253),a=/[T ]/,i=/:/,s=/^(\d{2})$/,l=[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],c=/^(\d{4})/,p=[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],d=/^-(\d{2})$/,u=/^-?(\d{3})$/,m=/^-?(\d{2})-?(\d{2})$/,h=/^-?W(\d{2})$/,f=/^-?W(\d{2})-?(\d{1})$/,v=/^(\d{2}([.,]\d*)?)$/,g=/^(\d{2}):?(\d{2}([.,]\d*)?)$/,y=/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,b=/([Z+-].*)$/,x=/^(Z)$/,_=/^([+-])(\d{2})$/,k=/^([+-])(\d{2}):?(\d{2})$/;function w(n,e,t){e=e||0,t=t||0;var o=new Date(0);o.setUTCFullYear(n,0,4);var r=7*e+t+1-(o.getUTCDay()||7);return o.setUTCDate(o.getUTCDate()+r),o}n.exports=function(n,e){if(r(n))return new Date(n.getTime());if("string"!=typeof n)return new Date(n);var t=(e||{}).additionalDigits;t=null==t?2:Number(t);var j=function(n){var e,t={},o=n.split(a);i.test(o[0])?(t.date=null,e=o[0]):(t.date=o[0],e=o[1]);if(e){var r=b.exec(e);r?(t.time=e.replace(r[1],""),t.timezone=r[1]):t.time=e}return t}(n),E=function(n,e){var t,o=l[e],r=p[e];if(t=c.exec(n)||r.exec(n)){var a=t[1];return{year:parseInt(a,10),restDateString:n.slice(a.length)}}if(t=s.exec(n)||o.exec(n)){var i=t[1];return{year:100*parseInt(i,10),restDateString:n.slice(i.length)}}return{year:null}}(j.date,t),S=E.year,A=function(n,e){if(null===e)return null;var t,o,r,a;if(0===n.length)return(o=new Date(0)).setUTCFullYear(e),o;if(t=d.exec(n))return o=new Date(0),r=parseInt(t[1],10)-1,o.setUTCFullYear(e,r),o;if(t=u.exec(n)){o=new Date(0);var i=parseInt(t[1],10);return o.setUTCFullYear(e,0,i),o}if(t=m.exec(n)){o=new Date(0),r=parseInt(t[1],10)-1;var s=parseInt(t[2],10);return o.setUTCFullYear(e,r,s),o}if(t=h.exec(n))return a=parseInt(t[1],10)-1,w(e,a);if(t=f.exec(n)){a=parseInt(t[1],10)-1;var l=parseInt(t[2],10)-1;return w(e,a,l)}return null}(E.restDateString,S);if(A){var z,T=A.getTime(),O=0;if(j.time&&(O=function(n){var e,t,o;if(e=v.exec(n))return(t=parseFloat(e[1].replace(",",".")))%24*36e5;if(e=g.exec(n))return t=parseInt(e[1],10),o=parseFloat(e[2].replace(",",".")),t%24*36e5+6e4*o;if(e=y.exec(n)){t=parseInt(e[1],10),o=parseInt(e[2],10);var r=parseFloat(e[3].replace(",","."));return t%24*36e5+6e4*o+1e3*r}return null}(j.time)),j.timezone)z=6e4*function(n){var e,t;if(e=x.exec(n))return 0;if(e=_.exec(n))return t=60*parseInt(e[2],10),"+"===e[1]?-t:t;if(e=k.exec(n))return t=60*parseInt(e[2],10)+parseInt(e[3],10),"+"===e[1]?-t:t;return 0}(j.timezone);else{var C=T+O,I=new Date(C);z=o(I);var $=new Date(C);$.setDate(I.getDate()+1);var P=o($)-o(I);P>0&&(z+=P)}return new Date(T+O+z)}return new Date(n)}},function(n,e,t){"use strict";var o=t(2),r=t(97);o({target:"RegExp",proto:!0,forced:/./.exec!==r},{exec:r})},function(n,e,t){"use strict";var o=t(3);n.exports=function(n,e){var t=[][n];return!!t&&o((function(){t.call(null,e||function(){throw 1},1)}))}},function(n,e,t){"use strict";var o=t(2),r=t(214);o({target:"Array",proto:!0,forced:[].forEach!=r},{forEach:r})},function(n,e,t){var o=t(6),r=t(208),a=t(214),i=t(26);for(var s in r){var l=o[s],c=l&&l.prototype;if(c&&c.forEach!==a)try{i(c,"forEach",a)}catch(n){c.forEach=a}}},function(n,e,t){var o=t(40),r=t(172),a=t(29),i=t(173),s=Object.defineProperty;e.f=o?s:function(n,e,t){if(a(n),e=i(e),a(t),r)try{return s(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var o,r,a,i=t(325),s=t(6),l=t(8),c=t(26),p=t(12),d=t(124),u=t(94),m=t(71),h=s.WeakMap;if(i||d.state){var f=d.state||(d.state=new h),v=f.get,g=f.has,y=f.set;o=function(n,e){if(g.call(f,n))throw new TypeError("Object already initialized");return e.facade=n,y.call(f,n,e),e},r=function(n){return v.call(f,n)||{}},a=function(n){return g.call(f,n)}}else{var b=u("state");m[b]=!0,o=function(n,e){if(p(n,b))throw new TypeError("Object already initialized");return e.facade=n,c(n,b,e),e},r=function(n){return p(n,b)?n[b]:{}},a=function(n){return p(n,b)}}n.exports={set:o,get:r,has:a,enforce:function(n){return a(n)?r(n):o(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=r(e)).type!==n)throw TypeError("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var o=t(201),r=t(130).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return o(n,r)}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(String(n)+" is not a function");return n}},function(n,e,t){"use strict";var o=t(2),r=t(6),a=t(41),i=t(66),s=t(10),l=t(126),c=t(3),p=t(12),d=t(72),u=t(8),m=t(69),h=t(14),f=t(17),v=t(23),g=t(93),y=t(9),b=t(70),x=t(43),_=t(133),k=t(52),w=t(216),j=t(202),E=t(42),S=t(13),A=t(198),z=t(26),T=t(30),O=t(91),C=t(94),I=t(71),$=t(92),P=t(5),M=t(217),q=t(218),R=t(134),D=t(51),L=t(74).forEach,B=C("hidden"),N=P("toPrimitive"),H=D.set,F=D.getterFor("Symbol"),U=Object.prototype,V=r.Symbol,W=a("JSON","stringify"),K=E.f,G=S.f,J=w.f,Y=A.f,X=O("symbols"),Q=O("op-symbols"),Z=O("string-to-symbol-registry"),nn=O("symbol-to-string-registry"),en=O("wks"),tn=r.QObject,on=!tn||!tn.prototype||!tn.prototype.findChild,rn=s&&c((function(){return 7!=x(G({},"a",{get:function(){return G(this,"a",{value:7}).a}})).a}))?function(n,e,t){var o=K(U,e);o&&delete U[e],G(n,e,t),o&&n!==U&&G(U,e,o)}:G,an=function(n,e){var t=X[n]=x(V.prototype);return H(t,{type:"Symbol",tag:n,description:e}),s||(t.description=e),t},sn=function(n,e,t){n===U&&sn(Q,e,t),h(n);var o=g(e);return h(t),p(X,o)?(t.enumerable?(p(n,B)&&n[B][o]&&(n[B][o]=!1),t=x(t,{enumerable:b(0,!1)})):(p(n,B)||G(n,B,b(1,{})),n[B][o]=!0),rn(n,o,t)):G(n,o,t)},ln=function(n,e){h(n);var t=v(e),o=_(t).concat(un(t));return L(o,(function(e){s&&!cn.call(t,e)||sn(n,e,t[e])})),n},cn=function(n){var e=g(n),t=Y.call(this,e);return!(this===U&&p(X,e)&&!p(Q,e))&&(!(t||!p(this,e)||!p(X,e)||p(this,B)&&this[B][e])||t)},pn=function(n,e){var t=v(n),o=g(e);if(t!==U||!p(X,o)||p(Q,o)){var r=K(t,o);return!r||!p(X,o)||p(t,B)&&t[B][o]||(r.enumerable=!0),r}},dn=function(n){var e=J(v(n)),t=[];return L(e,(function(n){p(X,n)||p(I,n)||t.push(n)})),t},un=function(n){var e=n===U,t=J(e?Q:v(n)),o=[];return L(t,(function(n){!p(X,n)||e&&!p(U,n)||o.push(X[n])})),o};(l||(T((V=function(){if(this instanceof V)throw TypeError("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?y(arguments[0]):void 0,e=$(n),t=function(n){this===U&&t.call(Q,n),p(this,B)&&p(this[B],e)&&(this[B][e]=!1),rn(this,e,b(1,n))};return s&&on&&rn(U,e,{configurable:!0,set:t}),an(e,n)}).prototype,"toString",(function(){return F(this).tag})),T(V,"withoutSetter",(function(n){return an($(n),n)})),A.f=cn,S.f=sn,E.f=pn,k.f=w.f=dn,j.f=un,M.f=function(n){return an(P(n),n)},s&&(G(V.prototype,"description",{configurable:!0,get:function(){return F(this).description}}),i||T(U,"propertyIsEnumerable",cn,{unsafe:!0}))),o({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:V}),L(_(en),(function(n){q(n)})),o({target:"Symbol",stat:!0,forced:!l},{for:function(n){var e=y(n);if(p(Z,e))return Z[e];var t=V(e);return Z[e]=t,nn[t]=e,t},keyFor:function(n){if(!m(n))throw TypeError(n+" is not a symbol");if(p(nn,n))return nn[n]},useSetter:function(){on=!0},useSimple:function(){on=!1}}),o({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(n,e){return void 0===e?x(n):ln(x(n),e)},defineProperty:sn,defineProperties:ln,getOwnPropertyDescriptor:pn}),o({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:dn,getOwnPropertySymbols:un}),o({target:"Object",stat:!0,forced:c((function(){j.f(1)}))},{getOwnPropertySymbols:function(n){return j.f(f(n))}}),W)&&o({target:"JSON",stat:!0,forced:!l||c((function(){var n=V();return"[null]"!=W([n])||"{}"!=W({a:n})||"{}"!=W(Object(n))}))},{stringify:function(n,e,t){for(var o,r=[n],a=1;arguments.length>a;)r.push(arguments[a++]);if(o=e,(u(e)||void 0!==n)&&!m(n))return d(e)||(e=function(n,e){if("function"==typeof o&&(e=o.call(this,n,e)),!m(e))return e}),r[1]=e,W.apply(null,r)}});V.prototype[N]||z(V.prototype,N,V.prototype.valueOf),R(V,"Symbol"),I[B]=!0},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(15);function o(n,e,t,o,r,a,i){try{var s=n[a](i),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(o,r)}function r(n){return function(){var e=this,t=arguments;return new Promise((function(r,a){var i=n.apply(e,t);function s(n){o(i,r,a,s,l,"next",n)}function l(n){o(i,r,a,s,l,"throw",n)}s(void 0)}))}}},function(n,e,t){"use strict";var o=t(466),r=t(476),a=t(156);n.exports={formats:a,parse:r,stringify:o}},function(n,e,t){"use strict";var o=t(1);e.a=new o.a},function(n,e,t){"use strict";var o=t(142),r=t(3),a=t(14),i=t(60),s=t(16),l=t(9),c=t(22),p=t(143),d=t(344),u=t(144),m=t(5)("replace"),h=Math.max,f=Math.min,v="$0"==="a".replace(/./,"$0"),g=!!/./[m]&&""===/./[m]("a","$0");o("replace",(function(n,e,t){var o=g?"$":"$0";return[function(n,t){var o=c(this),r=null==n?void 0:n[m];return void 0!==r?r.call(n,o,t):e.call(l(o),n,t)},function(n,r){var c=a(this),m=l(n);if("string"==typeof r&&-1===r.indexOf(o)&&-1===r.indexOf("$<")){var v=t(e,c,m,r);if(v.done)return v.value}var g="function"==typeof r;g||(r=l(r));var y=c.global;if(y){var b=c.unicode;c.lastIndex=0}for(var x=[];;){var _=u(c,m);if(null===_)break;if(x.push(_),!y)break;""===l(_[0])&&(c.lastIndex=p(m,s(c.lastIndex),b))}for(var k,w="",j=0,E=0;E<x.length;E++){_=x[E];for(var S=l(_[0]),A=h(f(i(_.index),m.length),0),z=[],T=1;T<_.length;T++)z.push(void 0===(k=_[T])?k:String(k));var O=_.groups;if(g){var C=[S].concat(z,A,m);void 0!==O&&C.push(O);var I=l(r.apply(void 0,C))}else I=d(S,m,A,z,O,r);A>=j&&(w+=m.slice(j,A)+I,j=A+S.length)}return w+m.slice(j)}]}),!!r((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")}))||!v||g)},function(n,e){var t=Math.ceil,o=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?o:t)(n)}},function(n,e,t){"use strict";var o=t(2),r=t(74).map;o({target:"Array",proto:!0,forced:!t(85)("map")},{map:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e){n.exports=!1},function(n,e){n.exports={}},function(n,e,t){var o=t(40),r=t(50),a=t(119);n.exports=o?function(n,e,t){return r.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var o=t(7),r=t(64),a=t(28),i=t(111),s=t(118),l=t(117),c=l.get,p=l.enforce,d=String(String).split("String");(n.exports=function(n,e,t,s){var l,c=!!s&&!!s.unsafe,u=!!s&&!!s.enumerable,m=!!s&&!!s.noTargetGet;"function"==typeof t&&("string"!=typeof e||a(t,"name")||r(t,"name",e),(l=p(t)).source||(l.source=d.join("string"==typeof e?e:""))),n!==o?(c?!m&&n[e]&&(u=!0):delete n[e],u?n[e]=t:r(n,e,t)):u?n[e]=t:i(e,t)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(n,e){n.exports=!1},function(n,e,t){var o,r,a=t(6),i=t(68),s=a.process,l=a.Deno,c=s&&s.versions||l&&l.version,p=c&&c.v8;p?r=(o=p.split("."))[0]<4?1:o[0]+o[1]:i&&(!(o=i.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=i.match(/Chrome\/(\d+)/))&&(r=o[1]),n.exports=r&&+r},function(n,e,t){var o=t(41);n.exports=o("navigator","userAgent")||""},function(n,e,t){var o=t(41),r=t(193);n.exports=r?function(n){return"symbol"==typeof n}:function(n){var e=o("Symbol");return"function"==typeof e&&Object(n)instanceof e}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){n.exports={}},function(n,e,t){var o=t(35);n.exports=Array.isArray||function(n){return"Array"==o(n)}},function(n,e){n.exports={}},function(n,e,t){var o=t(209),r=t(95),a=t(17),i=t(16),s=t(161),l=[].push,c=function(n){var e=1==n,t=2==n,c=3==n,p=4==n,d=6==n,u=7==n,m=5==n||d;return function(h,f,v,g){for(var y,b,x=a(h),_=r(x),k=o(f,v,3),w=i(_.length),j=0,E=g||s,S=e?E(h,w):t||u?E(h,0):void 0;w>j;j++)if((m||j in _)&&(b=k(y=_[j],j,x),n))if(e)S[j]=b;else if(b)switch(n){case 3:return!0;case 5:return y;case 6:return j;case 2:l.call(S,y)}else switch(n){case 4:return!1;case 7:l.call(S,y)}return d?-1:c||p?p:S}};n.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterReject:c(7)}},function(n,e,t){"use strict";var o=t(2),r=t(10),a=t(6),i=t(12),s=t(8),l=t(13).f,c=t(199),p=a.Symbol;if(r&&"function"==typeof p&&(!("description"in p.prototype)||void 0!==p().description)){var d={},u=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof u?new p(n):void 0===n?p():p(n);return""===n&&(d[e]=!0),e};c(u,p);var m=u.prototype=p.prototype;m.constructor=u;var h=m.toString,f="Symbol(test)"==String(p("test")),v=/^Symbol\((.*)\)[^)]+$/;l(m,"description",{configurable:!0,get:function(){var n=s(this)?this.valueOf():this,e=h.call(n);if(i(d,n))return"";var t=f?e.slice(7,-1):e.replace(v,"$1");return""===t?void 0:t}}),o({global:!0,forced:!0},{Symbol:u})}},function(n,e,t){var o=t(31).Symbol;n.exports=o},function(n,e,t){var o=t(76),r=t(348),a=t(349),i=o?o.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":i&&i in Object(n)?r(n):a(n)}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"c",(function(){return a})),t.d(e,"b",(function(){return i}));t(27),t(82),t(246);var o=t(33);function r(n,e){return n=n.filter((function(t,o){var r=t.title,a=t.frontmatter,i=a.home,s=a.date,l=a.publish;if(n.indexOf(t)!==o)return!1;var c=1==i||null==r||!1===l;return!0===e?!(c||void 0===s):!c}))}function a(n){n.sort((function(n,e){var t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(o.c)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(o.c)(n,e)}))}function i(n){n.sort((function(n,e){return Object(o.c)(n,e)}))}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(103);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}},function(n,e,t){"use strict";function o(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}t.d(e,"a",(function(){return o}))},function(n,e,t){var o=t(30),r=Date.prototype,a=r.toString,i=r.getTime;"Invalid Date"!=String(new Date(NaN))&&o(r,"toString",(function(){var n=i.call(this);return n==n?a.call(this):"Invalid Date"}))},function(n,e,t){"use strict";var o=t(2),r=t(129).indexOf,a=t(47),i=[].indexOf,s=!!i&&1/[1].indexOf(1,-0)<0,l=a("indexOf");o({target:"Array",proto:!0,forced:s||!l},{indexOf:function(n){return s?i.apply(this,arguments)||0:r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var o=t(2),r=t(17),a=t(133);o({target:"Object",stat:!0,forced:t(3)((function(){a(1)}))},{keys:function(n){return a(r(n))}})},function(n,e,t){"use strict";var o=t(93),r=t(13),a=t(70);n.exports=function(n,e,t){var i=o(e);i in n?r.f(n,i,a(0,t)):n[i]=t}},function(n,e,t){var o=t(3),r=t(5),a=t(67),i=r("species");n.exports=function(n){return a>=51||!o((function(){var e=[];return(e.constructor={})[i]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){t(2)({target:"Array",stat:!0},{isArray:t(72)})},function(n,e,t){var o=t(164),r=t(165);n.exports=function(n){return o(r(n))}},function(n,e,t){var o=t(39);n.exports=o("navigator","userAgent")||""},function(n,e,t){var o=t(7),r=t(120).f,a=t(64),i=t(65),s=t(111),l=t(298),c=t(182);n.exports=function(n,e){var t,p,d,u,m,h=n.target,f=n.global,v=n.stat;if(t=f?o:v?o[h]||s(h,{}):(o[h]||{}).prototype)for(p in e){if(u=e[p],d=n.noTargetGet?(m=r(t,p))&&m.value:t[p],!c(f?p:h+(v?".":"#")+p,n.forced)&&void 0!==d){if(typeof u==typeof d)continue;l(u,d)}(n.sham||d&&d.sham)&&a(u,"sham",!0),i(t,p,u,n)}}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(String(n)+" is not a function");return n}},function(n,e,t){var o=t(66),r=t(124);(n.exports=function(n,e){return r[n]||(r[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.16.3",mode:o?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(n,e){var t=0,o=Math.random();n.exports=function(n){return"Symbol("+String(void 0===n?"":n)+")_"+(++t+o).toString(36)}},function(n,e,t){var o=t(127),r=t(69);n.exports=function(n){var e=o(n,"string");return r(e)?e:String(e)}},function(n,e,t){var o=t(91),r=t(92),a=o("keys");n.exports=function(n){return a[n]||(a[n]=r(n))}},function(n,e,t){var o=t(3),r=t(35),a="".split;n.exports=o((function(){return!Object("z").propertyIsEnumerable(0)}))?function(n){return"String"==r(n)?a.call(n,""):Object(n)}:Object},function(n,e,t){t(218)("iterator")},function(n,e,t){"use strict";var o,r,a=t(9),i=t(140),s=t(141),l=t(91),c=t(43),p=t(51).get,d=t(220),u=t(221),m=RegExp.prototype.exec,h=l("native-string-replace",String.prototype.replace),f=m,v=(o=/a/,r=/b*/g,m.call(o,"a"),m.call(r,"a"),0!==o.lastIndex||0!==r.lastIndex),g=s.UNSUPPORTED_Y||s.BROKEN_CARET,y=void 0!==/()??/.exec("")[1];(v||y||g||d||u)&&(f=function(n){var e,t,o,r,s,l,d,u=this,b=p(u),x=a(n),_=b.raw;if(_)return _.lastIndex=u.lastIndex,e=f.call(_,x),u.lastIndex=_.lastIndex,e;var k=b.groups,w=g&&u.sticky,j=i.call(u),E=u.source,S=0,A=x;if(w&&(-1===(j=j.replace("y","")).indexOf("g")&&(j+="g"),A=x.slice(u.lastIndex),u.lastIndex>0&&(!u.multiline||u.multiline&&"\n"!==x.charAt(u.lastIndex-1))&&(E="(?: "+E+")",A=" "+A,S++),t=new RegExp("^(?:"+E+")",j)),y&&(t=new RegExp("^"+E+"$(?!\\s)",j)),v&&(o=u.lastIndex),r=m.call(w?t:u,A),w?r?(r.input=r.input.slice(S),r[0]=r[0].slice(S),r.index=u.lastIndex,u.lastIndex+=r[0].length):u.lastIndex=0:v&&r&&(u.lastIndex=u.global?r.index+r[0].length:o),y&&r&&r.length>1&&h.call(r[0],t,(function(){for(s=1;s<arguments.length-2;s++)void 0===arguments[s]&&(r[s]=void 0)})),r&&k)for(r.groups=l=c(null),s=0;s<k.length;s++)l[(d=k[s])[0]]=r[d[1]];return r}),n.exports=f},function(n,e,t){var o=t(353),r=t(354),a=t(355),i=t(356),s=t(357);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=r,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var o=t(226);n.exports=function(n,e){for(var t=n.length;t--;)if(o(n[t][0],e))return t;return-1}},function(n,e,t){var o=t(44)(Object,"create");n.exports=o},function(n,e,t){var o=t(375);n.exports=function(n,e){var t=n.__data__;return o(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var o=t(152);n.exports=function(n){if("string"==typeof n||o(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var o=t(2),r=t(10);o({target:"Object",stat:!0,forced:!r,sham:!r},{defineProperty:t(13).f})},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(37),t(15),t(108),t(139),t(21);var o=t(80);function r(n,e){if(n){if("string"==typeof n)return Object(o.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(o.a)(n,e):void 0}}},function(n,e,t){var o,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(o=function(){var n,e,t={version:"0.2.0"},o=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(n,e,t){return n<e?e:n>t?t:n}function a(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(o[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=r(n,o.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(o.barSelector),p=o.speed,d=o.easing;return l.offsetWidth,i((function(e){""===o.positionUsing&&(o.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var r;return(r="translate3d"===o.positionUsing?{transform:"translate3d("+a(n)+"%,0,0)"}:"translate"===o.positionUsing?{transform:"translate("+a(n)+"%,0)"}:{"margin-left":a(n)+"%"}).transition="all "+e+"ms "+t,r}(n,p,d)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+p+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),p)}),p)):setTimeout(e,p)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),o.trickleSpeed)};return o.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*r(Math.random()*e,.1,.95)),e=r(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*o.trickleRate)},n=0,e=0,t.promise=function(o){return o&&"resolved"!==o.state()?(0===e&&t.start(),n++,e++,o.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=o.template;var r,i=e.querySelector(o.barSelector),l=n?"-100":a(t.status||0),p=document.querySelector(o.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),o.showSpinner||(r=e.querySelector(o.spinnerSelector))&&u(r),p!=document.body&&c(p,"nprogress-custom-parent"),p.appendChild(e),e},t.remove=function(){p(document.documentElement,"nprogress-busy"),p(document.querySelector(o.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&u(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var i=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var o,r=n.length,a=e.charAt(0).toUpperCase()+e.slice(1);r--;)if((o=n[r]+a)in t)return o;return e}(t))}function o(n,e,o){e=t(e),n.style[e]=o}return function(n,e){var t,r,a=arguments;if(2==a.length)for(t in e)void 0!==(r=e[t])&&e.hasOwnProperty(t)&&o(n,t,r);else o(n,a[1],a[2])}}();function l(n,e){return("string"==typeof n?n:d(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=d(n),o=t+e;l(t,e)||(n.className=o.substring(1))}function p(n,e){var t,o=d(n);l(n,e)&&(t=o.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function d(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function u(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?o.call(e,t,e,n):o)||(n.exports=r)},function(n,e,t){"use strict";var o=t(2),r=t(74).some;o({target:"Array",proto:!0,forced:!t(47)("some")},{some:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var o=t(60),r=Math.max,a=Math.min;n.exports=function(n,e){var t=o(n);return t<0?r(t+e,0):a(t,e)}},function(n,e,t){var o=t(10),r=t(13).f,a=Function.prototype,i=a.toString,s=/^\s*function ([^ (]*)/;o&&!("name"in a)&&r(a,"name",{configurable:!0,get:function(){try{return i.call(this).match(s)[1]}catch(n){return""}}})},function(n,e){var t={}.toString;n.exports=function(n){return t.call(n).slice(8,-1)}},function(n,e,t){var o=t(7),r=t(111),a=o["__core-js_shared__"]||r("__core-js_shared__",{});n.exports=a},function(n,e,t){var o=t(7);n.exports=function(n,e){try{Object.defineProperty(o,n,{value:e,configurable:!0,writable:!0})}catch(t){o[n]=e}return e}},function(n,e,t){var o=t(165);n.exports=function(n){return Object(o(n))}},function(n,e,t){var o=t(7),r=t(34),a=o.document,i=r(a)&&r(a.createElement);n.exports=function(n){return i?a.createElement(n):{}}},function(n,e){n.exports={}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var o=t(166),r=t(167),a=o("keys");n.exports=function(n){return a[n]||(a[n]=r(n))}},function(n,e,t){var o,r,a,i=t(296),s=t(7),l=t(34),c=t(64),p=t(28),d=t(110),u=t(116),m=t(114),h=s.WeakMap;if(i||d.state){var f=d.state||(d.state=new h),v=f.get,g=f.has,y=f.set;o=function(n,e){if(g.call(f,n))throw new TypeError("Object already initialized");return e.facade=n,y.call(f,n,e),e},r=function(n){return v.call(f,n)||{}},a=function(n){return g.call(f,n)}}else{var b=u("state");m[b]=!0,o=function(n,e){if(p(n,b))throw new TypeError("Object already initialized");return e.facade=n,c(n,b,e),e},r=function(n){return p(n,b)?n[b]:{}},a=function(n){return p(n,b)}}n.exports={set:o,get:r,has:a,enforce:function(n){return a(n)?r(n):o(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=r(e)).type!==n)throw TypeError("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var o=t(110),r=Function.toString;"function"!=typeof o.inspectSource&&(o.inspectSource=function(n){return r.call(n)}),n.exports=o.inspectSource},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var o=t(40),r=t(180),a=t(119),i=t(87),s=t(173),l=t(28),c=t(172),p=Object.getOwnPropertyDescriptor;e.f=o?p:function(n,e){if(n=i(n),e=s(e),c)try{return p(n,e)}catch(n){}if(l(n,e))return a(!r.f.call(n,e),n[e])}},function(n,e,t){var o=t(50).f,r=t(28),a=t(18)("toStringTag");n.exports=function(n,e,t){n&&!r(n=t?n:n.prototype,a)&&o(n,a,{configurable:!0,value:e})}},function(n,e,t){var o=t(109),r=t(7);n.exports="process"==o(r.process)},function(n,e,t){var o={};o[t(5)("toStringTag")]="z",n.exports="[object z]"===String(o)},function(n,e,t){var o=t(6),r=t(125),a=o["__core-js_shared__"]||r("__core-js_shared__",{});n.exports=a},function(n,e,t){var o=t(6);n.exports=function(n,e){try{Object.defineProperty(o,n,{value:e,configurable:!0,writable:!0})}catch(t){o[n]=e}return e}},function(n,e,t){var o=t(67),r=t(3);n.exports=!!Object.getOwnPropertySymbols&&!r((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&o&&o<41}))},function(n,e,t){var o=t(8),r=t(69),a=t(324),i=t(5)("toPrimitive");n.exports=function(n,e){if(!o(n)||r(n))return n;var t,s=n[i];if(void 0!==s){if(void 0===e&&(e="default"),t=s.call(n,e),!o(t)||r(t))return t;throw TypeError("Can't convert object to primitive value")}return void 0===e&&(e="number"),a(n,e)}},function(n,e,t){var o=function(n){"use strict";var e=Object.prototype,t=e.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},r=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",i=o.toStringTag||"@@toStringTag";function s(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{s({},"")}catch(n){s=function(n,e,t){return n[e]=t}}function l(n,e,t,o){var r=e&&e.prototype instanceof d?e:d,a=Object.create(r.prototype),i=new w(o||[]);return a._invoke=function(n,e,t){var o="suspendedStart";return function(r,a){if("executing"===o)throw new Error("Generator is already running");if("completed"===o){if("throw"===r)throw a;return E()}for(t.method=r,t.arg=a;;){var i=t.delegate;if(i){var s=x(i,t);if(s){if(s===p)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===o)throw o="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);o="executing";var l=c(n,e,t);if("normal"===l.type){if(o=t.done?"completed":"suspendedYield",l.arg===p)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(o="completed",t.method="throw",t.arg=l.arg)}}}(n,t,i),a}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=l;var p={};function d(){}function u(){}function m(){}var h={};s(h,r,(function(){return this}));var f=Object.getPrototypeOf,v=f&&f(f(j([])));v&&v!==e&&t.call(v,r)&&(h=v);var g=m.prototype=d.prototype=Object.create(h);function y(n){["next","throw","return"].forEach((function(e){s(n,e,(function(n){return this._invoke(e,n)}))}))}function b(n,e){var o;this._invoke=function(r,a){function i(){return new e((function(o,i){!function o(r,a,i,s){var l=c(n[r],n,a);if("throw"!==l.type){var p=l.arg,d=p.value;return d&&"object"==typeof d&&t.call(d,"__await")?e.resolve(d.__await).then((function(n){o("next",n,i,s)}),(function(n){o("throw",n,i,s)})):e.resolve(d).then((function(n){p.value=n,i(p)}),(function(n){return o("throw",n,i,s)}))}s(l.arg)}(r,a,o,i)}))}return o=o?o.then(i,i):i()}}function x(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,x(n,e),"throw"===e.method))return p;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var o=c(t,n.iterator,e.arg);if("throw"===o.type)return e.method="throw",e.arg=o.arg,e.delegate=null,p;var r=o.arg;return r?r.done?(e[n.resultName]=r.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,p):r:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,p)}function _(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function k(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function w(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(_,this),this.reset(!0)}function j(n){if(n){var e=n[r];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var o=-1,a=function e(){for(;++o<n.length;)if(t.call(n,o))return e.value=n[o],e.done=!1,e;return e.value=void 0,e.done=!0,e};return a.next=a}}return{next:E}}function E(){return{value:void 0,done:!0}}return u.prototype=m,s(g,"constructor",m),s(m,"constructor",u),u.displayName=s(m,i,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===u||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,m):(n.__proto__=m,s(n,i,"GeneratorFunction")),n.prototype=Object.create(g),n},n.awrap=function(n){return{__await:n}},y(b.prototype),s(b.prototype,a,(function(){return this})),n.AsyncIterator=b,n.async=function(e,t,o,r,a){void 0===a&&(a=Promise);var i=new b(l(e,t,o,r),a);return n.isGeneratorFunction(t)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},y(g),s(g,i,"Generator"),s(g,r,(function(){return this})),s(g,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var o=e.pop();if(o in n)return t.value=o,t.done=!1,t}return t.done=!0,t}},n.values=j,w.prototype={constructor:w,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function o(t,o){return i.type="throw",i.arg=n,e.next=t,o&&(e.method="next",e.arg=void 0),!!o}for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r],i=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var s=t.call(a,"catchLoc"),l=t.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(n,e){for(var o=this.tryEntries.length-1;o>=0;--o){var r=this.tryEntries[o];if(r.tryLoc<=this.prev&&t.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===n||"continue"===n)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=n,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,p):this.complete(i)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),p},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),k(t),p}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var o=t.completion;if("throw"===o.type){var r=o.arg;k(t)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:j(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),p}},n}(n.exports);try{regeneratorRuntime=o}catch(n){"object"==typeof globalThis?globalThis.regeneratorRuntime=o:Function("r","regeneratorRuntime = r")(o)}},function(n,e,t){var o=t(23),r=t(16),a=t(107),i=function(n){return function(e,t,i){var s,l=o(e),c=r(l.length),p=a(i,c);if(n&&t!=t){for(;c>p;)if((s=l[p++])!=s)return!0}else for(;c>p;p++)if((n||p in l)&&l[p]===t)return n||p||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var o=t(3),r=/#|\.prototype\./,a=function(n,e){var t=s[i(n)];return t==c||t!=l&&("function"==typeof e?o(e):!!e)},i=a.normalize=function(n){return String(n).replace(r,".").toLowerCase()},s=a.data={},l=a.NATIVE="N",c=a.POLYFILL="P";n.exports=a},function(n,e,t){var o=t(12),r=t(17),a=t(94),i=t(206),s=a("IE_PROTO"),l=Object.prototype;n.exports=i?Object.getPrototypeOf:function(n){return n=r(n),o(n,s)?n[s]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?l:null}},function(n,e,t){var o=t(201),r=t(130);n.exports=Object.keys||function(n){return o(n,r)}},function(n,e,t){var o=t(13).f,r=t(12),a=t(5)("toStringTag");n.exports=function(n,e,t){n&&!r(n=t?n:n.prototype,a)&&o(n,a,{configurable:!0,value:e})}},function(n,e,t){var o=t(14),r=t(329);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(t,[]),e=t instanceof Array}catch(n){}return function(t,a){return o(t),r(a),e?n.call(t,a):t.__proto__=a,t}}():void 0)},function(n,e,t){var o=t(5),r=t(43),a=t(13),i=o("unscopables"),s=Array.prototype;null==s[i]&&a.f(s,i,{configurable:!0,value:r(null)}),n.exports=function(n){s[i][n]=!0}},function(n,e,t){"use strict";var o=t(2),r=t(332).left,a=t(47),i=t(67),s=t(333);o({target:"Array",proto:!0,forced:!a("reduce")||!s&&i>79&&i<83},{reduce:function(n){return r(this,n,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var o=t(8),r=t(35),a=t(5)("match");n.exports=function(n){var e;return o(n)&&(void 0!==(e=n[a])?!!e:"RegExp"==r(n))}},function(n,e,t){var o=t(2),r=t(338);o({target:"Array",stat:!0,forced:!t(343)((function(n){Array.from(n)}))},{from:r})},function(n,e,t){"use strict";var o=t(14);n.exports=function(){var n=o(this),e="";return n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},function(n,e,t){var o=t(3),r=t(6).RegExp;e.UNSUPPORTED_Y=o((function(){var n=r("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),e.BROKEN_CARET=o((function(){var n=r("^r","gy");return n.lastIndex=2,null!=n.exec("str")}))},function(n,e,t){"use strict";t(46);var o=t(30),r=t(97),a=t(3),i=t(5),s=t(26),l=i("species"),c=RegExp.prototype;n.exports=function(n,e,t,p){var d=i(n),u=!a((function(){var e={};return e[d]=function(){return 7},7!=""[n](e)})),m=u&&!a((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[l]=function(){return t},t.flags="",t[d]=/./[d]),t.exec=function(){return e=!0,null},t[d](""),!e}));if(!u||!m||t){var h=/./[d],f=e(d,""[n],(function(n,e,t,o,a){var i=e.exec;return i===r||i===c.exec?u&&!a?{done:!0,value:h.call(e,t,o)}:{done:!0,value:n.call(t,e,o)}:{done:!1}}));o(String.prototype,n,f[0]),o(c,d,f[1])}p&&s(c[d],"sham",!0)}},function(n,e,t){"use strict";var o=t(203).charAt;n.exports=function(n,e,t){return e+(t?o(n,e).length:1)}},function(n,e,t){var o=t(35),r=t(97);n.exports=function(n,e){var t=n.exec;if("function"==typeof t){var a=t.call(n,e);if("object"!=typeof a)throw TypeError("RegExp exec method returned something other than an Object or null");return a}if("RegExp"!==o(n))throw TypeError("RegExp#exec called on incompatible receiver");return r.call(n,e)}},function(n,e,t){var o=t(347),r=t(55),a=Object.prototype,i=a.hasOwnProperty,s=a.propertyIsEnumerable,l=o(function(){return arguments}())?o:function(n){return r(n)&&i.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var o=t(44)(t(31),"Map");n.exports=o},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var o=t(367),r=t(374),a=t(376),i=t(377),s=t(378);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=r,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var o=t(32),r=t(152),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;n.exports=function(n,e){if(o(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!r(n))||(i.test(n)||!a.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var o=t(77),r=t(55);n.exports=function(n){return"symbol"==typeof n||r(n)&&"[object Symbol]"==o(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";var o=SyntaxError,r=Function,a=TypeError,i=function(n){try{return r('"use strict"; return ('+n+").constructor;")()}catch(n){}},s=Object.getOwnPropertyDescriptor;if(s)try{s({},"")}catch(n){s=null}var l=function(){throw new a},c=s?function(){try{return l}catch(n){try{return s(arguments,"callee").get}catch(n){return l}}}():l,p=t(468)(),d=Object.getPrototypeOf||function(n){return n.__proto__},u={},m="undefined"==typeof Uint8Array?void 0:d(Uint8Array),h={"%AggregateError%":"undefined"==typeof AggregateError?void 0:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayIteratorPrototype%":p?d([][Symbol.iterator]()):void 0,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":u,"%AsyncGenerator%":u,"%AsyncGeneratorFunction%":u,"%AsyncIteratorPrototype%":u,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%BigInt%":"undefined"==typeof BigInt?void 0:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?void 0:FinalizationRegistry,"%Function%":r,"%GeneratorFunction%":u,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":p?d(d([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&p?d((new Map)[Symbol.iterator]()):void 0,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&p?d((new Set)[Symbol.iterator]()):void 0,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":p?d(""[Symbol.iterator]()):void 0,"%Symbol%":p?Symbol:void 0,"%SyntaxError%":o,"%ThrowTypeError%":c,"%TypedArray%":m,"%TypeError%":a,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?void 0:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet},f={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},v=t(155),g=t(471),y=v.call(Function.call,Array.prototype.concat),b=v.call(Function.apply,Array.prototype.splice),x=v.call(Function.call,String.prototype.replace),_=v.call(Function.call,String.prototype.slice),k=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,w=/\\(\\)?/g,j=function(n){var e=_(n,0,1),t=_(n,-1);if("%"===e&&"%"!==t)throw new o("invalid intrinsic syntax, expected closing `%`");if("%"===t&&"%"!==e)throw new o("invalid intrinsic syntax, expected opening `%`");var r=[];return x(n,k,(function(n,e,t,o){r[r.length]=t?x(o,w,"$1"):e||n})),r},E=function(n,e){var t,r=n;if(g(f,r)&&(r="%"+(t=f[r])[0]+"%"),g(h,r)){var s=h[r];if(s===u&&(s=function n(e){var t;if("%AsyncFunction%"===e)t=i("async function () {}");else if("%GeneratorFunction%"===e)t=i("function* () {}");else if("%AsyncGeneratorFunction%"===e)t=i("async function* () {}");else if("%AsyncGenerator%"===e){var o=n("%AsyncGeneratorFunction%");o&&(t=o.prototype)}else if("%AsyncIteratorPrototype%"===e){var r=n("%AsyncGenerator%");r&&(t=d(r.prototype))}return h[e]=t,t}(r)),void 0===s&&!e)throw new a("intrinsic "+n+" exists, but is not available. Please file an issue!");return{alias:t,name:r,value:s}}throw new o("intrinsic "+n+" does not exist!")};n.exports=function(n,e){if("string"!=typeof n||0===n.length)throw new a("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new a('"allowMissing" argument must be a boolean');var t=j(n),r=t.length>0?t[0]:"",i=E("%"+r+"%",e),l=i.name,c=i.value,p=!1,d=i.alias;d&&(r=d[0],b(t,y([0,1],d)));for(var u=1,m=!0;u<t.length;u+=1){var f=t[u],v=_(f,0,1),x=_(f,-1);if(('"'===v||"'"===v||"`"===v||'"'===x||"'"===x||"`"===x)&&v!==x)throw new o("property names with quotes must have matching quotes");if("constructor"!==f&&m||(p=!0),g(h,l="%"+(r+="."+f)+"%"))c=h[l];else if(null!=c){if(!(f in c)){if(!e)throw new a("base intrinsic for "+n+" exists, but the property is not available.");return}if(s&&u+1>=t.length){var k=s(c,f);c=(m=!!k)&&"get"in k&&!("originalValue"in k.get)?k.get:c[f]}else m=g(c,f),c=c[f];m&&!p&&(h[l]=c)}}return c}},function(n,e,t){"use strict";var o=t(470);n.exports=Function.prototype.bind||o},function(n,e,t){"use strict";var o=String.prototype.replace,r=/%20/g,a="RFC1738",i="RFC3986";n.exports={default:i,formatters:{RFC1738:function(n){return o.call(n,r,"+")},RFC3986:function(n){return String(n)}},RFC1738:a,RFC3986:i}},function(n,e,t){var o=t(483);n.exports=function(n){return o(n,{weekStartsOn:1})}},function(n,e,t){"use strict";var o=t(2),r=t(3),a=t(72),i=t(8),s=t(17),l=t(16),c=t(84),p=t(161),d=t(85),u=t(5),m=t(67),h=u("isConcatSpreadable"),f=m>=51||!r((function(){var n=[];return n[h]=!1,n.concat()[0]!==n})),v=d("concat"),g=function(n){if(!i(n))return!1;var e=n[h];return void 0!==e?!!e:a(n)};o({target:"Array",proto:!0,forced:!f||!v},{concat:function(n){var e,t,o,r,a,i=s(this),d=p(i,0),u=0;for(e=-1,o=arguments.length;e<o;e++)if(g(a=-1===e?i:arguments[e])){if(u+(r=l(a.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(t=0;t<r;t++,u++)t in a&&c(d,u,a[t])}else{if(u>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(d,u++,a)}return d.length=u,d}})},function(n,e,t){"use strict";t.d(e,"a",(function(){return r})),t.d(e,"b",(function(){return a}));t(82);var o=t(33);function r(){var n=["#e15b64","#f47e60","#f8b26a","#abbd81","#849b87","#e15b64","#f47e60","#f8b26a","#f26d6d","#67cc86","#fb9b5f","#3498db"];return n[Math.floor(Math.random()*n.length)]}function a(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"tomorrow",e=["tomorrow","funky","okaidia","solarizedlight","default"],t="https://cdn.jsdelivr.net/npm/prismjs@1.21.0/themes/prism".concat(e.indexOf(n)>-1?"-".concat(n):"",".css");Object(o.a)(t)}},function(n,e,t){"use strict";var o=t(10),r=t(6),a=t(131),i=t(30),s=t(12),l=t(35),c=t(247),p=t(69),d=t(127),u=t(3),m=t(43),h=t(52).f,f=t(42).f,v=t(13).f,g=t(162).trim,y=r.Number,b=y.prototype,x="Number"==l(m(b)),_=function(n){if(p(n))throw TypeError("Cannot convert a Symbol value to a number");var e,t,o,r,a,i,s,l,c=d(n,"number");if("string"==typeof c&&c.length>2)if(43===(e=(c=g(c)).charCodeAt(0))||45===e){if(88===(t=c.charCodeAt(2))||120===t)return NaN}else if(48===e){switch(c.charCodeAt(1)){case 66:case 98:o=2,r=49;break;case 79:case 111:o=8,r=55;break;default:return+c}for(i=(a=c.slice(2)).length,s=0;s<i;s++)if((l=a.charCodeAt(s))<48||l>r)return NaN;return parseInt(a,o)}return+c};if(a("Number",!y(" 0o1")||!y("0b1")||y("+0x1"))){for(var k,w=function(n){var e=arguments.length<1?0:n,t=this;return t instanceof w&&(x?u((function(){b.valueOf.call(t)})):"Number"!=l(t))?c(new y(_(e)),t,w):_(e)},j=o?h(y):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","),E=0;j.length>E;E++)s(y,k=j[E])&&!s(w,k)&&v(w,k,f(y,k));w.prototype=b,b.constructor=w,i(r,"Number",w)}},function(n,e,t){var o=t(331);n.exports=function(n,e){return new(o(n))(0===e?0:e)}},function(n,e,t){var o=t(22),r=t(9),a="["+t(163)+"]",i=RegExp("^"+a+a+"*"),s=RegExp(a+a+"*$"),l=function(n){return function(e){var t=r(o(e));return 1&n&&(t=t.replace(i,"")),2&n&&(t=t.replace(s,"")),t}};n.exports={start:l(1),end:l(2),trim:l(3)}},function(n,e){n.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(n,e,t){var o=t(25),r=t(109),a="".split;n.exports=o((function(){return!Object("z").propertyIsEnumerable(0)}))?function(n){return"String"==r(n)?a.call(n,""):Object(n)}:Object},function(n,e){n.exports=function(n){if(null==n)throw TypeError("Can't call method on "+n);return n}},function(n,e,t){var o=t(62),r=t(110);(n.exports=function(n,e){return r[n]||(r[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.16.3",mode:o?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(n,e){var t=0,o=Math.random();n.exports=function(n){return"Symbol("+String(void 0===n?"":n)+")_"+(++t+o).toString(36)}},function(n,e,t){var o=t(169),r=t(25);n.exports=!!Object.getOwnPropertySymbols&&!r((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&o&&o<41}))},function(n,e,t){var o,r,a=t(7),i=t(88),s=a.process,l=a.Deno,c=s&&s.versions||l&&l.version,p=c&&c.v8;p?r=(o=p.split("."))[0]<4?1:o[0]+o[1]:i&&(!(o=i.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=i.match(/Chrome\/(\d+)/))&&(r=o[1]),n.exports=r&&+r},function(n,e,t){var o=t(168);n.exports=o&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var o,r=t(29),a=t(291),i=t(115),s=t(114),l=t(179),c=t(113),p=t(116),d=p("IE_PROTO"),u=function(){},m=function(n){return"<script>"+n+"<\/script>"},h=function(n){n.write(m("")),n.close();var e=n.parentWindow.Object;return n=null,e},f=function(){try{o=new ActiveXObject("htmlfile")}catch(n){}var n,e;f="undefined"!=typeof document?document.domain&&o?h(o):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(m("document.F=Object")),n.close(),n.F):h(o);for(var t=i.length;t--;)delete f.prototype[i[t]];return f()};s[d]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(u.prototype=r(n),t=new u,u.prototype=null,t[d]=n):t=f(),void 0===e?t:a(t,e)}},function(n,e,t){var o=t(40),r=t(25),a=t(113);n.exports=!o&&!r((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var o=t(292),r=t(174);n.exports=function(n){var e=o(n,"string");return r(e)?e:String(e)}},function(n,e,t){var o=t(39),r=t(170);n.exports=r?function(n){return"symbol"==typeof n}:function(n){var e=o("Symbol");return"function"==typeof e&&Object(n)instanceof e}},function(n,e,t){var o=t(176),r=t(115);n.exports=Object.keys||function(n){return o(n,r)}},function(n,e,t){var o=t(28),r=t(87),a=t(294).indexOf,i=t(114);n.exports=function(n,e){var t,s=r(n),l=0,c=[];for(t in s)!o(i,t)&&o(s,t)&&c.push(t);for(;e.length>l;)o(s,t=e[l++])&&(~a(c,t)||c.push(t));return c}},function(n,e,t){var o=t(178),r=Math.min;n.exports=function(n){return n>0?r(o(n),9007199254740991):0}},function(n,e){var t=Math.ceil,o=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?o:t)(n)}},function(n,e,t){var o=t(39);n.exports=o("document","documentElement")},function(n,e,t){"use strict";var o={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,a=r&&!o.call({1:2},1);e.f=a?function(n){var e=r(this,n);return!!e&&e.enumerable}:o},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var o=t(25),r=/#|\.prototype\./,a=function(n,e){var t=s[i(n)];return t==c||t!=l&&("function"==typeof e?o(e):!!e)},i=a.normalize=function(n){return String(n).replace(r,".").toLowerCase()},s=a.data={},l=a.NATIVE="N",c=a.POLYFILL="P";n.exports=a},function(n,e,t){"use strict";var o,r,a,i=t(25),s=t(184),l=t(64),c=t(28),p=t(18),d=t(62),u=p("iterator"),m=!1;[].keys&&("next"in(a=[].keys())?(r=s(s(a)))!==Object.prototype&&(o=r):m=!0);var h=null==o||i((function(){var n={};return o[u].call(n)!==n}));h&&(o={}),d&&!h||c(o,u)||l(o,u,(function(){return this})),n.exports={IteratorPrototype:o,BUGGY_SAFARI_ITERATORS:m}},function(n,e,t){var o=t(28),r=t(112),a=t(116),i=t(302),s=a("IE_PROTO"),l=Object.prototype;n.exports=i?Object.getPrototypeOf:function(n){return n=r(n),o(n,s)?n[s]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?l:null}},function(n,e,t){var o=t(29),r=t(303);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(t,[]),e=t instanceof Array}catch(n){}return function(t,a){return o(t),r(a),e?n.call(t,a):t.__proto__=a,t}}():void 0)},function(n,e,t){var o=t(7);n.exports=o.Promise},function(n,e,t){var o=t(90);n.exports=function(n,e,t){if(o(n),void 0===e)return n;switch(t){case 0:return function(){return n.call(e)};case 1:return function(t){return n.call(e,t)};case 2:return function(t,o){return n.call(e,t,o)};case 3:return function(t,o,r){return n.call(e,t,o,r)}}return function(){return n.apply(e,arguments)}}},function(n,e,t){var o=t(29),r=t(90),a=t(18)("species");n.exports=function(n,e){var t,i=o(n).constructor;return void 0===i||null==(t=o(i)[a])?e:r(t)}},function(n,e,t){var o,r,a,i,s=t(7),l=t(25),c=t(187),p=t(179),d=t(113),u=t(190),m=t(122),h=s.setImmediate,f=s.clearImmediate,v=s.process,g=s.MessageChannel,y=s.Dispatch,b=0,x={};try{o=s.location}catch(n){}var _=function(n){if(x.hasOwnProperty(n)){var e=x[n];delete x[n],e()}},k=function(n){return function(){_(n)}},w=function(n){_(n.data)},j=function(n){s.postMessage(String(n),o.protocol+"//"+o.host)};h&&f||(h=function(n){for(var e=[],t=arguments.length,o=1;t>o;)e.push(arguments[o++]);return x[++b]=function(){("function"==typeof n?n:Function(n)).apply(void 0,e)},r(b),b},f=function(n){delete x[n]},m?r=function(n){v.nextTick(k(n))}:y&&y.now?r=function(n){y.now(k(n))}:g&&!u?(i=(a=new g).port2,a.port1.onmessage=w,r=c(i.postMessage,i,1)):s.addEventListener&&"function"==typeof postMessage&&!s.importScripts&&o&&"file:"!==o.protocol&&!l(j)?(r=j,s.addEventListener("message",w,!1)):r="onreadystatechange"in d("script")?function(n){p.appendChild(d("script")).onreadystatechange=function(){p.removeChild(this),_(n)}}:function(n){setTimeout(k(n),0)}),n.exports={set:h,clear:f}},function(n,e,t){var o=t(88);n.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(o)},function(n,e,t){var o=t(29),r=t(34),a=t(192);n.exports=function(n,e){if(o(n),r(e)&&e.constructor===n)return e;var t=a.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){"use strict";var o=t(90),r=function(n){var e,t;this.promise=new n((function(n,o){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=o})),this.resolve=o(e),this.reject=o(t)};n.exports.f=function(n){return new r(n)}},function(n,e,t){var o=t(126);n.exports=o&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var o=t(10),r=t(3),a=t(195);n.exports=!o&&!r((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var o=t(6),r=t(8),a=o.document,i=r(a)&&r(a.createElement);n.exports=function(n){return i?a.createElement(n):{}}},function(n,e,t){var o=t(124),r=Function.toString;"function"!=typeof o.inspectSource&&(o.inspectSource=function(n){return r.call(n)}),n.exports=o.inspectSource},function(n,e,t){var o=t(123),r=t(35),a=t(5)("toStringTag"),i="Arguments"==r(function(){return arguments}());n.exports=o?r:function(n){var e,t,o;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=Object(n),a))?t:i?r(e):"Object"==(o=r(e))&&"function"==typeof e.callee?"Arguments":o}},function(n,e,t){"use strict";var o={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,a=r&&!o.call({1:2},1);e.f=a?function(n){var e=r(this,n);return!!e&&e.enumerable}:o},function(n,e,t){var o=t(12),r=t(200),a=t(42),i=t(13);n.exports=function(n,e){for(var t=r(e),s=i.f,l=a.f,c=0;c<t.length;c++){var p=t[c];o(n,p)||s(n,p,l(e,p))}}},function(n,e,t){var o=t(41),r=t(52),a=t(202),i=t(14);n.exports=o("Reflect","ownKeys")||function(n){var e=r.f(i(n)),t=a.f;return t?e.concat(t(n)):e}},function(n,e,t){var o=t(12),r=t(23),a=t(129).indexOf,i=t(71);n.exports=function(n,e){var t,s=r(n),l=0,c=[];for(t in s)!o(i,t)&&o(s,t)&&c.push(t);for(;e.length>l;)o(s,t=e[l++])&&(~a(c,t)||c.push(t));return c}},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var o=t(60),r=t(9),a=t(22),i=function(n){return function(e,t){var i,s,l=r(a(e)),c=o(t),p=l.length;return c<0||c>=p?n?"":void 0:(i=l.charCodeAt(c))<55296||i>56319||c+1===p||(s=l.charCodeAt(c+1))<56320||s>57343?n?l.charAt(c):i:n?l.slice(c,c+2):s-56320+(i-55296<<10)+65536}};n.exports={codeAt:i(!1),charAt:i(!0)}},function(n,e,t){"use strict";var o=t(2),r=t(327),a=t(132),i=t(135),s=t(134),l=t(26),c=t(30),p=t(5),d=t(66),u=t(73),m=t(205),h=m.IteratorPrototype,f=m.BUGGY_SAFARI_ITERATORS,v=p("iterator"),g=function(){return this};n.exports=function(n,e,t,p,m,y,b){r(t,e,p);var x,_,k,w=function(n){if(n===m&&z)return z;if(!f&&n in S)return S[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},j=e+" Iterator",E=!1,S=n.prototype,A=S[v]||S["@@iterator"]||m&&S[m],z=!f&&A||w(m),T="Array"==e&&S.entries||A;if(T&&(x=a(T.call(new n)),h!==Object.prototype&&x.next&&(d||a(x)===h||(i?i(x,h):"function"!=typeof x[v]&&l(x,v,g)),s(x,j,!0,!0),d&&(u[j]=g))),"values"==m&&A&&"values"!==A.name&&(E=!0,z=function(){return A.call(this)}),d&&!b||S[v]===z||l(S,v,z),u[e]=z,m)if(_={values:w("values"),keys:y?z:w("keys"),entries:w("entries")},b)for(k in _)(f||E||!(k in S))&&c(S,k,_[k]);else o({target:e,proto:!0,forced:f||E},_);return _}},function(n,e,t){"use strict";var o,r,a,i=t(3),s=t(132),l=t(26),c=t(12),p=t(5),d=t(66),u=p("iterator"),m=!1;[].keys&&("next"in(a=[].keys())?(r=s(s(a)))!==Object.prototype&&(o=r):m=!0);var h=null==o||i((function(){var n={};return o[u].call(n)!==n}));h&&(o={}),d&&!h||c(o,u)||l(o,u,(function(){return this})),n.exports={IteratorPrototype:o,BUGGY_SAFARI_ITERATORS:m}},function(n,e,t){var o=t(3);n.exports=!o((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var o=t(10),r=t(13),a=t(14),i=t(133);n.exports=o?Object.defineProperties:function(n,e){a(n);for(var t,o=i(e),s=o.length,l=0;s>l;)r.f(n,t=o[l++],e[t]);return n}},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){var o=t(53);n.exports=function(n,e,t){if(o(n),void 0===e)return n;switch(t){case 0:return function(){return n.call(e)};case 1:return function(t){return n.call(e,t)};case 2:return function(t,o){return n.call(e,t,o)};case 3:return function(t,o,r){return n.call(e,t,o,r)}}return function(){return n.apply(e,arguments)}}},function(n,e,t){var o=t(2),r=t(10),a=t(200),i=t(23),s=t(42),l=t(84);o({target:"Object",stat:!0,sham:!r},{getOwnPropertyDescriptors:function(n){for(var e,t,o=i(n),r=s.f,c=a(o),p={},d=0;c.length>d;)void 0!==(t=r(o,e=c[d++]))&&l(p,e,t);return p}})},function(n,e,t){var o=t(2),r=t(3),a=t(17),i=t(132),s=t(206);o({target:"Object",stat:!0,forced:r((function(){i(1)})),sham:!s},{getPrototypeOf:function(n){return i(a(n))}})},function(n,e,t){var o=t(138);n.exports=function(n){if(o(n))throw TypeError("The method doesn't accept regular expressions");return n}},function(n,e,t){var o=t(5)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[o]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){"use strict";var o=t(74).forEach,r=t(47)("forEach");n.exports=r?[].forEach:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var o=t(3);n.exports=!o((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){var o=t(23),r=t(52).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return i&&"[object Window]"==a.call(n)?function(n){try{return r(n)}catch(n){return i.slice()}}(n):r(o(n))}},function(n,e,t){var o=t(5);e.f=o},function(n,e,t){var o=t(337),r=t(12),a=t(217),i=t(13).f;n.exports=function(n){var e=o.Symbol||(o.Symbol={});r(e,n)||i(e,n,{value:a.f(n)})}},function(n,e,t){t(2)({target:"Object",stat:!0,sham:!t(10)},{create:t(43)})},function(n,e,t){var o=t(3),r=t(6).RegExp;n.exports=o((function(){var n=r(".","s");return!(n.dotAll&&n.exec("\n")&&"s"===n.flags)}))},function(n,e,t){var o=t(3),r=t(6).RegExp;n.exports=o((function(){var n=r("(?<a>b)","g");return"b"!==n.exec("b").groups.a||"bc"!=="b".replace(n,"$<a>c")}))},function(n,e,t){"use strict";var o=t(2),r=t(95),a=t(23),i=t(47),s=[].join,l=r!=Object,c=i("join",",");o({target:"Array",proto:!0,forced:l||!c},{join:function(n){return s.call(a(this),void 0===n?",":n)}})},function(n,e){n.exports=function(n,e){for(var t=-1,o=e.length,r=n.length;++t<o;)n[r+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var o=t(98),r=t(358),a=t(359),i=t(360),s=t(361),l=t(362);function c(n){var e=this.__data__=new o(n);this.size=e.size}c.prototype.clear=r,c.prototype.delete=a,c.prototype.get=i,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var o=t(77),r=t(147);n.exports=function(n){if(!r(n))return!1;var e=o(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var o=t(379),r=t(55);n.exports=function n(e,t,a,i,s){return e===t||(null==e||null==t||!r(e)&&!r(t)?e!=e&&t!=t:o(e,t,a,i,n,s))}},function(n,e,t){var o=t(231),r=t(382),a=t(232);n.exports=function(n,e,t,i,s,l){var c=1&t,p=n.length,d=e.length;if(p!=d&&!(c&&d>p))return!1;var u=l.get(n),m=l.get(e);if(u&&m)return u==e&&m==n;var h=-1,f=!0,v=2&t?new o:void 0;for(l.set(n,e),l.set(e,n);++h<p;){var g=n[h],y=e[h];if(i)var b=c?i(y,g,h,e,n,l):i(g,y,h,n,e,l);if(void 0!==b){if(b)continue;f=!1;break}if(v){if(!r(e,(function(n,e){if(!a(v,e)&&(g===n||s(g,n,t,i,l)))return v.push(e)}))){f=!1;break}}else if(g!==y&&!s(g,y,t,i,l)){f=!1;break}}return l.delete(n),l.delete(e),f}},function(n,e,t){var o=t(148),r=t(380),a=t(381);function i(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new o;++e<t;)this.add(n[e])}i.prototype.add=i.prototype.push=r,i.prototype.has=a,n.exports=i},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var o=t(392),r=t(398),a=t(238);n.exports=function(n){return a(n)?o(n):r(n)}},function(n,e,t){(function(n){var o=t(31),r=t(394),a=e&&!e.nodeType&&e,i=a&&"object"==typeof n&&n&&!n.nodeType&&n,s=i&&i.exports===a?o.Buffer:void 0,l=(s?s.isBuffer:void 0)||r;n.exports=l}).call(this,t(235)(n))},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var o=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==o||"symbol"!=o&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var o=t(395),r=t(396),a=t(397),i=a&&a.isTypedArray,s=i?r(i):o;n.exports=s},function(n,e,t){var o=t(227),r=t(150);n.exports=function(n){return null!=n&&r(n.length)&&!o(n)}},function(n,e,t){var o=t(44)(t(31),"Set");n.exports=o},function(n,e,t){var o=t(147);n.exports=function(n){return n==n&&!o(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var o=t(243),r=t(102);n.exports=function(n,e){for(var t=0,a=(e=o(e,n)).length;null!=n&&t<a;)n=n[r(e[t++])];return t&&t==a?n:void 0}},function(n,e,t){var o=t(32),r=t(151),a=t(409),i=t(412);n.exports=function(n,e){return o(n)?n:r(n,e)?[n]:a(i(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var o=t(2),r=t(53),a=t(17),i=t(16),s=t(9),l=t(3),c=t(446),p=t(47),d=t(447),u=t(448),m=t(67),h=t(449),f=[],v=f.sort,g=l((function(){f.sort(void 0)})),y=l((function(){f.sort(null)})),b=p("sort"),x=!l((function(){if(m)return m<70;if(!(d&&d>3)){if(u)return!0;if(h)return h<603;var n,e,t,o,r="";for(n=65;n<76;n++){switch(e=String.fromCharCode(n),n){case 66:case 69:case 70:case 72:t=3;break;case 68:case 71:t=4;break;default:t=2}for(o=0;o<47;o++)f.push({k:e+o,v:t})}for(f.sort((function(n,e){return e.v-n.v})),o=0;o<f.length;o++)e=f[o].k.charAt(0),r.charAt(r.length-1)!==e&&(r+=e);return"DGBEFHACIJK"!==r}}));o({target:"Array",proto:!0,forced:g||!y||!b||!x},{sort:function(n){void 0!==n&&r(n);var e=a(this);if(x)return void 0===n?v.call(e):v.call(e,n);var t,o,l=[],p=i(e.length);for(o=0;o<p;o++)o in e&&l.push(e[o]);for(t=(l=c(l,function(n){return function(e,t){return void 0===t?-1:void 0===e?1:void 0!==n?+n(e,t)||0:s(e)>s(t)?1:-1}}(n))).length,o=0;o<t;)e[o]=l[o++];for(;o<p;)delete e[o++];return e}})},function(n,e,t){var o=t(8),r=t(135);n.exports=function(n,e,t){var a,i;return r&&"function"==typeof(a=e.constructor)&&a!==t&&o(i=a.prototype)&&i!==t.prototype&&r(n,i),n}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var o=t(156),r=Object.prototype.hasOwnProperty,a=Array.isArray,i=function(){for(var n=[],e=0;e<256;++e)n.push("%"+((e<16?"0":"")+e.toString(16)).toUpperCase());return n}(),s=function(n,e){for(var t=e&&e.plainObjects?Object.create(null):{},o=0;o<n.length;++o)void 0!==n[o]&&(t[o]=n[o]);return t};n.exports={arrayToObject:s,assign:function(n,e){return Object.keys(e).reduce((function(n,t){return n[t]=e[t],n}),n)},combine:function(n,e){return[].concat(n,e)},compact:function(n){for(var e=[{obj:{o:n},prop:"o"}],t=[],o=0;o<e.length;++o)for(var r=e[o],i=r.obj[r.prop],s=Object.keys(i),l=0;l<s.length;++l){var c=s[l],p=i[c];"object"==typeof p&&null!==p&&-1===t.indexOf(p)&&(e.push({obj:i,prop:c}),t.push(p))}return function(n){for(;n.length>1;){var e=n.pop(),t=e.obj[e.prop];if(a(t)){for(var o=[],r=0;r<t.length;++r)void 0!==t[r]&&o.push(t[r]);e.obj[e.prop]=o}}}(e),n},decode:function(n,e,t){var o=n.replace(/\+/g," ");if("iso-8859-1"===t)return o.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(o)}catch(n){return o}},encode:function(n,e,t,r,a){if(0===n.length)return n;var s=n;if("symbol"==typeof n?s=Symbol.prototype.toString.call(n):"string"!=typeof n&&(s=String(n)),"iso-8859-1"===t)return escape(s).replace(/%u[0-9a-f]{4}/gi,(function(n){return"%26%23"+parseInt(n.slice(2),16)+"%3B"}));for(var l="",c=0;c<s.length;++c){var p=s.charCodeAt(c);45===p||46===p||95===p||126===p||p>=48&&p<=57||p>=65&&p<=90||p>=97&&p<=122||a===o.RFC1738&&(40===p||41===p)?l+=s.charAt(c):p<128?l+=i[p]:p<2048?l+=i[192|p>>6]+i[128|63&p]:p<55296||p>=57344?l+=i[224|p>>12]+i[128|p>>6&63]+i[128|63&p]:(c+=1,p=65536+((1023&p)<<10|1023&s.charCodeAt(c)),l+=i[240|p>>18]+i[128|p>>12&63]+i[128|p>>6&63]+i[128|63&p])}return l},isBuffer:function(n){return!(!n||"object"!=typeof n)&&!!(n.constructor&&n.constructor.isBuffer&&n.constructor.isBuffer(n))},isRegExp:function(n){return"[object RegExp]"===Object.prototype.toString.call(n)},maybeMap:function(n,e){if(a(n)){for(var t=[],o=0;o<n.length;o+=1)t.push(e(n[o]));return t}return e(n)},merge:function n(e,t,o){if(!t)return e;if("object"!=typeof t){if(a(e))e.push(t);else{if(!e||"object"!=typeof e)return[e,t];(o&&(o.plainObjects||o.allowPrototypes)||!r.call(Object.prototype,t))&&(e[t]=!0)}return e}if(!e||"object"!=typeof e)return[e].concat(t);var i=e;return a(e)&&!a(t)&&(i=s(e,o)),a(e)&&a(t)?(t.forEach((function(t,a){if(r.call(e,a)){var i=e[a];i&&"object"==typeof i&&t&&"object"==typeof t?e[a]=n(i,t,o):e.push(t)}else e[a]=t})),e):Object.keys(t).reduce((function(e,a){var i=t[a];return r.call(e,a)?e[a]=n(e[a],i,o):e[a]=i,e}),i)}}},function(n,e){n.exports=function(n){return n instanceof Date}},function(n,e,t){var o=t(45),r=t(157);n.exports=function(n){var e=o(n),t=e.getFullYear(),a=new Date(0);a.setFullYear(t+1,0,4),a.setHours(0,0,0,0);var i=r(a),s=new Date(0);s.setFullYear(t,0,4),s.setHours(0,0,0,0);var l=r(s);return e.getTime()>=i.getTime()?t+1:e.getTime()>=l.getTime()?t:t-1}},function(n,e,t){"use strict";n.exports=function(n,e){return function(){for(var t=new Array(arguments.length),o=0;o<t.length;o++)t[o]=arguments[o];return n.apply(e,t)}}},function(n,e,t){"use strict";var o=t(19);function r(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}n.exports=function(n,e,t){if(!e)return n;var a;if(t)a=t(e);else if(o.isURLSearchParams(e))a=e.toString();else{var i=[];o.forEach(e,(function(n,e){null!=n&&(o.isArray(n)?e+="[]":n=[n],o.forEach(n,(function(n){o.isDate(n)?n=n.toISOString():o.isObject(n)&&(n=JSON.stringify(n)),i.push(r(e)+"="+r(n))})))})),a=i.join("&")}if(a){var s=n.indexOf("#");-1!==s&&(n=n.slice(0,s)),n+=(-1===n.indexOf("?")?"?":"&")+a}return n}},function(n,e,t){"use strict";n.exports=function(n){return!(!n||!n.__CANCEL__)}},function(n,e,t){"use strict";var o=t(19),r=t(495),a={"Content-Type":"application/x-www-form-urlencoded"};function i(n,e){!o.isUndefined(n)&&o.isUndefined(n["Content-Type"])&&(n["Content-Type"]=e)}var s,l={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(s=t(259)),s),transformRequest:[function(n,e){return r(e,"Accept"),r(e,"Content-Type"),o.isFormData(n)||o.isArrayBuffer(n)||o.isBuffer(n)||o.isStream(n)||o.isFile(n)||o.isBlob(n)?n:o.isArrayBufferView(n)?n.buffer:o.isURLSearchParams(n)?(i(e,"application/x-www-form-urlencoded;charset=utf-8"),n.toString()):o.isObject(n)?(i(e,"application/json;charset=utf-8"),JSON.stringify(n)):n}],transformResponse:[function(n){if("string"==typeof n)try{n=JSON.parse(n)}catch(n){}return n}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(n){return n>=200&&n<300}};l.headers={common:{Accept:"application/json, text/plain, */*"}},o.forEach(["delete","get","head"],(function(n){l.headers[n]={}})),o.forEach(["post","put","patch"],(function(n){l.headers[n]=o.merge(a)})),n.exports=l},function(n,e,t){"use strict";var o=t(19),r=t(496),a=t(498),i=t(256),s=t(499),l=t(502),c=t(503),p=t(260);n.exports=function(n){return new Promise((function(e,t){var d=n.data,u=n.headers;o.isFormData(d)&&delete u["Content-Type"];var m=new XMLHttpRequest;if(n.auth){var h=n.auth.username||"",f=n.auth.password?unescape(encodeURIComponent(n.auth.password)):"";u.Authorization="Basic "+btoa(h+":"+f)}var v=s(n.baseURL,n.url);if(m.open(n.method.toUpperCase(),i(v,n.params,n.paramsSerializer),!0),m.timeout=n.timeout,m.onreadystatechange=function(){if(m&&4===m.readyState&&(0!==m.status||m.responseURL&&0===m.responseURL.indexOf("file:"))){var o="getAllResponseHeaders"in m?l(m.getAllResponseHeaders()):null,a={data:n.responseType&&"text"!==n.responseType?m.response:m.responseText,status:m.status,statusText:m.statusText,headers:o,config:n,request:m};r(e,t,a),m=null}},m.onabort=function(){m&&(t(p("Request aborted",n,"ECONNABORTED",m)),m=null)},m.onerror=function(){t(p("Network Error",n,null,m)),m=null},m.ontimeout=function(){var e="timeout of "+n.timeout+"ms exceeded";n.timeoutErrorMessage&&(e=n.timeoutErrorMessage),t(p(e,n,"ECONNABORTED",m)),m=null},o.isStandardBrowserEnv()){var g=(n.withCredentials||c(v))&&n.xsrfCookieName?a.read(n.xsrfCookieName):void 0;g&&(u[n.xsrfHeaderName]=g)}if("setRequestHeader"in m&&o.forEach(u,(function(n,e){void 0===d&&"content-type"===e.toLowerCase()?delete u[e]:m.setRequestHeader(e,n)})),o.isUndefined(n.withCredentials)||(m.withCredentials=!!n.withCredentials),n.responseType)try{m.responseType=n.responseType}catch(e){if("json"!==n.responseType)throw e}"function"==typeof n.onDownloadProgress&&m.addEventListener("progress",n.onDownloadProgress),"function"==typeof n.onUploadProgress&&m.upload&&m.upload.addEventListener("progress",n.onUploadProgress),n.cancelToken&&n.cancelToken.promise.then((function(n){m&&(m.abort(),t(n),m=null)})),d||(d=null),m.send(d)}))}},function(n,e,t){"use strict";var o=t(497);n.exports=function(n,e,t,r,a){var i=new Error(n);return o(i,e,t,r,a)}},function(n,e,t){"use strict";var o=t(19);n.exports=function(n,e){e=e||{};var t={},r=["url","method","data"],a=["headers","auth","proxy","params"],i=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],s=["validateStatus"];function l(n,e){return o.isPlainObject(n)&&o.isPlainObject(e)?o.merge(n,e):o.isPlainObject(e)?o.merge({},e):o.isArray(e)?e.slice():e}function c(r){o.isUndefined(e[r])?o.isUndefined(n[r])||(t[r]=l(void 0,n[r])):t[r]=l(n[r],e[r])}o.forEach(r,(function(n){o.isUndefined(e[n])||(t[n]=l(void 0,e[n]))})),o.forEach(a,c),o.forEach(i,(function(r){o.isUndefined(e[r])?o.isUndefined(n[r])||(t[r]=l(void 0,n[r])):t[r]=l(void 0,e[r])})),o.forEach(s,(function(o){o in e?t[o]=l(n[o],e[o]):o in n&&(t[o]=l(void 0,n[o]))}));var p=r.concat(a).concat(i).concat(s),d=Object.keys(n).concat(Object.keys(e)).filter((function(n){return-1===p.indexOf(n)}));return o.forEach(d,c),t}},function(n,e,t){"use strict";function o(n){this.message=n}o.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},o.prototype.__CANCEL__=!0,n.exports=o},function(n,e,t){},function(n,e,t){n.exports=function(){"use strict";var n=6e4,e=36e5,t="millisecond",o="second",r="minute",a="hour",i="day",s="week",l="month",c="quarter",p="year",d="date",u="Invalid Date",m=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,h=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,f={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},v=function(n,e,t){var o=String(n);return!o||o.length>=e?n:""+Array(e+1-o.length).join(t)+n},g={s:v,z:function(n){var e=-n.utcOffset(),t=Math.abs(e),o=Math.floor(t/60),r=t%60;return(e<=0?"+":"-")+v(o,2,"0")+":"+v(r,2,"0")},m:function n(e,t){if(e.date()<t.date())return-n(t,e);var o=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(o,l),a=t-r<0,i=e.clone().add(o+(a?-1:1),l);return+(-(o+(t-r)/(a?r-i:i-r))||0)},a:function(n){return n<0?Math.ceil(n)||0:Math.floor(n)},p:function(n){return{M:l,y:p,w:s,d:i,D:d,h:a,m:r,s:o,ms:t,Q:c}[n]||String(n||"").toLowerCase().replace(/s$/,"")},u:function(n){return void 0===n}},y="en",b={};b[y]=f;var x=function(n){return n instanceof j},_=function(n,e,t){var o;if(!n)return y;if("string"==typeof n)b[n]&&(o=n),e&&(b[n]=e,o=n);else{var r=n.name;b[r]=n,o=r}return!t&&o&&(y=o),o||!t&&y},k=function(n,e){if(x(n))return n.clone();var t="object"==typeof e?e:{};return t.date=n,t.args=arguments,new j(t)},w=g;w.l=_,w.i=x,w.w=function(n,e){return k(n,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var j=function(){function f(n){this.$L=_(n.locale,null,!0),this.parse(n)}var v=f.prototype;return v.parse=function(n){this.$d=function(n){var e=n.date,t=n.utc;if(null===e)return new Date(NaN);if(w.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var o=e.match(m);if(o){var r=o[2]-1||0,a=(o[7]||"0").substring(0,3);return t?new Date(Date.UTC(o[1],r,o[3]||1,o[4]||0,o[5]||0,o[6]||0,a)):new Date(o[1],r,o[3]||1,o[4]||0,o[5]||0,o[6]||0,a)}}return new Date(e)}(n),this.$x=n.x||{},this.init()},v.init=function(){var n=this.$d;this.$y=n.getFullYear(),this.$M=n.getMonth(),this.$D=n.getDate(),this.$W=n.getDay(),this.$H=n.getHours(),this.$m=n.getMinutes(),this.$s=n.getSeconds(),this.$ms=n.getMilliseconds()},v.$utils=function(){return w},v.isValid=function(){return!(this.$d.toString()===u)},v.isSame=function(n,e){var t=k(n);return this.startOf(e)<=t&&t<=this.endOf(e)},v.isAfter=function(n,e){return k(n)<this.startOf(e)},v.isBefore=function(n,e){return this.endOf(e)<k(n)},v.$g=function(n,e,t){return w.u(n)?this[e]:this.set(t,n)},v.unix=function(){return Math.floor(this.valueOf()/1e3)},v.valueOf=function(){return this.$d.getTime()},v.startOf=function(n,e){var t=this,c=!!w.u(e)||e,u=w.p(n),m=function(n,e){var o=w.w(t.$u?Date.UTC(t.$y,e,n):new Date(t.$y,e,n),t);return c?o:o.endOf(i)},h=function(n,e){return w.w(t.toDate()[n].apply(t.toDate("s"),(c?[0,0,0,0]:[23,59,59,999]).slice(e)),t)},f=this.$W,v=this.$M,g=this.$D,y="set"+(this.$u?"UTC":"");switch(u){case p:return c?m(1,0):m(31,11);case l:return c?m(1,v):m(0,v+1);case s:var b=this.$locale().weekStart||0,x=(f<b?f+7:f)-b;return m(c?g-x:g+(6-x),v);case i:case d:return h(y+"Hours",0);case a:return h(y+"Minutes",1);case r:return h(y+"Seconds",2);case o:return h(y+"Milliseconds",3);default:return this.clone()}},v.endOf=function(n){return this.startOf(n,!1)},v.$set=function(n,e){var s,c=w.p(n),u="set"+(this.$u?"UTC":""),m=(s={},s[i]=u+"Date",s[d]=u+"Date",s[l]=u+"Month",s[p]=u+"FullYear",s[a]=u+"Hours",s[r]=u+"Minutes",s[o]=u+"Seconds",s[t]=u+"Milliseconds",s)[c],h=c===i?this.$D+(e-this.$W):e;if(c===l||c===p){var f=this.clone().set(d,1);f.$d[m](h),f.init(),this.$d=f.set(d,Math.min(this.$D,f.daysInMonth())).$d}else m&&this.$d[m](h);return this.init(),this},v.set=function(n,e){return this.clone().$set(n,e)},v.get=function(n){return this[w.p(n)]()},v.add=function(t,c){var d,u=this;t=Number(t);var m=w.p(c),h=function(n){var e=k(u);return w.w(e.date(e.date()+Math.round(n*t)),u)};if(m===l)return this.set(l,this.$M+t);if(m===p)return this.set(p,this.$y+t);if(m===i)return h(1);if(m===s)return h(7);var f=(d={},d[r]=n,d[a]=e,d[o]=1e3,d)[m]||1,v=this.$d.getTime()+t*f;return w.w(v,this)},v.subtract=function(n,e){return this.add(-1*n,e)},v.format=function(n){var e=this,t=this.$locale();if(!this.isValid())return t.invalidDate||u;var o=n||"YYYY-MM-DDTHH:mm:ssZ",r=w.z(this),a=this.$H,i=this.$m,s=this.$M,l=t.weekdays,c=t.months,p=function(n,t,r,a){return n&&(n[t]||n(e,o))||r[t].substr(0,a)},d=function(n){return w.s(a%12||12,n,"0")},m=t.meridiem||function(n,e,t){var o=n<12?"AM":"PM";return t?o.toLowerCase():o},f={YY:String(this.$y).slice(-2),YYYY:this.$y,M:s+1,MM:w.s(s+1,2,"0"),MMM:p(t.monthsShort,s,c,3),MMMM:p(c,s),D:this.$D,DD:w.s(this.$D,2,"0"),d:String(this.$W),dd:p(t.weekdaysMin,this.$W,l,2),ddd:p(t.weekdaysShort,this.$W,l,3),dddd:l[this.$W],H:String(a),HH:w.s(a,2,"0"),h:d(1),hh:d(2),a:m(a,i,!0),A:m(a,i,!1),m:String(i),mm:w.s(i,2,"0"),s:String(this.$s),ss:w.s(this.$s,2,"0"),SSS:w.s(this.$ms,3,"0"),Z:r};return o.replace(h,(function(n,e){return e||f[n]||r.replace(":","")}))},v.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},v.diff=function(t,d,u){var m,h=w.p(d),f=k(t),v=(f.utcOffset()-this.utcOffset())*n,g=this-f,y=w.m(this,f);return y=(m={},m[p]=y/12,m[l]=y,m[c]=y/3,m[s]=(g-v)/6048e5,m[i]=(g-v)/864e5,m[a]=g/e,m[r]=g/n,m[o]=g/1e3,m)[h]||g,u?y:w.a(y)},v.daysInMonth=function(){return this.endOf(l).$D},v.$locale=function(){return b[this.$L]},v.locale=function(n,e){if(!n)return this.$L;var t=this.clone(),o=_(n,e,!0);return o&&(t.$L=o),t},v.clone=function(){return w.w(this.$d,this)},v.toDate=function(){return new Date(this.valueOf())},v.toJSON=function(){return this.isValid()?this.toISOString():null},v.toISOString=function(){return this.$d.toISOString()},v.toString=function(){return this.$d.toUTCString()},f}(),E=j.prototype;return k.prototype=E,[["$ms",t],["$s",o],["$m",r],["$H",a],["$W",i],["$M",l],["$y",p],["$D",d]].forEach((function(n){E[n[1]]=function(e){return this.$g(e,n[0],n[1])}})),k.extend=function(n,e){return n.$i||(n(e,j,k),n.$i=!0),k},k.locale=_,k.isDayjs=x,k.unix=function(n){return k(1e3*n)},k.en=b[y],k.Ls=b,k.p={},k}()},function(n,e,t){},function(n,e,t){},function(n,e,t){t(2)({target:"Object",stat:!0},{setPrototypeOf:t(135)})},function(n,e,t){var o=t(2),r=t(41),a=t(53),i=t(14),s=t(8),l=t(43),c=t(517),p=t(3),d=r("Reflect","construct"),u=p((function(){function n(){}return!(d((function(){}),[],n)instanceof n)})),m=!p((function(){d((function(){}))})),h=u||m;o({target:"Reflect",stat:!0,forced:h,sham:h},{construct:function(n,e){a(n),i(e);var t=arguments.length<3?n:a(arguments[2]);if(m&&!u)return d(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var o=[null];return o.push.apply(o,e),new(c.apply(n,o))}var r=t.prototype,p=l(s(r)?r:Object.prototype),h=Function.apply.call(n,p,e);return s(h)?h:p}})},function(n,e,t){},function(n,e,t){},function(n,e,t){var o=t(345),r=t(350),a=t(421),i=t(429),s=t(438),l=t(439),c=a((function(n){var e=l(n);return s(e)&&(e=void 0),i(o(n,1,s,!0),r(e,2))}));n.exports=c},function(n,e){var t=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,a=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),p=Object.prototype.toString,d=Math.max,u=Math.min,m=function(){return c.Date.now()};function h(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function f(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==p.call(n)}(n))return NaN;if(h(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=h(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=r.test(n);return s||a.test(n)?i(n.slice(2),s?2:8):o.test(n)?NaN:+n}n.exports=function(n,e,t){var o,r,a,i,s,l,c=0,p=!1,v=!1,g=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function y(e){var t=o,a=r;return o=r=void 0,c=e,i=n.apply(a,t)}function b(n){return c=n,s=setTimeout(_,e),p?y(n):i}function x(n){var t=n-l;return void 0===l||t>=e||t<0||v&&n-c>=a}function _(){var n=m();if(x(n))return k(n);s=setTimeout(_,function(n){var t=e-(n-l);return v?u(t,a-(n-c)):t}(n))}function k(n){return s=void 0,g&&o?y(n):(o=r=void 0,i)}function w(){var n=m(),t=x(n);if(o=arguments,r=this,l=n,t){if(void 0===s)return b(l);if(v)return s=setTimeout(_,e),y(l)}return void 0===s&&(s=setTimeout(_,e)),i}return e=f(e)||0,h(t)&&(p=!!t.leading,a=(v="maxWait"in t)?d(f(t.maxWait)||0,e):a,g="trailing"in t?!!t.trailing:g),w.cancel=function(){void 0!==s&&clearTimeout(s),c=0,o=l=r=s=void 0},w.flush=function(){return void 0===s?i:k(m())},w}},function(n,e,t){!function(){"use strict";n.exports={polyfill:function(){var n=window,e=document;if(!("scrollBehavior"in e.documentElement.style)||!0===n.__forceSmoothScrollPolyfill__){var t,o=n.HTMLElement||n.Element,r={scroll:n.scroll||n.scrollTo,scrollBy:n.scrollBy,elementScroll:o.prototype.scroll||s,scrollIntoView:o.prototype.scrollIntoView},a=n.performance&&n.performance.now?n.performance.now.bind(n.performance):Date.now,i=(t=n.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(t)?1:0);n.scroll=n.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?h.call(n,e.body,void 0!==arguments[0].left?~~arguments[0].left:n.scrollX||n.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:n.scrollY||n.pageYOffset):r.scroll.call(n,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:n.scrollX||n.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:n.scrollY||n.pageYOffset))},n.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?r.scrollBy.call(n,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):h.call(n,e.body,~~arguments[0].left+(n.scrollX||n.pageXOffset),~~arguments[0].top+(n.scrollY||n.pageYOffset)))},o.prototype.scroll=o.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var n=arguments[0].left,e=arguments[0].top;h.call(this,this,void 0===n?this.scrollLeft:~~n,void 0===e?this.scrollTop:~~e)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},o.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},o.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var t=u(this),o=t.getBoundingClientRect(),a=this.getBoundingClientRect();t!==e.body?(h.call(this,t,t.scrollLeft+a.left-o.left,t.scrollTop+a.top-o.top),"fixed"!==n.getComputedStyle(t).position&&n.scrollBy({left:o.left,top:o.top,behavior:"smooth"})):n.scrollBy({left:a.left,top:a.top,behavior:"smooth"})}else r.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(n,e){this.scrollLeft=n,this.scrollTop=e}function l(n){if(null===n||"object"!=typeof n||void 0===n.behavior||"auto"===n.behavior||"instant"===n.behavior)return!0;if("object"==typeof n&&"smooth"===n.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+n.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(n,e){return"Y"===e?n.clientHeight+i<n.scrollHeight:"X"===e?n.clientWidth+i<n.scrollWidth:void 0}function p(e,t){var o=n.getComputedStyle(e,null)["overflow"+t];return"auto"===o||"scroll"===o}function d(n){var e=c(n,"Y")&&p(n,"Y"),t=c(n,"X")&&p(n,"X");return e||t}function u(n){for(;n!==e.body&&!1===d(n);)n=n.parentNode||n.host;return n}function m(e){var t,o,r,i,s=(a()-e.startTime)/468;i=s=s>1?1:s,t=.5*(1-Math.cos(Math.PI*i)),o=e.startX+(e.x-e.startX)*t,r=e.startY+(e.y-e.startY)*t,e.method.call(e.scrollable,o,r),o===e.x&&r===e.y||n.requestAnimationFrame(m.bind(n,e))}function h(t,o,i){var l,c,p,d,u=a();t===e.body?(l=n,c=n.scrollX||n.pageXOffset,p=n.scrollY||n.pageYOffset,d=r.scroll):(l=t,c=t.scrollLeft,p=t.scrollTop,d=s),m({scrollable:l,method:d,startTime:u,startX:c,startY:p,x:o,y:i})}}}}()},function(n,e,t){
/*!
 * clipboard.js v2.0.8
 * https://clipboardjs.com/
 *
 * Licensed MIT © Zeno Rocha
 */
var o;o=function(){return function(){var n={134:function(n,e,t){"use strict";t.d(e,{default:function(){return b}});var o=t(279),r=t.n(o),a=t(370),i=t.n(a),s=t(817),l=t.n(s);function c(n){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}var d=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.resolveOptions(e),this.initSelection()}var e,t,o;return e=n,(t=[{key:"resolveOptions",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action=n.action,this.container=n.container,this.emitter=n.emitter,this.target=n.target,this.text=n.text,this.trigger=n.trigger,this.selectedText=""}},{key:"initSelection",value:function(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"createFakeElement",value:function(){var n="rtl"===document.documentElement.getAttribute("dir");this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[n?"right":"left"]="-9999px";var e=window.pageYOffset||document.documentElement.scrollTop;return this.fakeElem.style.top="".concat(e,"px"),this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.fakeElem}},{key:"selectFake",value:function(){var n=this,e=this.createFakeElement();this.fakeHandlerCallback=function(){return n.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.container.appendChild(e),this.selectedText=l()(e),this.copyText(),this.removeFake()}},{key:"removeFake",value:function(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function(){this.selectedText=l()(this.target),this.copyText()}},{key:"copyText",value:function(){var n;try{n=document.execCommand(this.action)}catch(e){n=!1}this.handleResult(n)}},{key:"handleResult",value:function(n){this.emitter.emit(n?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function(){this.trigger&&this.trigger.focus(),document.activeElement.blur(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function(){this.removeFake()}},{key:"action",set:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"copy";if(this._action=n,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function(){return this._action}},{key:"target",set:function(n){if(void 0!==n){if(!n||"object"!==c(n)||1!==n.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&n.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(n.hasAttribute("readonly")||n.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=n}},get:function(){return this._target}}])&&p(e.prototype,t),o&&p(e,o),n}();function u(n){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function m(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function h(n,e){return(h=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}function f(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,o=g(n);if(e){var r=g(this).constructor;t=Reflect.construct(o,arguments,r)}else t=o.apply(this,arguments);return v(this,t)}}function v(n,e){return!e||"object"!==u(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function g(n){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function y(n,e){var t="data-clipboard-".concat(n);if(e.hasAttribute(t))return e.getAttribute(t)}var b=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&h(n,e)}(a,n);var e,t,o,r=f(a);function a(n,e){var t;return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(t=r.call(this)).resolveOptions(e),t.listenClick(n),t}return e=a,o=[{key:"isSupported",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["copy","cut"],e="string"==typeof n?[n]:n,t=!!document.queryCommandSupported;return e.forEach((function(n){t=t&&!!document.queryCommandSupported(n)})),t}}],(t=[{key:"resolveOptions",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action="function"==typeof n.action?n.action:this.defaultAction,this.target="function"==typeof n.target?n.target:this.defaultTarget,this.text="function"==typeof n.text?n.text:this.defaultText,this.container="object"===u(n.container)?n.container:document.body}},{key:"listenClick",value:function(n){var e=this;this.listener=i()(n,"click",(function(n){return e.onClick(n)}))}},{key:"onClick",value:function(n){var e=n.delegateTarget||n.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new d({action:this.action(e),target:this.target(e),text:this.text(e),container:this.container,trigger:e,emitter:this})}},{key:"defaultAction",value:function(n){return y("action",n)}},{key:"defaultTarget",value:function(n){var e=y("target",n);if(e)return document.querySelector(e)}},{key:"defaultText",value:function(n){return y("text",n)}},{key:"destroy",value:function(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}])&&m(e.prototype,t),o&&m(e,o),a}(r())},828:function(n){if("undefined"!=typeof Element&&!Element.prototype.matches){var e=Element.prototype;e.matches=e.matchesSelector||e.mozMatchesSelector||e.msMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector}n.exports=function(n,e){for(;n&&9!==n.nodeType;){if("function"==typeof n.matches&&n.matches(e))return n;n=n.parentNode}}},438:function(n,e,t){var o=t(828);function r(n,e,t,o,r){var i=a.apply(this,arguments);return n.addEventListener(t,i,r),{destroy:function(){n.removeEventListener(t,i,r)}}}function a(n,e,t,r){return function(t){t.delegateTarget=o(t.target,e),t.delegateTarget&&r.call(n,t)}}n.exports=function(n,e,t,o,a){return"function"==typeof n.addEventListener?r.apply(null,arguments):"function"==typeof t?r.bind(null,document).apply(null,arguments):("string"==typeof n&&(n=document.querySelectorAll(n)),Array.prototype.map.call(n,(function(n){return r(n,e,t,o,a)})))}},879:function(n,e){e.node=function(n){return void 0!==n&&n instanceof HTMLElement&&1===n.nodeType},e.nodeList=function(n){var t=Object.prototype.toString.call(n);return void 0!==n&&("[object NodeList]"===t||"[object HTMLCollection]"===t)&&"length"in n&&(0===n.length||e.node(n[0]))},e.string=function(n){return"string"==typeof n||n instanceof String},e.fn=function(n){return"[object Function]"===Object.prototype.toString.call(n)}},370:function(n,e,t){var o=t(879),r=t(438);n.exports=function(n,e,t){if(!n&&!e&&!t)throw new Error("Missing required arguments");if(!o.string(e))throw new TypeError("Second argument must be a String");if(!o.fn(t))throw new TypeError("Third argument must be a Function");if(o.node(n))return function(n,e,t){return n.addEventListener(e,t),{destroy:function(){n.removeEventListener(e,t)}}}(n,e,t);if(o.nodeList(n))return function(n,e,t){return Array.prototype.forEach.call(n,(function(n){n.addEventListener(e,t)})),{destroy:function(){Array.prototype.forEach.call(n,(function(n){n.removeEventListener(e,t)}))}}}(n,e,t);if(o.string(n))return function(n,e,t){return r(document.body,n,e,t)}(n,e,t);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}},817:function(n){n.exports=function(n){var e;if("SELECT"===n.nodeName)n.focus(),e=n.value;else if("INPUT"===n.nodeName||"TEXTAREA"===n.nodeName){var t=n.hasAttribute("readonly");t||n.setAttribute("readonly",""),n.select(),n.setSelectionRange(0,n.value.length),t||n.removeAttribute("readonly"),e=n.value}else{n.hasAttribute("contenteditable")&&n.focus();var o=window.getSelection(),r=document.createRange();r.selectNodeContents(n),o.removeAllRanges(),o.addRange(r),e=o.toString()}return e}},279:function(n){function e(){}e.prototype={on:function(n,e,t){var o=this.e||(this.e={});return(o[n]||(o[n]=[])).push({fn:e,ctx:t}),this},once:function(n,e,t){var o=this;function r(){o.off(n,r),e.apply(t,arguments)}return r._=e,this.on(n,r,t)},emit:function(n){for(var e=[].slice.call(arguments,1),t=((this.e||(this.e={}))[n]||[]).slice(),o=0,r=t.length;o<r;o++)t[o].fn.apply(t[o].ctx,e);return this},off:function(n,e){var t=this.e||(this.e={}),o=t[n],r=[];if(o&&e)for(var a=0,i=o.length;a<i;a++)o[a].fn!==e&&o[a].fn._!==e&&r.push(o[a]);return r.length?t[n]=r:delete t[n],this}},n.exports=e,n.exports.TinyEmitter=e}},e={};function t(o){if(e[o])return e[o].exports;var r=e[o]={exports:{}};return n[o](r,r.exports,t),r.exports}return t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,{a:e}),e},t.d=function(n,e){for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t(134)}().default},n.exports=o()},function(n,e,t){var o=t(477),r=t(482),a=t(254),i=t(45),s=t(485),l=t(486);var c={M:function(n){return n.getMonth()+1},MM:function(n){return u(n.getMonth()+1,2)},Q:function(n){return Math.ceil((n.getMonth()+1)/3)},D:function(n){return n.getDate()},DD:function(n){return u(n.getDate(),2)},DDD:function(n){return o(n)},DDDD:function(n){return u(o(n),3)},d:function(n){return n.getDay()},E:function(n){return n.getDay()||7},W:function(n){return r(n)},WW:function(n){return u(r(n),2)},YY:function(n){return u(n.getFullYear(),4).substr(2)},YYYY:function(n){return u(n.getFullYear(),4)},GG:function(n){return String(a(n)).substr(2)},GGGG:function(n){return a(n)},H:function(n){return n.getHours()},HH:function(n){return u(n.getHours(),2)},h:function(n){var e=n.getHours();return 0===e?12:e>12?e%12:e},hh:function(n){return u(c.h(n),2)},m:function(n){return n.getMinutes()},mm:function(n){return u(n.getMinutes(),2)},s:function(n){return n.getSeconds()},ss:function(n){return u(n.getSeconds(),2)},S:function(n){return Math.floor(n.getMilliseconds()/100)},SS:function(n){return u(Math.floor(n.getMilliseconds()/10),2)},SSS:function(n){return u(n.getMilliseconds(),3)},Z:function(n){return d(n.getTimezoneOffset(),":")},ZZ:function(n){return d(n.getTimezoneOffset())},X:function(n){return Math.floor(n.getTime()/1e3)},x:function(n){return n.getTime()}};function p(n){return n.match(/\[[\s\S]/)?n.replace(/^\[|]$/g,""):n.replace(/\\/g,"")}function d(n,e){e=e||"";var t=n>0?"-":"+",o=Math.abs(n),r=o%60;return t+u(Math.floor(o/60),2)+e+u(r,2)}function u(n,e){for(var t=Math.abs(n).toString();t.length<e;)t="0"+t;return t}n.exports=function(n,e,t){var o=e?String(e):"YYYY-MM-DDTHH:mm:ss.SSSZ",r=(t||{}).locale,a=l.format.formatters,d=l.format.formattingTokensRegExp;r&&r.format&&r.format.formatters&&(a=r.format.formatters,r.format.formattingTokensRegExp&&(d=r.format.formattingTokensRegExp));var u=i(n);return s(u)?function(n,e,t){var o,r,a=n.match(t),i=a.length;for(o=0;o<i;o++)r=e[a[o]]||c[a[o]],a[o]=r||p(a[o]);return function(n){for(var e="",t=0;t<i;t++)a[t]instanceof Function?e+=a[t](n,c):e+=a[t];return e}}(o,a,d)(u):"Invalid Date"}},function(n,e,t){function o(){var n;try{n=e.storage.debug}catch(n){}return!n&&"undefined"!=typeof process&&"env"in process&&(n=process.env.DEBUG),n}(e=n.exports=t(510)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},e.formatArgs=function(n){var t=this.useColors;if(n[0]=(t?"%c":"")+this.namespace+(t?" %c":" ")+n[0]+(t?"%c ":" ")+"+"+e.humanize(this.diff),!t)return;var o="color: "+this.color;n.splice(1,0,o,"color: inherit");var r=0,a=0;n[0].replace(/%[a-zA-Z%]/g,(function(n){"%%"!==n&&(r++,"%c"===n&&(a=r))})),n.splice(a,0,o)},e.save=function(n){try{null==n?e.storage.removeItem("debug"):e.storage.debug=n}catch(n){}},e.load=o,e.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},e.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(n){}}(),e.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],e.formatters.j=function(n){try{return JSON.stringify(n)}catch(n){return"[UnexpectedJSONParseError]: "+n.message}},e.enable(o())},function(n,e,t){function o(e){return"function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?(n.exports=o=function(n){return typeof n},n.exports.default=n.exports,n.exports.__esModule=!0):(n.exports=o=function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},n.exports.default=n.exports,n.exports.__esModule=!0),o(e)}t(54),t(75),t(15),t(96),t(21),t(24),n.exports=o,n.exports.default=n.exports,n.exports.__esModule=!0},function(n,e,t){var o=t(2),r=t(462);o({global:!0,forced:parseInt!=r},{parseInt:r})},function(n,e,t){"use strict";var o=t(142),r=t(14),a=t(16),i=t(9),s=t(22),l=t(143),c=t(144);o("match",(function(n,e,t){return[function(e){var t=s(this),o=null==e?void 0:e[n];return void 0!==o?o.call(e,t):new RegExp(e)[n](i(t))},function(n){var o=r(this),s=i(n),p=t(e,o,s);if(p.done)return p.value;if(!o.global)return c(o,s);var d=o.unicode;o.lastIndex=0;for(var u,m=[],h=0;null!==(u=c(o,s));){var f=i(u[0]);m[h]=f,""===f&&(o.lastIndex=l(s,a(o.lastIndex),d)),h++}return 0===h?null:m}]}))},function(n,e,t){"use strict";var o=t(2),r=t(129).includes,a=t(136);o({target:"Array",proto:!0},{includes:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}}),a("includes")},function(n,e,t){"use strict";var o=t(2),r=t(212),a=t(22),i=t(9);o({target:"String",proto:!0,forced:!t(213)("includes")},{includes:function(n){return!!~i(a(this)).indexOf(i(r(n)),arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var o=t(2),r=t(3),a=t(17),i=t(127);o({target:"Date",proto:!0,forced:r((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}))},{toJSON:function(n){var e=a(this),t=i(e,"number");return"number"!=typeof t||isFinite(t)?e.toISOString():null}})},function(n,e,t){"use strict";t(2)({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return URL.prototype.toString.call(this)}})},function(n,e,t){var o=t(2),r=t(443);o({target:"Date",proto:!0,forced:Date.prototype.toISOString!==r},{toISOString:r})},function(n,e,t){var o=t(10),r=t(6),a=t(131),i=t(247),s=t(26),l=t(13).f,c=t(52).f,p=t(138),d=t(9),u=t(140),m=t(141),h=t(30),f=t(3),v=t(12),g=t(51).enforce,y=t(452),b=t(5),x=t(220),_=t(221),k=b("match"),w=r.RegExp,j=w.prototype,E=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,S=/a/g,A=/a/g,z=new w(S)!==S,T=m.UNSUPPORTED_Y,O=o&&(!z||T||x||_||f((function(){return A[k]=!1,w(S)!=S||w(A)==A||"/a/i"!=w(S,"i")})));if(a("RegExp",O)){for(var C=function(n,e){var t,o,r,a,l,c,m=this instanceof C,h=p(n),f=void 0===e,y=[],b=n;if(!m&&h&&f&&n.constructor===C)return n;if((h||n instanceof C)&&(n=n.source,f&&(e="flags"in b?b.flags:u.call(b))),n=void 0===n?"":d(n),e=void 0===e?"":d(e),b=n,x&&"dotAll"in S&&(o=!!e&&e.indexOf("s")>-1)&&(e=e.replace(/s/g,"")),t=e,T&&"sticky"in S&&(r=!!e&&e.indexOf("y")>-1)&&(e=e.replace(/y/g,"")),_&&(n=(a=function(n){for(var e,t=n.length,o=0,r="",a=[],i={},s=!1,l=!1,c=0,p="";o<=t;o++){if("\\"===(e=n.charAt(o)))e+=n.charAt(++o);else if("]"===e)s=!1;else if(!s)switch(!0){case"["===e:s=!0;break;case"("===e:E.test(n.slice(o+1))&&(o+=2,l=!0),r+=e,c++;continue;case">"===e&&l:if(""===p||v(i,p))throw new SyntaxError("Invalid capture group name");i[p]=!0,a.push([p,c]),l=!1,p="";continue}l?p+=e:r+=e}return[r,a]}(n))[0],y=a[1]),l=i(w(n,e),m?this:j,C),(o||r||y.length)&&(c=g(l),o&&(c.dotAll=!0,c.raw=C(function(n){for(var e,t=n.length,o=0,r="",a=!1;o<=t;o++)"\\"!==(e=n.charAt(o))?a||"."!==e?("["===e?a=!0:"]"===e&&(a=!1),r+=e):r+="[\\s\\S]":r+=e+n.charAt(++o);return r}(n),t)),r&&(c.sticky=!0),y.length&&(c.groups=y)),n!==b)try{s(l,"source",""===b?"(?:)":b)}catch(n){}return l},I=function(n){n in C||l(C,n,{configurable:!0,get:function(){return w[n]},set:function(e){w[n]=e}})},$=c(w),P=0;$.length>P;)I($[P++]);j.constructor=C,C.prototype=j,h(r,"RegExp",C)}y("RegExp")},function(n,e,t){"use strict";var o=t(30),r=t(14),a=t(9),i=t(3),s=t(140),l=RegExp.prototype,c=l.toString,p=i((function(){return"/a/b"!=c.call({source:"a",flags:"b"})})),d="toString"!=c.name;(p||d)&&o(RegExp.prototype,"toString",(function(){var n=r(this),e=a(n.source),t=n.flags;return"/"+e+"/"+a(void 0===t&&n instanceof RegExp&&!("flags"in l)?s.call(n):t)}),{unsafe:!0})},function(n,e,t){t(2)({target:"Date",stat:!0},{now:function(){return(new Date).getTime()}})},function(n,e,t){n.exports=t(520)},function(n,e,t){"use strict";var o=t(87),r=t(290),a=t(63),i=t(117),s=t(297),l=i.set,c=i.getterFor("Array Iterator");n.exports=s(Array,"Array",(function(n,e){l(this,{type:"Array Iterator",target:o(n),index:0,kind:e})}),(function(){var n=c(this),e=n.target,t=n.kind,o=n.index++;return!e||o>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:o,done:!1}:"values"==t?{value:e[o],done:!1}:{value:[o,e[o]],done:!1}}),"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},function(n,e,t){var o=t(18),r=t(171),a=t(50),i=o("unscopables"),s=Array.prototype;null==s[i]&&a.f(s,i,{configurable:!0,value:r(null)}),n.exports=function(n){s[i][n]=!0}},function(n,e,t){var o=t(40),r=t(50),a=t(29),i=t(175);n.exports=o?Object.defineProperties:function(n,e){a(n);for(var t,o=i(e),s=o.length,l=0;s>l;)r.f(n,t=o[l++],e[t]);return n}},function(n,e,t){var o=t(34),r=t(174),a=t(293),i=t(18)("toPrimitive");n.exports=function(n,e){if(!o(n)||r(n))return n;var t,s=n[i];if(void 0!==s){if(void 0===e&&(e="default"),t=s.call(n,e),!o(t)||r(t))return t;throw TypeError("Can't convert object to primitive value")}return void 0===e&&(e="number"),a(n,e)}},function(n,e,t){var o=t(34);n.exports=function(n,e){var t,r;if("string"===e&&"function"==typeof(t=n.toString)&&!o(r=t.call(n)))return r;if("function"==typeof(t=n.valueOf)&&!o(r=t.call(n)))return r;if("string"!==e&&"function"==typeof(t=n.toString)&&!o(r=t.call(n)))return r;throw TypeError("Can't convert object to primitive value")}},function(n,e,t){var o=t(87),r=t(177),a=t(295),i=function(n){return function(e,t,i){var s,l=o(e),c=r(l.length),p=a(i,c);if(n&&t!=t){for(;c>p;)if((s=l[p++])!=s)return!0}else for(;c>p;p++)if((n||p in l)&&l[p]===t)return n||p||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e,t){var o=t(178),r=Math.max,a=Math.min;n.exports=function(n,e){var t=o(n);return t<0?r(t+e,0):a(t,e)}},function(n,e,t){var o=t(7),r=t(118),a=o.WeakMap;n.exports="function"==typeof a&&/native code/.test(r(a))},function(n,e,t){"use strict";var o=t(89),r=t(301),a=t(184),i=t(185),s=t(121),l=t(64),c=t(65),p=t(18),d=t(62),u=t(63),m=t(183),h=m.IteratorPrototype,f=m.BUGGY_SAFARI_ITERATORS,v=p("iterator"),g=function(){return this};n.exports=function(n,e,t,p,m,y,b){r(t,e,p);var x,_,k,w=function(n){if(n===m&&z)return z;if(!f&&n in S)return S[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},j=e+" Iterator",E=!1,S=n.prototype,A=S[v]||S["@@iterator"]||m&&S[m],z=!f&&A||w(m),T="Array"==e&&S.entries||A;if(T&&(x=a(T.call(new n)),h!==Object.prototype&&x.next&&(d||a(x)===h||(i?i(x,h):"function"!=typeof x[v]&&l(x,v,g)),s(x,j,!0,!0),d&&(u[j]=g))),"values"==m&&A&&"values"!==A.name&&(E=!0,z=function(){return A.call(this)}),d&&!b||S[v]===z||l(S,v,z),u[e]=z,m)if(_={values:w("values"),keys:y?z:w("keys"),entries:w("entries")},b)for(k in _)(f||E||!(k in S))&&c(S,k,_[k]);else o({target:e,proto:!0,forced:f||E},_);return _}},function(n,e,t){var o=t(28),r=t(299),a=t(120),i=t(50);n.exports=function(n,e){for(var t=r(e),s=i.f,l=a.f,c=0;c<t.length;c++){var p=t[c];o(n,p)||s(n,p,l(e,p))}}},function(n,e,t){var o=t(39),r=t(300),a=t(181),i=t(29);n.exports=o("Reflect","ownKeys")||function(n){var e=r.f(i(n)),t=a.f;return t?e.concat(t(n)):e}},function(n,e,t){var o=t(176),r=t(115).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return o(n,r)}},function(n,e,t){"use strict";var o=t(183).IteratorPrototype,r=t(171),a=t(119),i=t(121),s=t(63),l=function(){return this};n.exports=function(n,e,t){var c=e+" Iterator";return n.prototype=r(o,{next:a(1,t)}),i(n,c,!1,!0),s[c]=l,n}},function(n,e,t){var o=t(25);n.exports=!o((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var o=t(34);n.exports=function(n){if(!o(n)&&null!==n)throw TypeError("Can't set "+String(n)+" as a prototype");return n}},function(n,e,t){"use strict";var o,r,a,i,s=t(89),l=t(62),c=t(7),p=t(39),d=t(186),u=t(65),m=t(305),h=t(185),f=t(121),v=t(306),g=t(34),y=t(90),b=t(307),x=t(118),_=t(308),k=t(314),w=t(188),j=t(189).set,E=t(315),S=t(191),A=t(318),z=t(192),T=t(319),O=t(117),C=t(182),I=t(18),$=t(320),P=t(122),M=t(169),q=I("species"),R="Promise",D=O.get,L=O.set,B=O.getterFor(R),N=d&&d.prototype,H=d,F=N,U=c.TypeError,V=c.document,W=c.process,K=z.f,G=K,J=!!(V&&V.createEvent&&c.dispatchEvent),Y="function"==typeof PromiseRejectionEvent,X=!1,Q=C(R,(function(){var n=x(H),e=n!==String(H);if(!e&&66===M)return!0;if(l&&!F.finally)return!0;if(M>=51&&/native code/.test(n))return!1;var t=new H((function(n){n(1)})),o=function(n){n((function(){}),(function(){}))};return(t.constructor={})[q]=o,!(X=t.then((function(){}))instanceof o)||!e&&$&&!Y})),Z=Q||!k((function(n){H.all(n).catch((function(){}))})),nn=function(n){var e;return!(!g(n)||"function"!=typeof(e=n.then))&&e},en=function(n,e){if(!n.notified){n.notified=!0;var t=n.reactions;E((function(){for(var o=n.value,r=1==n.state,a=0;t.length>a;){var i,s,l,c=t[a++],p=r?c.ok:c.fail,d=c.resolve,u=c.reject,m=c.domain;try{p?(r||(2===n.rejection&&an(n),n.rejection=1),!0===p?i=o:(m&&m.enter(),i=p(o),m&&(m.exit(),l=!0)),i===c.promise?u(U("Promise-chain cycle")):(s=nn(i))?s.call(i,d,u):d(i)):u(o)}catch(n){m&&!l&&m.exit(),u(n)}}n.reactions=[],n.notified=!1,e&&!n.rejection&&on(n)}))}},tn=function(n,e,t){var o,r;J?((o=V.createEvent("Event")).promise=e,o.reason=t,o.initEvent(n,!1,!0),c.dispatchEvent(o)):o={promise:e,reason:t},!Y&&(r=c["on"+n])?r(o):"unhandledrejection"===n&&A("Unhandled promise rejection",t)},on=function(n){j.call(c,(function(){var e,t=n.facade,o=n.value;if(rn(n)&&(e=T((function(){P?W.emit("unhandledRejection",o,t):tn("unhandledrejection",t,o)})),n.rejection=P||rn(n)?2:1,e.error))throw e.value}))},rn=function(n){return 1!==n.rejection&&!n.parent},an=function(n){j.call(c,(function(){var e=n.facade;P?W.emit("rejectionHandled",e):tn("rejectionhandled",e,n.value)}))},sn=function(n,e,t){return function(o){n(e,o,t)}},ln=function(n,e,t){n.done||(n.done=!0,t&&(n=t),n.value=e,n.state=2,en(n,!0))},cn=function(n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(n.facade===e)throw U("Promise can't be resolved itself");var o=nn(e);o?E((function(){var t={done:!1};try{o.call(e,sn(cn,t,n),sn(ln,t,n))}catch(e){ln(t,e,n)}})):(n.value=e,n.state=1,en(n,!1))}catch(e){ln({done:!1},e,n)}}};if(Q&&(F=(H=function(n){b(this,H,R),y(n),o.call(this);var e=D(this);try{n(sn(cn,e),sn(ln,e))}catch(n){ln(e,n)}}).prototype,(o=function(n){L(this,{type:R,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=m(F,{then:function(n,e){var t=B(this),o=K(w(this,H));return o.ok="function"!=typeof n||n,o.fail="function"==typeof e&&e,o.domain=P?W.domain:void 0,t.parent=!0,t.reactions.push(o),0!=t.state&&en(t,!1),o.promise},catch:function(n){return this.then(void 0,n)}}),r=function(){var n=new o,e=D(n);this.promise=n,this.resolve=sn(cn,e),this.reject=sn(ln,e)},z.f=K=function(n){return n===H||n===a?new r(n):G(n)},!l&&"function"==typeof d&&N!==Object.prototype)){i=N.then,X||(u(N,"then",(function(n,e){var t=this;return new H((function(n,e){i.call(t,n,e)})).then(n,e)}),{unsafe:!0}),u(N,"catch",F.catch,{unsafe:!0}));try{delete N.constructor}catch(n){}h&&h(N,F)}s({global:!0,wrap:!0,forced:Q},{Promise:H}),f(H,R,!1,!0),v(R),a=p(R),s({target:R,stat:!0,forced:Q},{reject:function(n){var e=K(this);return e.reject.call(void 0,n),e.promise}}),s({target:R,stat:!0,forced:l||Q},{resolve:function(n){return S(l&&this===a?H:this,n)}}),s({target:R,stat:!0,forced:Z},{all:function(n){var e=this,t=K(e),o=t.resolve,r=t.reject,a=T((function(){var t=y(e.resolve),a=[],i=0,s=1;_(n,(function(n){var l=i++,c=!1;a.push(void 0),s++,t.call(e,n).then((function(n){c||(c=!0,a[l]=n,--s||o(a))}),r)})),--s||o(a)}));return a.error&&r(a.value),t.promise},race:function(n){var e=this,t=K(e),o=t.reject,r=T((function(){var r=y(e.resolve);_(n,(function(n){r.call(e,n).then(t.resolve,o)}))}));return r.error&&o(r.value),t.promise}})},function(n,e,t){var o=t(65);n.exports=function(n,e,t){for(var r in e)o(n,r,e[r],t);return n}},function(n,e,t){"use strict";var o=t(39),r=t(50),a=t(18),i=t(40),s=a("species");n.exports=function(n){var e=o(n),t=r.f;i&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e){n.exports=function(n,e,t){if(!(n instanceof e))throw TypeError("Incorrect "+(t?t+" ":"")+"invocation");return n}},function(n,e,t){var o=t(29),r=t(309),a=t(177),i=t(187),s=t(310),l=t(313),c=function(n,e){this.stopped=n,this.result=e};n.exports=function(n,e,t){var p,d,u,m,h,f,v,g=t&&t.that,y=!(!t||!t.AS_ENTRIES),b=!(!t||!t.IS_ITERATOR),x=!(!t||!t.INTERRUPTED),_=i(e,g,1+y+x),k=function(n){return p&&l(p),new c(!0,n)},w=function(n){return y?(o(n),x?_(n[0],n[1],k):_(n[0],n[1])):x?_(n,k):_(n)};if(b)p=n;else{if("function"!=typeof(d=s(n)))throw TypeError("Target is not iterable");if(r(d)){for(u=0,m=a(n.length);m>u;u++)if((h=w(n[u]))&&h instanceof c)return h;return new c(!1)}p=d.call(n)}for(f=p.next;!(v=f.call(p)).done;){try{h=w(v.value)}catch(n){throw l(p),n}if("object"==typeof h&&h&&h instanceof c)return h}return new c(!1)}},function(n,e,t){var o=t(18),r=t(63),a=o("iterator"),i=Array.prototype;n.exports=function(n){return void 0!==n&&(r.Array===n||i[a]===n)}},function(n,e,t){var o=t(311),r=t(63),a=t(18)("iterator");n.exports=function(n){if(null!=n)return n[a]||n["@@iterator"]||r[o(n)]}},function(n,e,t){var o=t(312),r=t(109),a=t(18)("toStringTag"),i="Arguments"==r(function(){return arguments}());n.exports=o?r:function(n){var e,t,o;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=Object(n),a))?t:i?r(e):"Object"==(o=r(e))&&"function"==typeof e.callee?"Arguments":o}},function(n,e,t){var o={};o[t(18)("toStringTag")]="z",n.exports="[object z]"===String(o)},function(n,e,t){var o=t(29);n.exports=function(n){var e=n.return;if(void 0!==e)return o(e.call(n)).value}},function(n,e,t){var o=t(18)("iterator"),r=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){r=!0}};i[o]=function(){return this},Array.from(i,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!r)return!1;var t=!1;try{var a={};a[o]=function(){return{next:function(){return{done:t=!0}}}},n(a)}catch(n){}return t}},function(n,e,t){var o,r,a,i,s,l,c,p,d=t(7),u=t(120).f,m=t(189).set,h=t(190),f=t(316),v=t(317),g=t(122),y=d.MutationObserver||d.WebKitMutationObserver,b=d.document,x=d.process,_=d.Promise,k=u(d,"queueMicrotask"),w=k&&k.value;w||(o=function(){var n,e;for(g&&(n=x.domain)&&n.exit();r;){e=r.fn,r=r.next;try{e()}catch(n){throw r?i():a=void 0,n}}a=void 0,n&&n.enter()},h||g||v||!y||!b?!f&&_&&_.resolve?((c=_.resolve(void 0)).constructor=_,p=c.then,i=function(){p.call(c,o)}):i=g?function(){x.nextTick(o)}:function(){m.call(d,o)}:(s=!0,l=b.createTextNode(""),new y(o).observe(l,{characterData:!0}),i=function(){l.data=s=!s})),n.exports=w||function(n){var e={fn:n,next:void 0};a&&(a.next=e),r||(r=e,i()),a=e}},function(n,e,t){var o=t(88),r=t(7);n.exports=/ipad|iphone|ipod/i.test(o)&&void 0!==r.Pebble},function(n,e,t){var o=t(88);n.exports=/web0s(?!.*chrome)/i.test(o)},function(n,e,t){var o=t(7);n.exports=function(n,e){var t=o.console;t&&t.error&&(1===arguments.length?t.error(n):t.error(n,e))}},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e){n.exports="object"==typeof window},function(n,e,t){var o=t(89),r=t(322);o({target:"Object",stat:!0,forced:Object.assign!==r},{assign:r})},function(n,e,t){"use strict";var o=t(40),r=t(25),a=t(175),i=t(181),s=t(180),l=t(112),c=t(164),p=Object.assign,d=Object.defineProperty;n.exports=!p||r((function(){if(o&&1!==p({b:1},p(d({},"a",{enumerable:!0,get:function(){d(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=p({},n)[t]||"abcdefghijklmnopqrst"!=a(p({},e)).join("")}))?function(n,e){for(var t=l(n),r=arguments.length,p=1,d=i.f,u=s.f;r>p;)for(var m,h=c(arguments[p++]),f=d?a(h).concat(d(h)):a(h),v=f.length,g=0;v>g;)m=f[g++],o&&!u.call(h,m)||(t[m]=h[m]);return t}:p},function(n,e,t){"use strict";var o=t(89),r=t(62),a=t(186),i=t(25),s=t(39),l=t(188),c=t(191),p=t(65);if(o({target:"Promise",proto:!0,real:!0,forced:!!a&&i((function(){a.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=l(this,s("Promise")),t="function"==typeof n;return this.then(t?function(t){return c(e,n()).then((function(){return t}))}:n,t?function(t){return c(e,n()).then((function(){throw t}))}:n)}}),!r&&"function"==typeof a){var d=s("Promise").prototype.finally;a.prototype.finally!==d&&p(a.prototype,"finally",d,{unsafe:!0})}},function(n,e,t){var o=t(8);n.exports=function(n,e){var t,r;if("string"===e&&"function"==typeof(t=n.toString)&&!o(r=t.call(n)))return r;if("function"==typeof(t=n.valueOf)&&!o(r=t.call(n)))return r;if("string"!==e&&"function"==typeof(t=n.toString)&&!o(r=t.call(n)))return r;throw TypeError("Can't convert object to primitive value")}},function(n,e,t){var o=t(6),r=t(196),a=o.WeakMap;n.exports="function"==typeof a&&/native code/.test(r(a))},function(n,e,t){"use strict";var o=t(123),r=t(197);n.exports=o?{}.toString:function(){return"[object "+r(this)+"]"}},function(n,e,t){"use strict";var o=t(205).IteratorPrototype,r=t(43),a=t(70),i=t(134),s=t(73),l=function(){return this};n.exports=function(n,e,t){var c=e+" Iterator";return n.prototype=r(o,{next:a(1,t)}),i(n,c,!1,!0),s[c]=l,n}},function(n,e,t){var o=t(41);n.exports=o("document","documentElement")},function(n,e,t){var o=t(8);n.exports=function(n){if(!o(n)&&null!==n)throw TypeError("Can't set "+String(n)+" as a prototype");return n}},function(n,e,t){"use strict";var o=t(23),r=t(136),a=t(73),i=t(51),s=t(204),l=i.set,c=i.getterFor("Array Iterator");n.exports=s(Array,"Array",(function(n,e){l(this,{type:"Array Iterator",target:o(n),index:0,kind:e})}),(function(){var n=c(this),e=n.target,t=n.kind,o=n.index++;return!e||o>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:o,done:!1}:"values"==t?{value:e[o],done:!1}:{value:[o,e[o]],done:!1}}),"values"),a.Arguments=a.Array,r("keys"),r("values"),r("entries")},function(n,e,t){var o=t(8),r=t(72),a=t(5)("species");n.exports=function(n){var e;return r(n)&&("function"!=typeof(e=n.constructor)||e!==Array&&!r(e.prototype)?o(e)&&null===(e=e[a])&&(e=void 0):e=void 0),void 0===e?Array:e}},function(n,e,t){var o=t(53),r=t(17),a=t(95),i=t(16),s=function(n){return function(e,t,s,l){o(t);var c=r(e),p=a(c),d=i(c.length),u=n?d-1:0,m=n?-1:1;if(s<2)for(;;){if(u in p){l=p[u],u+=m;break}if(u+=m,n?u<0:d<=u)throw TypeError("Reduce of empty array with no initial value")}for(;n?u>=0:d>u;u+=m)u in p&&(l=t(l,p[u],u,c));return l}};n.exports={left:s(!1),right:s(!0)}},function(n,e,t){var o=t(35),r=t(6);n.exports="process"==o(r.process)},function(n,e,t){"use strict";var o,r=t(2),a=t(42).f,i=t(16),s=t(9),l=t(212),c=t(22),p=t(213),d=t(66),u="".startsWith,m=Math.min,h=p("startsWith");r({target:"String",proto:!0,forced:!!(d||h||(o=a(String.prototype,"startsWith"),!o||o.writable))&&!h},{startsWith:function(n){var e=s(c(this));l(n);var t=i(m(arguments.length>1?arguments[1]:void 0,e.length)),o=s(n);return u?u.call(e,o,t):e.slice(t,t+o.length)===o}})},function(n,e,t){var o=t(2),r=t(215),a=t(3),i=t(8),s=t(336).onFreeze,l=Object.freeze;o({target:"Object",stat:!0,forced:a((function(){l(1)})),sham:!r},{freeze:function(n){return l&&i(n)?l(s(n)):n}})},function(n,e,t){var o=t(2),r=t(71),a=t(8),i=t(12),s=t(13).f,l=t(52),c=t(216),p=t(92),d=t(215),u=!1,m=p("meta"),h=0,f=Object.isExtensible||function(){return!0},v=function(n){s(n,m,{value:{objectID:"O"+h++,weakData:{}}})},g=n.exports={enable:function(){g.enable=function(){},u=!0;var n=l.f,e=[].splice,t={};t[m]=1,n(t).length&&(l.f=function(t){for(var o=n(t),r=0,a=o.length;r<a;r++)if(o[r]===m){e.call(o,r,1);break}return o},o({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:c.f}))},fastKey:function(n,e){if(!a(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!i(n,m)){if(!f(n))return"F";if(!e)return"E";v(n)}return n[m].objectID},getWeakData:function(n,e){if(!i(n,m)){if(!f(n))return!0;if(!e)return!1;v(n)}return n[m].weakData},onFreeze:function(n){return d&&u&&f(n)&&!i(n,m)&&v(n),n}};r[m]=!0},function(n,e,t){var o=t(6);n.exports=o},function(n,e,t){"use strict";var o=t(209),r=t(17),a=t(339),i=t(341),s=t(16),l=t(84),c=t(342);n.exports=function(n){var e,t,p,d,u,m,h=r(n),f="function"==typeof this?this:Array,v=arguments.length,g=v>1?arguments[1]:void 0,y=void 0!==g,b=c(h),x=0;if(y&&(g=o(g,v>2?arguments[2]:void 0,2)),null==b||f==Array&&i(b))for(t=new f(e=s(h.length));e>x;x++)m=y?g(h[x],x):h[x],l(t,x,m);else for(u=(d=b.call(h)).next,t=new f;!(p=u.call(d)).done;x++)m=y?a(d,g,[p.value,x],!0):p.value,l(t,x,m);return t.length=x,t}},function(n,e,t){var o=t(14),r=t(340);n.exports=function(n,e,t,a){try{return a?e(o(t)[0],t[1]):e(t)}catch(e){throw r(n),e}}},function(n,e,t){var o=t(14);n.exports=function(n){var e=n.return;if(void 0!==e)return o(e.call(n)).value}},function(n,e,t){var o=t(5),r=t(73),a=o("iterator"),i=Array.prototype;n.exports=function(n){return void 0!==n&&(r.Array===n||i[a]===n)}},function(n,e,t){var o=t(197),r=t(73),a=t(5)("iterator");n.exports=function(n){if(null!=n)return n[a]||n["@@iterator"]||r[o(n)]}},function(n,e,t){var o=t(5)("iterator"),r=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){r=!0}};i[o]=function(){return this},Array.from(i,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!r)return!1;var t=!1;try{var a={};a[o]=function(){return{next:function(){return{done:t=!0}}}},n(a)}catch(n){}return t}},function(n,e,t){var o=t(17),r=Math.floor,a="".replace,i=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,s=/\$([$&'`]|\d{1,2})/g;n.exports=function(n,e,t,l,c,p){var d=t+n.length,u=l.length,m=s;return void 0!==c&&(c=o(c),m=i),a.call(p,m,(function(o,a){var i;switch(a.charAt(0)){case"$":return"$";case"&":return n;case"`":return e.slice(0,t);case"'":return e.slice(d);case"<":i=c[a.slice(1,-1)];break;default:var s=+a;if(0===s)return o;if(s>u){var p=r(s/10);return 0===p?o:p<=u?void 0===l[p-1]?a.charAt(1):l[p-1]+a.charAt(1):o}i=l[s-1]}return void 0===i?"":i}))}},function(n,e,t){var o=t(223),r=t(346);n.exports=function n(e,t,a,i,s){var l=-1,c=e.length;for(a||(a=r),s||(s=[]);++l<c;){var p=e[l];t>0&&a(p)?t>1?n(p,t-1,a,i,s):o(s,p):i||(s[s.length]=p)}return s}},function(n,e,t){var o=t(76),r=t(145),a=t(32),i=o?o.isConcatSpreadable:void 0;n.exports=function(n){return a(n)||r(n)||!!(i&&n&&n[i])}},function(n,e,t){var o=t(77),r=t(55);n.exports=function(n){return r(n)&&"[object Arguments]"==o(n)}},function(n,e,t){var o=t(76),r=Object.prototype,a=r.hasOwnProperty,i=r.toString,s=o?o.toStringTag:void 0;n.exports=function(n){var e=a.call(n,s),t=n[s];try{n[s]=void 0;var o=!0}catch(n){}var r=i.call(n);return o&&(e?n[s]=t:delete n[s]),r}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var o=t(351),r=t(407),a=t(153),i=t(32),s=t(418);n.exports=function(n){return"function"==typeof n?n:null==n?a:"object"==typeof n?i(n)?r(n[0],n[1]):o(n):s(n)}},function(n,e,t){var o=t(352),r=t(406),a=t(241);n.exports=function(n){var e=r(n);return 1==e.length&&e[0][2]?a(e[0][0],e[0][1]):function(t){return t===n||o(t,n,e)}}},function(n,e,t){var o=t(225),r=t(229);n.exports=function(n,e,t,a){var i=t.length,s=i,l=!a;if(null==n)return!s;for(n=Object(n);i--;){var c=t[i];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++i<s;){var p=(c=t[i])[0],d=n[p],u=c[1];if(l&&c[2]){if(void 0===d&&!(p in n))return!1}else{var m=new o;if(a)var h=a(d,u,p,n,e,m);if(!(void 0===h?r(u,d,3,a,m):h))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var o=t(99),r=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=o(e,n);return!(t<0)&&(t==e.length-1?e.pop():r.call(e,t,1),--this.size,!0)}},function(n,e,t){var o=t(99);n.exports=function(n){var e=this.__data__,t=o(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var o=t(99);n.exports=function(n){return o(this.__data__,n)>-1}},function(n,e,t){var o=t(99);n.exports=function(n,e){var t=this.__data__,r=o(t,n);return r<0?(++this.size,t.push([n,e])):t[r][1]=e,this}},function(n,e,t){var o=t(98);n.exports=function(){this.__data__=new o,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var o=t(98),r=t(146),a=t(148);n.exports=function(n,e){var t=this.__data__;if(t instanceof o){var i=t.__data__;if(!r||i.length<199)return i.push([n,e]),this.size=++t.size,this;t=this.__data__=new a(i)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var o=t(227),r=t(364),a=t(147),i=t(228),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,p=l.toString,d=c.hasOwnProperty,u=RegExp("^"+p.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!a(n)||r(n))&&(o(n)?u:s).test(i(n))}},function(n,e,t){var o,r=t(365),a=(o=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+o:"";n.exports=function(n){return!!a&&a in n}},function(n,e,t){var o=t(31)["__core-js_shared__"];n.exports=o},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var o=t(368),r=t(98),a=t(146);n.exports=function(){this.size=0,this.__data__={hash:new o,map:new(a||r),string:new o}}},function(n,e,t){var o=t(369),r=t(370),a=t(371),i=t(372),s=t(373);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=r,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var o=t(100);n.exports=function(){this.__data__=o?o(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var o=t(100),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(o){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(e,n)?e[n]:void 0}},function(n,e,t){var o=t(100),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return o?void 0!==e[n]:r.call(e,n)}},function(n,e,t){var o=t(100);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=o&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var o=t(101);n.exports=function(n){var e=o(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var o=t(101);n.exports=function(n){return o(this,n).get(n)}},function(n,e,t){var o=t(101);n.exports=function(n){return o(this,n).has(n)}},function(n,e,t){var o=t(101);n.exports=function(n,e){var t=o(this,n),r=t.size;return t.set(n,e),this.size+=t.size==r?0:1,this}},function(n,e,t){var o=t(225),r=t(230),a=t(383),i=t(386),s=t(402),l=t(32),c=t(234),p=t(237),d="[object Object]",u=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,m,h,f){var v=l(n),g=l(e),y=v?"[object Array]":s(n),b=g?"[object Array]":s(e),x=(y="[object Arguments]"==y?d:y)==d,_=(b="[object Arguments]"==b?d:b)==d,k=y==b;if(k&&c(n)){if(!c(e))return!1;v=!0,x=!1}if(k&&!x)return f||(f=new o),v||p(n)?r(n,e,t,m,h,f):a(n,e,y,t,m,h,f);if(!(1&t)){var w=x&&u.call(n,"__wrapped__"),j=_&&u.call(e,"__wrapped__");if(w||j){var E=w?n.value():n,S=j?e.value():e;return f||(f=new o),h(E,S,t,m,f)}}return!!k&&(f||(f=new o),i(n,e,t,m,h,f))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,o=null==n?0:n.length;++t<o;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var o=t(76),r=t(384),a=t(226),i=t(230),s=t(385),l=t(149),c=o?o.prototype:void 0,p=c?c.valueOf:void 0;n.exports=function(n,e,t,o,c,d,u){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!d(new r(n),new r(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=s;case"[object Set]":var h=1&o;if(m||(m=l),n.size!=e.size&&!h)return!1;var f=u.get(n);if(f)return f==e;o|=2,u.set(n,e);var v=i(m(n),m(e),o,c,d,u);return u.delete(n),v;case"[object Symbol]":if(p)return p.call(n)==p.call(e)}return!1}},function(n,e,t){var o=t(31).Uint8Array;n.exports=o},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,o){t[++e]=[o,n]})),t}},function(n,e,t){var o=t(387),r=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,a,i,s){var l=1&t,c=o(n),p=c.length;if(p!=o(e).length&&!l)return!1;for(var d=p;d--;){var u=c[d];if(!(l?u in e:r.call(e,u)))return!1}var m=s.get(n),h=s.get(e);if(m&&h)return m==e&&h==n;var f=!0;s.set(n,e),s.set(e,n);for(var v=l;++d<p;){var g=n[u=c[d]],y=e[u];if(a)var b=l?a(y,g,u,e,n,s):a(g,y,u,n,e,s);if(!(void 0===b?g===y||i(g,y,t,a,s):b)){f=!1;break}v||(v="constructor"==u)}if(f&&!v){var x=n.constructor,_=e.constructor;x==_||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof _&&_ instanceof _||(f=!1)}return s.delete(n),s.delete(e),f}},function(n,e,t){var o=t(388),r=t(389),a=t(233);n.exports=function(n){return o(n,a,r)}},function(n,e,t){var o=t(223),r=t(32);n.exports=function(n,e,t){var a=e(n);return r(n)?a:o(a,t(n))}},function(n,e,t){var o=t(390),r=t(391),a=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(n){return null==n?[]:(n=Object(n),o(i(n),(function(e){return a.call(n,e)})))}:r;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,o=null==n?0:n.length,r=0,a=[];++t<o;){var i=n[t];e(i,t,n)&&(a[r++]=i)}return a}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var o=t(393),r=t(145),a=t(32),i=t(234),s=t(236),l=t(237),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=a(n),p=!t&&r(n),d=!t&&!p&&i(n),u=!t&&!p&&!d&&l(n),m=t||p||d||u,h=m?o(n.length,String):[],f=h.length;for(var v in n)!e&&!c.call(n,v)||m&&("length"==v||d&&("offset"==v||"parent"==v)||u&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||s(v,f))||h.push(v);return h}},function(n,e){n.exports=function(n,e){for(var t=-1,o=Array(n);++t<n;)o[t]=e(t);return o}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var o=t(77),r=t(150),a=t(55),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,n.exports=function(n){return a(n)&&r(n.length)&&!!i[o(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var o=t(224),r=e&&!e.nodeType&&e,a=r&&"object"==typeof n&&n&&!n.nodeType&&n,i=a&&a.exports===r&&o.process,s=function(){try{var n=a&&a.require&&a.require("util").types;return n||i&&i.binding&&i.binding("util")}catch(n){}}();n.exports=s}).call(this,t(235)(n))},function(n,e,t){var o=t(399),r=t(400),a=Object.prototype.hasOwnProperty;n.exports=function(n){if(!o(n))return r(n);var e=[];for(var t in Object(n))a.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var o=t(401)(Object.keys,Object);n.exports=o},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var o=t(403),r=t(146),a=t(404),i=t(239),s=t(405),l=t(77),c=t(228),p=c(o),d=c(r),u=c(a),m=c(i),h=c(s),f=l;(o&&"[object DataView]"!=f(new o(new ArrayBuffer(1)))||r&&"[object Map]"!=f(new r)||a&&"[object Promise]"!=f(a.resolve())||i&&"[object Set]"!=f(new i)||s&&"[object WeakMap]"!=f(new s))&&(f=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,o=t?c(t):"";if(o)switch(o){case p:return"[object DataView]";case d:return"[object Map]";case u:return"[object Promise]";case m:return"[object Set]";case h:return"[object WeakMap]"}return e}),n.exports=f},function(n,e,t){var o=t(44)(t(31),"DataView");n.exports=o},function(n,e,t){var o=t(44)(t(31),"Promise");n.exports=o},function(n,e,t){var o=t(44)(t(31),"WeakMap");n.exports=o},function(n,e,t){var o=t(240),r=t(233);n.exports=function(n){for(var e=r(n),t=e.length;t--;){var a=e[t],i=n[a];e[t]=[a,i,o(i)]}return e}},function(n,e,t){var o=t(229),r=t(408),a=t(415),i=t(151),s=t(240),l=t(241),c=t(102);n.exports=function(n,e){return i(n)&&s(e)?l(c(n),e):function(t){var i=r(t,n);return void 0===i&&i===e?a(t,n):o(e,i,3)}}},function(n,e,t){var o=t(242);n.exports=function(n,e,t){var r=null==n?void 0:o(n,e);return void 0===r?t:r}},function(n,e,t){var o=t(410),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,i=o((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(r,(function(n,t,o,r){e.push(o?r.replace(a,"$1"):t||n)})),e}));n.exports=i},function(n,e,t){var o=t(411);n.exports=function(n){var e=o(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var o=t(148);function r(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var o=arguments,r=e?e.apply(this,o):o[0],a=t.cache;if(a.has(r))return a.get(r);var i=n.apply(this,o);return t.cache=a.set(r,i)||a,i};return t.cache=new(r.Cache||o),t}r.Cache=o,n.exports=r},function(n,e,t){var o=t(413);n.exports=function(n){return null==n?"":o(n)}},function(n,e,t){var o=t(76),r=t(414),a=t(32),i=t(152),s=o?o.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(a(e))return r(e,n)+"";if(i(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,o=null==n?0:n.length,r=Array(o);++t<o;)r[t]=e(n[t],t,n);return r}},function(n,e,t){var o=t(416),r=t(417);n.exports=function(n,e){return null!=n&&r(n,e,o)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var o=t(243),r=t(145),a=t(32),i=t(236),s=t(150),l=t(102);n.exports=function(n,e,t){for(var c=-1,p=(e=o(e,n)).length,d=!1;++c<p;){var u=l(e[c]);if(!(d=null!=n&&t(n,u)))break;n=n[u]}return d||++c!=p?d:!!(p=null==n?0:n.length)&&s(p)&&i(u,p)&&(a(n)||r(n))}},function(n,e,t){var o=t(419),r=t(420),a=t(151),i=t(102);n.exports=function(n){return a(n)?o(i(n)):r(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var o=t(242);n.exports=function(n){return function(e){return o(e,n)}}},function(n,e,t){var o=t(153),r=t(422),a=t(424);n.exports=function(n,e){return a(r(n,e,o),n+"")}},function(n,e,t){var o=t(423),r=Math.max;n.exports=function(n,e,t){return e=r(void 0===e?n.length-1:e,0),function(){for(var a=arguments,i=-1,s=r(a.length-e,0),l=Array(s);++i<s;)l[i]=a[e+i];i=-1;for(var c=Array(e+1);++i<e;)c[i]=a[i];return c[e]=t(l),o(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var o=t(425),r=t(428)(o);n.exports=r},function(n,e,t){var o=t(426),r=t(427),a=t(153),i=r?function(n,e){return r(n,"toString",{configurable:!0,enumerable:!1,value:o(e),writable:!0})}:a;n.exports=i},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var o=t(44),r=function(){try{var n=o(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=r},function(n,e){var t=Date.now;n.exports=function(n){var e=0,o=0;return function(){var r=t(),a=16-(r-o);if(o=r,a>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var o=t(231),r=t(430),a=t(435),i=t(232),s=t(436),l=t(149);n.exports=function(n,e,t){var c=-1,p=r,d=n.length,u=!0,m=[],h=m;if(t)u=!1,p=a;else if(d>=200){var f=e?null:s(n);if(f)return l(f);u=!1,p=i,h=new o}else h=e?[]:m;n:for(;++c<d;){var v=n[c],g=e?e(v):v;if(v=t||0!==v?v:0,u&&g==g){for(var y=h.length;y--;)if(h[y]===g)continue n;e&&h.push(g),m.push(v)}else p(h,g,t)||(h!==m&&h.push(g),m.push(v))}return m}},function(n,e,t){var o=t(431);n.exports=function(n,e){return!!(null==n?0:n.length)&&o(n,e,0)>-1}},function(n,e,t){var o=t(432),r=t(433),a=t(434);n.exports=function(n,e,t){return e==e?a(n,e,t):o(n,r,t)}},function(n,e){n.exports=function(n,e,t,o){for(var r=n.length,a=t+(o?1:-1);o?a--:++a<r;)if(e(n[a],a,n))return a;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var o=t-1,r=n.length;++o<r;)if(n[o]===e)return o;return-1}},function(n,e){n.exports=function(n,e,t){for(var o=-1,r=null==n?0:n.length;++o<r;)if(t(e,n[o]))return!0;return!1}},function(n,e,t){var o=t(239),r=t(437),a=t(149),i=o&&1/a(new o([,-0]))[1]==1/0?function(n){return new o(n)}:r;n.exports=i},function(n,e){n.exports=function(){}},function(n,e,t){var o=t(238),r=t(55);n.exports=function(n){return r(n)&&o(n)}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){},function(n,e,t){"use strict";t(244)},function(n,e,t){"use strict";t(245)},function(n,e,t){"use strict";var o=t(3),r=t(444).start,a=Math.abs,i=Date.prototype,s=i.getTime,l=i.toISOString;n.exports=o((function(){return"0385-07-25T07:06:39.999Z"!=l.call(new Date(-50000000000001))}))||!o((function(){l.call(new Date(NaN))}))?function(){if(!isFinite(s.call(this)))throw RangeError("Invalid time value");var n=this.getUTCFullYear(),e=this.getUTCMilliseconds(),t=n<0?"-":n>9999?"+":"";return t+r(a(n),t?6:4,0)+"-"+r(this.getUTCMonth()+1,2,0)+"-"+r(this.getUTCDate(),2,0)+"T"+r(this.getUTCHours(),2,0)+":"+r(this.getUTCMinutes(),2,0)+":"+r(this.getUTCSeconds(),2,0)+"."+r(e,3,0)+"Z"}:l},function(n,e,t){var o=t(16),r=t(9),a=t(445),i=t(22),s=Math.ceil,l=function(n){return function(e,t,l){var c,p,d=r(i(e)),u=d.length,m=void 0===l?" ":r(l),h=o(t);return h<=u||""==m?d:(c=h-u,(p=a.call(m,s(c/m.length))).length>c&&(p=p.slice(0,c)),n?d+p:p+d)}};n.exports={start:l(!1),end:l(!0)}},function(n,e,t){"use strict";var o=t(60),r=t(9),a=t(22);n.exports=function(n){var e=r(a(this)),t="",i=o(n);if(i<0||i==1/0)throw RangeError("Wrong number of repetitions");for(;i>0;(i>>>=1)&&(e+=e))1&i&&(t+=e);return t}},function(n,e){var t=Math.floor,o=function(n,e){var i=n.length,s=t(i/2);return i<8?r(n,e):a(o(n.slice(0,s),e),o(n.slice(s),e),e)},r=function(n,e){for(var t,o,r=n.length,a=1;a<r;){for(o=a,t=n[a];o&&e(n[o-1],t)>0;)n[o]=n[--o];o!==a++&&(n[o]=t)}return n},a=function(n,e,t){for(var o=n.length,r=e.length,a=0,i=0,s=[];a<o||i<r;)a<o&&i<r?s.push(t(n[a],e[i])<=0?n[a++]:e[i++]):s.push(a<o?n[a++]:e[i++]);return s};n.exports=o},function(n,e,t){var o=t(68).match(/firefox\/(\d+)/i);n.exports=!!o&&+o[1]},function(n,e,t){var o=t(68);n.exports=/MSIE|Trident/.test(o)},function(n,e,t){var o=t(68).match(/AppleWebKit\/(\d+)\./);n.exports=!!o&&+o[1]},function(n,e,t){"use strict";var o=t(142),r=t(138),a=t(14),i=t(22),s=t(451),l=t(143),c=t(16),p=t(9),d=t(144),u=t(97),m=t(141),h=t(3),f=m.UNSUPPORTED_Y,v=[].push,g=Math.min;o("split",(function(n,e,t){var o;return o="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(n,t){var o=p(i(this)),a=void 0===t?4294967295:t>>>0;if(0===a)return[];if(void 0===n)return[o];if(!r(n))return e.call(o,n,a);for(var s,l,c,d=[],m=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),h=0,f=new RegExp(n.source,m+"g");(s=u.call(f,o))&&!((l=f.lastIndex)>h&&(d.push(o.slice(h,s.index)),s.length>1&&s.index<o.length&&v.apply(d,s.slice(1)),c=s[0].length,h=l,d.length>=a));)f.lastIndex===s.index&&f.lastIndex++;return h===o.length?!c&&f.test("")||d.push(""):d.push(o.slice(h)),d.length>a?d.slice(0,a):d}:"0".split(void 0,0).length?function(n,t){return void 0===n&&0===t?[]:e.call(this,n,t)}:e,[function(e,t){var r=i(this),a=null==e?void 0:e[n];return void 0!==a?a.call(e,r,t):o.call(p(r),e,t)},function(n,r){var i=a(this),u=p(n),m=t(o,i,u,r,o!==e);if(m.done)return m.value;var h=s(i,RegExp),v=i.unicode,y=(i.ignoreCase?"i":"")+(i.multiline?"m":"")+(i.unicode?"u":"")+(f?"g":"y"),b=new h(f?"^(?:"+i.source+")":i,y),x=void 0===r?4294967295:r>>>0;if(0===x)return[];if(0===u.length)return null===d(b,u)?[u]:[];for(var _=0,k=0,w=[];k<u.length;){b.lastIndex=f?0:k;var j,E=d(b,f?u.slice(k):u);if(null===E||(j=g(c(b.lastIndex+(f?k:0)),u.length))===_)k=l(u,k,v);else{if(w.push(u.slice(_,k)),w.length===x)return w;for(var S=1;S<=E.length-1;S++)if(w.push(E[S]),w.length===x)return w;k=_=j}}return w.push(u.slice(_)),w}]}),!!h((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var t="ab".split(n);return 2!==t.length||"a"!==t[0]||"b"!==t[1]})),f)},function(n,e,t){var o=t(14),r=t(53),a=t(5)("species");n.exports=function(n,e){var t,i=o(n).constructor;return void 0===i||null==(t=o(i)[a])?e:r(t)}},function(n,e,t){"use strict";var o=t(41),r=t(13),a=t(5),i=t(10),s=a("species");n.exports=function(n){var e=o(n),t=r.f;i&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e,t){"use strict";var o=t(2),r=t(3),a=t(454),i=1..toPrecision;o({target:"Number",proto:!0,forced:r((function(){return"1"!==i.call(1,void 0)}))||!r((function(){i.call({})}))},{toPrecision:function(n){return void 0===n?i.call(a(this)):i.call(a(this),n)}})},function(n,e,t){var o=t(35);n.exports=function(n){if("number"!=typeof n&&"Number"!=o(n))throw TypeError("Incorrect invocation");return+n}},function(n,e,t){var o=t(2),r=t(456),a=t(136);o({target:"Array",proto:!0},{fill:r}),a("fill")},function(n,e,t){"use strict";var o=t(17),r=t(107),a=t(16);n.exports=function(n){for(var e=o(this),t=a(e.length),i=arguments.length,s=r(i>1?arguments[1]:void 0,t),l=i>2?arguments[2]:void 0,c=void 0===l?t:r(l,t);c>s;)e[s++]=n;return e}},function(n,e,t){var o=t(2),r=t(3),a=t(23),i=t(42).f,s=t(10),l=r((function(){i(1)}));o({target:"Object",stat:!0,forced:!s||l,sham:!s},{getOwnPropertyDescriptor:function(n,e){return i(a(n),e)}})},function(n,e,t){var o=t(2),r=t(10);o({target:"Object",stat:!0,forced:!r,sham:!r},{defineProperties:t(207)})},function(n,e,t){},function(n,e,t){"use strict";t(248)},function(n,e,t){"use strict";t(249)},function(n,e,t){var o=t(6),r=t(9),a=t(162).trim,i=t(163),s=o.parseInt,l=/^[+-]?0[Xx]/,c=8!==s(i+"08")||22!==s(i+"0x16");n.exports=c?function(n,e){var t=a(r(n));return s(t,e>>>0||(l.test(t)?16:10))}:s},function(n,e,t){"use strict";t(250)},function(n,e,t){
/*!
 * Valine v1.4.14
 * (c) 2017-2020 xCss
 * Released under the GPL-2.0 License.
 * Last Update: 2020/4/26 下午8:39:08
 */
n.exports=function(n){function e(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return n[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var t={};return e.m=n,e.c=t,e.i=function(n){return n},e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:o})},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},e.p="",e(e.s=63)}([function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{default:n}}e.__esModule=!0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},a=o(t(38)),i=o(t(28)),s=o(t(27)),l=o(t(42)),c=document,p=navigator,d=/[&<>"'`\\]/g,u=RegExp(d.source),m=/&(?:amp|lt|gt|quot|#39|#x60|#x5c);/g,h=RegExp(m.source),f={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#x60;","\\":"&#x5c;"},v={};for(var g in f)v[f[g]]=g;var y=null;Array.prototype.forEach||(Array.prototype.forEach=function(n,e){var t,o;if(null==this)throw new TypeError(" this is null or not defined");var r=Object(this),a=r.length>>>0;if("function"!=typeof n)throw new TypeError(n+" is not a function");for(arguments.length>1&&(t=e),o=0;o<a;){var i;o in r&&(i=r[o],n.call(t,i,o,r)),o++}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),(0,a.default)(i.default.fn,{prepend:function(n){return n instanceof HTMLElement||(n=n[0]),this.forEach((function(e){e.insertAdjacentElement("afterBegin",n)})),this},append:function(n){return n instanceof HTMLElement||(n=n[0]),this.forEach((function(e){e.insertAdjacentElement("beforeEnd",n)})),this},remove:function(){return this.forEach((function(n){try{n.parentNode.removeChild(n)}catch(n){}})),this},find:function(n){return(0,i.default)(n,this)},show:function(){return this.forEach((function(n){n.style.display="block"})),this},hide:function(){return this.forEach((function(n){n.style.display="none"})),this},on:function(n,e,t){return i.default.fn.off(n,e,t),this.forEach((function(o){n.split(" ").forEach((function(n){o.addEventListener?o.addEventListener(n,e,t||!1):o.attachEvent?o.attachEvent("on"+n,e):o["on"+n]=e}))})),this},off:function(n,e,t){return this.forEach((function(o){n.split(" ").forEach((function(n){o.removeEventListener?o.removeEventListener(n,e,t||!1):o.detachEvent?o.detachEvent("on"+n,e):o["on"+n]=null}))})),this},html:function(n){return void 0!==n?(this.forEach((function(e){e.innerHTML=n})),this):this[0].innerHTML},text:function(n){return void 0!==n?(this.forEach((function(e){e.innerText=n})),this):this[0].innerText},empty:function(n){return n=n||0,this.forEach((function(e){setTimeout((function(n){e.innerText=""}),n)})),this},val:function(n){return void 0!==n?(this.forEach((function(e){e.value=n})),this):this[0].value||""},attr:function(){var n=arguments;if("object"==r(arguments[0])){var e=arguments[0],t=this;return Object.keys(e).forEach((function(n){t.forEach((function(t){t.setAttribute(n,e[n])}))})),this}return"string"==typeof arguments[0]&&arguments.length<2?this[0].getAttribute(arguments[0])||"":(this.forEach((function(e){e.setAttribute(n[0],n[1])})),this)},removeAttr:function(n){return this.forEach((function(e){var t,o=0,r=n&&n.match(/[^\x20\t\r\n\f\*\/\\]+/g);if(r&&1===e.nodeType)for(;t=r[o++];)e.removeAttribute(t)})),this},hasClass:function(n){return!!this[0]&&new RegExp("(\\s|^)"+n+"(\\s|$)").test(this[0].getAttribute("class"))},addClass:function(n){return this.forEach((function(e){var t=(0,i.default)(e),o=t.attr("class");t.hasClass(n)||t.attr("class",o+=" "+n)})),this},removeClass:function(n){return this.forEach((function(e){var t=(0,i.default)(e),o=t.attr("class");if(t.hasClass(n)){var r=new RegExp("(\\s|^)"+n+"(\\s|$)");t.attr("class",o.replace(r,""))}})),this}}),(0,a.default)(i.default,{extend:a.default,noop:function(){},navi:p,ua:p.userAgent,lang:p.language||p.languages[0],detect:s.default,store:l.default,escape:function(n){return n&&u.test(n)?n.replace(d,(function(n){return f[n]})):n},unescape:function(n){return n&&h.test(n)?n.replace(m,(function(n){return v[n]})):n},dynamicLoadSource:function(n,e){if((0,i.default)('script[src="'+n+'"]').length)e&&e();else{var t=c.createElement("script");t.onload=t.onreadystatechange=function(){this.onload=this.onreadystatechange=null,e&&e(),(0,i.default)(t).remove()},t.async=!0,t.setAttribute("referrerPolicy","no-referrer"),(0,i.default)("head")[0].appendChild(t),t.src=n}},sdkLoader:function(n,e,t){e in window&&window[e]?(y&&clearTimeout(y),t&&t()):i.default.dynamicLoadSource(n,(function(){y=setTimeout(i.default.sdkLoader(n,e,t),100)}))},deleteInWin:function(n,e){var t=function(e){if(n in window)try{delete window[n]}catch(e){window[n]=null}};0===e?t():setTimeout(t,e||500)},ajax:function(n){(n=n||{}).type=(n.type||"GET").toUpperCase(),n.dataType=n.dataType||"json",n.async=n.async||!0,n.timeout=n.timeout||8e3;var e="[object FormData]"=={}.toString.call(n.data)?n.data:function(n){var e=[];for(var t in n)e.push(encodeURIComponent(t)+"="+encodeURIComponent(n[t]));return e.push("t="+Date.now()),e.join("&")}(n.data),t=null,o="XMLHttpRequest"in window?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");o.onreadystatechange=function(e){if(4==o.readyState){clearTimeout(t);var r=o.status;r>=200&&r<300?n.success&&n.success(JSON.parse(o.responseText)):n.fail&&n.fail(r)}},"GET"==n.type?(o.open("GET",n.url+"?"+e,n.async),o.send(null)):"POST"==n.type&&(o.open("POST",n.url,n.async),null==n.contentType||null==n.contentType?o.send(e):(o.setRequestHeader("Content-Type",n.contentType),o.send(JSON.stringify(n.data)))),t=setTimeout((function(n){clearTimeout(t),o.abort()}),n.timeout)}}),e.default=i.default},function(n,e,t){"use strict";var o=TypeError,r=Object.getOwnPropertyDescriptor;if(r)try{r({},"")}catch(n){r=null}var a=function(){throw new o},i=r?function(){try{return a}catch(n){try{return r(arguments,"callee").get}catch(n){return a}}}():a,s=t(47)(),l=Object.getPrototypeOf||function(n){return n.__proto__},c=void 0,p=void 0,d=void 0,u="undefined"==typeof Uint8Array?void 0:l(Uint8Array),m={"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayBufferPrototype%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer.prototype,"%ArrayIteratorPrototype%":s?l([][Symbol.iterator]()):void 0,"%ArrayPrototype%":Array.prototype,"%ArrayProto_entries%":Array.prototype.entries,"%ArrayProto_forEach%":Array.prototype.forEach,"%ArrayProto_keys%":Array.prototype.keys,"%ArrayProto_values%":Array.prototype.values,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":void 0,"%AsyncFunctionPrototype%":void 0,"%AsyncGenerator%":void 0,"%AsyncGeneratorFunction%":p,"%AsyncGeneratorPrototype%":void 0,"%AsyncIteratorPrototype%":d&&s&&Symbol.asyncIterator?d[Symbol.asyncIterator]():void 0,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%Boolean%":Boolean,"%BooleanPrototype%":Boolean.prototype,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%DataViewPrototype%":"undefined"==typeof DataView?void 0:DataView.prototype,"%Date%":Date,"%DatePrototype%":Date.prototype,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%ErrorPrototype%":Error.prototype,"%eval%":eval,"%EvalError%":EvalError,"%EvalErrorPrototype%":EvalError.prototype,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float32ArrayPrototype%":"undefined"==typeof Float32Array?void 0:Float32Array.prototype,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%Float64ArrayPrototype%":"undefined"==typeof Float64Array?void 0:Float64Array.prototype,"%Function%":Function,"%FunctionPrototype%":Function.prototype,"%Generator%":void 0,"%GeneratorFunction%":c,"%GeneratorPrototype%":void 0,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int8ArrayPrototype%":"undefined"==typeof Int8Array?void 0:Int8Array.prototype,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int16ArrayPrototype%":"undefined"==typeof Int16Array?void 0:Int8Array.prototype,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%Int32ArrayPrototype%":"undefined"==typeof Int32Array?void 0:Int32Array.prototype,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":s?l(l([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%JSONParse%":"object"==typeof JSON?JSON.parse:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&s?l((new Map)[Symbol.iterator]()):void 0,"%MapPrototype%":"undefined"==typeof Map?void 0:Map.prototype,"%Math%":Math,"%Number%":Number,"%NumberPrototype%":Number.prototype,"%Object%":Object,"%ObjectPrototype%":Object.prototype,"%ObjProto_toString%":Object.prototype.toString,"%ObjProto_valueOf%":Object.prototype.valueOf,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%PromisePrototype%":"undefined"==typeof Promise?void 0:Promise.prototype,"%PromiseProto_then%":"undefined"==typeof Promise?void 0:Promise.prototype.then,"%Promise_all%":"undefined"==typeof Promise?void 0:Promise.all,"%Promise_reject%":"undefined"==typeof Promise?void 0:Promise.reject,"%Promise_resolve%":"undefined"==typeof Promise?void 0:Promise.resolve,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%RangeErrorPrototype%":RangeError.prototype,"%ReferenceError%":ReferenceError,"%ReferenceErrorPrototype%":ReferenceError.prototype,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%RegExpPrototype%":RegExp.prototype,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&s?l((new Set)[Symbol.iterator]()):void 0,"%SetPrototype%":"undefined"==typeof Set?void 0:Set.prototype,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%SharedArrayBufferPrototype%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer.prototype,"%String%":String,"%StringIteratorPrototype%":s?l(""[Symbol.iterator]()):void 0,"%StringPrototype%":String.prototype,"%Symbol%":s?Symbol:void 0,"%SymbolPrototype%":s?Symbol.prototype:void 0,"%SyntaxError%":SyntaxError,"%SyntaxErrorPrototype%":SyntaxError.prototype,"%ThrowTypeError%":i,"%TypedArray%":u,"%TypedArrayPrototype%":u?u.prototype:void 0,"%TypeError%":o,"%TypeErrorPrototype%":o.prototype,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ArrayPrototype%":"undefined"==typeof Uint8Array?void 0:Uint8Array.prototype,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint8ClampedArrayPrototype%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray.prototype,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint16ArrayPrototype%":"undefined"==typeof Uint16Array?void 0:Uint16Array.prototype,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%Uint32ArrayPrototype%":"undefined"==typeof Uint32Array?void 0:Uint32Array.prototype,"%URIError%":URIError,"%URIErrorPrototype%":URIError.prototype,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakMapPrototype%":"undefined"==typeof WeakMap?void 0:WeakMap.prototype,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%WeakSetPrototype%":"undefined"==typeof WeakSet?void 0:WeakSet.prototype},h=t(4).call(Function.call,String.prototype.replace),f=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,v=/\\(\\)?/g,g=function(n){var e=[];return h(n,f,(function(n,t,o,r){e[e.length]=o?h(r,v,"$1"):t||n})),e},y=function(n,e){if(!(n in m))throw new SyntaxError("intrinsic "+n+" does not exist!");if(void 0===m[n]&&!e)throw new o("intrinsic "+n+" exists, but is not available. Please file an issue!");return m[n]};n.exports=function(n,e){if("string"!=typeof n||0===n.length)throw new TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new TypeError('"allowMissing" argument must be a boolean');for(var t=g(n),a=y("%"+(t.length>0?t[0]:"")+"%",e),i=1;i<t.length;i+=1)if(null!=a)if(r&&i+1>=t.length){var s=r(a,t[i]);if(!e&&!(t[i]in a))throw new o("base intrinsic for "+n+" exists, but the property is not available.");a=s?s.get||s.value:a[t[i]]}else a=a[t[i]];return a}},function(n,e,t){"use strict";e.__esModule=!0,e.DEFAULT_EMOJI_CDN="//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/",e.DB_NAME="Comment",e.defaultConfig={lang:"zh-CN",langMode:null,appId:"",appKey:"",clazzName:"Comment",meta:["nick","mail","link"],path:location.pathname,placeholder:"Just Go Go",pageSize:10,recordIP:!0,serverURLs:"",visitor:!1,emojiCDN:"",emojiMaps:void 0,enableQQ:!1,requiredFields:[]},e.defaultMeta=["nick","mail","link"],e.QQCacheKey="_v_Cache_Q",e.MetaCacheKey="_v_Cache_Meta",e.RandomStr=(Date.now()+Math.round(1e3*Math.random())).toString(32),e.VERSION="1.4.14"},function(n,e,t){var o=t(7),r=t(29);for(var a in(e=n.exports=function(n,e){return new r(e).process(n)}).FilterCSS=r,o)e[a]=o[a];"undefined"!=typeof window&&(window.filterCSS=n.exports)},function(n,e,t){"use strict";var o=t(32);n.exports=Function.prototype.bind||o},function(n,e){n.exports={indexOf:function(n,e){var t,o;if(Array.prototype.indexOf)return n.indexOf(e);for(t=0,o=n.length;t<o;t++)if(n[t]===e)return t;return-1},forEach:function(n,e,t){var o,r;if(Array.prototype.forEach)return n.forEach(e,t);for(o=0,r=n.length;o<r;o++)e.call(t,n[o],o,n)},trim:function(n){return String.prototype.trim?n.trim():n.replace(/(^\s*)|(\s*$)/g,"")},spaceIndex:function(n){var e=/\s|\n|\t/.exec(n);return e?e.index:-1}}},function(n,e,t){"use strict";e.__esModule=!0;var o={cdn:t(2).DEFAULT_EMOJI_CDN,maps:t(53),parse:function(n){return String(n).replace(new RegExp(":("+Object.keys(o.maps).join("|")+"):","ig"),(function(n,e){return o.maps[e]?o.build(e):n}))},build:function(n){var e=/^(https?:)?\/\//i,t=o.maps[n],r=e.test(t)?t:o.cdn+t;return e.test(r)?'<img alt="'+n+'" referrerPolicy="no-referrer" class="vemoji" src="'+r+'" />':""}};e.default=o},function(n,e){function t(){var n={"align-content":!1,"align-items":!1,"align-self":!1,"alignment-adjust":!1,"alignment-baseline":!1,all:!1,"anchor-point":!1,animation:!1,"animation-delay":!1,"animation-direction":!1,"animation-duration":!1,"animation-fill-mode":!1,"animation-iteration-count":!1,"animation-name":!1,"animation-play-state":!1,"animation-timing-function":!1,azimuth:!1,"backface-visibility":!1,background:!0,"background-attachment":!0,"background-clip":!0,"background-color":!0,"background-image":!0,"background-origin":!0,"background-position":!0,"background-repeat":!0,"background-size":!0,"baseline-shift":!1,binding:!1,bleed:!1,"bookmark-label":!1,"bookmark-level":!1,"bookmark-state":!1,border:!0,"border-bottom":!0,"border-bottom-color":!0,"border-bottom-left-radius":!0,"border-bottom-right-radius":!0,"border-bottom-style":!0,"border-bottom-width":!0,"border-collapse":!0,"border-color":!0,"border-image":!0,"border-image-outset":!0,"border-image-repeat":!0,"border-image-slice":!0,"border-image-source":!0,"border-image-width":!0,"border-left":!0,"border-left-color":!0,"border-left-style":!0,"border-left-width":!0,"border-radius":!0,"border-right":!0,"border-right-color":!0,"border-right-style":!0,"border-right-width":!0,"border-spacing":!0,"border-style":!0,"border-top":!0,"border-top-color":!0,"border-top-left-radius":!0,"border-top-right-radius":!0,"border-top-style":!0,"border-top-width":!0,"border-width":!0,bottom:!1,"box-decoration-break":!0,"box-shadow":!0,"box-sizing":!0,"box-snap":!0,"box-suppress":!0,"break-after":!0,"break-before":!0,"break-inside":!0,"caption-side":!1,chains:!1,clear:!0,clip:!1,"clip-path":!1,"clip-rule":!1,color:!0,"color-interpolation-filters":!0,"column-count":!1,"column-fill":!1,"column-gap":!1,"column-rule":!1,"column-rule-color":!1,"column-rule-style":!1,"column-rule-width":!1,"column-span":!1,"column-width":!1,columns:!1,contain:!1,content:!1,"counter-increment":!1,"counter-reset":!1,"counter-set":!1,crop:!1,cue:!1,"cue-after":!1,"cue-before":!1,cursor:!1,direction:!1,display:!0,"display-inside":!0,"display-list":!0,"display-outside":!0,"dominant-baseline":!1,elevation:!1,"empty-cells":!1,filter:!1,flex:!1,"flex-basis":!1,"flex-direction":!1,"flex-flow":!1,"flex-grow":!1,"flex-shrink":!1,"flex-wrap":!1,float:!1,"float-offset":!1,"flood-color":!1,"flood-opacity":!1,"flow-from":!1,"flow-into":!1,font:!0,"font-family":!0,"font-feature-settings":!0,"font-kerning":!0,"font-language-override":!0,"font-size":!0,"font-size-adjust":!0,"font-stretch":!0,"font-style":!0,"font-synthesis":!0,"font-variant":!0,"font-variant-alternates":!0,"font-variant-caps":!0,"font-variant-east-asian":!0,"font-variant-ligatures":!0,"font-variant-numeric":!0,"font-variant-position":!0,"font-weight":!0,grid:!1,"grid-area":!1,"grid-auto-columns":!1,"grid-auto-flow":!1,"grid-auto-rows":!1,"grid-column":!1,"grid-column-end":!1,"grid-column-start":!1,"grid-row":!1,"grid-row-end":!1,"grid-row-start":!1,"grid-template":!1,"grid-template-areas":!1,"grid-template-columns":!1,"grid-template-rows":!1,"hanging-punctuation":!1,height:!0,hyphens:!1,icon:!1,"image-orientation":!1,"image-resolution":!1,"ime-mode":!1,"initial-letters":!1,"inline-box-align":!1,"justify-content":!1,"justify-items":!1,"justify-self":!1,left:!1,"letter-spacing":!0,"lighting-color":!0,"line-box-contain":!1,"line-break":!1,"line-grid":!1,"line-height":!1,"line-snap":!1,"line-stacking":!1,"line-stacking-ruby":!1,"line-stacking-shift":!1,"line-stacking-strategy":!1,"list-style":!0,"list-style-image":!0,"list-style-position":!0,"list-style-type":!0,margin:!0,"margin-bottom":!0,"margin-left":!0,"margin-right":!0,"margin-top":!0,"marker-offset":!1,"marker-side":!1,marks:!1,mask:!1,"mask-box":!1,"mask-box-outset":!1,"mask-box-repeat":!1,"mask-box-slice":!1,"mask-box-source":!1,"mask-box-width":!1,"mask-clip":!1,"mask-image":!1,"mask-origin":!1,"mask-position":!1,"mask-repeat":!1,"mask-size":!1,"mask-source-type":!1,"mask-type":!1,"max-height":!0,"max-lines":!1,"max-width":!0,"min-height":!0,"min-width":!0,"move-to":!1,"nav-down":!1,"nav-index":!1,"nav-left":!1,"nav-right":!1,"nav-up":!1,"object-fit":!1,"object-position":!1,opacity:!1,order:!1,orphans:!1,outline:!1,"outline-color":!1,"outline-offset":!1,"outline-style":!1,"outline-width":!1,overflow:!1,"overflow-wrap":!1,"overflow-x":!1,"overflow-y":!1,padding:!0,"padding-bottom":!0,"padding-left":!0,"padding-right":!0,"padding-top":!0,page:!1,"page-break-after":!1,"page-break-before":!1,"page-break-inside":!1,"page-policy":!1,pause:!1,"pause-after":!1,"pause-before":!1,perspective:!1,"perspective-origin":!1,pitch:!1,"pitch-range":!1,"play-during":!1,position:!1,"presentation-level":!1,quotes:!1,"region-fragment":!1,resize:!1,rest:!1,"rest-after":!1,"rest-before":!1,richness:!1,right:!1,rotation:!1,"rotation-point":!1,"ruby-align":!1,"ruby-merge":!1,"ruby-position":!1,"shape-image-threshold":!1,"shape-outside":!1,"shape-margin":!1,size:!1,speak:!1,"speak-as":!1,"speak-header":!1,"speak-numeral":!1,"speak-punctuation":!1,"speech-rate":!1,stress:!1,"string-set":!1,"tab-size":!1,"table-layout":!1,"text-align":!0,"text-align-last":!0,"text-combine-upright":!0,"text-decoration":!0,"text-decoration-color":!0,"text-decoration-line":!0,"text-decoration-skip":!0,"text-decoration-style":!0,"text-emphasis":!0,"text-emphasis-color":!0,"text-emphasis-position":!0,"text-emphasis-style":!0,"text-height":!0,"text-indent":!0,"text-justify":!0,"text-orientation":!0,"text-overflow":!0,"text-shadow":!0,"text-space-collapse":!0,"text-transform":!0,"text-underline-position":!0,"text-wrap":!0,top:!1,transform:!1,"transform-origin":!1,"transform-style":!1,transition:!1,"transition-delay":!1,"transition-duration":!1,"transition-property":!1,"transition-timing-function":!1,"unicode-bidi":!1,"vertical-align":!1,visibility:!1,"voice-balance":!1,"voice-duration":!1,"voice-family":!1,"voice-pitch":!1,"voice-range":!1,"voice-rate":!1,"voice-stress":!1,"voice-volume":!1,volume:!1,"white-space":!1,widows:!1,width:!0,"will-change":!1,"word-break":!0,"word-spacing":!0,"word-wrap":!0,"wrap-flow":!1,"wrap-through":!1,"writing-mode":!1,"z-index":!1};return n}var o=/javascript\s*\:/gim;e.whiteList=t(),e.getDefaultWhiteList=t,e.onAttr=function(n,e,t){},e.onIgnoreAttr=function(n,e,t){},e.safeAttrValue=function(n,e){return o.test(e)?"":e}},function(n,e){n.exports={indexOf:function(n,e){var t,o;if(Array.prototype.indexOf)return n.indexOf(e);for(t=0,o=n.length;t<o;t++)if(n[t]===e)return t;return-1},forEach:function(n,e,t){var o,r;if(Array.prototype.forEach)return n.forEach(e,t);for(o=0,r=n.length;o<r;o++)e.call(t,n[o],o,n)},trim:function(n){return String.prototype.trim?n.trim():n.replace(/(^\s*)|(\s*$)/g,"")},trimRight:function(n){return String.prototype.trimRight?n.trimRight():n.replace(/(\s*$)/g,"")}}},function(n,e,t){"use strict";var o=t(40),r="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),a=Object.prototype.toString,i=Array.prototype.concat,s=Object.defineProperty,l=s&&function(){var n={};try{for(var e in s(n,"x",{enumerable:!1,value:n}),n)return!1;return n.x===n}catch(n){return!1}}(),c=function(n,e,t,o){(!(e in n)||function(n){return"function"==typeof n&&"[object Function]"===a.call(n)}(o)&&o())&&(l?s(n,e,{configurable:!0,enumerable:!1,value:t,writable:!0}):n[e]=t)},p=function(n,e){var t=arguments.length>2?arguments[2]:{},a=o(e);r&&(a=i.call(a,Object.getOwnPropertySymbols(e)));for(var s=0;s<a.length;s+=1)c(n,a[s],e[a[s]],t[a[s]])};p.supportsDescriptors=!!l,n.exports=p},function(n,e,t){"use strict";var o=Object.prototype.toString;n.exports=function(n){var e=o.call(n),t="[object Arguments]"===e;return t||(t="[object Array]"!==e&&null!==n&&"object"==typeof n&&"number"==typeof n.length&&n.length>=0&&"[object Function]"===o.call(n.callee)),t}},function(n,e,t){"use strict";var o=t(45),r=t(44),a=t(46)("String.prototype.replace"),i=/^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/,s=/[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;n.exports=function(){var n=r(o(this));return a(a(n,i,""),s,"")}},function(n,e,t){"use strict";var o=t(4),r=t(1)("%Function%"),a=r.apply,i=r.call;n.exports=function(){return o.apply(i,arguments)},n.exports.apply=function(){return o.apply(a,arguments)}},function(n,e,t){"use strict";var o=t(11);n.exports=function(){return String.prototype.trim&&"​"==="​".trim()?String.prototype.trim:o}},function(n,e){var t;t=function(){return this}();try{t=t||Function("return this")()||(0,eval)("this")}catch(n){"object"==typeof window&&(t=window)}n.exports=t},function(n,e,t){function o(){return{a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],strong:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","loop","preload","src","height","width"]}}function r(n){return n.replace(v,"&lt;").replace(g,"&gt;")}function a(n){return n.replace(y,"&quot;")}function i(n){return n.replace(b,'"')}function s(n){return n.replace(x,(function(n,e){return"x"===e[0]||"X"===e[0]?String.fromCharCode(parseInt(e.substr(1),16)):String.fromCharCode(parseInt(e,10))}))}function l(n){return n.replace(_,":").replace(k," ")}function c(n){for(var e="",t=0,o=n.length;t<o;t++)e+=n.charCodeAt(t)<32?" ":n.charAt(t);return h.trim(e)}function p(n){return c(n=l(n=s(n=i(n))))}function d(n){return r(n=a(n))}var u=t(3).FilterCSS,m=t(3).getDefaultWhiteList,h=t(5),f=new u,v=/</g,g=/>/g,y=/"/g,b=/&quot;/g,x=/&#([a-zA-Z0-9]*);?/gim,_=/&colon;?/gim,k=/&newline;?/gim,w=/((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a)\:/gi,j=/e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi,E=/u\s*r\s*l\s*\(.*/gi,S=/<!--[\s\S]*?-->/g;e.whiteList={a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],strong:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","loop","preload","src","height","width"]},e.getDefaultWhiteList=o,e.onTag=function(n,e,t){},e.onIgnoreTag=function(n,e,t){},e.onTagAttr=function(n,e,t){},e.onIgnoreTagAttr=function(n,e,t){},e.safeAttrValue=function(n,e,t,o){if(t=p(t),"href"===e||"src"===e){if("#"===(t=h.trim(t)))return"#";if("http://"!==t.substr(0,7)&&"https://"!==t.substr(0,8)&&"mailto:"!==t.substr(0,7)&&"tel:"!==t.substr(0,4)&&"#"!==t[0]&&"/"!==t[0])return""}else if("background"===e){if(w.lastIndex=0,w.test(t))return""}else if("style"===e){if(j.lastIndex=0,j.test(t))return"";if(E.lastIndex=0,E.test(t)&&(w.lastIndex=0,w.test(t)))return"";!1!==o&&(t=(o=o||f).process(t))}return d(t)},e.escapeHtml=r,e.escapeQuote=a,e.unescapeQuote=i,e.escapeHtmlEntities=s,e.escapeDangerHtml5Entities=l,e.clearNonPrintableCharacter=c,e.friendlyAttrValue=p,e.escapeAttrValue=d,e.onIgnoreTagStripAll=function(){return""},e.StripTagBody=function(n,e){function t(e){return!!o||-1!==h.indexOf(n,e)}"function"!=typeof e&&(e=function(){});var o=!Array.isArray(n),r=[],a=!1;return{onIgnoreTag:function(n,o,i){if(t(n)){if(i.isClosing){var s="[/removed]",l=i.position+s.length;return r.push([!1!==a?a:i.position,l]),a=!1,s}return a||(a=i.position),"[removed]"}return e(n,o,i)},remove:function(n){var e="",t=0;return h.forEach(r,(function(o){e+=n.slice(t,o[0]),t=o[1]})),e+=n.slice(t)}}},e.stripCommentTag=function(n){return n.replace(S,"")},e.stripBlankChar=function(n){var e=n.split("");return(e=e.filter((function(n){var e=n.charCodeAt(0);return!(127===e||e<=31&&10!==e&&13!==e)}))).join("")},e.cssFilter=f,e.getDefaultCSSWhiteList=m},function(n,e,t){function o(n){var e=l.spaceIndex(n);if(-1===e)var t=n.slice(1,-1);else t=n.slice(1,e+1);return"/"===(t=l.trim(t).toLowerCase()).slice(0,1)&&(t=t.slice(1)),"/"===t.slice(-1)&&(t=t.slice(0,-1)),t}function r(n){return"</"===n.slice(0,2)}function a(n,e){for(;e<n.length;e++){var t=n[e];if(" "!==t)return"="===t?e:-1}}function i(n,e){for(;e>0;e--){var t=n[e];if(" "!==t)return"="===t?e:-1}}function s(n){return function(n){return'"'===n[0]&&'"'===n[n.length-1]||"'"===n[0]&&"'"===n[n.length-1]}(n)?n.substr(1,n.length-2):n}var l=t(5),c=/[^a-zA-Z0-9_:\.\-]/gim;e.parseTag=function(n,e,t){var a="",i=0,s=!1,l=!1,c=0,p=n.length,d="",u="";for(c=0;c<p;c++){var m=n.charAt(c);if(!1===s){if("<"===m){s=c;continue}}else if(!1===l){if("<"===m){a+=t(n.slice(i,c)),s=c,i=c;continue}if(">"===m){a+=t(n.slice(i,s)),d=o(u=n.slice(s,c+1)),a+=e(s,a.length,d,u,r(u)),i=c+1,s=!1;continue}if(('"'===m||"'"===m)&&"="===n.charAt(c-1)){l=m;continue}}else if(m===l){l=!1;continue}}return i<n.length&&(a+=t(n.substr(i))),a},e.parseAttr=function(n,e){function t(n,t){if(!((n=(n=l.trim(n)).replace(c,"").toLowerCase()).length<1)){var o=e(n,t||"");o&&r.push(o)}}for(var o=0,r=[],p=!1,d=n.length,u=0;u<d;u++){var m,h=n.charAt(u);if(!1!==p||"="!==h)if(!1===p||u!==o||'"'!==h&&"'"!==h||"="!==n.charAt(u-1)){if(/\s|\n|\t/.test(h)){if(n=n.replace(/\s|\n|\t/g," "),!1===p){if(-1===(m=a(n,u))){t(l.trim(n.slice(o,u))),p=!1,o=u+1;continue}u=m-1;continue}if(-1===(m=i(n,u-1))){t(p,s(l.trim(n.slice(o,u)))),p=!1,o=u+1;continue}}}else{if(-1===(m=n.indexOf(h,u+1)))break;t(p,l.trim(n.slice(o+1,m))),p=!1,o=(u=m)+1}else p=n.slice(o,u),o=u+1}return o<n.length&&(!1===p?t(n.slice(o)):t(p,s(l.trim(n.slice(o))))),l.trim(r.join(" "))}},function(n,e,t){var o,r,a;
/*!
	autosize 4.0.2
	license: MIT
	http://www.jacklmoore.com/autosize
*/r=[n,e],o=function(n,e){"use strict";function t(n){function e(e){var t=n.style.width;n.style.width="0px",n.offsetWidth,n.style.width=t,n.style.overflowY=e}function t(){if(0!==n.scrollHeight){var e=function(n){for(var e=[];n&&n.parentNode&&n.parentNode instanceof Element;)n.parentNode.scrollTop&&e.push({node:n.parentNode,scrollTop:n.parentNode.scrollTop}),n=n.parentNode;return e}(n),t=document.documentElement&&document.documentElement.scrollTop;n.style.height="",n.style.height=n.scrollHeight+r+"px",s=n.clientWidth,e.forEach((function(n){n.node.scrollTop=n.scrollTop})),t&&(document.documentElement.scrollTop=t)}}function o(){t();var o=Math.round(parseFloat(n.style.height)),r=window.getComputedStyle(n,null),a="content-box"===r.boxSizing?Math.round(parseFloat(r.height)):n.offsetHeight;if(a<o?"hidden"===r.overflowY&&(e("scroll"),t(),a="content-box"===r.boxSizing?Math.round(parseFloat(window.getComputedStyle(n,null).height)):n.offsetHeight):"hidden"!==r.overflowY&&(e("hidden"),t(),a="content-box"===r.boxSizing?Math.round(parseFloat(window.getComputedStyle(n,null).height)):n.offsetHeight),l!==a){l=a;var s=i("autosize:resized");try{n.dispatchEvent(s)}catch(n){}}}if(n&&n.nodeName&&"TEXTAREA"===n.nodeName&&!a.has(n)){var r=null,s=null,l=null,c=function(){n.clientWidth!==s&&o()},p=function(e){window.removeEventListener("resize",c,!1),n.removeEventListener("input",o,!1),n.removeEventListener("keyup",o,!1),n.removeEventListener("autosize:destroy",p,!1),n.removeEventListener("autosize:update",o,!1),Object.keys(e).forEach((function(t){n.style[t]=e[t]})),a.delete(n)}.bind(n,{height:n.style.height,resize:n.style.resize,overflowY:n.style.overflowY,overflowX:n.style.overflowX,wordWrap:n.style.wordWrap});n.addEventListener("autosize:destroy",p,!1),"onpropertychange"in n&&"oninput"in n&&n.addEventListener("keyup",o,!1),window.addEventListener("resize",c,!1),n.addEventListener("input",o,!1),n.addEventListener("autosize:update",o,!1),n.style.overflowX="hidden",n.style.wordWrap="break-word",a.set(n,{destroy:p,update:o}),function(){var e=window.getComputedStyle(n,null);"vertical"===e.resize?n.style.resize="none":"both"===e.resize&&(n.style.resize="horizontal"),r="content-box"===e.boxSizing?-(parseFloat(e.paddingTop)+parseFloat(e.paddingBottom)):parseFloat(e.borderTopWidth)+parseFloat(e.borderBottomWidth),isNaN(r)&&(r=0),o()}()}}function o(n){var e=a.get(n);e&&e.destroy()}function r(n){var e=a.get(n);e&&e.update()}var a="function"==typeof Map?new Map:function(){var n=[],e=[];return{has:function(e){return n.indexOf(e)>-1},get:function(t){return e[n.indexOf(t)]},set:function(t,o){-1===n.indexOf(t)&&(n.push(t),e.push(o))},delete:function(t){var o=n.indexOf(t);o>-1&&(n.splice(o,1),e.splice(o,1))}}}(),i=function(n){return new Event(n,{bubbles:!0})};try{new Event("test")}catch(n){i=function(n){var e=document.createEvent("Event");return e.initEvent(n,!0,!1),e}}var s=null;"undefined"==typeof window||"function"!=typeof window.getComputedStyle?((s=function(n){return n}).destroy=function(n){return n},s.update=function(n){return n}):((s=function(n,e){return n&&Array.prototype.forEach.call(n.length?n:[n],(function(n){return t(n)})),n}).destroy=function(n){return n&&Array.prototype.forEach.call(n.length?n:[n],o),n},s.update=function(n){return n&&Array.prototype.forEach.call(n.length?n:[n],r),n}),e.default=s,n.exports=e.default},void 0!==(a="function"==typeof o?o.apply(e,r):o)&&(n.exports=a)},function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{default:n}}function r(n){return!!n&&this.init(n),this}function a(n){return new r(n)}var i=o(t(26)),s=o(t(17)),l=o(t(20)),c=o(t(6)),p=t(2),d=o(t(24)),u=o(t(0)),m=o(t(22)),h=o(t(19)),f=t(23),v=o(t(25)),g=o(t(21)),y={comment:"",nick:"",mail:"",link:"",ua:u.default.ua,url:"",QQAvatar:""},b="",x={cdn:"https://gravatar.loli.net/avatar/",ds:["mp","identicon","monsterid","wavatar","robohash","retro",""],params:"",hide:!1};r.prototype.init=function(n){if("undefined"==typeof document)throw new Error("Sorry, Valine does not support Server-side rendering.");var e=this;return n&&(n=u.default.extend(p.defaultConfig,n),e.i18n=(0,l.default)(n.lang||u.default.lang,n.langMode),e.config=n,c.default.maps=!!n.emojiMaps&&n.emojiMaps||c.default.maps,c.default.cdn=!!n.emojiCDN&&n.emojiCDN||c.default.cdn,e._init()),e},r.prototype._init=function(){var n=this;try{var e=n.config,t=e.avatar,o=e.avatarForce,r=e.avatar_cdn,a=e.visitor,i=e.path,s=void 0===i?location.pathname:i,l=e.pageSize,c=e.recordIP;n.config.path=s.replace(/index\.html?$/,"");var d=x.ds,m=o?"&q="+p.RandomStr:"";x.params="?d="+(d.indexOf(t)>-1?t:"mp")+"&v="+p.VERSION+m,x.hide="hide"===t,x.cdn=/^https?\:\/\//.test(r)?r:x.cdn,n.config.pageSize=isNaN(l)||l<1?10:l,c&&(0,f.recordIPFn)((function(n){return y.ip=n}));var v=n.config.el||null,b=(0,u.default)(v);if(v=v instanceof HTMLElement?v:b[b.length-1]||null){n.$el=(0,u.default)(v),n.$el.addClass("v").attr("data-class","v"),x.hide&&n.$el.addClass("hide-avatar"),n.config.meta=(n.config.guest_info||n.config.meta||p.defaultMeta).filter((function(n){return p.defaultMeta.indexOf(n)>-1})),n.config.requiredFields=n.config.requiredFields.filter((function(n){return p.defaultMeta.indexOf(n)>-1}));var _=(0==n.config.meta.length?p.defaultMeta:n.config.meta).map((function(e){var t="mail"==e?"email":"text";return p.defaultMeta.indexOf(e)>-1?'<input name="'+e+'" placeholder="'+n.i18n.t(e)+'" class="v'+e+' vinput" type="'+t+'">':""})),w='<div class="vpanel"><div class="vwrap"><p class="cancel-reply text-right" style="display:none;" title="'+n.i18n.t("cancelReply")+'"><svg class="vicon cancel-reply-btn" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4220" width="22" height="22"><path d="M796.454 985H227.545c-50.183 0-97.481-19.662-133.183-55.363-35.7-35.701-55.362-83-55.362-133.183V227.545c0-50.183 19.662-97.481 55.363-133.183 35.701-35.7 83-55.362 133.182-55.362h568.909c50.183 0 97.481 19.662 133.183 55.363 35.701 35.702 55.363 83 55.363 133.183v568.909c0 50.183-19.662 97.481-55.363 133.183S846.637 985 796.454 985zM227.545 91C152.254 91 91 152.254 91 227.545v568.909C91 871.746 152.254 933 227.545 933h568.909C871.746 933 933 871.746 933 796.454V227.545C933 152.254 871.746 91 796.454 91H227.545z" p-id="4221"></path><path d="M568.569 512l170.267-170.267c15.556-15.556 15.556-41.012 0-56.569s-41.012-15.556-56.569 0L512 455.431 341.733 285.165c-15.556-15.556-41.012-15.556-56.569 0s-15.556 41.012 0 56.569L455.431 512 285.165 682.267c-15.556 15.556-15.556 41.012 0 56.569 15.556 15.556 41.012 15.556 56.569 0L512 568.569l170.267 170.267c15.556 15.556 41.012 15.556 56.569 0 15.556-15.556 15.556-41.012 0-56.569L568.569 512z" p-id="4222" ></path></svg></p><div class="vheader item'+_.length+'">'+_.join("")+'</div><div class="vedit"><textarea id="veditor" class="veditor vinput" placeholder="'+n.config.placeholder+'"></textarea><div class="vrow"><div class="vcol vcol-60 status-bar"></div><div class="vcol vcol-40 vctrl text-right"><span title="'+n.i18n.t("emoji")+'"  class="vicon vemoji-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="16172" width="22" height="22" ><path d="M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zM512 56.888889a455.111111 455.111111 0 1 0 455.111111 455.111111 455.111111 455.111111 0 0 0-455.111111-455.111111zM312.888889 512A85.333333 85.333333 0 1 1 398.222222 426.666667 85.333333 85.333333 0 0 1 312.888889 512z" p-id="16173"></path><path d="M512 768A142.222222 142.222222 0 0 1 369.777778 625.777778a28.444444 28.444444 0 0 1 56.888889 0 85.333333 85.333333 0 0 0 170.666666 0 28.444444 28.444444 0 0 1 56.888889 0A142.222222 142.222222 0 0 1 512 768z" p-id="16174"></path><path d="M782.222222 391.964444l-113.777778 59.733334a29.013333 29.013333 0 0 1-38.684444-10.808889 28.444444 28.444444 0 0 1 10.24-38.684445l113.777778-56.888888a28.444444 28.444444 0 0 1 38.684444 10.24 28.444444 28.444444 0 0 1-10.24 36.408888z" p-id="16175"></path><path d="M640.568889 451.697778l113.777778 56.888889a27.875556 27.875556 0 0 0 38.684444-10.24 27.875556 27.875556 0 0 0-10.24-38.684445l-113.777778-56.888889a28.444444 28.444444 0 0 0-38.684444 10.808889 28.444444 28.444444 0 0 0 10.24 38.115556z" p-id="16176"></path></svg></span><span title="'+n.i18n.t("preview")+'" class="vicon vpreview-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="17688" width="22" height="22"><path d="M502.390154 935.384615a29.538462 29.538462 0 1 1 0 59.076923H141.430154C79.911385 994.461538 29.538462 946.254769 29.538462 886.153846V137.846154C29.538462 77.745231 79.950769 29.538462 141.390769 29.538462h741.218462c61.44 0 111.852308 48.206769 111.852307 108.307692v300.268308a29.538462 29.538462 0 1 1-59.076923 0V137.846154c0-26.899692-23.355077-49.230769-52.775384-49.230769H141.390769c-29.420308 0-52.775385 22.331077-52.775384 49.230769v748.307692c0 26.899692 23.355077 49.230769 52.775384 49.230769h360.999385z" p-id="17689"></path><path d="M196.923077 216.615385m29.538461 0l374.153847 0q29.538462 0 29.538461 29.538461l0 0q0 29.538462-29.538461 29.538462l-374.153847 0q-29.538462 0-29.538461-29.538462l0 0q0-29.538462 29.538461-29.538461Z" p-id="17690"></path><path d="M649.846154 846.769231a216.615385 216.615385 0 1 0 0-433.230769 216.615385 216.615385 0 0 0 0 433.230769z m0 59.076923a275.692308 275.692308 0 1 1 0-551.384616 275.692308 275.692308 0 0 1 0 551.384616z" p-id="17691"></path><path d="M807.398383 829.479768m20.886847-20.886846l0 0q20.886846-20.886846 41.773692 0l125.321079 125.321079q20.886846 20.886846 0 41.773693l0 0q-20.886846 20.886846-41.773693 0l-125.321078-125.321079q-20.886846-20.886846 0-41.773693Z" p-id="17692"></path></svg></span></div></div></div><div class="vrow"><div class="vcol vcol-30" ><a alt="Markdown is supported" href="https://guides.github.com/features/mastering-markdown/" class="vicon" target="_blank"><svg class="markdown" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"></path></svg></a></div><div class="vcol vcol-70 text-right"><button type="button"  title="Cmd|Ctrl+Enter" class="vsubmit vbtn">'+n.i18n.t("submit")+'</button></div></div><div class="vemojis" style="display:none;"></div><div class="vinput vpreview" style="display:none;"></div><div style="display:none;" class="vmark"></div></div></div><div class="vcount" style="display:none;"><span class="vnum">0</span> '+n.i18n.t("comments")+'</div><div class="vload-top text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vcards"></div><div class="vload-bottom text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vempty" style="display:none;"></div><div class="vpage txt-center" style="display:none"><button type="button" class="vmore vbtn">'+n.i18n.t("more")+'</button></div><div class="vpower txt-right">Powered By <a href="https://valine.js.org" target="_blank">Valine</a><br>v'+p.VERSION+"</div>";n.$el.html(w),n.$el.find(".cancel-reply").on("click",(function(e){n.reset()}));var j=n.$el.find(".vempty");n.$nodata={show:function(e){return j.html(e||n.i18n.t("sofa")).show(),n},hide:function(){return j.hide(),n}};var E=n.$el.find(".vload-bottom"),S=n.$el.find(".vload-top");n.$loading={show:function(e){return e&&S.show()||E.show(),n.$nodata.hide(),n},hide:function(){return S.hide(),E.hide(),0===n.$el.find(".vcard").length&&n.$nodata.show(),n}}}(0,h.default)(n.config,(function(e){var t=(0,u.default)(".valine-comment-count"),o=0;!function e(t){var r=t[o++];if(r){var a=(0,u.default)(r).attr("data-xid");a&&n.Q(a).count().then((function(n){r.innerText=n,e(t)})).catch((function(n){r.innerText=0}))}}(t),a&&k.add(AV.Object.extend("Counter"),n.config.path),n.$el&&n.bind()}))}catch(e){(0,g.default)(n,e,"init")}};var _=function(n,e){var t=new n,o=new AV.ACL;o.setPublicReadAccess(!0),o.setPublicWriteAccess(!0),t.setACL(o),t.set("url",e.url),t.set("xid",e.xid),t.set("title",e.title),t.set("time",1),t.save().then((function(n){(0,u.default)(e.el).find(".leancloud-visitors-count").text(1)})).catch((function(n){}))},k={add:function(n,e){var t=this,o=(0,u.default)(".leancloud_visitors,.leancloud-visitors");if(1===o.length){var r=o[0],a=decodeURI((0,u.default)(r).attr("id")),i=(0,u.default)(r).attr("data-flag-title"),s=encodeURI(a),l={el:r,url:a,xid:s,title:i};if(decodeURI(a)===decodeURI(e)){var c=new AV.Query(n);c.equalTo("url",a),c.find().then((function(e){if(e.length>0){var t=e[0];t.increment("time"),t.save().then((function(n){(0,u.default)(r).find(".leancloud-visitors-count").text(n.get("time"))})).catch((function(n){}))}else _(n,l)})).catch((function(e){101==e.code?_(n,l):(0,g.default)(t,e)}))}else k.show(n,o)}else k.show(n,o)},show:function(n,e){var t=[];if(e.forEach((function(n){var e=(0,u.default)(n).find(".leancloud-visitors-count");e&&e.text("0"),t.push(/\%/.test((0,u.default)(n).attr("id"))?decodeURI((0,u.default)(n).attr("id")):(0,u.default)(n).attr("id"))})),t.length){var o=new AV.Query(n);o.containedIn("url",t),o.find().then((function(n){n.length>0&&e.forEach((function(e){n.forEach((function(n){var t=n.get("xid")||encodeURI(n.get("url")),o=n.get("time"),r=(0,u.default)(e),a=r.attr("id");if((/\%/.test(a)?a:encodeURI(a))==t){var i=r.find(".leancloud-visitors-count");i&&i.text(o)}}))}))})).catch((function(n){}))}}};r.prototype.Q=function(n){var e=this,t=arguments.length,o=e.config.clazzName;if(1==t){var r=new AV.Query(o);r.doesNotExist("rid");var a=new AV.Query(o);a.equalTo("rid","");var i=AV.Query.or(r,a);return"*"===n?i.exists("url"):i.equalTo("url",decodeURI(n)),i.addDescending("createdAt"),i.addDescending("insertedAt"),i}var s=JSON.stringify(arguments[1]).replace(/(\[|\])/g,""),l="select * from "+o+" where rid in ("+s+") order by -createdAt,-createdAt";return AV.Query.doCloudQuery(l)},r.prototype.installLocale=function(n,e){return this.i18n(n,e),this},r.prototype.setPath=function(n){return this.config.path=n,this},r.prototype.bind=function(){var n=this,e=n.$el.find(".vemojis"),t=n.$el.find(".vpreview"),o=n.$el.find(".vemoji-btn"),r=n.$el.find(".vpreview-btn"),a=n.$el.find(".veditor"),l=c.default.maps,h=!1;n.$emoji={show:function(){return!h&&function(n){var t=[];for(var o in l)l.hasOwnProperty(o)&&c.default.build(o)&&t.push('<i title="'+o+'" >'+c.default.build(o)+"</i>");e.html(t.join("")),h=!0,e.find("i").on("click",(function(n){n.preventDefault(),S(a[0]," :"+(0,u.default)(this).attr("title")+":")}))}(),n.$preview.hide(),e.show(),o.addClass("actived"),n.$emoji},hide:function(){return o.removeClass("actived"),e.hide(),n.$emoji}},n.$preview={show:function(){return b?(n.$emoji.hide(),r.addClass("actived"),t.html(b).show(),$()):n.$preview.hide(),n.$preview},hide:function(){return r.removeClass("actived"),t.hide().html(""),n.$preview}};var _=function(e){var o=(0,m.default)(e.val()||"");o||n.$preview.hide(),b!=o&&(b=o,r.hasClass("actived")>-1&&b!=t.html()&&t.html(b),(0,s.default)(e[0]),$())};o.on("click",(function(e){o.hasClass("actived")?n.$emoji.hide():n.$emoji.show()})),r.on("click",(function(e){r.hasClass("actived")?n.$preview.hide():n.$preview.show()}));var k=n.config.meta,w={},j={veditor:"comment"};for(var E in k.forEach((function(n){j["v"+n]=n})),j)j.hasOwnProperty(E)&&function(){var e=j[E],t=n.$el.find("."+E);w[e]=t,t.on("input change blur propertychange",(function(o){n.config.enableQQ&&"blur"===o.type&&"nick"===e&&(isNaN(t.val())?u.default.store.get(p.QQCacheKey)&&u.default.store.get(p.QQCacheKey).nick!=t.val()&&(u.default.store.remove(p.QQCacheKey),y.nick=t.val(),y.mail="",y.QQAvatar=""):(0,f.fetchQQFn)(t.val(),(function(n){var e=n.nick||t.val(),o=n.qq+"@qq.com";(0,u.default)(".vnick").val(e),(0,u.default)(".vmail").val(o),y.nick=e,y.mail=o,y.QQAvatar=n.pic}))),"comment"===e?_(t):y[e]=u.default.escape(t.val().replace(/(^\s*)|(\s*$)/g,"")).substring(0,40)}))}();var S=function(n,e){if(document.selection)n.focus(),document.selection.createRange().text=e,n.focus();else if(n.selectionStart||"0"==n.selectionStart){var t=n.selectionStart,o=n.selectionEnd,r=n.scrollTop;n.value=n.value.substring(0,t)+e+n.value.substring(o,n.value.length),n.focus(),n.selectionStart=t+e.length,n.selectionEnd=t+e.length,n.scrollTop=r}else n.focus(),n.value+=e;setTimeout((function(e){_((0,u.default)(n))}),100)},A={no:1,size:n.config.pageSize,skip:n.config.pageSize},z=n.$el.find(".vpage");z.on("click",(function(n){z.hide(),A.no++,T()}));var T=function(){var e=A.size,t=A.no,o=Number(n.$el.find(".vnum").text());n.$loading.show();var r=n.Q(n.config.path);r.limit(e),r.skip((t-1)*e),r.find().then((function(r){if(A.skip=A.size,r&&r.length){var a=[];r.forEach((function(e){a.push(e.id),O(e,n.$el.find(".vcards"),!0)})),n.Q(n.config.path,a).then((function(n){(n&&n.results||[]).forEach((function(n){O(n,(0,u.default)('.vquote[data-self-id="'+n.get("rid")+'"]'))})).catch((function(n){}))})),e*t<o?z.show():z.hide()}else n.$nodata.show();n.$loading.hide()})).catch((function(e){n.$loading.hide(),(0,g.default)(n,e,"query")}))};n.Q(n.config.path).count().then((function(e){e>0?(n.$el.find(".vcount").show().find(".vnum").text(e),T()):n.$loading.hide()})).catch((function(e){(0,g.default)(n,e,"count")}));var O=function(e,t,o){var r=(0,u.default)('<div class="vcard" id="'+e.id+'"></div>'),a=e.get("ua"),s="";a&&!/ja/.test(n.config.lang)&&(s='<span class="vsys">'+(a=u.default.detect(a)).browser+" "+a.version+'</span> <span class="vsys">'+a.os+" "+a.osVersion+"</span>"),"*"===n.config.path&&(s='<a href="'+e.get("url")+'" class="vsys">'+e.get("url")+"</a>");var l=e.get("link")?/^https?\:\/\//.test(e.get("link"))?e.get("link"):"http://"+e.get("link"):"",c=l?'<a class="vnick" rel="nofollow" href="'+l+'" target="_blank" >'+e.get("nick")+"</a>":'<span class="vnick">'+e.get("nick")+"</span>",p=(x.hide?"":n.config.enableQQ&&e.get("QQAvatar")?'<img class="vimg" src="'+e.get("QQAvatar")+'" referrerPolicy="no-referrer"/>':'<img class="vimg" src="'+(x.cdn+(0,i.default)(e.get("mail"))+x.params)+'">')+'<div class="vh"><div class="vhead">'+c+" "+s+'</div><div class="vmeta"><span class="vtime" >'+(0,d.default)(e.get("insertedAt"),n.i18n)+'</span><span class="vat" data-vm-id="'+(e.get("rid")||e.id)+'" data-self-id="'+e.id+'">'+n.i18n.t("reply")+'</span></div><div class="vcontent" data-expand="'+n.i18n.t("expand")+'">'+(0,v.default)(e.get("comment"))+'</div><div class="vreply-wrapper" data-self-id="'+e.id+'"></div><div class="vquote" data-self-id="'+e.id+'"></div></div>';r.html(p);var m=r.find(".vat");r.find("a").forEach((function(n){n&&!(0,u.default)(n).hasClass("at")&&(0,u.default)(n).attr({target:"_blank",rel:"nofollow"})})),o?t.append(r):t.prepend(r);var h=r.find(".vcontent");h&&P(h),m&&I(m,e),$()},C={},I=function(e,t){e.on("click",(function(o){var r=e.attr("data-vm-id"),a=e.attr("data-self-id"),i=n.$el.find(".vwrap"),s="@"+u.default.escape(t.get("nick"));(0,u.default)('.vreply-wrapper[data-self-id="'+a+'"]').append(i).find(".cancel-reply").show(),C={at:u.default.escape(s)+" ",rid:r,pid:a,rmail:t.get("mail")},w.comment.attr({placeholder:s})[0].focus()}))},$=function(){setTimeout((function(){try{"MathJax"in window&&"version"in window.MathJax&&(/^3.*/.test(window.MathJax.version)&&MathJax.typeset()||MathJax.Hub.Queue(["Typeset",MathJax.Hub,document.querySelector(".v")])),"renderMathInElement"in window&&renderMathInElement((0,u.default)(".v")[0],{delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1}]})}catch(n){}}),100)},P=function(n){setTimeout((function(){n[0].offsetHeight>200&&(n.addClass("expand"),n.on("click",(function(e){n.removeClass("expand")})))}))};!function(e){if(e=u.default.store.get(p.MetaCacheKey)||e)for(var t in k){var o=k[t];n.$el.find(".v"+o).val(u.default.unescape(e[o])),y[o]=e[o]}var r=u.default.store.get(p.QQCacheKey);y.QQAvatar=n.config.enableQQ&&!!r&&r.pic||""}(),n.reset=function(){y.comment="",w.comment.val(""),_(w.comment),w.comment.attr("placeholder",n.config.placeholder),C={},n.$preview.hide(),n.$el.find(".vpanel").append(n.$el.find(".vwrap")),n.$el.find(".cancel-reply").hide(),b=""};var M=n.$el.find(".vsubmit"),q=function(e){if(n.config.requiredFields.indexOf("nick")>-1&&y.nick.length<3)return w.nick[0].focus(),void n.$el.find(".status-bar").text(""+n.i18n.t("nickFail")).empty(3e3);if(n.config.requiredFields.indexOf("mail")>-1&&!/[\w-\.]+@([\w-]+\.)+[a-z]{2,3}/.test(y.mail))return w.mail[0].focus(),void n.$el.find(".status-bar").text(""+n.i18n.t("mailFail")).empty(3e3);if(""!=b){y.comment=b,y.nick=y.nick||"Anonymous";var t=u.default.store.get("vlx");t&&Date.now()/1e3-t/1e3<20?n.$el.find(".status-bar").text(n.i18n.t("busy")).empty(3e3):R()}else w.comment[0].focus()},R=function(){u.default.store.set("vlx",Date.now()),M.attr({disabled:!0}),n.$loading.show(!0);var e=new(AV.Object.extend(n.config.clazzName||"Comment"));if(y.url=decodeURI(n.config.path),y.insertedAt=new Date,C.rid){var t=C.pid||C.rid;e.set("rid",C.rid),e.set("pid",t),y.comment=b.replace("<p>",'<p><a class="at" href="#'+t+'">'+C.at+"</a> , ")}for(var o in y)if(y.hasOwnProperty(o)){var r=y[o];e.set(o,r)}e.setACL(function(){var n=new AV.ACL;return n.setPublicReadAccess(!0),n.setPublicWriteAccess(!1),n}()),e.save().then((function(e){"Anonymous"!=y.nick&&u.default.store.set(p.MetaCacheKey,{nick:y.nick,link:y.link,mail:y.mail});var t=n.$el.find(".vnum");try{C.rid?O(e,(0,u.default)('.vquote[data-self-id="'+C.rid+'"]'),!0):(Number(t.text())?t.text(Number(t.text())+1):n.$el.find(".vcount").show().find(".vnum").text(Number(t.text())+1),O(e,n.$el.find(".vcards")),A.skip++),M.removeAttr("disabled"),n.$loading.hide(),n.reset()}catch(e){(0,g.default)(n,e,"save")}})).catch((function(e){(0,g.default)(n,e,"commitEvt")}))};M.on("click",q),(0,u.default)(document).on("keydown",(function(n){var e=(n=event||n).keyCode||n.which||n.charCode;(n.ctrlKey||n.metaKey)&&13===e&&q(),9===e&&"veditor"==(document.activeElement.id||"")&&(n.preventDefault(),S(a[0],"    "))})).on("paste",(function(n){var e="clipboardData"in n?n.clipboardData:n.originalEvent&&n.originalEvent.clipboardData||window.clipboardData;e&&D(e.items,!0)})),a.on("dragenter dragleave dragover drop",(function(n){n.stopPropagation(),n.preventDefault(),"drop"===n.type&&D(n.dataTransfer.items)}));var D=function(n,e){for(var t=[],o=0,r=n.length;o<r;o++){var i=n[o];if("string"===i.kind&&i.type.match("^text/html"))!e&&i.getAsString((function(n){n&&S(a[0],n.replace(/<[^>]+>/g,""))}));else if(-1!==i.type.indexOf("image")){t.push(i.getAsFile());continue}}L(t)},L=function e(t,o){o=o||0;var r=t.length;if(r>0){var i=t[o];M.attr({disabled:!0});var l="![Uploading "+i.name+"...]()";S(a[0],l),B(i,(function(c){500!=c.code?(a.val(a.val().replace(l,"!["+i.name+"]("+c.data.url+")\r\n")),(0,s.default)(a[0]),++o<r?e(t,o):M.removeAttr("disabled")):(a.val(a.val().replace(l,"")),(0,s.default)(a[0]),n.$el.find(".status-bar").text(c.msg).empty(3e3),M.removeAttr("disabled"))}))}},B=function(n,e){var t=new FormData;t.append("image",n),u.default.ajax({type:"post",url:"https://pic.alexhchu.com/api/upload",data:t,success:function(n){e&&e(n)}})}},n.exports=a,n.exports.default=a},function(n,e,t){"use strict";e.__esModule=!0;var o=function(n){return n&&n.__esModule?n:{default:n}}(t(0)),r=!1;e.default=function(n,e){if("AV"in window){var t=window.AV.version||window.AV.VERSION;parseInt(t.split(".")[0])>2?r=!!AV.applicationId&&!!AV.applicationKey:o.default.deleteInWin("AV",0)}r?e&&e():o.default.sdkLoader("//cdn.jsdelivr.net/npm/leancloud-storage@3/dist/av-min.js","AV",(function(t){var o,a="https://",i=n.app_id||n.appId,s=n.app_key||n.appKey;if(!n.serverURLs)switch(i.slice(-9)){case"-9Nh9j0Va":a+="tab.";break;case"-MdYXbMMI":a+="us."}o=n.serverURLs||a+"avoscloud.com",AV.init({appId:i,appKey:s,serverURLs:o}),r=!0,e&&e()}))}},function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{default:n}}e.__esModule=!0;var r=o(t(37)),a=o(t(56)),i=o(t(57)),s=o(t(54)),l=o(t(55)),c={zh:a.default,"zh-cn":a.default,"zh-CN":a.default,"zh-TW":i.default,en:s.default,"en-US":s.default,ja:l.default,"ja-JP":l.default};e.default=function(n,e){return!c[n]&&n&&e&&(c[n]=e),new r.default({phrases:c[n||"zh"],locale:n})}},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n,e){if(n.$el&&n.$loading.hide().$nodata.hide(),"[object Error]"==={}.toString.call(e)){var t=e.code||e.message||e.error||"";if(isNaN(t))n.$el&&n.$nodata.show('<pre style="text-align:left;"> '+JSON.stringify(e)+"</pre>");else{var o=n.i18n.t("code-"+t),r=(o=="code-"+t?void 0:o)||e.message||e.error||"";101==t||-1==t?n.$nodata.show():n.$el&&n.$nodata.show('<pre style="text-align:left;">Code '+t+": "+r+"</pre>")}}else n.$el&&n.$nodata.show('<pre style="text-align:left;">'+JSON.stringify(e)+"</pre>")}},function(n,e,t){"use strict";function o(n){return n&&n.__esModule?n:{default:n}}e.__esModule=!0;var r=t(36),a=o(r),i=o(t(0)),s=o(t(6)),l=t(33),c=new r.Renderer;c.code=function(n,e){return'<pre><code class="hljs language-'+e+'">'+(e&&hljs.getLanguage(e)?hljs.highlight(e,n).value:i.default.escape(n))+"</code></pre>"},a.default.setOptions({renderer:"hljs"in window?c:new r.Renderer,highlight:function(n,e){return"hljs"in window?e&&hljs.getLanguage(e)&&hljs.highlight(e,n,!0).value||hljs.highlightAuto(n).value:l(n)},gfm:!0,tables:!0,breaks:!0,pedantic:!1,sanitize:!0,smartLists:!0,smartypants:!0,headerPrefi:"v-"}),e.default=function(n){return s.default.parse((0,a.default)(n))}},function(n,e,t){"use strict";e.__esModule=!0,e.recordIPFn=e.fetchQQFn=void 0;var o=function(n){return n&&n.__esModule?n:{default:n}}(t(0)),r=t(2);e.fetchQQFn=function(n,e){var t=o.default.store.get(r.QQCacheKey);t&&t.qq==n?e&&e(t):o.default.ajax({type:"POST",url:"//valine.api.ioliu.cn/getqqinfo",data:{qq:n},success:function(n){n.errmsg||(o.default.store.set(r.QQCacheKey,n),e&&e(n))}})},e.recordIPFn=function(n){o.default.sdkLoader("//api.ip.sb/jsonip?callback=getIP","getIP"),window.getIP=function(e){n&&n(e.ip),o.default.deleteInWin("getIP")}}},function(n,e,t){"use strict";var o=function(n){var e=a(n.getDate(),2),t=a(n.getMonth()+1,2);return a(n.getFullYear(),2)+"-"+t+"-"+e},r=function n(e){return e instanceof Date?e:!isNaN(e)||/^\d+$/.test(e)?new Date(parseInt(e)):/GMT/.test(e||"")?n(new Date(e).getTime()):(e=(e||"").replace(/(^\s*)|(\s*$)/g,"").replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(e))},a=function(n,e){for(var t=n.toString();t.length<e;)t="0"+t;return t};n.exports=function(n,e){if(!n)return"";try{var t=r(n).getTime(),a=(new Date).getTime()-t,i=Math.floor(a/864e5);if(0===i){var s=a%864e5,l=Math.floor(s/36e5);if(0===l){var c=s%36e5,p=Math.floor(c/6e4);if(0===p){var d=c%6e4;return Math.round(d/1e3)+" "+e.t("seconds")}return p+" "+e.t("minutes")}return l+" "+e.t("hours")}return i<0?e.t("now"):i<8?i+" "+e.t("days"):o(n)}catch(n){}}},function(n,e,t){"use strict";e.__esModule=!0;var o=function(n){return n&&n.__esModule?n:{default:n}}(t(51));e.default=function(n){return(0,o.default)(n,{onTagAttr:function(n,e,t,o){return r(n,e,t,o)},onIgnoreTagAttr:function(n,e,t,o){return r(n,e,t,o)}}).replace(/\<\/?div\>/gi,"")};var r=function(n,e,t,r){if(/code|pre|span/gi.test(n)){if("style"==e)return e+'="'+(/^color/gi.test(t)?t:"").replace(/(color:[#0-9a-fA-F]{1,6};?).+/gi,"$1")+'"';if("class"==e)return e+"='"+o.default.escapeAttrValue(t)+"'"}if("img"===n&&["src","class"].indexOf(e)>-1)return e+'="'+o.default.escapeAttrValue(t)+'" referrerPolicy="no-referrer" '}},function(n,e,t){var o;!function(r){"use strict";function a(n,e){var t=(65535&n)+(65535&e);return(n>>16)+(e>>16)+(t>>16)<<16|65535&t}function i(n,e,t,o,r,i){return a(function(n,e){return n<<e|n>>>32-e}(a(a(e,n),a(o,i)),r),t)}function s(n,e,t,o,r,a,s){return i(e&t|~e&o,n,e,r,a,s)}function l(n,e,t,o,r,a,s){return i(e&o|t&~o,n,e,r,a,s)}function c(n,e,t,o,r,a,s){return i(e^t^o,n,e,r,a,s)}function p(n,e,t,o,r,a,s){return i(t^(e|~o),n,e,r,a,s)}function d(n,e){n[e>>5]|=128<<e%32,n[14+(e+64>>>9<<4)]=e;var t,o,r,i,d,u=1732584193,m=-271733879,h=-1732584194,f=271733878;for(t=0;t<n.length;t+=16)o=u,r=m,i=h,d=f,u=s(u,m,h,f,n[t],7,-680876936),f=s(f,u,m,h,n[t+1],12,-389564586),h=s(h,f,u,m,n[t+2],17,606105819),m=s(m,h,f,u,n[t+3],22,-1044525330),u=s(u,m,h,f,n[t+4],7,-176418897),f=s(f,u,m,h,n[t+5],12,1200080426),h=s(h,f,u,m,n[t+6],17,-1473231341),m=s(m,h,f,u,n[t+7],22,-45705983),u=s(u,m,h,f,n[t+8],7,1770035416),f=s(f,u,m,h,n[t+9],12,-1958414417),h=s(h,f,u,m,n[t+10],17,-42063),m=s(m,h,f,u,n[t+11],22,-1990404162),u=s(u,m,h,f,n[t+12],7,1804603682),f=s(f,u,m,h,n[t+13],12,-40341101),h=s(h,f,u,m,n[t+14],17,-1502002290),u=l(u,m=s(m,h,f,u,n[t+15],22,1236535329),h,f,n[t+1],5,-165796510),f=l(f,u,m,h,n[t+6],9,-1069501632),h=l(h,f,u,m,n[t+11],14,643717713),m=l(m,h,f,u,n[t],20,-373897302),u=l(u,m,h,f,n[t+5],5,-701558691),f=l(f,u,m,h,n[t+10],9,38016083),h=l(h,f,u,m,n[t+15],14,-660478335),m=l(m,h,f,u,n[t+4],20,-405537848),u=l(u,m,h,f,n[t+9],5,568446438),f=l(f,u,m,h,n[t+14],9,-1019803690),h=l(h,f,u,m,n[t+3],14,-187363961),m=l(m,h,f,u,n[t+8],20,1163531501),u=l(u,m,h,f,n[t+13],5,-1444681467),f=l(f,u,m,h,n[t+2],9,-51403784),h=l(h,f,u,m,n[t+7],14,1735328473),u=c(u,m=l(m,h,f,u,n[t+12],20,-1926607734),h,f,n[t+5],4,-378558),f=c(f,u,m,h,n[t+8],11,-2022574463),h=c(h,f,u,m,n[t+11],16,1839030562),m=c(m,h,f,u,n[t+14],23,-35309556),u=c(u,m,h,f,n[t+1],4,-1530992060),f=c(f,u,m,h,n[t+4],11,1272893353),h=c(h,f,u,m,n[t+7],16,-155497632),m=c(m,h,f,u,n[t+10],23,-1094730640),u=c(u,m,h,f,n[t+13],4,681279174),f=c(f,u,m,h,n[t],11,-358537222),h=c(h,f,u,m,n[t+3],16,-722521979),m=c(m,h,f,u,n[t+6],23,76029189),u=c(u,m,h,f,n[t+9],4,-640364487),f=c(f,u,m,h,n[t+12],11,-421815835),h=c(h,f,u,m,n[t+15],16,530742520),u=p(u,m=c(m,h,f,u,n[t+2],23,-995338651),h,f,n[t],6,-198630844),f=p(f,u,m,h,n[t+7],10,1126891415),h=p(h,f,u,m,n[t+14],15,-1416354905),m=p(m,h,f,u,n[t+5],21,-57434055),u=p(u,m,h,f,n[t+12],6,1700485571),f=p(f,u,m,h,n[t+3],10,-1894986606),h=p(h,f,u,m,n[t+10],15,-1051523),m=p(m,h,f,u,n[t+1],21,-2054922799),u=p(u,m,h,f,n[t+8],6,1873313359),f=p(f,u,m,h,n[t+15],10,-30611744),h=p(h,f,u,m,n[t+6],15,-1560198380),m=p(m,h,f,u,n[t+13],21,1309151649),u=p(u,m,h,f,n[t+4],6,-145523070),f=p(f,u,m,h,n[t+11],10,-1120210379),h=p(h,f,u,m,n[t+2],15,718787259),m=p(m,h,f,u,n[t+9],21,-343485551),u=a(u,o),m=a(m,r),h=a(h,i),f=a(f,d);return[u,m,h,f]}function u(n){var e,t="",o=32*n.length;for(e=0;e<o;e+=8)t+=String.fromCharCode(n[e>>5]>>>e%32&255);return t}function m(n){var e,t=[];for(t[(n.length>>2)-1]=void 0,e=0;e<t.length;e+=1)t[e]=0;var o=8*n.length;for(e=0;e<o;e+=8)t[e>>5]|=(255&n.charCodeAt(e/8))<<e%32;return t}function h(n){var e,t,o="0123456789abcdef",r="";for(t=0;t<n.length;t+=1)e=n.charCodeAt(t),r+=o.charAt(e>>>4&15)+o.charAt(15&e);return r}function f(n){return unescape(encodeURIComponent(n))}function v(n){return function(n){return u(d(m(n),8*n.length))}(f(n))}function g(n,e){return function(n,e){var t,o,r=m(n),a=[],i=[];for(a[15]=i[15]=void 0,r.length>16&&(r=d(r,8*n.length)),t=0;t<16;t+=1)a[t]=909522486^r[t],i[t]=1549556828^r[t];return o=d(a.concat(m(e)),512+8*e.length),u(d(i.concat(o),640))}(f(n),f(e))}function y(n,e,t){return e?t?g(e,n):function(n,e){return h(g(n,e))}(e,n):t?v(n):function(n){return h(v(n))}(n)}void 0!==(o=function(){return y}.call(e,t,e,n))&&(n.exports=o)}()},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n){var e={},t={Trident:(n=n||navigator.userAgent).indexOf("Trident")>-1||n.indexOf("NET CLR")>-1,Presto:n.indexOf("Presto")>-1,WebKit:n.indexOf("AppleWebKit")>-1,Gecko:n.indexOf("Gecko/")>-1,Safari:n.indexOf("Safari")>-1,Edge:n.indexOf("Edge")>-1||n.indexOf("Edg")>-1,Chrome:n.indexOf("Chrome")>-1||n.indexOf("CriOS")>-1,IE:n.indexOf("MSIE")>-1||n.indexOf("Trident")>-1,Firefox:n.indexOf("Firefox")>-1||n.indexOf("FxiOS")>-1,"Firefox Focus":n.indexOf("Focus")>-1,Chromium:n.indexOf("Chromium")>-1,Opera:n.indexOf("Opera")>-1||n.indexOf("OPR")>-1,Vivaldi:n.indexOf("Vivaldi")>-1,Yandex:n.indexOf("YaBrowser")>-1,Kindle:n.indexOf("Kindle")>-1||n.indexOf("Silk/")>-1,360:n.indexOf("360EE")>-1||n.indexOf("360SE")>-1,UC:n.indexOf("UC")>-1||n.indexOf(" UBrowser")>-1,QQBrowser:n.indexOf("QQBrowser")>-1,QQ:n.indexOf("QQ/")>-1,Baidu:n.indexOf("Baidu")>-1||n.indexOf("BIDUBrowser")>-1,Maxthon:n.indexOf("Maxthon")>-1,Sogou:n.indexOf("MetaSr")>-1||n.indexOf("Sogou")>-1,LBBROWSER:n.indexOf("LBBROWSER")>-1,"2345Explorer":n.indexOf("2345Explorer")>-1,TheWorld:n.indexOf("TheWorld")>-1,XiaoMi:n.indexOf("MiuiBrowser")>-1,Quark:n.indexOf("Quark")>-1,Qiyu:n.indexOf("Qiyu")>-1,Wechat:n.indexOf("MicroMessenger")>-1,Taobao:n.indexOf("AliApp(TB")>-1,Alipay:n.indexOf("AliApp(AP")>-1,Weibo:n.indexOf("Weibo")>-1,Douban:n.indexOf("com.douban.frodo")>-1,Suning:n.indexOf("SNEBUY-APP")>-1,iQiYi:n.indexOf("IqiyiApp")>-1,Windows:n.indexOf("Windows")>-1,Linux:n.indexOf("Linux")>-1||n.indexOf("X11")>-1,macOS:n.indexOf("Macintosh")>-1,Android:n.indexOf("Android")>-1||n.indexOf("Adr")>-1,Ubuntu:n.indexOf("Ubuntu")>-1,FreeBSD:n.indexOf("FreeBSD")>-1,Debian:n.indexOf("Debian")>-1,"Windows Phone":n.indexOf("IEMobile")>-1||n.indexOf("Windows Phone")>-1,BlackBerry:n.indexOf("BlackBerry")>-1||n.indexOf("RIM")>-1||n.indexOf("BB10")>-1,MeeGo:n.indexOf("MeeGo")>-1,Symbian:n.indexOf("Symbian")>-1,iOS:n.indexOf("like Mac OS X")>-1,"Chrome OS":n.indexOf("CrOS")>-1,WebOS:n.indexOf("hpwOS")>-1,Mobile:n.indexOf("Mobi")>-1||n.indexOf("iPh")>-1||n.indexOf("480")>-1,Tablet:n.indexOf("Tablet")>-1||n.indexOf("Pad")>-1||n.indexOf("Nexus 7")>-1};t.Mobile&&(t.Mobile=!(n.indexOf("iPad")>-1));var o={browser:["Safari","Chrome","Edge","IE","Firefox","Firefox Focus","Chromium","Opera","Vivaldi","Yandex","Kindle","360","UC","QQBrowser","QQ","Baidu","Maxthon","Sogou","LBBROWSER","2345Explorer","TheWorld","XiaoMi","Quark","Qiyu","Wechat","Taobao","Alipay","Weibo","Douban","Suning","iQiYi"],os:["Windows","Linux","Mac OS","macOS","Android","Ubuntu","FreeBSD","Debian","iOS","Windows Phone","BlackBerry","MeeGo","Symbian","Chrome OS","WebOS"]};for(var r in o)if(o.hasOwnProperty(r))for(var a=0,i=o[r].length;a<i;a++){var s=o[r][a];t[s]&&(e[r]=s)}var l={Windows:function(){var e=n.replace(/^.*Windows NT ([\d.]+).*$/,"$1");return{6.4:"10",6.3:"8.1",6.2:"8",6.1:"7","6.0":"Vista",5.2:"XP",5.1:"XP","5.0":"2000"}[e]||e},Android:n.replace(/^.*Android ([\d.]+);.*$/,"$1"),iOS:n.replace(/^.*OS ([\d_]+) like.*$/,"$1").replace(/_/g,"."),Debian:n.replace(/^.*Debian\/([\d.]+).*$/,"$1"),"Windows Phone":n.replace(/^.*Windows Phone( OS)? ([\d.]+);.*$/,"$2"),macOS:n.replace(/^.*Mac OS X ([\d_]+).*$/,"$1").replace(/_/g,"."),WebOS:n.replace(/^.*hpwOS\/([\d.]+);.*$/,"$1"),BlackBerry:n.replace(/^.*BB([\d.]+);*$/,"$1")};e.osVersion="";var c=l[e.os];c&&(e.osVersion="function"==typeof c?c():c==n?"":c);var p={Safari:n.replace(/^.*Version\/([\d.]+).*$/,"$1"),Chrome:n.replace(/^.*Chrome\/([\d.]+).*$/,"$1").replace(/^.*CriOS\/([\d.]+).*$/,"$1"),IE:n.replace(/^.*MSIE ([\d.]+).*$/,"$1").replace(/^.*rv:([\d.]+).*$/,"$1"),Edge:n.replace(/^.*Edge?\/([\d.]+).*$/,"$1"),Firefox:n.replace(/^.*Firefox\/([\d.]+).*$/,"$1").replace(/^.*FxiOS\/([\d.]+).*$/,"$1"),"Firefox Focus":n.replace(/^.*Focus\/([\d.]+).*$/,"$1"),Chromium:n.replace(/^.*Chromium\/([\d.]+).*$/,"$1"),Opera:n.replace(/^.*Opera\/([\d.]+).*$/,"$1").replace(/^.*OPR\/([\d.]+).*$/,"$1"),Vivaldi:n.replace(/^.*Vivaldi\/([\d.]+).*$/,"$1"),Yandex:n.replace(/^.*YaBrowser\/([\d.]+).*$/,"$1"),Kindle:n.replace(/^.*Version\/([\d.]+).*$/,"$1"),Maxthon:n.replace(/^.*Maxthon\/([\d.]+).*$/,"$1"),QQBrowser:n.replace(/^.*QQBrowser\/([\d.]+).*$/,"$1"),QQ:n.replace(/^.*QQ\/([\d.]+).*$/,"$1"),Baidu:n.replace(/^.*BIDUBrowser[\s\/]([\d.]+).*$/,"$1"),UC:n.replace(/^.*UC?Browser\/([\d.]+).*$/,"$1"),Sogou:n.replace(/^.*SE ([\d.X]+).*$/,"$1").replace(/^.*SogouMobileBrowser\/([\d.]+).*$/,"$1"),"2345Explorer":n.replace(/^.*2345Explorer\/([\d.]+).*$/,"$1"),TheWorld:n.replace(/^.*TheWorld ([\d.]+).*$/,"$1"),XiaoMi:n.replace(/^.*MiuiBrowser\/([\d.]+).*$/,"$1"),Quark:n.replace(/^.*Quark\/([\d.]+).*$/,"$1"),Qiyu:n.replace(/^.*Qiyu\/([\d.]+).*$/,"$1"),Wechat:n.replace(/^.*MicroMessenger\/([\d.]+).*$/,"$1"),Taobao:n.replace(/^.*AliApp\(TB\/([\d.]+).*$/,"$1"),Alipay:n.replace(/^.*AliApp\(AP\/([\d.]+).*$/,"$1"),Weibo:n.replace(/^.*weibo__([\d.]+).*$/,"$1"),Douban:n.replace(/^.*com.douban.frodo\/([\d.]+).*$/,"$1"),Suning:n.replace(/^.*SNEBUY-APP([\d.]+).*$/,"$1"),iQiYi:n.replace(/^.*IqiyiVersion\/([\d.]+).*$/,"$1")};e.version="";var d=p[e.browser];return d&&(e.version="function"==typeof d?d():d==n?"":d),null==e.browser&&(e.browser="Unknow App"),e}},function(n,e,t){var o,r;r=function(n,e,t){function o(e,r,a){return a=Object.create(o.fn),e&&a.push.apply(a,e.addEventListener?[e]:""+e===e?/</.test(e)?((r=n.createElement(r)).innerHTML=e,r.children):r?(r=o(r)[0])?r[t](e):a:n[t](e):e),a}return o.fn=[],o.one=function(n,e){return o(n,e)[0]||null},o}(document,0,"querySelectorAll"),void 0!==(o=function(){return r}.apply(e,[]))&&(n.exports=o)},function(n,e,t){function o(n){return null==n}function r(n){(n=function(n){var e={};for(var t in n)e[t]=n[t];return e}(n||{})).whiteList=n.whiteList||a.whiteList,n.onAttr=n.onAttr||a.onAttr,n.onIgnoreAttr=n.onIgnoreAttr||a.onIgnoreAttr,n.safeAttrValue=n.safeAttrValue||a.safeAttrValue,this.options=n}var a=t(7),i=t(30);t(8),r.prototype.process=function(n){if(!(n=(n=n||"").toString()))return"";var e=this.options,t=e.whiteList,r=e.onAttr,a=e.onIgnoreAttr,s=e.safeAttrValue;return i(n,(function(n,e,i,l,c){var p=t[i],d=!1;if(!0===p?d=p:"function"==typeof p?d=p(l):p instanceof RegExp&&(d=p.test(l)),!0!==d&&(d=!1),l=s(i,l)){var u,m={position:e,sourcePosition:n,source:c,isWhite:d};return d?o(u=r(i,l,m))?i+":"+l:u:o(u=a(i,l,m))?void 0:u}}))},n.exports=r},function(n,e,t){var o=t(8);n.exports=function(n,e){function t(){if(!a){var t=o.trim(n.slice(i,s)),r=t.indexOf(":");if(-1!==r){var c=o.trim(t.slice(0,r)),p=o.trim(t.slice(r+1));if(c){var d=e(i,l.length,c,p,t);d&&(l+=d+"; ")}}}i=s+1}";"!==(n=o.trimRight(n))[n.length-1]&&(n+=";");for(var r=n.length,a=!1,i=0,s=0,l="";s<r;s++){var c=n[s];if("/"===c&&"*"===n[s+1]){var p=n.indexOf("*/",s+2);if(-1===p)break;i=(s=p+1)+1,a=!1}else"("===c?a=!0:")"===c?a=!1:";"===c?a||t():"\n"===c&&t()}return o.trim(l)}},function(n,e,t){"use strict";var o=t(35),r=Object.prototype.toString,a=Object.prototype.hasOwnProperty,i=function(n,e,t){for(var o=0,r=n.length;o<r;o++)a.call(n,o)&&(null==t?e(n[o],o,n):e.call(t,n[o],o,n))},s=function(n,e,t){for(var o=0,r=n.length;o<r;o++)null==t?e(n.charAt(o),o,n):e.call(t,n.charAt(o),o,n)},l=function(n,e,t){for(var o in n)a.call(n,o)&&(null==t?e(n[o],o,n):e.call(t,n[o],o,n))};n.exports=function(n,e,t){if(!o(e))throw new TypeError("iterator must be a function");var a;arguments.length>=3&&(a=t),"[object Array]"===r.call(n)?i(n,e,a):"string"==typeof n?s(n,e,a):l(n,e,a)}},function(n,e,t){"use strict";var o=Array.prototype.slice,r=Object.prototype.toString;n.exports=function(n){var e=this;if("function"!=typeof e||"[object Function]"!==r.call(e))throw new TypeError("Function.prototype.bind called on incompatible "+e);for(var t,a=o.call(arguments,1),i=function(){if(this instanceof t){var r=e.apply(this,a.concat(o.call(arguments)));return Object(r)===r?r:this}return e.apply(n,a.concat(o.call(arguments)))},s=Math.max(0,e.length-a.length),l=[],c=0;c<s;c++)l.push("$"+c);if(t=Function("binder","return function ("+l.join(",")+"){ return binder.apply(this,arguments); }")(i),e.prototype){var p=function(){};p.prototype=e.prototype,t.prototype=new p,p.prototype=null}return t}},function(n,e,t){n.exports=function(){"use strict";var n=function(n,e){return function(n){var e=n.exports=function(){return new RegExp("(?:"+e.line().source+")|(?:"+e.block().source+")","gm")};e.line=function(){return/(?:^|\s)\/\/(.+?)$/gm},e.block=function(){return/\/\*([\S\s]*?)\*\//gm}}(e={exports:{}}),e.exports}(),e=["23AC69","91C132","F19726","E8552D","1AAB8E","E1147F","2980C1","1BA1E6","9FA0A0","F19726","E30B20","E30B20","A3338B"];return function(t,o){void 0===o&&(o={});var r=o.colors;void 0===r&&(r=e);var a=0,i={},s=new RegExp("("+/[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|\w+/.source+"|"+/</.source+")|("+n().source+")","gmi");return t.replace(s,(function(n,e,t){if(t)return function(n){return'<span style="color: slategray">'+n+"</span>"}(t);if("<"===e)return"&lt;";var o;i[e]?o=i[e]:(o=r[a],i[e]=o);var s='<span style="color: #'+o+'">'+e+"</span>";return a=++a%r.length,s}))}}()},function(n,e,t){"use strict";var o=t(4);n.exports=o.call(Function.call,Object.prototype.hasOwnProperty)},function(n,e,t){"use strict";var o=Function.prototype.toString,r=/^\s*class\b/,a=function(n){try{var e=o.call(n);return r.test(e)}catch(n){return!1}},i=Object.prototype.toString,s="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;n.exports=function(n){if(!n)return!1;if("function"!=typeof n&&"object"!=typeof n)return!1;if("function"==typeof n&&!n.prototype)return!0;if(s)return function(n){try{return!a(n)&&(o.call(n),!0)}catch(n){return!1}}(n);if(a(n))return!1;var e=i.call(n);return"[object Function]"===e||"[object GeneratorFunction]"===e}},function(n,e,t){(function(e){!function(e){"use strict";function t(n){this.tokens=[],this.tokens.links={},this.options=n||h.defaults,this.rules=f.normal,this.options.pedantic?this.rules=f.pedantic:this.options.gfm&&(this.options.tables?this.rules=f.tables:this.rules=f.gfm)}function o(n,e){if(this.options=e||h.defaults,this.links=n,this.rules=v.normal,this.renderer=this.options.renderer||new r,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.");this.options.pedantic?this.rules=v.pedantic:this.options.gfm&&(this.options.breaks?this.rules=v.breaks:this.rules=v.gfm)}function r(n){this.options=n||h.defaults}function a(){}function i(n){this.tokens=[],this.token=null,this.options=n||h.defaults,this.options.renderer=this.options.renderer||new r,this.renderer=this.options.renderer,this.renderer.options=this.options}function s(n,e){return n.replace(e?/&/g:/&(?!#?\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function l(n){return n.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,(function(n,e){return"colon"===(e=e.toLowerCase())?":":"#"===e.charAt(0)?"x"===e.charAt(1)?String.fromCharCode(parseInt(e.substring(2),16)):String.fromCharCode(+e.substring(1)):""}))}function c(n,e){return n=n.source||n,e=e||"",{replace:function(e,t){return t=(t=t.source||t).replace(/(^|[^\[])\^/g,"$1"),n=n.replace(e,t),this},getRegex:function(){return new RegExp(n,e)}}}function p(n,e){return g[" "+n]||(/^[^:]+:\/*[^/]*$/.test(n)?g[" "+n]=n+"/":g[" "+n]=n.replace(/[^/]*$/,"")),n=g[" "+n],"//"===e.slice(0,2)?n.replace(/:[\s\S]*/,":")+e:"/"===e.charAt(0)?n.replace(/(:\/*[^/]*)[\s\S]*/,"$1")+e:n+e}function d(){}function u(n){for(var e,t,o=1;o<arguments.length;o++)for(t in e=arguments[o])Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n}function m(n,e){var t=n.replace(/([^\\])\|/g,"$1 |").split(/ +\| */),o=0;if(t.length>e)t.splice(e);else for(;t.length<e;)t.push("");for(;o<t.length;o++)t[o]=t[o].replace(/\\\|/g,"|");return t}function h(n,e,o){if(null==n)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof n)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(n)+", string expected");if(o||"function"==typeof e){o||(o=e,e=null);var r,a,l=(e=u({},h.defaults,e||{})).highlight,c=0;try{r=t.lex(n,e)}catch(n){return o(n)}a=r.length;var p=function(n){if(n)return e.highlight=l,o(n);var t;try{t=i.parse(r,e)}catch(e){n=e}return e.highlight=l,n?o(n):o(null,t)};if(!l||l.length<3)return p();if(delete e.highlight,!a)return p();for(;c<r.length;c++)!function(n){"code"!==n.type?--a||p():l(n.text,n.lang,(function(e,t){return e?p(e):null==t||t===n.text?--a||p():(n.text=t,n.escaped=!0,void(--a||p()))}))}(r[c])}else try{return e&&(e=u({},h.defaults,e)),i.parse(t.lex(n,e),e)}catch(n){if(n.message+="\nPlease report this to https://github.com/markedjs/marked.",(e||h.defaults).silent)return"<p>An error occurred:</p><pre>"+s(n.message+"",!0)+"</pre>";throw n}}var f={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:d,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,nptable:d,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:"^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?\\?>\\n*|<![A-Z][\\s\\S]*?>\\n*|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,table:d,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading| {0,3}>|<\/?(?:tag)(?: +|\n|\/?>)|<(?:script|pre|style|!--))[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};f.def=c(f.def).replace("label",f._label).replace("title",f._title).getRegex(),f.bullet=/(?:[*+-]|\d+\.)/,f.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/,f.item=c(f.item,"gm").replace(/bull/g,f.bullet).getRegex(),f.list=c(f.list).replace(/bull/g,f.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+f.def.source+")").getRegex(),f._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",f._comment=/<!--(?!-?>)[\s\S]*?-->/,f.html=c(f.html,"i").replace("comment",f._comment).replace("tag",f._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),f.paragraph=c(f.paragraph).replace("hr",f.hr).replace("heading",f.heading).replace("lheading",f.lheading).replace("tag",f._tag).getRegex(),f.blockquote=c(f.blockquote).replace("paragraph",f.paragraph).getRegex(),f.normal=u({},f),f.gfm=u({},f.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\n? *\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/}),f.gfm.paragraph=c(f.paragraph).replace("(?!","(?!"+f.gfm.fences.source.replace("\\1","\\2")+"|"+f.list.source.replace("\\1","\\3")+"|").getRegex(),f.tables=u({},f.gfm,{nptable:/^ *([^|\n ].*\|.*)\n *([-:]+ *\|[-| :]*)(?:\n((?:.*[^>\n ].*(?:\n|$))*)\n*|$)/,table:/^ *\|(.+)\n *\|?( *[-:]+[-| :]*)(?:\n((?: *[^>\n ].*(?:\n|$))*)\n*|$)/}),f.pedantic=u({},f.normal,{html:c("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",f._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/}),t.rules=f,t.lex=function(n,e){return new t(e).lex(n)},t.prototype.lex=function(n){return n=n.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n"),this.token(n,!0)},t.prototype.token=function(n,e){n=n.replace(/^ +$/gm,"");for(var t,o,r,a,i,s,l,c,p,d,u,h,v;n;)if((r=this.rules.newline.exec(n))&&(n=n.substring(r[0].length),r[0].length>1&&this.tokens.push({type:"space"})),r=this.rules.code.exec(n))n=n.substring(r[0].length),r=r[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",text:this.options.pedantic?r:r.replace(/\n+$/,"")});else if(r=this.rules.fences.exec(n))n=n.substring(r[0].length),this.tokens.push({type:"code",lang:r[2],text:r[3]||""});else if(r=this.rules.heading.exec(n))n=n.substring(r[0].length),this.tokens.push({type:"heading",depth:r[1].length,text:r[2]});else if(e&&(r=this.rules.nptable.exec(n))&&(s={type:"table",header:m(r[1].replace(/^ *| *\| *$/g,"")),align:r[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:r[3]?r[3].replace(/\n$/,"").split("\n"):[]}).header.length===s.align.length){for(n=n.substring(r[0].length),c=0;c<s.align.length;c++)/^ *-+: *$/.test(s.align[c])?s.align[c]="right":/^ *:-+: *$/.test(s.align[c])?s.align[c]="center":/^ *:-+ *$/.test(s.align[c])?s.align[c]="left":s.align[c]=null;for(c=0;c<s.cells.length;c++)s.cells[c]=m(s.cells[c],s.header.length);this.tokens.push(s)}else if(r=this.rules.hr.exec(n))n=n.substring(r[0].length),this.tokens.push({type:"hr"});else if(r=this.rules.blockquote.exec(n))n=n.substring(r[0].length),this.tokens.push({type:"blockquote_start"}),r=r[0].replace(/^ *> ?/gm,""),this.token(r,e),this.tokens.push({type:"blockquote_end"});else if(r=this.rules.list.exec(n)){for(n=n.substring(r[0].length),u=(a=r[2]).length>1,this.tokens.push({type:"list_start",ordered:u,start:u?+a:""}),t=!1,d=(r=r[0].match(this.rules.item)).length,c=0;c<d;c++)l=(s=r[c]).length,~(s=s.replace(/^ *([*+-]|\d+\.) +/,"")).indexOf("\n ")&&(l-=s.length,s=this.options.pedantic?s.replace(/^ {1,4}/gm,""):s.replace(new RegExp("^ {1,"+l+"}","gm"),"")),this.options.smartLists&&c!==d-1&&(a===(i=f.bullet.exec(r[c+1])[0])||a.length>1&&i.length>1||(n=r.slice(c+1).join("\n")+n,c=d-1)),o=t||/\n\n(?!\s*$)/.test(s),c!==d-1&&(t="\n"===s.charAt(s.length-1),o||(o=t)),v=void 0,(h=/^\[[ xX]\] /.test(s))&&(v=" "!==s[1],s=s.replace(/^\[[ xX]\] +/,"")),this.tokens.push({type:o?"loose_item_start":"list_item_start",task:h,checked:v}),this.token(s,!1),this.tokens.push({type:"list_item_end"});this.tokens.push({type:"list_end"})}else if(r=this.rules.html.exec(n))n=n.substring(r[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===r[1]||"script"===r[1]||"style"===r[1]),text:r[0]});else if(e&&(r=this.rules.def.exec(n)))n=n.substring(r[0].length),r[3]&&(r[3]=r[3].substring(1,r[3].length-1)),p=r[1].toLowerCase().replace(/\s+/g," "),this.tokens.links[p]||(this.tokens.links[p]={href:r[2],title:r[3]});else if(e&&(r=this.rules.table.exec(n))&&(s={type:"table",header:m(r[1].replace(/^ *| *\| *$/g,"")),align:r[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:r[3]?r[3].replace(/(?: *\| *)?\n$/,"").split("\n"):[]}).header.length===s.align.length){for(n=n.substring(r[0].length),c=0;c<s.align.length;c++)/^ *-+: *$/.test(s.align[c])?s.align[c]="right":/^ *:-+: *$/.test(s.align[c])?s.align[c]="center":/^ *:-+ *$/.test(s.align[c])?s.align[c]="left":s.align[c]=null;for(c=0;c<s.cells.length;c++)s.cells[c]=m(s.cells[c].replace(/^ *\| *| *\| *$/g,""),s.header.length);this.tokens.push(s)}else if(r=this.rules.lheading.exec(n))n=n.substring(r[0].length),this.tokens.push({type:"heading",depth:"="===r[2]?1:2,text:r[1]});else if(e&&(r=this.rules.paragraph.exec(n)))n=n.substring(r[0].length),this.tokens.push({type:"paragraph",text:"\n"===r[1].charAt(r[1].length-1)?r[1].slice(0,-1):r[1]});else if(r=this.rules.text.exec(n))n=n.substring(r[0].length),this.tokens.push({type:"text",text:r[0]});else if(n)throw new Error("Infinite loop on byte: "+n.charCodeAt(0));return this.tokens};var v={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:d,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(href(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,strong:/^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)|^__([^\s])__(?!_)|^\*\*([^\s])\*\*(?!\*)/,em:/^_([^\s][\s\S]*?[^\s_])_(?!_)|^_([^\s_][\s\S]*?[^\s])_(?!_)|^\*([^\s][\s\S]*?[^\s*])\*(?!\*)|^\*([^\s*][\s\S]*?[^\s])\*(?!\*)|^_([^\s_])_(?!_)|^\*([^\s*])\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`]?)\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:d,text:/^[\s\S]+?(?=[\\<!\[`*]|\b_| {2,}\n|$)/,_escapes:/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,_scheme:/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,_email:/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/};v.autolink=c(v.autolink).replace("scheme",v._scheme).replace("email",v._email).getRegex(),v._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,v.tag=c(v.tag).replace("comment",f._comment).replace("attribute",v._attribute).getRegex(),v._label=/(?:\[[^\[\]]*\]|\\[\[\]]?|`[^`]*`|[^\[\]\\])*?/,v._href=/\s*(<(?:\\[<>]?|[^\s<>\\])*>|(?:\\[()]?|\([^\s\x00-\x1f()\\]*\)|[^\s\x00-\x1f()\\])*?)/,v._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,v.link=c(v.link).replace("label",v._label).replace("href",v._href).replace("title",v._title).getRegex(),v.reflink=c(v.reflink).replace("label",v._label).getRegex(),v.normal=u({},v),v.pedantic=u({},v.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,link:c(/^!?\[(label)\]\((.*?)\)/).replace("label",v._label).getRegex(),reflink:c(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",v._label).getRegex()}),v.gfm=u({},v.normal,{escape:c(v.escape).replace("])","~|])").getRegex(),url:c(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/).replace("email",v._email).getRegex(),_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:c(v.text).replace("]|","~]|").replace("|","|https?://|ftp://|www\\.|[a-zA-Z0-9.!#$%&'*+/=?^_`{\\|}~-]+@|").getRegex()}),v.breaks=u({},v.gfm,{br:c(v.br).replace("{2,}","*").getRegex(),text:c(v.gfm.text).replace("{2,}","*").getRegex()}),o.rules=v,o.output=function(n,e,t){return new o(e,t).output(n)},o.prototype.output=function(n){for(var e,t,r,a,i,l="";n;)if(i=this.rules.escape.exec(n))n=n.substring(i[0].length),l+=i[1];else if(i=this.rules.autolink.exec(n))n=n.substring(i[0].length),r="@"===i[2]?"mailto:"+(t=s(this.mangle(i[1]))):t=s(i[1]),l+=this.renderer.link(r,null,t);else if(this.inLink||!(i=this.rules.url.exec(n))){if(i=this.rules.tag.exec(n))!this.inLink&&/^<a /i.test(i[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(i[0])&&(this.inLink=!1),n=n.substring(i[0].length),l+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(i[0]):s(i[0]):i[0];else if(i=this.rules.link.exec(n))n=n.substring(i[0].length),this.inLink=!0,r=i[2],this.options.pedantic?(e=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(r))?(r=e[1],a=e[3]):a="":a=i[3]?i[3].slice(1,-1):"",r=r.trim().replace(/^<([\s\S]*)>$/,"$1"),l+=this.outputLink(i,{href:o.escapes(r),title:o.escapes(a)}),this.inLink=!1;else if((i=this.rules.reflink.exec(n))||(i=this.rules.nolink.exec(n))){if(n=n.substring(i[0].length),e=(i[2]||i[1]).replace(/\s+/g," "),!(e=this.links[e.toLowerCase()])||!e.href){l+=i[0].charAt(0),n=i[0].substring(1)+n;continue}this.inLink=!0,l+=this.outputLink(i,e),this.inLink=!1}else if(i=this.rules.strong.exec(n))n=n.substring(i[0].length),l+=this.renderer.strong(this.output(i[4]||i[3]||i[2]||i[1]));else if(i=this.rules.em.exec(n))n=n.substring(i[0].length),l+=this.renderer.em(this.output(i[6]||i[5]||i[4]||i[3]||i[2]||i[1]));else if(i=this.rules.code.exec(n))n=n.substring(i[0].length),l+=this.renderer.codespan(s(i[2].trim(),!0));else if(i=this.rules.br.exec(n))n=n.substring(i[0].length),l+=this.renderer.br();else if(i=this.rules.del.exec(n))n=n.substring(i[0].length),l+=this.renderer.del(this.output(i[1]));else if(i=this.rules.text.exec(n))n=n.substring(i[0].length),l+=this.renderer.text(s(this.smartypants(i[0])));else if(n)throw new Error("Infinite loop on byte: "+n.charCodeAt(0))}else i[0]=this.rules._backpedal.exec(i[0])[0],n=n.substring(i[0].length),"@"===i[2]?r="mailto:"+(t=s(i[0])):(t=s(i[0]),r="www."===i[1]?"http://"+t:t),l+=this.renderer.link(r,null,t);return l},o.escapes=function(n){return n?n.replace(o.rules._escapes,"$1"):n},o.prototype.outputLink=function(n,e){var t=e.href,o=e.title?s(e.title):null;return"!"!==n[0].charAt(0)?this.renderer.link(t,o,this.output(n[1])):this.renderer.image(t,o,s(n[1]))},o.prototype.smartypants=function(n){return this.options.smartypants?n.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):n},o.prototype.mangle=function(n){if(!this.options.mangle)return n;for(var e,t="",o=n.length,r=0;r<o;r++)e=n.charCodeAt(r),Math.random()>.5&&(e="x"+e.toString(16)),t+="&#"+e+";";return t},r.prototype.code=function(n,e,t){if(this.options.highlight){var o=this.options.highlight(n,e);null!=o&&o!==n&&(t=!0,n=o)}return e?'<pre><code class="'+this.options.langPrefix+s(e,!0)+'">'+(t?n:s(n,!0))+"</code></pre>\n":"<pre><code>"+(t?n:s(n,!0))+"</code></pre>"},r.prototype.blockquote=function(n){return"<blockquote>\n"+n+"</blockquote>\n"},r.prototype.html=function(n){return n},r.prototype.heading=function(n,e,t){return this.options.headerIds?"<h"+e+' id="'+this.options.headerPrefix+t.toLowerCase().replace(/[^\w]+/g,"-")+'">'+n+"</h"+e+">\n":"<h"+e+">"+n+"</h"+e+">\n"},r.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},r.prototype.list=function(n,e,t){var o=e?"ol":"ul";return"<"+o+(e&&1!==t?' start="'+t+'"':"")+">\n"+n+"</"+o+">\n"},r.prototype.listitem=function(n){return"<li>"+n+"</li>\n"},r.prototype.checkbox=function(n){return"<input "+(n?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},r.prototype.paragraph=function(n){return"<p>"+n+"</p>\n"},r.prototype.table=function(n,e){return e&&(e="<tbody>"+e+"</tbody>"),"<table>\n<thead>\n"+n+"</thead>\n"+e+"</table>\n"},r.prototype.tablerow=function(n){return"<tr>\n"+n+"</tr>\n"},r.prototype.tablecell=function(n,e){var t=e.header?"th":"td";return(e.align?"<"+t+' align="'+e.align+'">':"<"+t+">")+n+"</"+t+">\n"},r.prototype.strong=function(n){return"<strong>"+n+"</strong>"},r.prototype.em=function(n){return"<em>"+n+"</em>"},r.prototype.codespan=function(n){return"<code>"+n+"</code>"},r.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"},r.prototype.del=function(n){return"<del>"+n+"</del>"},r.prototype.link=function(n,e,t){if(this.options.sanitize){try{var o=decodeURIComponent(l(n)).replace(/[^\w:]/g,"").toLowerCase()}catch(n){return t}if(0===o.indexOf("javascript:")||0===o.indexOf("vbscript:")||0===o.indexOf("data:"))return t}this.options.baseUrl&&!y.test(n)&&(n=p(this.options.baseUrl,n));try{n=encodeURI(n).replace(/%25/g,"%")}catch(n){return t}var r='<a href="'+s(n)+'"';return e&&(r+=' title="'+e+'"'),r+">"+t+"</a>"},r.prototype.image=function(n,e,t){this.options.baseUrl&&!y.test(n)&&(n=p(this.options.baseUrl,n));var o='<img src="'+n+'" alt="'+t+'"';return e&&(o+=' title="'+e+'"'),o+(this.options.xhtml?"/>":">")},r.prototype.text=function(n){return n},a.prototype.strong=a.prototype.em=a.prototype.codespan=a.prototype.del=a.prototype.text=function(n){return n},a.prototype.link=a.prototype.image=function(n,e,t){return""+t},a.prototype.br=function(){return""},i.parse=function(n,e){return new i(e).parse(n)},i.prototype.parse=function(n){this.inline=new o(n.links,this.options),this.inlineText=new o(n.links,u({},this.options,{renderer:new a})),this.tokens=n.reverse();for(var e="";this.next();)e+=this.tok();return e},i.prototype.next=function(){return this.token=this.tokens.pop()},i.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},i.prototype.parseText=function(){for(var n=this.token.text;"text"===this.peek().type;)n+="\n"+this.next().text;return this.inline.output(n)},i.prototype.tok=function(){switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,l(this.inlineText.output(this.token.text)));case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":var n,e,t,o,r="",a="";for(t="",n=0;n<this.token.header.length;n++)t+=this.renderer.tablecell(this.inline.output(this.token.header[n]),{header:!0,align:this.token.align[n]});for(r+=this.renderer.tablerow(t),n=0;n<this.token.cells.length;n++){for(e=this.token.cells[n],t="",o=0;o<e.length;o++)t+=this.renderer.tablecell(this.inline.output(e[o]),{header:!1,align:this.token.align[o]});a+=this.renderer.tablerow(t)}return this.renderer.table(r,a);case"blockquote_start":for(a="";"blockquote_end"!==this.next().type;)a+=this.tok();return this.renderer.blockquote(a);case"list_start":a="";for(var i=this.token.ordered,s=this.token.start;"list_end"!==this.next().type;)a+=this.tok();return this.renderer.list(a,i,s);case"list_item_start":for(a="",this.token.task&&(a+=this.renderer.checkbox(this.token.checked));"list_item_end"!==this.next().type;)a+="text"===this.token.type?this.parseText():this.tok();return this.renderer.listitem(a);case"loose_item_start":for(a="";"list_item_end"!==this.next().type;)a+=this.tok();return this.renderer.listitem(a);case"html":return this.renderer.html(this.token.text);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText())}};var g={},y=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;d.exec=d,h.options=h.setOptions=function(n){return u(h.defaults,n),h},h.getDefaults=function(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:new r,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tables:!0,xhtml:!1}},h.defaults=h.getDefaults(),h.Parser=i,h.parser=i.parse,h.Renderer=r,h.TextRenderer=a,h.Lexer=t,h.lexer=t.lex,h.InlineLexer=o,h.inlineLexer=o.output,h.parse=h,n.exports=h}(this||"undefined"!=typeof window&&window)}).call(e,t(14))},function(n,e,t){"use strict";function o(n,e){var t=function(n){var e={};return l(n,(function(n,t){l(n,(function(n){e[n]=t}))})),e}(n.pluralTypeToLanguages);return t[e]||t[h.call(e,/-/,1)[0]]||t.en}function r(n,e,t){return n.pluralTypes[o(n,e)](t)}function a(n){return n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(n,e,t,o,a){if("string"!=typeof n)throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");if(null==e)return n;var i=n,s=o||y,l=a||g,c="number"==typeof e?{smart_count:e}:e;if(null!=c.smart_count&&i){var u=h.call(i,f);i=d(u[r(l,t||"en",c.smart_count)]||u[0])}return m.call(i,s,(function(n,e){return p(c,e)&&null!=c[e]?c[e]:n}))}function s(n){var e=n||{};this.phrases={},this.extend(e.phrases||{}),this.currentLocale=e.locale||"en";var t=e.allowMissing?i:null;this.onMissingKey="function"==typeof e.onMissingKey?e.onMissingKey:t,this.warn=e.warn||u,this.tokenRegex=function(n){var e=n&&n.prefix||"%{",t=n&&n.suffix||"}";if(e===f||t===f)throw new RangeError('"'+f+'" token is reserved for pluralization');return new RegExp(a(e)+"(.*?)"+a(t),"g")}(e.interpolation),this.pluralRules=e.pluralRules||g}var l=t(31),c=t(50),p=t(34),d=t(43),u=function(n){c(!1,n)},m=String.prototype.replace,h=String.prototype.split,f="||||",v=function(n){var e=n%100,t=e%10;return 11!==e&&1===t?0:2<=t&&t<=4&&!(e>=12&&e<=14)?1:2},g={pluralTypes:{arabic:function(n){if(n<3)return n;var e=n%100;return e>=3&&e<=10?3:e>=11?4:5},bosnian_serbian:v,chinese:function(){return 0},croatian:v,french:function(n){return n>1?1:0},german:function(n){return 1!==n?1:0},russian:v,lithuanian:function(n){return n%10==1&&n%100!=11?0:n%10>=2&&n%10<=9&&(n%100<11||n%100>19)?1:2},czech:function(n){return 1===n?0:n>=2&&n<=4?1:2},polish:function(n){if(1===n)return 0;var e=n%10;return 2<=e&&e<=4&&(n%100<10||n%100>=20)?1:2},icelandic:function(n){return n%10!=1||n%100==11?1:0},slovenian:function(n){var e=n%100;return 1===e?0:2===e?1:3===e||4===e?2:3}},pluralTypeToLanguages:{arabic:["ar"],bosnian_serbian:["bs-Latn-BA","bs-Cyrl-BA","srl-RS","sr-RS"],chinese:["id","id-ID","ja","ko","ko-KR","lo","ms","th","th-TH","zh"],croatian:["hr","hr-HR"],german:["fa","da","de","en","es","fi","el","he","hi-IN","hu","hu-HU","it","nl","no","pt","sv","tr"],french:["fr","tl","pt-br"],russian:["ru","ru-RU"],lithuanian:["lt"],czech:["cs","cs-CZ","sk"],polish:["pl"],icelandic:["is"],slovenian:["sl-SL"]}},y=/%\{(.*?)\}/g;s.prototype.locale=function(n){return n&&(this.currentLocale=n),this.currentLocale},s.prototype.extend=function(n,e){l(n,(function(n,t){var o=e?e+"."+t:t;"object"==typeof n?this.extend(n,o):this.phrases[o]=n}),this)},s.prototype.unset=function(n,e){"string"==typeof n?delete this.phrases[n]:l(n,(function(n,t){var o=e?e+"."+t:t;"object"==typeof n?this.unset(n,o):delete this.phrases[o]}),this)},s.prototype.clear=function(){this.phrases={}},s.prototype.replace=function(n){this.clear(),this.extend(n)},s.prototype.t=function(n,e){var t,o,r=null==e?{}:e;return"string"==typeof this.phrases[n]?t=this.phrases[n]:"string"==typeof r._?t=r._:this.onMissingKey?o=(0,this.onMissingKey)(n,r,this.currentLocale,this.tokenRegex,this.pluralRules):(this.warn('Missing translation for key: "'+n+'"'),o=n),"string"==typeof t&&(o=i(t,r,this.currentLocale,this.tokenRegex,this.pluralRules)),o},s.prototype.has=function(n){return p(this.phrases,n)},s.transformPhrase=function(n,e,t){return i(n,e,t)},n.exports=s},function(n,e,t){"use strict";function o(n){if(null==n)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(n)}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;n.exports=function(){try{if(!Object.assign)return!1;var n=new String("abc");if(n[5]="de","5"===Object.getOwnPropertyNames(n)[0])return!1;for(var e={},t=0;t<10;t++)e["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(n){return e[n]})).join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach((function(n){o[n]=n})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(n){return!1}}()?Object.assign:function(n,e){for(var t,s,l=o(n),c=1;c<arguments.length;c++){for(var p in t=Object(arguments[c]))a.call(t,p)&&(l[p]=t[p]);if(r){s=r(t);for(var d=0;d<s.length;d++)i.call(t,s[d])&&(l[s[d]]=t[s[d]])}}return l}},function(n,e,t){"use strict";var o;if(!Object.keys){var r=Object.prototype.hasOwnProperty,a=Object.prototype.toString,i=t(10),s=Object.prototype.propertyIsEnumerable,l=!s.call({toString:null},"toString"),c=s.call((function(){}),"prototype"),p=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],d=function(n){var e=n.constructor;return e&&e.prototype===n},u={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},m=function(){if("undefined"==typeof window)return!1;for(var n in window)try{if(!u["$"+n]&&r.call(window,n)&&null!==window[n]&&"object"==typeof window[n])try{d(window[n])}catch(n){return!0}}catch(n){return!0}return!1}(),h=function(n){if("undefined"==typeof window||!m)return d(n);try{return d(n)}catch(n){return!1}};o=function(n){var e=null!==n&&"object"==typeof n,t="[object Function]"===a.call(n),o=i(n),s=e&&"[object String]"===a.call(n),d=[];if(!e&&!t&&!o)throw new TypeError("Object.keys called on a non-object");var u=c&&t;if(s&&n.length>0&&!r.call(n,0))for(var m=0;m<n.length;++m)d.push(String(m));if(o&&n.length>0)for(var f=0;f<n.length;++f)d.push(String(f));else for(var v in n)u&&"prototype"===v||!r.call(n,v)||d.push(String(v));if(l)for(var g=h(n),y=0;y<p.length;++y)g&&"constructor"===p[y]||!r.call(n,p[y])||d.push(p[y]);return d}}n.exports=o},function(n,e,t){"use strict";var o=Array.prototype.slice,r=t(10),a=Object.keys,i=a?function(n){return a(n)}:t(39),s=Object.keys;i.shim=function(){return Object.keys?function(){var n=Object.keys(arguments);return n&&n.length===arguments.length}(1,2)||(Object.keys=function(n){return s(r(n)?o.call(n):n)}):Object.keys=i,Object.keys||i},n.exports=i},function(n,e){function t(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function r(n){if(c===setTimeout)return setTimeout(n,0);if((c===t||!c)&&setTimeout)return c=setTimeout,setTimeout(n,0);try{return c(n,0)}catch(e){try{return c.call(null,n,0)}catch(e){return c.call(this,n,0)}}}function a(){h&&u&&(h=!1,u.length?m=u.concat(m):f=-1,m.length&&i())}function i(){if(!h){var n=r(a);h=!0;for(var e=m.length;e;){for(u=m,m=[];++f<e;)u&&u[f].run();f=-1,e=m.length}u=null,h=!1,function(n){if(p===clearTimeout)return clearTimeout(n);if((p===o||!p)&&clearTimeout)return p=clearTimeout,clearTimeout(n);try{p(n)}catch(e){try{return p.call(null,n)}catch(e){return p.call(this,n)}}}(n)}}function s(n,e){this.fun=n,this.array=e}function l(){}var c,p,d=n.exports={};!function(){try{c="function"==typeof setTimeout?setTimeout:t}catch(n){c=t}try{p="function"==typeof clearTimeout?clearTimeout:o}catch(n){p=o}}();var u,m=[],h=!1,f=-1;d.nextTick=function(n){var e=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)e[t-1]=arguments[t];m.push(new s(n,e)),1!==m.length||h||r(i)},s.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(n){return[]},d.binding=function(n){throw new Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(n){throw new Error("process.chdir is not supported")},d.umask=function(){return 0}},function(n,e,t){"use strict";function o(n){return n=JSON.stringify(n),!!/^\{[\s\S]*\}$/.test(n)}function r(n){if("string"==typeof n)try{return JSON.parse(n)}catch(e){return n}}function a(n){return"[object Function]"==={}.toString.call(n)}function i(n){return"[object Array]"===Object.prototype.toString.call(n)}function s(){if(!(this instanceof s))return new s}function l(n,e){var t=arguments,r=null;if(p||(p=s()),0===t.length)return p.get();if(1===t.length){if("string"==typeof n)return p.get(n);if(o(n))return p.set(n)}if(2===t.length&&"string"==typeof n){if(!e)return p.remove(n);if(e&&"string"==typeof e)return p.set(n,e);e&&a(e)&&(r=null,r=e(n,p.get(n)),l.set(n,r))}if(2===t.length&&i(n)&&a(e))for(var c=0,d=n.length;c<d;c++)r=e(n[c],p.get(n[c])),l.set(n[c],r);return l}Object.defineProperty(e,"__esModule",{value:!0});
/*!
 * storejs v1.0.24
 * Local storage localstorage package provides a simple API
 * 
 * Copyright (c) 2018 kenny wang <wowohoo@qq.com>
 * https://github.com/jaywcjlove/store.js
 * 
 * Licensed under the MIT license.
 */
var c=window.localStorage;c=function(n){var e="_Is_Incognit";try{n.setItem(e,"yes")}catch(e){if("QuotaExceededError"===e.name){var t=function(){};n.__proto__={setItem:t,getItem:t,removeItem:t,clear:t}}}finally{"yes"===n.getItem(e)&&n.removeItem(e)}return n}(c),s.prototype={set:function(n,e){if(n&&!o(n))c.setItem(n,function(n){return void 0===n||"function"==typeof n?n+"":JSON.stringify(n)}(e));else if(o(n))for(var t in n)this.set(t,n[t]);return this},get:function(n){if(!n){var e={};return this.forEach((function(n,t){return e[n]=t})),e}if("?"===n.charAt(0))return this.has(n.substr(1));var t=arguments;if(t.length>1){for(var o={},a=0,i=t.length;a<i;a++){var s=r(c.getItem(t[a]));s&&(o[t[a]]=s)}return o}return r(c.getItem(n))},clear:function(){return c.clear(),this},remove:function(n){var e=this.get(n);return c.removeItem(n),e},has:function(n){return{}.hasOwnProperty.call(this.get(),n)},keys:function(){var n=[];return this.forEach((function(e){n.push(e)})),n},forEach:function(n){for(var e=0,t=c.length;e<t;e++){var o=c.key(e);n(o,this.get(o))}return this},search:function(n){for(var e=this.keys(),t={},o=0,r=e.length;o<r;o++)e[o].indexOf(n)>-1&&(t[e[o]]=this.get(e[o]));return t}};var p=null;for(var d in s.prototype)l[d]=s.prototype[d];e.default=l},function(n,e,t){"use strict";var o=t(12),r=t(9),a=t(11),i=t(13),s=t(49),l=o(i());r(l,{getPolyfill:i,implementation:a,shim:s}),n.exports=l},function(n,e,t){"use strict";var o=t(1),r=o("%String%"),a=o("%TypeError%");n.exports=function(n){if("symbol"==typeof n)throw new a("Cannot convert a Symbol value to a string");return r(n)}},function(n,e,t){"use strict";var o=t(1)("%TypeError%");n.exports=function(n,e){if(null==n)throw new o(e||"Cannot call method on "+n);return n}},function(n,e,t){"use strict";var o=t(1),r=t(12),a=r(o("String.prototype.indexOf"));n.exports=function(n,e){var t=o(n,!!e);return"function"==typeof t&&a(n,".prototype.")?r(t):t}},function(n,e,t){"use strict";(function(e){var o=e.Symbol,r=t(48);n.exports=function(){return"function"==typeof o&&"function"==typeof Symbol&&"symbol"==typeof o("foo")&&"symbol"==typeof Symbol("bar")&&r()}}).call(e,t(14))},function(n,e,t){"use strict";n.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var n={},e=Symbol("test"),t=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;for(e in n[e]=42,n)return!1;if("function"==typeof Object.keys&&0!==Object.keys(n).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(n).length)return!1;var o=Object.getOwnPropertySymbols(n);if(1!==o.length||o[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(n,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var r=Object.getOwnPropertyDescriptor(n,e);if(42!==r.value||!0!==r.enumerable)return!1}return!0}},function(n,e,t){"use strict";var o=t(9),r=t(13);n.exports=function(){var n=r();return o(String.prototype,{trim:n},{trim:function(){return String.prototype.trim!==n}}),n}},function(n,e,t){"use strict";(function(e){var t=function(){};if("production"!==e.env.NODE_ENV){var o=function(n,e){var t=arguments.length;e=new Array(t>1?t-1:0);for(var o=1;o<t;o++)e[o-1]=arguments[o];var r=0,a="Warning: "+n.replace(/%s/g,(function(){return e[r++]}));try{throw new Error(a)}catch(n){}};t=function(n,e,t){var r=arguments.length;t=new Array(r>2?r-2:0);for(var a=2;a<r;a++)t[a-2]=arguments[a];if(void 0===e)throw new Error("`warning(condition, format, ...args)` requires a warning message argument");n||o.apply(null,[e].concat(t))}}n.exports=t}).call(e,t(41))},function(n,e,t){function o(n,e){return new i(e).process(n)}var r=t(15),a=t(16),i=t(52);for(var s in(e=n.exports=o).filterXSS=o,e.FilterXSS=i,r)e[s]=r[s];for(var s in a)e[s]=a[s];"undefined"!=typeof window&&(window.filterXSS=n.exports),"undefined"!=typeof self&&"undefined"!=typeof DedicatedWorkerGlobalScope&&self instanceof DedicatedWorkerGlobalScope&&(self.filterXSS=n.exports)},function(n,e,t){function o(n){return null==n}function r(n){(n=function(n){var e={};for(var t in n)e[t]=n[t];return e}(n||{})).stripIgnoreTag&&(n.onIgnoreTag,n.onIgnoreTag=i.onIgnoreTagStripAll),n.whiteList=n.whiteList||i.whiteList,n.onTag=n.onTag||i.onTag,n.onTagAttr=n.onTagAttr||i.onTagAttr,n.onIgnoreTag=n.onIgnoreTag||i.onIgnoreTag,n.onIgnoreTagAttr=n.onIgnoreTagAttr||i.onIgnoreTagAttr,n.safeAttrValue=n.safeAttrValue||i.safeAttrValue,n.escapeHtml=n.escapeHtml||i.escapeHtml,this.options=n,!1===n.css?this.cssFilter=!1:(n.css=n.css||{},this.cssFilter=new a(n.css))}var a=t(3).FilterCSS,i=t(15),s=t(16),l=s.parseTag,c=s.parseAttr,p=t(5);r.prototype.process=function(n){if(!(n=(n=n||"").toString()))return"";var e=this.options,t=e.whiteList,r=e.onTag,a=e.onIgnoreTag,s=e.onTagAttr,d=e.onIgnoreTagAttr,u=e.safeAttrValue,m=e.escapeHtml,h=this.cssFilter;e.stripBlankChar&&(n=i.stripBlankChar(n)),e.allowCommentTag||(n=i.stripCommentTag(n));var f=!1;e.stripIgnoreTagBody&&(f=i.StripTagBody(e.stripIgnoreTagBody,a),a=f.onIgnoreTag);var v=l(n,(function(n,e,i,l,f){var v,g={sourcePosition:n,position:e,isClosing:f,isWhite:t.hasOwnProperty(i)};if(!o(v=r(i,l,g)))return v;if(g.isWhite){if(g.isClosing)return"</"+i+">";var y=function(n){var e=p.spaceIndex(n);if(-1===e)return{html:"",closing:"/"===n[n.length-2]};var t="/"===(n=p.trim(n.slice(e+1,-1)))[n.length-1];return t&&(n=p.trim(n.slice(0,-1))),{html:n,closing:t}}(l),b=t[i],x=c(y.html,(function(n,e){var t,r=-1!==p.indexOf(b,n);return o(t=s(i,n,e,r))?r?(e=u(i,n,e,h))?n+'="'+e+'"':n:o(t=d(i,n,e,r))?void 0:t:t}));return l="<"+i,x&&(l+=" "+x),y.closing&&(l+=" /"),l+">"}return o(v=a(i,l,g))?m(l):v}),m);return f&&(v=f.remove(v)),v},n.exports=r},function(n,e){n.exports={smile:"e3/2018new_weixioa02_org.png",lovely:"09/2018new_keai_org.png",happy:"1e/2018new_taikaixin_org.png",clap:"6e/2018new_guzhang_thumb.png",whee:"33/2018new_xixi_thumb.png",haha:"8f/2018new_haha_thumb.png","laugh and cry":"4a/2018new_xiaoku_thumb.png",wink:"43/2018new_jiyan_org.png",greddy:"fa/2018new_chanzui_org.png",awkward:"a3/2018new_heixian_thumb.png",sweat:"28/2018new_han_org.png","pick nose":"9a/2018new_wabi_thumb.png",hum:"7c/2018new_heng_thumb.png",angry:"f6/2018new_nu_thumb.png",grievance:"a5/2018new_weiqu_thumb.png",poor:"96/2018new_kelian_org.png",disappoint:"aa/2018new_shiwang_thumb.png",sad:"ee/2018new_beishang_org.png",tear:"6e/2018new_leimu_org.png","no way":"83/2018new_kuxiao_org.png",shy:"c1/2018new_haixiu_org.png",dirt:"10/2018new_wu_thumb.png","love you":"f6/2018new_aini_org.png",kiss:"2c/2018new_qinqin_thumb.png",amorousness:"9d/2018new_huaxin_org.png",longing:"c9/2018new_chongjing_org.png",desire:"3e/2018new_tianping_thumb.png","bad laugh":"4d/2018new_huaixiao_org.png",blackness:"9e/2018new_yinxian_org.png","laugh without word":"2d/2018new_xiaoerbuyu_org.png",titter:"71/2018new_touxiao_org.png",cool:"c4/2018new_ku_org.png","not easy":"aa/2018new_bingbujiandan_thumb.png",think:"30/2018new_sikao_org.png",question:"b8/2018new_ningwen_org.png","no idea":"2a/2018new_wenhao_thumb.png",dizzy:"07/2018new_yun_thumb.png",bomb:"a2/2018new_shuai_thumb.png",bone:"a1/2018new_kulou_thumb.png","be quiet":"b0/2018new_xu_org.png","shut up":"62/2018new_bizui_org.png",stupid:"dd/2018new_shayan_org.png","surprise ":"49/2018new_chijing_org.png",vomit:"08/2018new_tu_org.png",cold:"40/2018new_kouzhao_thumb.png",sick:"3b/2018new_shengbing_thumb.png",bye:"fd/2018new_baibai_thumb.png","look down on":"da/2018new_bishi_org.png","white eye":"ef/2018new_landelini_org.png","left hum":"43/2018new_zuohengheng_thumb.png","right hum":"c1/2018new_youhengheng_thumb.png",crazy:"17/2018new_zhuakuang_org.png","scold ":"87/2018new_zhouma_thumb.png","hit on face":"cb/2018new_dalian_org.png",wow:"ae/2018new_ding_org.png",fan:"86/2018new_hufen02_org.png",money:"a2/2018new_qian_thumb.png",yawn:"55/2018new_dahaqian_org.png",sleepy:"3c/2018new_kun_thumb.png",sleep:"e2/2018new_shuijiao_thumb.png","watermelon ":"01/2018new_chigua_thumb.png",doge:"a1/2018new_doge02_org.png",dog:"22/2018new_erha_org.png",cat:"7b/2018new_miaomiao_thumb.png",thumb:"e6/2018new_zan_org.png",good:"8a/2018new_good_org.png",ok:"45/2018new_ok_org.png",yeah:"29/2018new_ye_thumb.png","shack hand":"e9/2018new_woshou_thumb.png",bow:"e7/2018new_zuoyi_org.png",come:"42/2018new_guolai_thumb.png",punch:"86/2018new_quantou_thumb.png"}},function(n,e){n.exports={nick:"NickName",mail:"E-Mail",link:"Website(http://)",nickFail:"NickName cannot be less than 3 bytes.",mailFail:"Please confirm your email address.",sofa:"No comment yet.",submit:"Submit",reply:"Reply",cancelReply:"Cancel reply",comments:"Comments",cancel:"Cancel",confirm:"Confirm",continue:"Continue",more:"Load More...",preview:"Preview",emoji:"Emoji",expand:"See more....",seconds:"seconds ago",minutes:"minutes ago",hours:"hours ago",days:"days ago",now:"just now",uploading:"Uploading ...",uploadDone:"Upload completed!",busy:"Submit is busy, please wait...","code-98":"Valine initialization failed, please check your version of av-min.js.","code-99":"Valine initialization failed, Please check the `el` element in the init method.","code-100":"Valine initialization failed, Please check your appId and appKey.","code-140":"The total number of API calls today has exceeded the development version limit.","code-401":"Unauthorized operation, Please check your appId and appKey.","code-403":"Access denied by API domain white list, Please check your security domain."}},function(n,e){n.exports={nick:"ニックネーム",mail:"メールアドレス",link:"サイト(http://)",nickFail:"3バイト以上のニックネームをご入力ください.",mailFail:"メールアドレスをご確認ください.",sofa:"コメントしましょう~",submit:"提出する",reply:"返信する",cancelReply:"キャンセル",comments:"コメント",cancel:"キャンセル",confirm:"確認する",continue:"继续",more:"さらに読み込む...",preview:"プレビュー",emoji:"絵文字",expand:"もっと見る",seconds:"秒前",minutes:"分前",hours:"時間前",days:"日前",now:"たっだ今",uploading:"アップロード中...",uploadDone:"アップロードが完了しました!",busy:"20 秒間隔で提出してください    ...","code-98":"ロードエラーです。av-min.js のバージョンを確認してください.","code-99":"ロードエラーです。initにある`el`エレメントを確認ください.","code-100":"ロードエラーです。AppIdとAppKeyを確認ください.","code-140":"今日のAPIコールの総数が開発バージョンの上限を超えた.","code-401":"権限が制限されています。AppIdとAppKeyを確認ください.","code-403":"アクセスがAPIなどに制限されました、ドメイン名のセキュリティ設定を確認ください"}},function(n,e){n.exports={nick:"昵称",mail:"邮箱",link:"网址(http://)",nickFail:"昵称不能少于3个字符",mailFail:"请填写正确的邮件地址",sofa:"来发评论吧~",submit:"提交",reply:"回复",cancelReply:"取消回复",comments:"评论",cancel:"取消",confirm:"确认",continue:"继续",more:"加载更多...",preview:"预览",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分钟前",hours:"小时前",days:"天前",now:"刚刚",uploading:"正在传输...",uploadDone:"传输完成!",busy:"操作频繁，请稍候再试...","code-98":"Valine 初始化失败，请检查 av-min.js 版本","code-99":"Valine 初始化失败，请检查init中的`el`元素.","code-100":"Valine 初始化失败，请检查你的AppId和AppKey.","code-140":"今日 API 调用总次数已超过开发版限制.","code-401":"未经授权的操作，请检查你的AppId和AppKey.","code-403":"访问被API域名白名单拒绝，请检查你的安全域名设置."}},function(n,e){n.exports={nick:"暱稱",mail:"郵箱",link:"網址(http://)",nickFail:"昵稱不能少於3個字符",mailFail:"請填寫正確的郵件地址",sofa:"來發評論吧~",submit:"提交",reply:"回覆",cancelReply:"取消回覆",comments:"評論",cancel:"取消",confirm:"確認",continue:"繼續",more:"加載更多...",preview:"預覽",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分鐘前",hours:"小時前",days:"天前",now:"剛剛",uploading:"正在上傳...",uploadDone:"上傳完成!",busy:"操作頻繁，請稍候再試...","code-98":"Valine 初始化失敗，請檢查 av-min.js 版本","code-99":"Valine 初始化失敗，請檢查init中的`el`元素.","code-100":"Valine 初始化失敗，請檢查你的AppId和AppKey.","code-140":"今日 API 調用總次數已超過開發版限制.","code-401":"未經授權的操作，請檢查你的AppId和AppKey.","code-403":"訪問被API域名白名單拒絕，請檢查你的安全域名設置."}},function(n,e,t){var o=t(59);"string"==typeof o&&(o=[[n.i,o,""]]);var r={transform:void 0};t(61)(o,r),o.locals&&(n.exports=o.locals)},function(n,e,t){(n.exports=t(60)(!1)).push([n.i,'.v[data-class=v]{font-size:16px;text-align:left}.v[data-class=v] *{-webkit-box-sizing:border-box;box-sizing:border-box;line-height:1.75}.v[data-class=v] .status-bar,.v[data-class=v] .veditor,.v[data-class=v] .vinput,.v[data-class=v] p,.v[data-class=v] pre code{color:#555}.v[data-class=v] .vsys,.v[data-class=v] .vtime{color:#b3b3b3}.v[data-class=v] .text-right{text-align:right}.v[data-class=v] .text-center{text-align:center}.v[data-class=v] img{max-width:100%;border:none}.v[data-class=v] hr{margin:.825em 0;border-color:#f6f6f6;border-style:dashed}.v[data-class=v].hide-avatar .vimg{display:none}.v[data-class=v] a{position:relative;cursor:pointer;color:#1abc9c;text-decoration:none;display:inline-block}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] code,.v[data-class=v] pre{background-color:#f8f8f8;padding:.2em .4em;border-radius:3px;font-size:85%;margin:0}.v[data-class=v] pre{padding:10px;overflow:auto;line-height:1.45}.v[data-class=v] pre code{padding:0;background:transparent;white-space:pre-wrap;word-break:keep-all}.v[data-class=v] blockquote{color:#666;margin:.5em 0;padding:0 0 0 1em;border-left:8px solid hsla(0,0%,93%,.5)}.v[data-class=v] .vinput{border:none;resize:none;outline:none;padding:10px 5px;max-width:100%;font-size:.775em}.v[data-class=v] input[type=checkbox],.v[data-class=v] input[type=radio]{display:inline-block;vertical-align:middle;margin-top:-2px}.v[data-class=v] .vicon{cursor:pointer;display:inline-block;overflow:hidden;fill:#555;vertical-align:middle}.v[data-class=v] .vicon+.vicon{margin-left:10px}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vrow{font-size:0;padding:10px 0}.v[data-class=v] .vrow .vcol{display:inline-block;vertical-align:middle;font-size:14px}.v[data-class=v] .vrow .vcol.vcol-20{width:20%}.v[data-class=v] .vrow .vcol.vcol-30{width:30%}.v[data-class=v] .vrow .vcol.vcol-40{width:40%}.v[data-class=v] .vrow .vcol.vcol-50{width:50%}.v[data-class=v] .vrow .vcol.vcol-60{width:60%}.v[data-class=v] .vrow .vcol.vcol-70{width:70%}.v[data-class=v] .vrow .vcol.vcol-80{width:80%}.v[data-class=v] .vrow .vcol.vctrl{font-size:12px}.v[data-class=v] .emoji,.v[data-class=v] .vemoji{max-width:25px;vertical-align:middle;margin:0 1px;display:inline-block}.v[data-class=v] .vwrap{border:1px solid #f0f0f0;border-radius:4px;margin-bottom:10px;overflow:hidden;position:relative;padding:10px}.v[data-class=v] .vwrap input{background:transparent}.v[data-class=v] .vwrap .vedit{position:relative;padding-top:10px}.v[data-class=v] .vwrap .cancel-reply-btn{position:absolute;right:5px;top:5px;cursor:pointer}.v[data-class=v] .vwrap .vemojis{display:none;font-size:18px;max-height:145px;overflow:auto;padding-bottom:10px;-webkit-box-shadow:0 0 1px #f0f0f0;box-shadow:0 0 1px #f0f0f0}.v[data-class=v] .vwrap .vemojis i{font-style:normal;padding-top:7px;width:36px;cursor:pointer;text-align:center;display:inline-block;vertical-align:middle}.v[data-class=v] .vwrap .vpreview{padding:7px;-webkit-box-shadow:0 0 1px #f0f0f0;box-shadow:0 0 1px #f0f0f0}.v[data-class=v] .vwrap .vheader .vinput{width:33.33%;border-bottom:1px dashed #dedede}.v[data-class=v] .vwrap .vheader.item2 .vinput{width:50%}.v[data-class=v] .vwrap .vheader.item1 .vinput{width:100%}.v[data-class=v] .vwrap .vheader .vinput:focus{border-bottom-color:#eb5055}@media screen and (max-width:520px){.v[data-class=v] .vwrap .vheader.item2 .vinput,.v[data-class=v] .vwrap .vheader .vinput{width:100%}}.v[data-class=v] .vpower{color:#999;font-size:.75em;padding:.5em 0}.v[data-class=v] .vpower a{font-size:.75em}.v[data-class=v] .vcount{padding:5px;font-weight:600;font-size:1.25em}.v[data-class=v] ol,.v[data-class=v] ul{padding:0;margin-left:1.25em}.v[data-class=v] .txt-center{text-align:center}.v[data-class=v] .txt-right{text-align:right}.v[data-class=v] .pd5{padding:5px}.v[data-class=v] .pd10{padding:10px}.v[data-class=v] .veditor{width:100%;min-height:8.75em;font-size:.875em;background:transparent;resize:vertical;-webkit-transition:all .25s ease;transition:all .25s ease}.v[data-class=v] .vbtn{-webkit-transition-duration:.4s;transition-duration:.4s;text-align:center;color:#555;border:1px solid #ededed;border-radius:.3em;display:inline-block;background:transparent;margin-bottom:0;font-weight:400;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;white-space:nowrap;padding:.5em 1.25em;font-size:.875em;line-height:1.42857143;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:none}.v[data-class=v] .vbtn+.vbtn{margin-left:1.25em}.v[data-class=v] .vbtn:active,.v[data-class=v] .vbtn:hover{color:#3090e4;border-color:#3090e4}.v[data-class=v] .vbtn:disabled{border-color:#e1e1e1;color:#e1e1e1;background-color:#fdfafa;cursor:not-allowed}.v[data-class=v] .vempty{padding:1.25em;text-align:center;color:#555;overflow:auto}.v[data-class=v] .vsys{display:inline-block;padding:.2em .5em;font-size:.75em;border-radius:.2em;margin-right:.3em}@media screen and (max-width:520px){.v[data-class=v] .vsys{display:none}}.v[data-class=v] .vcards{width:100%}.v[data-class=v] .vcards .vcard{padding-top:1.25em;position:relative;display:block}.v[data-class=v] .vcards .vcard:after{content:"";clear:both;display:block}.v[data-class=v] .vcards .vcard .vimg{width:3.125em;height:3.125em;float:left;border-radius:50%;margin-right:.7525em;border:1px solid #f5f5f5;padding:.125em}@media screen and (max-width:720px){.v[data-class=v] .vcards .vcard .vimg{width:2.5em;height:2.5em}}.v[data-class=v] .vcards .vcard .vhead{line-height:1.5;margin-top:0}.v[data-class=v] .vcards .vcard .vhead .vnick{position:relative;font-size:.875em;font-weight:500;margin-right:.875em;cursor:pointer;text-decoration:none;display:inline-block}.v[data-class=v] .vcards .vcard .vhead .vnick:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vh{overflow:hidden;padding-bottom:.5em;border-bottom:1px dashed #f5f5f5}.v[data-class=v] .vcards .vcard .vh .vtime{font-size:.75em;margin-right:.875em}.v[data-class=v] .vcards .vcard .vh .vmeta{line-height:1;position:relative}.v[data-class=v] .vcards .vcard .vh .vmeta .vat{font-size:.8125em;color:#ef2f11;cursor:pointer;float:right}.v[data-class=v] .vcards .vcard:last-child .vh{border-bottom:none}.v[data-class=v] .vcards .vcard .vcontent{word-wrap:break-word;word-break:break-all;font-size:.875em;line-height:2;position:relative;margin-bottom:.75em;padding-top:.625em}.v[data-class=v] .vcards .vcard .vcontent.expand{cursor:pointer;max-height:8em;overflow:hidden}.v[data-class=v] .vcards .vcard .vcontent.expand:before{display:block;content:"";position:absolute;width:100%;left:0;top:0;bottom:3.15em;background:-webkit-gradient(linear,left top,left bottom,from(hsla(0,0%,100%,0)),to(hsla(0,0%,100%,.9)));background:linear-gradient(180deg,hsla(0,0%,100%,0),hsla(0,0%,100%,.9));z-index:999}.v[data-class=v] .vcards .vcard .vcontent.expand:after{display:block;content:attr(data-expand);text-align:center;color:#828586;position:absolute;width:100%;height:3.15em;line-height:3.15em;left:0;bottom:0;z-index:999;background:hsla(0,0%,100%,.9)}.v[data-class=v] .vcards .vcard .vquote{padding-left:1em;border-left:1px dashed hsla(0,0%,93%,.5)}.v[data-class=v] .vcards .vcard .vquote .vimg{width:2.225em;height:2.225em}.v[data-class=v] .vpage .vmore{margin:1em 0}.v[data-class=v] .clear{content:"";display:block;clear:both}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes pulse{50%{background:#dcdcdc}}@keyframes pulse{50%{background:#dcdcdc}}.v[data-class=v] .vspinner{width:22px;height:22px;display:inline-block;border:6px double #a0a0a0;border-top-color:transparent;border-bottom-color:transparent;border-radius:50%;-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear;position:relative;vertical-align:middle;margin:0 5px}.dark .v[data-class=v] .status-bar,.dark .v[data-class=v] .veditor,.dark .v[data-class=v] .vinput,.dark .v[data-class=v] p,.dark .v[data-class=v] pre code,.night .v[data-class=v] .status-bar,.night .v[data-class=v] .veditor,.night .v[data-class=v] .vinput,.night .v[data-class=v] p,.night .v[data-class=v] pre code,.theme__dark .v[data-class=v] .status-bar,.theme__dark .v[data-class=v] .veditor,.theme__dark .v[data-class=v] .vinput,.theme__dark .v[data-class=v] p,.theme__dark .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] .status-bar,[data-theme=dark] .v[data-class=v] .veditor,[data-theme=dark] .v[data-class=v] .vinput,[data-theme=dark] .v[data-class=v] p,[data-theme=dark] .v[data-class=v] pre code{color:#b2b2b5}.dark .v[data-class=v] .vsys,.dark .v[data-class=v] .vtime,.night .v[data-class=v] .vsys,.night .v[data-class=v] .vtime,.theme__dark .v[data-class=v] .vsys,.theme__dark .v[data-class=v] .vtime,[data-theme=dark] .v[data-class=v] .vsys,[data-theme=dark] .v[data-class=v] .vtime{color:#929298}.dark .v[data-class=v] code,.dark .v[data-class=v] pre,.dark .v[data-class=v] pre code,.night .v[data-class=v] code,.night .v[data-class=v] pre,.night .v[data-class=v] pre code,.theme__dark .v[data-class=v] code,.theme__dark .v[data-class=v] pre,.theme__dark .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] code,[data-theme=dark] .v[data-class=v] pre,[data-theme=dark] .v[data-class=v] pre code{color:#929298;background-color:#151414}.dark .v[data-class=v] .vwrap,.night .v[data-class=v] .vwrap,.theme__dark .v[data-class=v] .vwrap,[data-theme=dark] .v[data-class=v] .vwrap{border-color:#b2b2b5}.dark .v[data-class=v] .vicon,.night .v[data-class=v] .vicon,.theme__dark .v[data-class=v] .vicon,[data-theme=dark] .v[data-class=v] .vicon{fill:#b2b2b5}.dark .v[data-class=v] .vicon.actived,.night .v[data-class=v] .vicon.actived,.theme__dark .v[data-class=v] .vicon.actived,[data-theme=dark] .v[data-class=v] .vicon.actived{fill:#66b1ff}.dark .v[data-class=v] .vbtn,.night .v[data-class=v] .vbtn,.theme__dark .v[data-class=v] .vbtn,[data-theme=dark] .v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.dark .v[data-class=v] .vbtn:hover,.night .v[data-class=v] .vbtn:hover,.theme__dark .v[data-class=v] .vbtn:hover,[data-theme=dark] .v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.dark .v[data-class=v] a:hover,.night .v[data-class=v] a:hover,.theme__dark .v[data-class=v] a:hover,[data-theme=dark] .v[data-class=v] a:hover{color:#d7191a}.dark .v[data-class=v] .vcards .vcard .vcontent.expand:before,.night .v[data-class=v] .vcards .vcard .vcontent.expand:before,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand:before,[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand:before{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.3)),to(rgba(0,0,0,.7)));background:linear-gradient(180deg,rgba(0,0,0,.3),rgba(0,0,0,.7))}.dark .v[data-class=v] .vcards .vcard .vcontent.expand:after,.night .v[data-class=v] .vcards .vcard .vcontent.expand:after,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand:after,[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand:after{background:rgba(0,0,0,.7)}@media (prefers-color-scheme:dark){.v[data-class=v] .status-bar,.v[data-class=v] .veditor,.v[data-class=v] .vinput,.v[data-class=v] p,.v[data-class=v] pre code{color:#b2b2b5}.v[data-class=v] .vsys,.v[data-class=v] .vtime{color:#929298}.v[data-class=v] code,.v[data-class=v] pre,.v[data-class=v] pre code{color:#929298;background-color:#151414}.v[data-class=v] .vwrap{border-color:#b2b2b5}.v[data-class=v] .vicon{fill:#b2b2b5}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vcontent.expand:before{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.3)),to(rgba(0,0,0,.7)));background:linear-gradient(180deg,rgba(0,0,0,.3),rgba(0,0,0,.7))}.v[data-class=v] .vcards .vcard .vcontent.expand:after{background:rgba(0,0,0,.7)}}',""])},function(n,e){function t(n,e){var t=n[1]||"",o=n[3];if(!o)return t;if(e&&"function"==typeof btoa){var r=function(n){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"}(o);return[t].concat(o.sources.map((function(n){return"/*# sourceURL="+o.sourceRoot+n+" */"}))).concat([r]).join("\n")}return[t].join("\n")}n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var o=t(e,n);return e[2]?"@media "+e[2]+"{"+o+"}":o})).join("")},e.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var o={},r=0;r<this.length;r++){var a=this[r][0];"number"==typeof a&&(o[a]=!0)}for(r=0;r<n.length;r++){var i=n[r];"number"==typeof i[0]&&o[i[0]]||(t&&!i[2]?i[2]=t:t&&(i[2]="("+i[2]+") and ("+t+")"),e.push(i))}},e}},function(n,e,t){function o(n,e){for(var t=0;t<n.length;t++){var o=n[t],r=h[o.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](o.parts[a]);for(;a<o.parts.length;a++)r.parts.push(p(o.parts[a],e))}else{var i=[];for(a=0;a<o.parts.length;a++)i.push(p(o.parts[a],e));h[o.id]={id:o.id,refs:1,parts:i}}}}function r(n,e){for(var t=[],o={},r=0;r<n.length;r++){var a=n[r],i=e.base?a[0]+e.base:a[0],s={css:a[1],media:a[2],sourceMap:a[3]};o[i]?o[i].parts.push(s):t.push(o[i]={id:i,parts:[s]})}return t}function a(n,e){var t=v(n.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=b[b.length-1];if("top"===n.insertAt)o?o.nextSibling?t.insertBefore(e,o.nextSibling):t.appendChild(e):t.insertBefore(e,t.firstChild),b.push(e);else{if("bottom"!==n.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");t.appendChild(e)}}function i(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var e=b.indexOf(n);e>=0&&b.splice(e,1)}function s(n){var e=document.createElement("style");return n.attrs.type="text/css",c(e,n.attrs),a(n,e),e}function l(n){var e=document.createElement("link");return n.attrs.type="text/css",n.attrs.rel="stylesheet",c(e,n.attrs),a(n,e),e}function c(n,e){Object.keys(e).forEach((function(t){n.setAttribute(t,e[t])}))}function p(n,e){var t,o,r,a;if(e.transform&&n.css){if(!(a=e.transform(n.css)))return function(){};n.css=a}if(e.singleton){var c=y++;t=g||(g=s(e)),o=d.bind(null,t,c,!1),r=d.bind(null,t,c,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=l(e),o=m.bind(null,t,e),r=function(){i(t),t.href&&URL.revokeObjectURL(t.href)}):(t=s(e),o=u.bind(null,t),r=function(){i(t)});return o(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;o(n=e)}else r()}}function d(n,e,t,o){var r=t?"":o.css;if(n.styleSheet)n.styleSheet.cssText=_(e,r);else{var a=document.createTextNode(r),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(a,i[e]):n.appendChild(a)}}function u(n,e){var t=e.css,o=e.media;if(o&&n.setAttribute("media",o),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}function m(n,e,t){var o=t.css,r=t.sourceMap,a=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||a)&&(o=x(o)),r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var i=new Blob([o],{type:"text/css"}),s=n.href;n.href=URL.createObjectURL(i),s&&URL.revokeObjectURL(s)}var h={},f=function(n){var e;return function(){return void 0===e&&(e=n.apply(this,arguments)),e}}((function(){return window&&document&&document.all&&!window.atob})),v=function(n){var e={};return function(t){return void 0===e[t]&&(e[t]=n.call(this,t)),e[t]}}((function(n){return document.querySelector(n)})),g=null,y=0,b=[],x=t(62);n.exports=function(n,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=f()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var t=r(n,e);return o(t,e),function(n){for(var a=[],i=0;i<t.length;i++){var s=t[i];(l=h[s.id]).refs--,a.push(l)}for(n&&o(r(n,e),e),i=0;i<a.length;i++){var l;if(0===(l=a[i]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete h[l.id]}}}};var _=function(){var n=[];return function(e,t){return n[e]=t,n.filter(Boolean).join("\n")}}()},function(n,e){n.exports=function(n){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var t=e.protocol+"//"+e.host,o=t+e.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(n,e){var r,a=e.trim().replace(/^"(.*)"$/,(function(n,e){return e})).replace(/^'(.*)'$/,(function(n,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(a)?n:(r=0===a.indexOf("//")?a:0===a.indexOf("/")?t+a:o+a.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")}))}},function(n,e,t){t(58),n.exports=t(18)}])},function(n,e,t){"use strict";t(251)},function(n,e,t){"use strict";var o=t(467),r=t(252),a=t(156),i=Object.prototype.hasOwnProperty,s={brackets:function(n){return n+"[]"},comma:"comma",indices:function(n,e){return n+"["+e+"]"},repeat:function(n){return n}},l=Array.isArray,c=Array.prototype.push,p=function(n,e){c.apply(n,l(e)?e:[e])},d=Date.prototype.toISOString,u=a.default,m={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:r.encode,encodeValuesOnly:!1,format:u,formatter:a.formatters[u],indices:!1,serializeDate:function(n){return d.call(n)},skipNulls:!1,strictNullHandling:!1},h=function n(e,t,a,i,s,c,d,u,h,f,v,g,y,b,x){var _,k=e;if(x.has(e))throw new RangeError("Cyclic object value");if("function"==typeof d?k=d(t,k):k instanceof Date?k=f(k):"comma"===a&&l(k)&&(k=r.maybeMap(k,(function(n){return n instanceof Date?f(n):n}))),null===k){if(i)return c&&!y?c(t,m.encoder,b,"key",v):t;k=""}if("string"==typeof(_=k)||"number"==typeof _||"boolean"==typeof _||"symbol"==typeof _||"bigint"==typeof _||r.isBuffer(k))return c?[g(y?t:c(t,m.encoder,b,"key",v))+"="+g(c(k,m.encoder,b,"value",v))]:[g(t)+"="+g(String(k))];var w,j=[];if(void 0===k)return j;if("comma"===a&&l(k))w=[{value:k.length>0?k.join(",")||null:void 0}];else if(l(d))w=d;else{var E=Object.keys(k);w=u?E.sort(u):E}for(var S=0;S<w.length;++S){var A=w[S],z="object"==typeof A&&void 0!==A.value?A.value:k[A];if(!s||null!==z){var T=l(k)?"function"==typeof a?a(t,A):t:t+(h?"."+A:"["+A+"]");x.set(e,!0);var O=o();p(j,n(z,T,a,i,s,c,d,u,h,f,v,g,y,b,O))}}return j};n.exports=function(n,e){var t,r=n,c=function(n){if(!n)return m;if(null!==n.encoder&&void 0!==n.encoder&&"function"!=typeof n.encoder)throw new TypeError("Encoder has to be a function.");var e=n.charset||m.charset;if(void 0!==n.charset&&"utf-8"!==n.charset&&"iso-8859-1"!==n.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=a.default;if(void 0!==n.format){if(!i.call(a.formatters,n.format))throw new TypeError("Unknown format option provided.");t=n.format}var o=a.formatters[t],r=m.filter;return("function"==typeof n.filter||l(n.filter))&&(r=n.filter),{addQueryPrefix:"boolean"==typeof n.addQueryPrefix?n.addQueryPrefix:m.addQueryPrefix,allowDots:void 0===n.allowDots?m.allowDots:!!n.allowDots,charset:e,charsetSentinel:"boolean"==typeof n.charsetSentinel?n.charsetSentinel:m.charsetSentinel,delimiter:void 0===n.delimiter?m.delimiter:n.delimiter,encode:"boolean"==typeof n.encode?n.encode:m.encode,encoder:"function"==typeof n.encoder?n.encoder:m.encoder,encodeValuesOnly:"boolean"==typeof n.encodeValuesOnly?n.encodeValuesOnly:m.encodeValuesOnly,filter:r,format:t,formatter:o,serializeDate:"function"==typeof n.serializeDate?n.serializeDate:m.serializeDate,skipNulls:"boolean"==typeof n.skipNulls?n.skipNulls:m.skipNulls,sort:"function"==typeof n.sort?n.sort:null,strictNullHandling:"boolean"==typeof n.strictNullHandling?n.strictNullHandling:m.strictNullHandling}}(e);"function"==typeof c.filter?r=(0,c.filter)("",r):l(c.filter)&&(t=c.filter);var d,u=[];if("object"!=typeof r||null===r)return"";d=e&&e.arrayFormat in s?e.arrayFormat:e&&"indices"in e?e.indices?"indices":"repeat":"indices";var f=s[d];t||(t=Object.keys(r)),c.sort&&t.sort(c.sort);for(var v=o(),g=0;g<t.length;++g){var y=t[g];c.skipNulls&&null===r[y]||p(u,h(r[y],y,f,c.strictNullHandling,c.skipNulls,c.encode?c.encoder:null,c.filter,c.sort,c.allowDots,c.serializeDate,c.format,c.formatter,c.encodeValuesOnly,c.charset,v))}var b=u.join(c.delimiter),x=!0===c.addQueryPrefix?"?":"";return c.charsetSentinel&&("iso-8859-1"===c.charset?x+="utf8=%26%2310003%3B&":x+="utf8=%E2%9C%93&"),b.length>0?x+b:""}},function(n,e,t){"use strict";var o=t(154),r=t(472),a=t(474),i=o("%TypeError%"),s=o("%WeakMap%",!0),l=o("%Map%",!0),c=r("WeakMap.prototype.get",!0),p=r("WeakMap.prototype.set",!0),d=r("WeakMap.prototype.has",!0),u=r("Map.prototype.get",!0),m=r("Map.prototype.set",!0),h=r("Map.prototype.has",!0),f=function(n,e){for(var t,o=n;null!==(t=o.next);o=t)if(t.key===e)return o.next=t.next,t.next=n.next,n.next=t,t};n.exports=function(){var n,e,t,o={assert:function(n){if(!o.has(n))throw new i("Side channel does not contain "+a(n))},get:function(o){if(s&&o&&("object"==typeof o||"function"==typeof o)){if(n)return c(n,o)}else if(l){if(e)return u(e,o)}else if(t)return function(n,e){var t=f(n,e);return t&&t.value}(t,o)},has:function(o){if(s&&o&&("object"==typeof o||"function"==typeof o)){if(n)return d(n,o)}else if(l){if(e)return h(e,o)}else if(t)return function(n,e){return!!f(n,e)}(t,o);return!1},set:function(o,r){s&&o&&("object"==typeof o||"function"==typeof o)?(n||(n=new s),p(n,o,r)):l?(e||(e=new l),m(e,o,r)):(t||(t={key:{},next:null}),function(n,e,t){var o=f(n,e);o?o.value=t:n.next={key:e,next:n.next,value:t}}(t,o,r))}};return o}},function(n,e,t){"use strict";var o="undefined"!=typeof Symbol&&Symbol,r=t(469);n.exports=function(){return"function"==typeof o&&("function"==typeof Symbol&&("symbol"==typeof o("foo")&&("symbol"==typeof Symbol("bar")&&r())))}},function(n,e,t){"use strict";n.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var n={},e=Symbol("test"),t=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;for(e in n[e]=42,n)return!1;if("function"==typeof Object.keys&&0!==Object.keys(n).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(n).length)return!1;var o=Object.getOwnPropertySymbols(n);if(1!==o.length||o[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(n,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var r=Object.getOwnPropertyDescriptor(n,e);if(42!==r.value||!0!==r.enumerable)return!1}return!0}},function(n,e,t){"use strict";var o="Function.prototype.bind called on incompatible ",r=Array.prototype.slice,a=Object.prototype.toString;n.exports=function(n){var e=this;if("function"!=typeof e||"[object Function]"!==a.call(e))throw new TypeError(o+e);for(var t,i=r.call(arguments,1),s=function(){if(this instanceof t){var o=e.apply(this,i.concat(r.call(arguments)));return Object(o)===o?o:this}return e.apply(n,i.concat(r.call(arguments)))},l=Math.max(0,e.length-i.length),c=[],p=0;p<l;p++)c.push("$"+p);if(t=Function("binder","return function ("+c.join(",")+"){ return binder.apply(this,arguments); }")(s),e.prototype){var d=function(){};d.prototype=e.prototype,t.prototype=new d,d.prototype=null}return t}},function(n,e,t){"use strict";var o=t(155);n.exports=o.call(Function.call,Object.prototype.hasOwnProperty)},function(n,e,t){"use strict";var o=t(154),r=t(473),a=r(o("String.prototype.indexOf"));n.exports=function(n,e){var t=o(n,!!e);return"function"==typeof t&&a(n,".prototype.")>-1?r(t):t}},function(n,e,t){"use strict";var o=t(155),r=t(154),a=r("%Function.prototype.apply%"),i=r("%Function.prototype.call%"),s=r("%Reflect.apply%",!0)||o.call(i,a),l=r("%Object.getOwnPropertyDescriptor%",!0),c=r("%Object.defineProperty%",!0),p=r("%Math.max%");if(c)try{c({},"a",{value:1})}catch(n){c=null}n.exports=function(n){var e=s(o,i,arguments);if(l&&c){var t=l(e,"length");t.configurable&&c(e,"length",{value:1+p(0,n.length-(arguments.length-1))})}return e};var d=function(){return s(o,a,arguments)};c?c(n.exports,"apply",{value:d}):n.exports.apply=d},function(n,e,t){var o="function"==typeof Map&&Map.prototype,r=Object.getOwnPropertyDescriptor&&o?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,a=o&&r&&"function"==typeof r.get?r.get:null,i=o&&Map.prototype.forEach,s="function"==typeof Set&&Set.prototype,l=Object.getOwnPropertyDescriptor&&s?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,c=s&&l&&"function"==typeof l.get?l.get:null,p=s&&Set.prototype.forEach,d="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,u="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,m="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,h=Boolean.prototype.valueOf,f=Object.prototype.toString,v=Function.prototype.toString,g=String.prototype.match,y="function"==typeof BigInt?BigInt.prototype.valueOf:null,b=Object.getOwnPropertySymbols,x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,_="function"==typeof Symbol&&"object"==typeof Symbol.iterator,k=Object.prototype.propertyIsEnumerable,w=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(n){return n.__proto__}:null),j=t(475).custom,E=j&&O(j)?j:null,S="function"==typeof Symbol&&void 0!==Symbol.toStringTag?Symbol.toStringTag:null;function A(n,e,t){var o="double"===(t.quoteStyle||e)?'"':"'";return o+n+o}function z(n){return String(n).replace(/"/g,"&quot;")}function T(n){return!("[object Array]"!==$(n)||S&&"object"==typeof n&&S in n)}function O(n){if(_)return n&&"object"==typeof n&&n instanceof Symbol;if("symbol"==typeof n)return!0;if(!n||"object"!=typeof n||!x)return!1;try{return x.call(n),!0}catch(n){}return!1}n.exports=function n(e,t,o,r){var s=t||{};if(I(s,"quoteStyle")&&"single"!==s.quoteStyle&&"double"!==s.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(I(s,"maxStringLength")&&("number"==typeof s.maxStringLength?s.maxStringLength<0&&s.maxStringLength!==1/0:null!==s.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var l=!I(s,"customInspect")||s.customInspect;if("boolean"!=typeof l&&"symbol"!==l)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(I(s,"indent")&&null!==s.indent&&"\t"!==s.indent&&!(parseInt(s.indent,10)===s.indent&&s.indent>0))throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');if(void 0===e)return"undefined";if(null===e)return"null";if("boolean"==typeof e)return e?"true":"false";if("string"==typeof e)return function n(e,t){if(e.length>t.maxStringLength){var o=e.length-t.maxStringLength,r="... "+o+" more character"+(o>1?"s":"");return n(e.slice(0,t.maxStringLength),t)+r}return A(e.replace(/(['\\])/g,"\\$1").replace(/[\x00-\x1f]/g,M),"single",t)}(e,s);if("number"==typeof e)return 0===e?1/0/e>0?"0":"-0":String(e);if("bigint"==typeof e)return String(e)+"n";var f=void 0===s.depth?5:s.depth;if(void 0===o&&(o=0),o>=f&&f>0&&"object"==typeof e)return T(e)?"[Array]":"[Object]";var b=function(n,e){var t;if("\t"===n.indent)t="\t";else{if(!("number"==typeof n.indent&&n.indent>0))return null;t=Array(n.indent+1).join(" ")}return{base:t,prev:Array(e+1).join(t)}}(s,o);if(void 0===r)r=[];else if(P(r,e)>=0)return"[Circular]";function k(e,t,a){if(t&&(r=r.slice()).push(t),a){var i={depth:s.depth};return I(s,"quoteStyle")&&(i.quoteStyle=s.quoteStyle),n(e,i,o+1,r)}return n(e,s,o+1,r)}if("function"==typeof e){var j=function(n){if(n.name)return n.name;var e=g.call(v.call(n),/^function\s*([\w$]+)/);if(e)return e[1];return null}(e),C=B(e,k);return"[Function"+(j?": "+j:" (anonymous)")+"]"+(C.length>0?" { "+C.join(", ")+" }":"")}if(O(e)){var N=_?String(e).replace(/^(Symbol\(.*\))_[^)]*$/,"$1"):x.call(e);return"object"!=typeof e||_?N:q(N)}if(function(n){if(!n||"object"!=typeof n)return!1;if("undefined"!=typeof HTMLElement&&n instanceof HTMLElement)return!0;return"string"==typeof n.nodeName&&"function"==typeof n.getAttribute}(e)){for(var H="<"+String(e.nodeName).toLowerCase(),F=e.attributes||[],U=0;U<F.length;U++)H+=" "+F[U].name+"="+A(z(F[U].value),"double",s);return H+=">",e.childNodes&&e.childNodes.length&&(H+="..."),H+="</"+String(e.nodeName).toLowerCase()+">"}if(T(e)){if(0===e.length)return"[]";var V=B(e,k);return b&&!function(n){for(var e=0;e<n.length;e++)if(P(n[e],"\n")>=0)return!1;return!0}(V)?"["+L(V,b)+"]":"[ "+V.join(", ")+" ]"}if(function(n){return!("[object Error]"!==$(n)||S&&"object"==typeof n&&S in n)}(e)){var W=B(e,k);return 0===W.length?"["+String(e)+"]":"{ ["+String(e)+"] "+W.join(", ")+" }"}if("object"==typeof e&&l){if(E&&"function"==typeof e[E])return e[E]();if("symbol"!==l&&"function"==typeof e.inspect)return e.inspect()}if(function(n){if(!a||!n||"object"!=typeof n)return!1;try{a.call(n);try{c.call(n)}catch(n){return!0}return n instanceof Map}catch(n){}return!1}(e)){var K=[];return i.call(e,(function(n,t){K.push(k(t,e,!0)+" => "+k(n,e))})),D("Map",a.call(e),K,b)}if(function(n){if(!c||!n||"object"!=typeof n)return!1;try{c.call(n);try{a.call(n)}catch(n){return!0}return n instanceof Set}catch(n){}return!1}(e)){var G=[];return p.call(e,(function(n){G.push(k(n,e))})),D("Set",c.call(e),G,b)}if(function(n){if(!d||!n||"object"!=typeof n)return!1;try{d.call(n,d);try{u.call(n,u)}catch(n){return!0}return n instanceof WeakMap}catch(n){}return!1}(e))return R("WeakMap");if(function(n){if(!u||!n||"object"!=typeof n)return!1;try{u.call(n,u);try{d.call(n,d)}catch(n){return!0}return n instanceof WeakSet}catch(n){}return!1}(e))return R("WeakSet");if(function(n){if(!m||!n||"object"!=typeof n)return!1;try{return m.call(n),!0}catch(n){}return!1}(e))return R("WeakRef");if(function(n){return!("[object Number]"!==$(n)||S&&"object"==typeof n&&S in n)}(e))return q(k(Number(e)));if(function(n){if(!n||"object"!=typeof n||!y)return!1;try{return y.call(n),!0}catch(n){}return!1}(e))return q(k(y.call(e)));if(function(n){return!("[object Boolean]"!==$(n)||S&&"object"==typeof n&&S in n)}(e))return q(h.call(e));if(function(n){return!("[object String]"!==$(n)||S&&"object"==typeof n&&S in n)}(e))return q(k(String(e)));if(!function(n){return!("[object Date]"!==$(n)||S&&"object"==typeof n&&S in n)}(e)&&!function(n){return!("[object RegExp]"!==$(n)||S&&"object"==typeof n&&S in n)}(e)){var J=B(e,k),Y=w?w(e)===Object.prototype:e instanceof Object||e.constructor===Object,X=e instanceof Object?"":"null prototype",Q=!Y&&S&&Object(e)===e&&S in e?$(e).slice(8,-1):X?"Object":"",Z=(Y||"function"!=typeof e.constructor?"":e.constructor.name?e.constructor.name+" ":"")+(Q||X?"["+[].concat(Q||[],X||[]).join(": ")+"] ":"");return 0===J.length?Z+"{}":b?Z+"{"+L(J,b)+"}":Z+"{ "+J.join(", ")+" }"}return String(e)};var C=Object.prototype.hasOwnProperty||function(n){return n in this};function I(n,e){return C.call(n,e)}function $(n){return f.call(n)}function P(n,e){if(n.indexOf)return n.indexOf(e);for(var t=0,o=n.length;t<o;t++)if(n[t]===e)return t;return-1}function M(n){var e=n.charCodeAt(0),t={8:"b",9:"t",10:"n",12:"f",13:"r"}[e];return t?"\\"+t:"\\x"+(e<16?"0":"")+e.toString(16).toUpperCase()}function q(n){return"Object("+n+")"}function R(n){return n+" { ? }"}function D(n,e,t,o){return n+" ("+e+") {"+(o?L(t,o):t.join(", "))+"}"}function L(n,e){if(0===n.length)return"";var t="\n"+e.prev+e.base;return t+n.join(","+t)+"\n"+e.prev}function B(n,e){var t=T(n),o=[];if(t){o.length=n.length;for(var r=0;r<n.length;r++)o[r]=I(n,r)?e(n[r],n):""}var a,i="function"==typeof b?b(n):[];if(_){a={};for(var s=0;s<i.length;s++)a["$"+i[s]]=i[s]}for(var l in n)I(n,l)&&(t&&String(Number(l))===l&&l<n.length||_&&a["$"+l]instanceof Symbol||(/[^\w$]/.test(l)?o.push(e(l,n)+": "+e(n[l],n)):o.push(l+": "+e(n[l],n))));if("function"==typeof b)for(var c=0;c<i.length;c++)k.call(n,i[c])&&o.push("["+e(i[c])+"]: "+e(n[i[c]],n));return o}},function(n,e){},function(n,e,t){"use strict";var o=t(252),r=Object.prototype.hasOwnProperty,a=Array.isArray,i={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:o.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},s=function(n){return n.replace(/&#(\d+);/g,(function(n,e){return String.fromCharCode(parseInt(e,10))}))},l=function(n,e){return n&&"string"==typeof n&&e.comma&&n.indexOf(",")>-1?n.split(","):n},c=function(n,e,t,o){if(n){var a=t.allowDots?n.replace(/\.([^.[]+)/g,"[$1]"):n,i=/(\[[^[\]]*])/g,s=t.depth>0&&/(\[[^[\]]*])/.exec(a),c=s?a.slice(0,s.index):a,p=[];if(c){if(!t.plainObjects&&r.call(Object.prototype,c)&&!t.allowPrototypes)return;p.push(c)}for(var d=0;t.depth>0&&null!==(s=i.exec(a))&&d<t.depth;){if(d+=1,!t.plainObjects&&r.call(Object.prototype,s[1].slice(1,-1))&&!t.allowPrototypes)return;p.push(s[1])}return s&&p.push("["+a.slice(s.index)+"]"),function(n,e,t,o){for(var r=o?e:l(e,t),a=n.length-1;a>=0;--a){var i,s=n[a];if("[]"===s&&t.parseArrays)i=[].concat(r);else{i=t.plainObjects?Object.create(null):{};var c="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,p=parseInt(c,10);t.parseArrays||""!==c?!isNaN(p)&&s!==c&&String(p)===c&&p>=0&&t.parseArrays&&p<=t.arrayLimit?(i=[])[p]=r:i[c]=r:i={0:r}}r=i}return r}(p,e,t,o)}};n.exports=function(n,e){var t=function(n){if(!n)return i;if(null!==n.decoder&&void 0!==n.decoder&&"function"!=typeof n.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==n.charset&&"utf-8"!==n.charset&&"iso-8859-1"!==n.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var e=void 0===n.charset?i.charset:n.charset;return{allowDots:void 0===n.allowDots?i.allowDots:!!n.allowDots,allowPrototypes:"boolean"==typeof n.allowPrototypes?n.allowPrototypes:i.allowPrototypes,allowSparse:"boolean"==typeof n.allowSparse?n.allowSparse:i.allowSparse,arrayLimit:"number"==typeof n.arrayLimit?n.arrayLimit:i.arrayLimit,charset:e,charsetSentinel:"boolean"==typeof n.charsetSentinel?n.charsetSentinel:i.charsetSentinel,comma:"boolean"==typeof n.comma?n.comma:i.comma,decoder:"function"==typeof n.decoder?n.decoder:i.decoder,delimiter:"string"==typeof n.delimiter||o.isRegExp(n.delimiter)?n.delimiter:i.delimiter,depth:"number"==typeof n.depth||!1===n.depth?+n.depth:i.depth,ignoreQueryPrefix:!0===n.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof n.interpretNumericEntities?n.interpretNumericEntities:i.interpretNumericEntities,parameterLimit:"number"==typeof n.parameterLimit?n.parameterLimit:i.parameterLimit,parseArrays:!1!==n.parseArrays,plainObjects:"boolean"==typeof n.plainObjects?n.plainObjects:i.plainObjects,strictNullHandling:"boolean"==typeof n.strictNullHandling?n.strictNullHandling:i.strictNullHandling}}(e);if(""===n||null==n)return t.plainObjects?Object.create(null):{};for(var p="string"==typeof n?function(n,e){var t,c={},p=e.ignoreQueryPrefix?n.replace(/^\?/,""):n,d=e.parameterLimit===1/0?void 0:e.parameterLimit,u=p.split(e.delimiter,d),m=-1,h=e.charset;if(e.charsetSentinel)for(t=0;t<u.length;++t)0===u[t].indexOf("utf8=")&&("utf8=%E2%9C%93"===u[t]?h="utf-8":"utf8=%26%2310003%3B"===u[t]&&(h="iso-8859-1"),m=t,t=u.length);for(t=0;t<u.length;++t)if(t!==m){var f,v,g=u[t],y=g.indexOf("]="),b=-1===y?g.indexOf("="):y+1;-1===b?(f=e.decoder(g,i.decoder,h,"key"),v=e.strictNullHandling?null:""):(f=e.decoder(g.slice(0,b),i.decoder,h,"key"),v=o.maybeMap(l(g.slice(b+1),e),(function(n){return e.decoder(n,i.decoder,h,"value")}))),v&&e.interpretNumericEntities&&"iso-8859-1"===h&&(v=s(v)),g.indexOf("[]=")>-1&&(v=a(v)?[v]:v),r.call(c,f)?c[f]=o.combine(c[f],v):c[f]=v}return c}(n,t):n,d=t.plainObjects?Object.create(null):{},u=Object.keys(p),m=0;m<u.length;++m){var h=u[m],f=c(h,p[h],t,"string"==typeof n);d=o.merge(d,f,t)}return!0===t.allowSparse?d:o.compact(d)}},function(n,e,t){var o=t(45),r=t(479),a=t(480);n.exports=function(n){var e=o(n);return a(e,r(e))+1}},function(n,e){n.exports=function(n){var e=new Date(n.getTime()),t=e.getTimezoneOffset();return e.setSeconds(0,0),6e4*t+e.getTime()%6e4}},function(n,e,t){var o=t(45);n.exports=function(n){var e=o(n),t=new Date(0);return t.setFullYear(e.getFullYear(),0,1),t.setHours(0,0,0,0),t}},function(n,e,t){var o=t(481);n.exports=function(n,e){var t=o(n),r=o(e),a=t.getTime()-6e4*t.getTimezoneOffset(),i=r.getTime()-6e4*r.getTimezoneOffset();return Math.round((a-i)/864e5)}},function(n,e,t){var o=t(45);n.exports=function(n){var e=o(n);return e.setHours(0,0,0,0),e}},function(n,e,t){var o=t(45),r=t(157),a=t(484);n.exports=function(n){var e=o(n),t=r(e).getTime()-a(e).getTime();return Math.round(t/6048e5)+1}},function(n,e,t){var o=t(45);n.exports=function(n,e){var t=e&&Number(e.weekStartsOn)||0,r=o(n),a=r.getDay(),i=(a<t?7:0)+a-t;return r.setDate(r.getDate()-i),r.setHours(0,0,0,0),r}},function(n,e,t){var o=t(254),r=t(157);n.exports=function(n){var e=o(n),t=new Date(0);return t.setFullYear(e,0,4),t.setHours(0,0,0,0),r(t)}},function(n,e,t){var o=t(253);n.exports=function(n){if(o(n))return!isNaN(n);throw new TypeError(toString.call(n)+" is not an instance of Date")}},function(n,e,t){var o=t(487),r=t(488);n.exports={distanceInWords:o(),format:r()}},function(n,e){n.exports=function(){var n={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};return{localize:function(e,t,o){var r;return o=o||{},r="string"==typeof n[e]?n[e]:1===t?n[e].one:n[e].other.replace("{{count}}",t),o.addSuffix?o.comparison>0?"in "+r:r+" ago":r}}}},function(n,e,t){var o=t(489);n.exports=function(){var n=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],e=["January","February","March","April","May","June","July","August","September","October","November","December"],t=["Su","Mo","Tu","We","Th","Fr","Sa"],r=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],a=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],i=["AM","PM"],s=["am","pm"],l=["a.m.","p.m."],c={MMM:function(e){return n[e.getMonth()]},MMMM:function(n){return e[n.getMonth()]},dd:function(n){return t[n.getDay()]},ddd:function(n){return r[n.getDay()]},dddd:function(n){return a[n.getDay()]},A:function(n){return n.getHours()/12>=1?i[1]:i[0]},a:function(n){return n.getHours()/12>=1?s[1]:s[0]},aa:function(n){return n.getHours()/12>=1?l[1]:l[0]}};return["M","D","DDD","d","Q","W"].forEach((function(n){c[n+"o"]=function(e,t){return function(n){var e=n%100;if(e>20||e<10)switch(e%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"}(t[n](e))}})),{formatters:c,formattingTokensRegExp:o(c)}}},function(n,e){var t=["M","MM","Q","D","DD","DDD","DDDD","d","E","W","WW","YY","YYYY","GG","GGGG","H","HH","h","hh","m","mm","s","ss","S","SS","SSS","Z","ZZ","X","x"];n.exports=function(n){var e=[];for(var o in n)n.hasOwnProperty(o)&&e.push(o);var r=t.concat(e).sort().reverse();return new RegExp("(\\[[^\\[]*\\])|(\\\\)?("+r.join("|")+"|.)","g")}},function(n,e,t){"use strict";var o=t(19),r=t(255),a=t(491),i=t(261);function s(n){var e=new a(n),t=r(a.prototype.request,e);return o.extend(t,a.prototype,e),o.extend(t,e),t}var l=s(t(258));l.Axios=a,l.create=function(n){return s(i(l.defaults,n))},l.Cancel=t(262),l.CancelToken=t(504),l.isCancel=t(257),l.all=function(n){return Promise.all(n)},l.spread=t(505),l.isAxiosError=t(506),n.exports=l,n.exports.default=l},function(n,e,t){"use strict";var o=t(19),r=t(256),a=t(492),i=t(493),s=t(261);function l(n){this.defaults=n,this.interceptors={request:new a,response:new a}}l.prototype.request=function(n){"string"==typeof n?(n=arguments[1]||{}).url=arguments[0]:n=n||{},(n=s(this.defaults,n)).method?n.method=n.method.toLowerCase():this.defaults.method?n.method=this.defaults.method.toLowerCase():n.method="get";var e=[i,void 0],t=Promise.resolve(n);for(this.interceptors.request.forEach((function(n){e.unshift(n.fulfilled,n.rejected)})),this.interceptors.response.forEach((function(n){e.push(n.fulfilled,n.rejected)}));e.length;)t=t.then(e.shift(),e.shift());return t},l.prototype.getUri=function(n){return n=s(this.defaults,n),r(n.url,n.params,n.paramsSerializer).replace(/^\?/,"")},o.forEach(["delete","get","head","options"],(function(n){l.prototype[n]=function(e,t){return this.request(s(t||{},{method:n,url:e,data:(t||{}).data}))}})),o.forEach(["post","put","patch"],(function(n){l.prototype[n]=function(e,t,o){return this.request(s(o||{},{method:n,url:e,data:t}))}})),n.exports=l},function(n,e,t){"use strict";var o=t(19);function r(){this.handlers=[]}r.prototype.use=function(n,e){return this.handlers.push({fulfilled:n,rejected:e}),this.handlers.length-1},r.prototype.eject=function(n){this.handlers[n]&&(this.handlers[n]=null)},r.prototype.forEach=function(n){o.forEach(this.handlers,(function(e){null!==e&&n(e)}))},n.exports=r},function(n,e,t){"use strict";var o=t(19),r=t(494),a=t(257),i=t(258);function s(n){n.cancelToken&&n.cancelToken.throwIfRequested()}n.exports=function(n){return s(n),n.headers=n.headers||{},n.data=r(n.data,n.headers,n.transformRequest),n.headers=o.merge(n.headers.common||{},n.headers[n.method]||{},n.headers),o.forEach(["delete","get","head","post","put","patch","common"],(function(e){delete n.headers[e]})),(n.adapter||i.adapter)(n).then((function(e){return s(n),e.data=r(e.data,e.headers,n.transformResponse),e}),(function(e){return a(e)||(s(n),e&&e.response&&(e.response.data=r(e.response.data,e.response.headers,n.transformResponse))),Promise.reject(e)}))}},function(n,e,t){"use strict";var o=t(19);n.exports=function(n,e,t){return o.forEach(t,(function(t){n=t(n,e)})),n}},function(n,e,t){"use strict";var o=t(19);n.exports=function(n,e){o.forEach(n,(function(t,o){o!==e&&o.toUpperCase()===e.toUpperCase()&&(n[e]=t,delete n[o])}))}},function(n,e,t){"use strict";var o=t(260);n.exports=function(n,e,t){var r=t.config.validateStatus;t.status&&r&&!r(t.status)?e(o("Request failed with status code "+t.status,t.config,null,t.request,t)):n(t)}},function(n,e,t){"use strict";n.exports=function(n,e,t,o,r){return n.config=e,t&&(n.code=t),n.request=o,n.response=r,n.isAxiosError=!0,n.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},n}},function(n,e,t){"use strict";var o=t(19);n.exports=o.isStandardBrowserEnv()?{write:function(n,e,t,r,a,i){var s=[];s.push(n+"="+encodeURIComponent(e)),o.isNumber(t)&&s.push("expires="+new Date(t).toGMTString()),o.isString(r)&&s.push("path="+r),o.isString(a)&&s.push("domain="+a),!0===i&&s.push("secure"),document.cookie=s.join("; ")},read:function(n){var e=document.cookie.match(new RegExp("(^|;\\s*)("+n+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove:function(n){this.write(n,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(n,e,t){"use strict";var o=t(500),r=t(501);n.exports=function(n,e){return n&&!o(e)?r(n,e):e}},function(n,e,t){"use strict";n.exports=function(n){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(n)}},function(n,e,t){"use strict";n.exports=function(n,e){return e?n.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):n}},function(n,e,t){"use strict";var o=t(19),r=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];n.exports=function(n){var e,t,a,i={};return n?(o.forEach(n.split("\n"),(function(n){if(a=n.indexOf(":"),e=o.trim(n.substr(0,a)).toLowerCase(),t=o.trim(n.substr(a+1)),e){if(i[e]&&r.indexOf(e)>=0)return;i[e]="set-cookie"===e?(i[e]?i[e]:[]).concat([t]):i[e]?i[e]+", "+t:t}})),i):i}},function(n,e,t){"use strict";var o=t(19);n.exports=o.isStandardBrowserEnv()?function(){var n,e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function r(n){var o=n;return e&&(t.setAttribute("href",o),o=t.href),t.setAttribute("href",o),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return n=r(window.location.href),function(e){var t=o.isString(e)?r(e):e;return t.protocol===n.protocol&&t.host===n.host}}():function(){return!0}},function(n,e,t){"use strict";var o=t(262);function r(n){if("function"!=typeof n)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(n){e=n}));var t=this;n((function(n){t.reason||(t.reason=new o(n),e(t.reason))}))}r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.source=function(){var n;return{token:new r((function(e){n=e})),cancel:n}},n.exports=r},function(n,e,t){"use strict";n.exports=function(n){return function(e){return n.apply(null,e)}}},function(n,e,t){"use strict";n.exports=function(n){return"object"==typeof n&&!0===n.isAxiosError}},function(n,e,t){},function(n,e,t){"use strict";t(263)},function(n,e,t){},function(n,e,t){var o;function r(n){function t(){if(t.enabled){var n=t,r=+new Date,a=r-(o||r);n.diff=a,n.prev=o,n.curr=r,o=r;for(var i=new Array(arguments.length),s=0;s<i.length;s++)i[s]=arguments[s];i[0]=e.coerce(i[0]),"string"!=typeof i[0]&&i.unshift("%O");var l=0;i[0]=i[0].replace(/%([a-zA-Z%])/g,(function(t,o){if("%%"===t)return t;l++;var r=e.formatters[o];if("function"==typeof r){var a=i[l];t=r.call(n,a),i.splice(l,1),l--}return t})),e.formatArgs.call(n,i);var c=t.log||e.log||console.log.bind(console);c.apply(n,i)}}return t.namespace=n,t.enabled=e.enabled(n),t.useColors=e.useColors(),t.color=function(n){var t,o=0;for(t in n)o=(o<<5)-o+n.charCodeAt(t),o|=0;return e.colors[Math.abs(o)%e.colors.length]}(n),"function"==typeof e.init&&e.init(t),t}(e=n.exports=r.debug=r.default=r).coerce=function(n){return n instanceof Error?n.stack||n.message:n},e.disable=function(){e.enable("")},e.enable=function(n){e.save(n),e.names=[],e.skips=[];for(var t=("string"==typeof n?n:"").split(/[\s,]+/),o=t.length,r=0;r<o;r++)t[r]&&("-"===(n=t[r].replace(/\*/g,".*?"))[0]?e.skips.push(new RegExp("^"+n.substr(1)+"$")):e.names.push(new RegExp("^"+n+"$")))},e.enabled=function(n){var t,o;for(t=0,o=e.skips.length;t<o;t++)if(e.skips[t].test(n))return!1;for(t=0,o=e.names.length;t<o;t++)if(e.names[t].test(n))return!0;return!1},e.humanize=t(511),e.names=[],e.skips=[],e.formatters={}},function(n,e){var t=1e3,o=6e4,r=60*o,a=24*r;function i(n,e,t){if(!(n<e))return n<1.5*e?Math.floor(n/e)+" "+t:Math.ceil(n/e)+" "+t+"s"}n.exports=function(n,e){e=e||{};var s,l=typeof n;if("string"===l&&n.length>0)return function(n){if((n=String(n)).length>100)return;var e=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(n);if(!e)return;var i=parseFloat(e[1]);switch((e[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*i;case"days":case"day":case"d":return i*a;case"hours":case"hour":case"hrs":case"hr":case"h":return i*r;case"minutes":case"minute":case"mins":case"min":case"m":return i*o;case"seconds":case"second":case"secs":case"sec":case"s":return i*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return i;default:return}}(n);if("number"===l&&!1===isNaN(n))return e.long?i(s=n,a,"day")||i(s,r,"hour")||i(s,o,"minute")||i(s,t,"second")||s+" ms":function(n){if(n>=a)return Math.round(n/a)+"d";if(n>=r)return Math.round(n/r)+"h";if(n>=o)return Math.round(n/o)+"m";if(n>=t)return Math.round(n/t)+"s";return n+"ms"}(n);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(n))}},function(n,e,t){},function(n,e,t){t(2)({target:"Number",stat:!0},{isFinite:t(514)})},function(n,e,t){var o=t(6).isFinite;n.exports=Number.isFinite||function(n){return"number"==typeof n&&o(n)}},function(n,e,t){"use strict";t(265)},function(n,e,t){"use strict";t(266)},function(n,e,t){"use strict";var o=t(53),r=t(8),a=[].slice,i={},s=function(n,e,t){if(!(e in i)){for(var o=[],r=0;r<e;r++)o[r]="a["+r+"]";i[e]=Function("C,a","return new C("+o.join(",")+")")}return i[e](n,t)};n.exports=Function.bind||function(n){var e=o(this),t=a.call(arguments,1),i=function(){var o=t.concat(a.call(arguments));return this instanceof i?s(e,o.length,o):e.apply(n,o)};return r(e.prototype)&&(i.prototype=e.prototype),i}},function(n,e,t){"use strict";t(269)},function(n,e,t){"use strict";t(270)},function(n,e,t){"use strict";t.r(e);t(289),t(304),t(321),t(323);var o=t(56),r=(t(128),t(37),t(15),t(21),t(24),t(61),t(27),t(1));function a(n,e){for(var t in e)n[t]=e[t];return n}var i=/[!'()*]/g,s=function(n){return"%"+n.charCodeAt(0).toString(16)},l=/%2C/g,c=function(n){return encodeURIComponent(n).replace(i,s).replace(l,",")};function p(n){try{return decodeURIComponent(n)}catch(n){0}return n}var d=function(n){return null==n||"object"==typeof n?n:String(n)};function u(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),o=p(t.shift()),r=t.length>0?p(t.join("=")):null;void 0===e[o]?e[o]=r:Array.isArray(e[o])?e[o].push(r):e[o]=[e[o],r]})),e):e}function m(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return c(e);if(Array.isArray(t)){var o=[];return t.forEach((function(n){void 0!==n&&(null===n?o.push(c(e)):o.push(c(e)+"="+c(n)))})),o.join("&")}return c(e)+"="+c(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var h=/\/?$/;function f(n,e,t,o){var r=o&&o.options.stringifyQuery,a=e.query||{};try{a=v(a)}catch(n){}var i={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:a,params:e.params||{},fullPath:b(e,r),matched:n?y(n):[]};return t&&(i.redirectedFrom=b(t,r)),Object.freeze(i)}function v(n){if(Array.isArray(n))return n.map(v);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=v(n[t]);return e}return n}var g=f(null,{path:"/"});function y(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function b(n,e){var t=n.path,o=n.query;void 0===o&&(o={});var r=n.hash;return void 0===r&&(r=""),(t||"/")+(e||m)(o)+r}function x(n,e,t){return e===g?n===e:!!e&&(n.path&&e.path?n.path.replace(h,"")===e.path.replace(h,"")&&(t||n.hash===e.hash&&_(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&_(n.query,e.query)&&_(n.params,e.params))))}function _(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),o=Object.keys(e).sort();return t.length===o.length&&t.every((function(t,r){var a=n[t];if(o[r]!==t)return!1;var i=e[t];return null==a||null==i?a===i:"object"==typeof a&&"object"==typeof i?_(a,i):String(a)===String(i)}))}function k(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var o in t.instances){var r=t.instances[o],a=t.enteredCbs[o];if(r&&a){delete t.enteredCbs[o];for(var i=0;i<a.length;i++)r._isBeingDestroyed||a[i](r)}}}}var w={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,o=e.children,r=e.parent,i=e.data;i.routerView=!0;for(var s=r.$createElement,l=t.name,c=r.$route,p=r._routerViewCache||(r._routerViewCache={}),d=0,u=!1;r&&r._routerRoot!==r;){var m=r.$vnode?r.$vnode.data:{};m.routerView&&d++,m.keepAlive&&r._directInactive&&r._inactive&&(u=!0),r=r.$parent}if(i.routerViewDepth=d,u){var h=p[l],f=h&&h.component;return f?(h.configProps&&j(f,i,h.route,h.configProps),s(f,i,o)):s()}var v=c.matched[d],g=v&&v.components[l];if(!v||!g)return p[l]=null,s();p[l]={component:g},i.registerRouteInstance=function(n,e){var t=v.instances[l];(e&&t!==n||!e&&t===n)&&(v.instances[l]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){v.instances[l]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==v.instances[l]&&(v.instances[l]=n.componentInstance),k(c)};var y=v.props&&v.props[l];return y&&(a(p[l],{route:c,configProps:y}),j(g,i,c,y)),s(g,i,o)}};function j(n,e,t,o){var r=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,o);if(r){r=e.props=a({},r);var i=e.attrs=e.attrs||{};for(var s in r)n.props&&s in n.props||(i[s]=r[s],delete r[s])}}function E(n,e,t){var o=n.charAt(0);if("/"===o)return n;if("?"===o||"#"===o)return e+n;var r=e.split("/");t&&r[r.length-1]||r.pop();for(var a=n.replace(/^\//,"").split("/"),i=0;i<a.length;i++){var s=a[i];".."===s?r.pop():"."!==s&&r.push(s)}return""!==r[0]&&r.unshift(""),r.join("/")}function S(n){return n.replace(/\/\//g,"/")}var A=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},z=H,T=P,O=function(n,e){return q(P(n,e),e)},C=q,I=N,$=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function P(n,e){for(var t,o=[],r=0,a=0,i="",s=e&&e.delimiter||"/";null!=(t=$.exec(n));){var l=t[0],c=t[1],p=t.index;if(i+=n.slice(a,p),a=p+l.length,c)i+=c[1];else{var d=n[a],u=t[2],m=t[3],h=t[4],f=t[5],v=t[6],g=t[7];i&&(o.push(i),i="");var y=null!=u&&null!=d&&d!==u,b="+"===v||"*"===v,x="?"===v||"*"===v,_=t[2]||s,k=h||f;o.push({name:m||r++,prefix:u||"",delimiter:_,optional:x,repeat:b,partial:y,asterisk:!!g,pattern:k?D(k):g?".*":"[^"+R(_)+"]+?"})}}return a<n.length&&(i+=n.substr(a)),i&&o.push(i),o}function M(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function q(n,e){for(var t=new Array(n.length),o=0;o<n.length;o++)"object"==typeof n[o]&&(t[o]=new RegExp("^(?:"+n[o].pattern+")$",B(e)));return function(e,o){for(var r="",a=e||{},i=(o||{}).pretty?M:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,p=a[l.name];if(null==p){if(l.optional){l.partial&&(r+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(A(p)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(c=i(p[d]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");r+=(0===d?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(p).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):i(p),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');r+=l.prefix+c}}else r+=l}return r}}function R(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function D(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function L(n,e){return n.keys=e,n}function B(n){return n&&n.sensitive?"":"i"}function N(n,e,t){A(e)||(t=e||t,e=[]);for(var o=(t=t||{}).strict,r=!1!==t.end,a="",i=0;i<n.length;i++){var s=n[i];if("string"==typeof s)a+=R(s);else{var l=R(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),a+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var p=R(t.delimiter||"/"),d=a.slice(-p.length)===p;return o||(a=(d?a.slice(0,-p.length):a)+"(?:"+p+"(?=$))?"),a+=r?"$":o&&d?"":"(?="+p+"|$)",L(new RegExp("^"+a,B(t)),e)}function H(n,e,t){return A(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var o=0;o<t.length;o++)e.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return L(n,e)}(n,e):A(n)?function(n,e,t){for(var o=[],r=0;r<n.length;r++)o.push(H(n[r],e,t).source);return L(new RegExp("(?:"+o.join("|")+")",B(t)),e)}(n,e,t):function(n,e,t){return N(P(n,t),e,t)}(n,e,t)}z.parse=T,z.compile=O,z.tokensToFunction=C,z.tokensToRegExp=I;var F=Object.create(null);function U(n,e,t){e=e||{};try{var o=F[n]||(F[n]=z.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),o(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function V(n,e,t,o){var r="string"==typeof n?{path:n}:n;if(r._normalized)return r;if(r.name){var i=(r=a({},n)).params;return i&&"object"==typeof i&&(r.params=a({},i)),r}if(!r.path&&r.params&&e){(r=a({},r))._normalized=!0;var s=a(a({},e.params),r.params);if(e.name)r.name=e.name,r.params=s;else if(e.matched.length){var l=e.matched[e.matched.length-1].path;r.path=U(l,s,e.path)}else 0;return r}var c=function(n){var e="",t="",o=n.indexOf("#");o>=0&&(e=n.slice(o),n=n.slice(0,o));var r=n.indexOf("?");return r>=0&&(t=n.slice(r+1),n=n.slice(0,r)),{path:n,query:t,hash:e}}(r.path||""),p=e&&e.path||"/",m=c.path?E(c.path,p,t||r.append):p,h=function(n,e,t){void 0===e&&(e={});var o,r=t||u;try{o=r(n||"")}catch(n){o={}}for(var a in e){var i=e[a];o[a]=Array.isArray(i)?i.map(d):d(i)}return o}(c.query,r.query,o&&o.options.parseQuery),f=r.hash||c.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:m,query:h,hash:f}}var W,K=function(){},G={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,o=this.$route,r=t.resolve(this.to,o,this.append),i=r.location,s=r.route,l=r.href,c={},p=t.options.linkActiveClass,d=t.options.linkExactActiveClass,u=null==p?"router-link-active":p,m=null==d?"router-link-exact-active":d,v=null==this.activeClass?u:this.activeClass,g=null==this.exactActiveClass?m:this.exactActiveClass,y=s.redirectedFrom?f(null,V(s.redirectedFrom),null,t):s;c[g]=x(o,y,this.exactPath),c[v]=this.exact||this.exactPath?c[g]:function(n,e){return 0===n.path.replace(h,"/").indexOf(e.path.replace(h,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(o,y);var b=c[g]?this.ariaCurrentValue:null,_=function(n){J(n)&&(e.replace?t.replace(i,K):t.push(i,K))},k={click:J};Array.isArray(this.event)?this.event.forEach((function(n){k[n]=_})):k[this.event]=_;var w={class:c},j=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:_,isActive:c[v],isExactActive:c[g]});if(j){if(1===j.length)return j[0];if(j.length>1||!j.length)return 0===j.length?n():n("span",{},j)}if("a"===this.tag)w.on=k,w.attrs={href:l,"aria-current":b};else{var E=function n(e){var t;if(e)for(var o=0;o<e.length;o++){if("a"===(t=e[o]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(E){E.isStatic=!1;var S=E.data=a({},E.data);for(var A in S.on=S.on||{},S.on){var z=S.on[A];A in k&&(S.on[A]=Array.isArray(z)?z:[z])}for(var T in k)T in S.on?S.on[T].push(k[T]):S.on[T]=_;var O=E.data.attrs=a({},E.data.attrs);O.href=l,O["aria-current"]=b}else w.on=k}return n(this.tag,w,this.$slots.default)}};function J(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Y="undefined"!=typeof window;function X(n,e,t,o,r){var a=e||[],i=t||Object.create(null),s=o||Object.create(null);n.forEach((function(n){!function n(e,t,o,r,a,i){var s=r.path,l=r.name;0;var c=r.pathToRegexpOptions||{},p=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return S(e.path+"/"+n)}(s,a,c.strict);"boolean"==typeof r.caseSensitive&&(c.sensitive=r.caseSensitive);var d={path:p,regex:Q(p,c),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:l,parent:a,matchAs:i,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var a=i?S(i+"/"+r.path):void 0;n(e,t,o,r,d,a)}));t[d.path]||(e.push(d.path),t[d.path]=d);if(void 0!==r.alias)for(var u=Array.isArray(r.alias)?r.alias:[r.alias],m=0;m<u.length;++m){0;var h={path:u[m],children:r.children};n(e,t,o,h,a,d.path||"/")}l&&(o[l]||(o[l]=d))}(a,i,s,n,r)}));for(var l=0,c=a.length;l<c;l++)"*"===a[l]&&(a.push(a.splice(l,1)[0]),c--,l--);return{pathList:a,pathMap:i,nameMap:s}}function Q(n,e){return z(n,[],e)}function Z(n,e){var t=X(n),o=t.pathList,r=t.pathMap,a=t.nameMap;function i(n,t,i){var s=V(n,t,!1,e),c=s.name;if(c){var p=a[c];if(!p)return l(null,s);var d=p.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var u in t.params)!(u in s.params)&&d.indexOf(u)>-1&&(s.params[u]=t.params[u]);return s.path=U(p.path,s.params),l(p,s,i)}if(s.path){s.params={};for(var m=0;m<o.length;m++){var h=o[m],f=r[h];if(nn(f.regex,s.path,s.params))return l(f,s,i)}}return l(null,s)}function s(n,t){var o=n.redirect,r="function"==typeof o?o(f(n,t,null,e)):o;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return l(null,t);var s=r,c=s.name,p=s.path,d=t.query,u=t.hash,m=t.params;if(d=s.hasOwnProperty("query")?s.query:d,u=s.hasOwnProperty("hash")?s.hash:u,m=s.hasOwnProperty("params")?s.params:m,c){a[c];return i({_normalized:!0,name:c,query:d,hash:u,params:m},void 0,t)}if(p){var h=function(n,e){return E(n,e.parent?e.parent.path:"/",!0)}(p,n);return i({_normalized:!0,path:U(h,m),query:d,hash:u},void 0,t)}return l(null,t)}function l(n,t,o){return n&&n.redirect?s(n,o||t):n&&n.matchAs?function(n,e,t){var o=i({_normalized:!0,path:U(t,e.params)});if(o){var r=o.matched,a=r[r.length-1];return e.params=o.params,l(a,e)}return l(null,e)}(0,t,n.matchAs):f(n,t,o,e)}return{match:i,addRoute:function(n,e){var t="object"!=typeof n?a[n]:void 0;X([e||n],o,r,a,t),t&&t.alias.length&&X(t.alias.map((function(n){return{path:n,children:[e]}})),o,r,a,t)},getRoutes:function(){return o.map((function(n){return r[n]}))},addRoutes:function(n){X(n,o,r,a)}}}function nn(n,e,t){var o=e.match(n);if(!o)return!1;if(!t)return!0;for(var r=1,a=o.length;r<a;++r){var i=n.keys[r-1];i&&(t[i.name||"pathMatch"]="string"==typeof o[r]?p(o[r]):o[r])}return!0}var en=Y&&window.performance&&window.performance.now?window.performance:Date;function tn(){return en.now().toFixed(3)}var on=tn();function rn(){return on}function an(n){return on=n}var sn=Object.create(null);function ln(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=a({},window.history.state);return t.key=rn(),window.history.replaceState(t,"",e),window.addEventListener("popstate",dn),function(){window.removeEventListener("popstate",dn)}}function cn(n,e,t,o){if(n.app){var r=n.options.scrollBehavior;r&&n.app.$nextTick((function(){var a=function(){var n=rn();if(n)return sn[n]}(),i=r.call(n,e,t,o?a:null);i&&("function"==typeof i.then?i.then((function(n){vn(n,a)})).catch((function(n){0})):vn(i,a))}))}}function pn(){var n=rn();n&&(sn[n]={x:window.pageXOffset,y:window.pageYOffset})}function dn(n){pn(),n.state&&n.state.key&&an(n.state.key)}function un(n){return hn(n.x)||hn(n.y)}function mn(n){return{x:hn(n.x)?n.x:window.pageXOffset,y:hn(n.y)?n.y:window.pageYOffset}}function hn(n){return"number"==typeof n}var fn=/^#\d/;function vn(n,e){var t,o="object"==typeof n;if(o&&"string"==typeof n.selector){var r=fn.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(r){var a=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),o=n.getBoundingClientRect();return{x:o.left-t.left-e.x,y:o.top-t.top-e.y}}(r,a={x:hn((t=a).x)?t.x:0,y:hn(t.y)?t.y:0})}else un(n)&&(e=mn(n))}else o&&un(n)&&(e=mn(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var gn,yn=Y&&((-1===(gn=window.navigator.userAgent).indexOf("Android 2.")&&-1===gn.indexOf("Android 4.0")||-1===gn.indexOf("Mobile Safari")||-1!==gn.indexOf("Chrome")||-1!==gn.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function bn(n,e){pn();var t=window.history;try{if(e){var o=a({},t.state);o.key=rn(),t.replaceState(o,"",n)}else t.pushState({key:an(tn())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function xn(n){bn(n,!0)}function _n(n,e,t){var o=function(r){r>=n.length?t():n[r]?e(n[r],(function(){o(r+1)})):o(r+1)};o(0)}var kn={redirected:2,aborted:4,cancelled:8,duplicated:16};function wn(n,e){return En(n,e,kn.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return Sn.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function jn(n,e){return En(n,e,kn.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function En(n,e,t,o){var r=new Error(o);return r._isRouter=!0,r.from=n,r.to=e,r.type=t,r}var Sn=["params","query","hash"];function An(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function zn(n,e){return An(n)&&n._isRouter&&(null==e||n.type===e)}function Tn(n){return function(e,t,o){var r=!1,a=0,i=null;On(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){r=!0,a++;var l,c=$n((function(e){var r;((r=e).__esModule||In&&"Module"===r[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:W.extend(e),t.components[s]=e,--a<=0&&o()})),p=$n((function(n){var e="Failed to resolve async component "+s+": "+n;i||(i=An(n)?n:new Error(e),o(i))}));try{l=n(c,p)}catch(n){p(n)}if(l)if("function"==typeof l.then)l.then(c,p);else{var d=l.component;d&&"function"==typeof d.then&&d.then(c,p)}}})),r||o()}}function On(n,e){return Cn(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Cn(n){return Array.prototype.concat.apply([],n)}var In="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function $n(n){var e=!1;return function(){for(var t=[],o=arguments.length;o--;)t[o]=arguments[o];if(!e)return e=!0,n.apply(this,t)}}var Pn=function(n,e){this.router=n,this.base=function(n){if(!n)if(Y){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Mn(n,e,t,o){var r=On(n,(function(n,o,r,a){var i=function(n,e){"function"!=typeof n&&(n=W.extend(n));return n.options[e]}(n,e);if(i)return Array.isArray(i)?i.map((function(n){return t(n,o,r,a)})):t(i,o,r,a)}));return Cn(o?r.reverse():r)}function qn(n,e){if(e)return function(){return n.apply(e,arguments)}}Pn.prototype.listen=function(n){this.cb=n},Pn.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Pn.prototype.onError=function(n){this.errorCbs.push(n)},Pn.prototype.transitionTo=function(n,e,t){var o,r=this;try{o=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var a=this.current;this.confirmTransition(o,(function(){r.updateRoute(o),e&&e(o),r.ensureURL(),r.router.afterHooks.forEach((function(n){n&&n(o,a)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(n){n(o)})))}),(function(n){t&&t(n),n&&!r.ready&&(zn(n,kn.redirected)&&a===g||(r.ready=!0,r.readyErrorCbs.forEach((function(e){e(n)}))))}))},Pn.prototype.confirmTransition=function(n,e,t){var o=this,r=this.current;this.pending=n;var a,i,s=function(n){!zn(n)&&An(n)&&(o.errorCbs.length?o.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=r.matched.length-1;if(x(n,r)&&l===c&&n.matched[l]===r.matched[c])return this.ensureURL(),s(((i=En(a=r,n,kn.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",i));var p=function(n,e){var t,o=Math.max(n.length,e.length);for(t=0;t<o&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),d=p.updated,u=p.deactivated,m=p.activated,h=[].concat(function(n){return Mn(n,"beforeRouteLeave",qn,!0)}(u),this.router.beforeHooks,function(n){return Mn(n,"beforeRouteUpdate",qn)}(d),m.map((function(n){return n.beforeEnter})),Tn(m)),f=function(e,t){if(o.pending!==n)return s(jn(r,n));try{e(n,r,(function(e){!1===e?(o.ensureURL(!0),s(function(n,e){return En(n,e,kn.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(r,n))):An(e)?(o.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(wn(r,n)),"object"==typeof e&&e.replace?o.replace(e):o.push(e)):t(e)}))}catch(n){s(n)}};_n(h,f,(function(){_n(function(n){return Mn(n,"beforeRouteEnter",(function(n,e,t,o){return function(n,e,t){return function(o,r,a){return n(o,r,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),a(n)}))}}(n,t,o)}))}(m).concat(o.router.resolveHooks),f,(function(){if(o.pending!==n)return s(jn(r,n));o.pending=null,e(n),o.router.app&&o.router.app.$nextTick((function(){k(n)}))}))}))},Pn.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Pn.prototype.setupListeners=function(){},Pn.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=g,this.pending=null};var Rn=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Dn(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,o=yn&&t;o&&this.listeners.push(ln());var r=function(){var t=n.current,r=Dn(n.base);n.current===g&&r===n._startLocation||n.transitionTo(r,(function(n){o&&cn(e,n,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){bn(S(o.base+n.fullPath)),cn(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){xn(S(o.base+n.fullPath)),cn(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Dn(this.base)!==this.current.fullPath){var e=S(this.base+this.current.fullPath);n?bn(e):xn(e)}},e.prototype.getCurrentLocation=function(){return Dn(this.base)},e}(Pn);function Dn(n){var e=window.location.pathname,t=e.toLowerCase(),o=n.toLowerCase();return!n||t!==o&&0!==t.indexOf(S(o+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Ln=function(n){function e(e,t,o){n.call(this,e,t),o&&function(n){var e=Dn(n);if(!/^\/#/.test(e))return window.location.replace(S(n+"/#"+e)),!0}(this.base)||Bn()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=yn&&e;t&&this.listeners.push(ln());var o=function(){var e=n.current;Bn()&&n.transitionTo(Nn(),(function(o){t&&cn(n.router,o,e,!0),yn||Un(o.fullPath)}))},r=yn?"popstate":"hashchange";window.addEventListener(r,o),this.listeners.push((function(){window.removeEventListener(r,o)}))}},e.prototype.push=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){Fn(n.fullPath),cn(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){Un(n.fullPath),cn(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Nn()!==e&&(n?Fn(e):Un(e))},e.prototype.getCurrentLocation=function(){return Nn()},e}(Pn);function Bn(){var n=Nn();return"/"===n.charAt(0)||(Un("/"+n),!1)}function Nn(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Hn(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Fn(n){yn?bn(Hn(n)):window.location.hash=n}function Un(n){yn?xn(Hn(n)):window.location.replace(Hn(n))}var Vn=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var o=this;this.transitionTo(n,(function(n){o.stack=o.stack.slice(0,o.index+1).concat(n),o.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var o=this;this.transitionTo(n,(function(n){o.stack=o.stack.slice(0,o.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var o=this.stack[t];this.confirmTransition(o,(function(){var n=e.current;e.index=t,e.updateRoute(o),e.router.afterHooks.forEach((function(e){e&&e(o,n)}))}),(function(n){zn(n,kn.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Pn),Wn=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Z(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!yn&&!1!==n.fallback,this.fallback&&(e="hash"),Y||(e="abstract"),this.mode=e,e){case"history":this.history=new Rn(this,n.base);break;case"hash":this.history=new Ln(this,n.base,this.fallback);break;case"abstract":this.history=new Vn(this,n.base);break;default:0}},Kn={currentRoute:{configurable:!0}};function Gn(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Wn.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Kn.currentRoute.get=function(){return this.history&&this.history.current},Wn.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Rn||t instanceof Ln){var o=function(n){t.setupListeners(),function(n){var o=t.current,r=e.options.scrollBehavior;yn&&r&&"fullPath"in n&&cn(e,n,o,!1)}(n)};t.transitionTo(t.getCurrentLocation(),o,o)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Wn.prototype.beforeEach=function(n){return Gn(this.beforeHooks,n)},Wn.prototype.beforeResolve=function(n){return Gn(this.resolveHooks,n)},Wn.prototype.afterEach=function(n){return Gn(this.afterHooks,n)},Wn.prototype.onReady=function(n,e){this.history.onReady(n,e)},Wn.prototype.onError=function(n){this.history.onError(n)},Wn.prototype.push=function(n,e,t){var o=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){o.history.push(n,e,t)}));this.history.push(n,e,t)},Wn.prototype.replace=function(n,e,t){var o=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){o.history.replace(n,e,t)}));this.history.replace(n,e,t)},Wn.prototype.go=function(n){this.history.go(n)},Wn.prototype.back=function(){this.go(-1)},Wn.prototype.forward=function(){this.go(1)},Wn.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Wn.prototype.resolve=function(n,e,t){var o=V(n,e=e||this.history.current,t,this),r=this.match(o,e),a=r.redirectedFrom||r.fullPath;return{location:o,route:r,href:function(n,e,t){var o="hash"===t?"#"+e:e;return n?S(n+"/"+o):o}(this.history.base,a,this.mode),normalizedTo:o,resolved:r}},Wn.prototype.getRoutes=function(){return this.matcher.getRoutes()},Wn.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Wn.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Wn.prototype,Kn),Wn.install=function n(e){if(!n.installed||W!==e){n.installed=!0,W=e;var t=function(n){return void 0!==n},o=function(n,e){var o=n.$options._parentVnode;t(o)&&t(o=o.data)&&t(o=o.registerRouteInstance)&&o(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,o(this,this)},destroyed:function(){o(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",w),e.component("RouterLink",G);var r=e.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},Wn.version="3.5.2",Wn.isNavigationFailure=zn,Wn.NavigationFailureType=kn,Wn.START_LOCATION=g,Y&&window.Vue&&window.Vue.use(Wn);var Jn=Wn;t(210),t(211),t(137),t(83),t(334),t(48),t(49),t(335);function Yn(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}var Xn=t(0),Qn=t(36);t(86);t(54),t(75),t(96);var Zn=t(104);function ne(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var o,r,a=[],i=!0,s=!1;try{for(t=t.call(n);!(i=(o=t.next()).done)&&(a.push(o.value),!e||a.length!==e);i=!0);}catch(n){s=!0,r=n}finally{try{i||null==t.return||t.return()}finally{if(s)throw r}}return a}}(n,e)||Object(Zn.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}t(222),t(158);var ee=t(271),te=t.n(ee),oe={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===ne(n,1)[0]})).map((function(n){var e=ne(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(n[t],'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=ae(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(Qn.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=ie(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return te()([{name:"description",content:this.$description}],n,this.siteMeta,se)},updateCanonicalLink:function(){re(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ae(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){ie(null,this.currentMetaTags),re()}};function re(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function ae(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function ie(n,e){if(e&&Object(Qn.a)(e).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function se(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var o=t[e];if(n.hasOwnProperty(o))return n[o]+o}return JSON.stringify(n)}t(106),t(46),t(59);var le=t(272),ce={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(le)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),o=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+o,i=0;i<t.length;i++){var s=t[i],l=t[i+1],c=0===i&&0===o||o>=s.parentElement.offsetTop+10&&(!l||o<l.parentElement.offsetTop-10),p=decodeURIComponent(this.$route.hash);if(c&&p!==decodeURIComponent(s.hash)){var d=s;if(a===r)for(var u=i+1;u<t.length;u++)if(p===decodeURIComponent(t[u].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(d.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},pe=(t(38),t(440),Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o])}return n}),de=function(n){return"IMG"===n.tagName},ue=function(n){return n&&1===n.nodeType},me=function(n){return".svg"===(n.currentSrc||n.src).substr(-4).toLowerCase()},he=function(n){try{return Array.isArray(n)?n.filter(de):function(n){return NodeList.prototype.isPrototypeOf(n)}(n)?[].slice.call(n).filter(de):ue(n)?[n].filter(de):"string"==typeof n?[].slice.call(document.querySelectorAll(n)).filter(de):[]}catch(n){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},fe=function(n){var e=document.createElement("div");return e.classList.add("medium-zoom-overlay"),e.style.background=n,e},ve=function(n){var e=n.getBoundingClientRect(),t=e.top,o=e.left,r=e.width,a=e.height,i=n.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return i.removeAttribute("id"),i.style.position="absolute",i.style.top=t+s+"px",i.style.left=o+l+"px",i.style.width=r+"px",i.style.height=a+"px",i.style.transform="",i},ge=function(n,e){var t=pe({bubbles:!1,cancelable:!1,detail:void 0},e);if("function"==typeof window.CustomEvent)return new CustomEvent(n,t);var o=document.createEvent("CustomEvent");return o.initCustomEvent(n,t.bubbles,t.cancelable,t.detail),o};!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===t&&o.firstChild?o.insertBefore(r,o.firstChild):o.appendChild(r),r.styleSheet?r.styleSheet.cssText=n:r.appendChild(document.createTextNode(n))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var ye,be=function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=window.Promise||function(n){function e(){}n(e,e)},r=function(n){var e=n.target;e!==E?-1!==b.indexOf(e)&&f({target:e}):h()},a=function(){if(!_&&j.original){var n=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(k-n)>w.scrollOffset&&setTimeout(h,150)}},i=function(n){var e=n.key||n.keyCode;"Escape"!==e&&"Esc"!==e&&27!==e||h()},s=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n;if(n.background&&(E.style.background=n.background),n.container&&n.container instanceof Object&&(e.container=pe({},w.container,n.container)),n.template){var t=ue(n.template)?n.template:document.querySelector(n.template);e.template=t}return w=pe({},w,e),b.forEach((function(n){n.dispatchEvent(ge("medium-zoom:update",{detail:{zoom:S}}))})),S},l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return n(pe({},w,e))},c=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];var o=e.reduce((function(n,e){return[].concat(n,he(e))}),[]);return o.filter((function(n){return-1===b.indexOf(n)})).forEach((function(n){b.push(n),n.classList.add("medium-zoom-image")})),x.forEach((function(n){var e=n.type,t=n.listener,r=n.options;o.forEach((function(n){n.addEventListener(e,t,r)}))})),S},p=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];j.zoomed&&h();var o=e.length>0?e.reduce((function(n,e){return[].concat(n,he(e))}),[]):b;return o.forEach((function(n){n.classList.remove("medium-zoom-image"),n.dispatchEvent(ge("medium-zoom:detach",{detail:{zoom:S}}))})),b=b.filter((function(n){return-1===o.indexOf(n)})),S},d=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(o){o.addEventListener("medium-zoom:"+n,e,t)})),x.push({type:"medium-zoom:"+n,listener:e,options:t}),S},u=function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(o){o.removeEventListener("medium-zoom:"+n,e,t)})),x=x.filter((function(t){return!(t.type==="medium-zoom:"+n&&t.listener.toString()===e.toString())})),S},m=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target,t=function(){var n={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},e=void 0,t=void 0;if(w.container)if(w.container instanceof Object)e=(n=pe({},n,w.container)).width-n.left-n.right-2*w.margin,t=n.height-n.top-n.bottom-2*w.margin;else{var o=(ue(w.container)?w.container:document.querySelector(w.container)).getBoundingClientRect(),r=o.width,a=o.height,i=o.left,s=o.top;n=pe({},n,{width:r,height:a,left:i,top:s})}e=e||n.width-2*w.margin,t=t||n.height-2*w.margin;var l=j.zoomedHd||j.original,c=me(l)?e:l.naturalWidth||e,p=me(l)?t:l.naturalHeight||t,d=l.getBoundingClientRect(),u=d.top,m=d.left,h=d.width,f=d.height,v=Math.min(c,e)/h,g=Math.min(p,t)/f,y=Math.min(v,g),b="scale("+y+") translate3d("+((e-h)/2-m+w.margin+n.left)/y+"px, "+((t-f)/2-u+w.margin+n.top)/y+"px, 0)";j.zoomed.style.transform=b,j.zoomedHd&&(j.zoomedHd.style.transform=b)};return new o((function(n){if(e&&-1===b.indexOf(e))n(S);else{if(j.zoomed)n(S);else{if(e)j.original=e;else{if(!(b.length>0))return void n(S);var o=b;j.original=o[0]}if(j.original.dispatchEvent(ge("medium-zoom:open",{detail:{zoom:S}})),k=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,_=!0,j.zoomed=ve(j.original),document.body.appendChild(E),w.template){var r=ue(w.template)?w.template:document.querySelector(w.template);j.template=document.createElement("div"),j.template.appendChild(r.content.cloneNode(!0)),document.body.appendChild(j.template)}if(document.body.appendChild(j.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),j.original.classList.add("medium-zoom-image--hidden"),j.zoomed.classList.add("medium-zoom-image--opened"),j.zoomed.addEventListener("click",h),j.zoomed.addEventListener("transitionend",(function e(){_=!1,j.zoomed.removeEventListener("transitionend",e),j.original.dispatchEvent(ge("medium-zoom:opened",{detail:{zoom:S}})),n(S)})),j.original.getAttribute("data-zoom-src")){j.zoomedHd=j.zoomed.cloneNode(),j.zoomedHd.removeAttribute("srcset"),j.zoomedHd.removeAttribute("sizes"),j.zoomedHd.src=j.zoomed.getAttribute("data-zoom-src"),j.zoomedHd.onerror=function(){clearInterval(a),console.warn("Unable to reach the zoom image target "+j.zoomedHd.src),j.zoomedHd=null,t()};var a=setInterval((function(){j.zoomedHd.complete&&(clearInterval(a),j.zoomedHd.classList.add("medium-zoom-image--opened"),j.zoomedHd.addEventListener("click",h),document.body.appendChild(j.zoomedHd),t())}),10)}else if(j.original.hasAttribute("srcset")){j.zoomedHd=j.zoomed.cloneNode(),j.zoomedHd.removeAttribute("sizes"),j.zoomedHd.removeAttribute("loading");var i=j.zoomedHd.addEventListener("load",(function(){j.zoomedHd.removeEventListener("load",i),j.zoomedHd.classList.add("medium-zoom-image--opened"),j.zoomedHd.addEventListener("click",h),document.body.appendChild(j.zoomedHd),t()}))}else t()}}}))},h=function(){return new o((function(n){if(!_&&j.original){_=!0,document.body.classList.remove("medium-zoom--opened"),j.zoomed.style.transform="",j.zoomedHd&&(j.zoomedHd.style.transform=""),j.template&&(j.template.style.transition="opacity 150ms",j.template.style.opacity=0),j.original.dispatchEvent(ge("medium-zoom:close",{detail:{zoom:S}})),j.zoomed.addEventListener("transitionend",(function e(){j.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(j.zoomed),j.zoomedHd&&document.body.removeChild(j.zoomedHd),document.body.removeChild(E),j.zoomed.classList.remove("medium-zoom-image--opened"),j.template&&document.body.removeChild(j.template),_=!1,j.zoomed.removeEventListener("transitionend",e),j.original.dispatchEvent(ge("medium-zoom:closed",{detail:{zoom:S}})),j.original=null,j.zoomed=null,j.zoomedHd=null,j.template=null,n(S)}))}else n(S)}))},f=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=n.target;return j.original?h():m({target:e})},v=function(){return w},g=function(){return b},y=function(){return j.original},b=[],x=[],_=!1,k=0,w=t,j={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(e)?w=e:(e||"string"==typeof e)&&c(e),w=pe({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},w);var E=fe(w.background);document.addEventListener("click",r),document.addEventListener("keyup",i),document.addEventListener("scroll",a),window.addEventListener("resize",h);var S={open:m,close:h,toggle:f,update:s,clone:l,attach:c,detach:p,on:d,off:u,getOptions:v,getImages:g,getZoomedImage:y};return S},xe={data:function(){return{zoom:null}},mounted:function(){this.updateZoom()},updated:function(){this.updateZoom()},methods:{updateZoom:function(){var n=this;setTimeout((function(){n.zoom&&n.zoom.detach(),n.zoom=be(".theme-reco-content :not(a) > img",{})}),1e3)}}},_e=(t(108),t(105)),ke=t.n(_e),we={mounted:function(){var n=this;ke.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||r.a.component(n.name)||ke.a.start(),t()})),this.$router.afterEach((function(){ke.a.done(),n.isSidebarOpen=!1}))}},je=t(273),Ee=t.n(je),Se={mounted:function(){Ee.a.polyfill()}},Ae=(t(139),t(274)),ze=t.n(Ae);var Te=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return new Promise((function(e,t){ye||((ye=document.createElement("div")).style.display="none",document.body.appendChild(ye));var o=new ze.a(ye,{text:function(){return n}}),r=new Event("click");o.on("success",(function(){e(n),o.destroy()})),o.on("error",(function(n){t(n.action),o.destroy()})),ye.dispatchEvent(r)}))},Oe={props:{copyText:String,code:String},methods:{copyClick:function(){var n=function(n){0};this.$message({time:3e3,content:"复制成功!",title:"Tips"}),Te(this.code).then((function(e){return n})).catch(n)}}},Ce=(t(441),t(442),t(4)),Ie=Object(Ce.a)(Oe,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("span",{ref:"btn",staticClass:"v-copy-code-btn",on:{click:this.copyClick}},[this._v(this._s(this.copyText))])])}),[],!1,null,"a4cb51ca",null).exports,$e=[oe,ce,xe,we,Se,{updated:function(){var n=this;setTimeout((function(){n.$copyUpdates()}),0)},methods:{$copyUpdates:function(){Array.from(document.querySelectorAll('div[class*="language-"] pre')).forEach((function(n){var e=n;if(!/v-copy/.test(e.className)){var t=new(r.a.extend(Ie));t.copyText="复制代码",t.code=e.textContent,t.$mount(),e.className+=" v-copy",e.parentElement.appendChild(t.$el)}}))}}}],Pe={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return Object(Xn.i)("layout",n),r.a.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},Me=Object(Ce.a)(Pe,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;Object(Xn.g)(Me,"mixins",$e);var qe=[{name:"v-48d9f322",path:"/REMADME.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-48d9f322").then(t)}},{name:"v-79ac7268",path:"/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-79ac7268").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-2131ff62",path:"/view/docs/java/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-2131ff62").then(t)}},{path:"/view/docs/java/index.html",redirect:"/view/docs/java/"},{name:"v-5ebb7c74",path:"/view/docs/java/mybatisplus.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-5ebb7c74").then(t)}},{name:"v-4d64a25c",path:"/view/docs/java/0816.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-4d64a25c").then(t)}},{name:"v-6db14b88",path:"/view/docs/java/3.mybaits+mp.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-6db14b88").then(t)}},{name:"v-31c8e948",path:"/view/docs/java/spring.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-31c8e948").then(t)}},{name:"v-20d1bd8f",path:"/view/docs/other/2021/0812.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-20d1bd8f").then(t)}},{name:"v-ed415422",path:"/view/docs/other/2021/0813.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-ed415422").then(t)}},{name:"v-5ce04cb6",path:"/view/docs/other/%E6%8A%80%E5%B7%A7/top.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-5ce04cb6").then(t)}},{path:"/view/docs/other/技巧/top.html",redirect:"/view/docs/other/%E6%8A%80%E5%B7%A7/top.html"},{path:"/view/docs/other/技巧/top.html",redirect:"/view/docs/other/%E6%8A%80%E5%B7%A7/top.html"},{name:"v-5a7a86af",path:"/view/docs/other/2021/0815.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-5a7a86af").then(t)}},{name:"v-74d4bdbb",path:"/view/docs/other/2021/log4%E4%BD%BF%E7%94%A8.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-74d4bdbb").then(t)}},{path:"/view/docs/other/2021/log4使用.html",redirect:"/view/docs/other/2021/log4%E4%BD%BF%E7%94%A8.html"},{path:"/view/docs/other/2021/log4使用.html",redirect:"/view/docs/other/2021/log4%E4%BD%BF%E7%94%A8.html"},{name:"v-07f3dd22",path:"/view/docs/other/2021/8017.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-07f3dd22").then(t)}},{name:"v-5c35c01c",path:"/view/docs/java/springboot.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-5c35c01c").then(t)}},{name:"v-6fac1a4f",path:"/view/docs/web/2021/082221.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-6fac1a4f").then(t)}},{name:"v-8a36e722",path:"/view/docs/web/2021/0822.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-8a36e722").then(t)}},{name:"v-398a4a4f",path:"/view/docs/web/2021/0825.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-398a4a4f").then(t)}},{name:"v-f1875250",path:"/view/docs/other/%E6%8A%80%E5%B7%A7/%E6%94%B6%E8%97%8F%E7%BD%91%E7%AB%99.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-f1875250").then(t)}},{path:"/view/docs/other/技巧/收藏网站.html",redirect:"/view/docs/other/%E6%8A%80%E5%B7%A7/%E6%94%B6%E8%97%8F%E7%BD%91%E7%AB%99.html"},{path:"/view/docs/other/技巧/收藏网站.html",redirect:"/view/docs/other/%E6%8A%80%E5%B7%A7/%E6%94%B6%E8%97%8F%E7%BD%91%E7%AB%99.html"},{name:"v-2e5792a2",path:"/view/docs/web/2021/vuex.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-2e5792a2").then(t)}},{name:"v-5680aca3",path:"/view/docs/web/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-5680aca3").then(t)}},{path:"/view/docs/web/index.html",redirect:"/view/docs/web/"},{name:"v-7476a83e",path:"/view/docs/web/2021/Echarts.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-7476a83e").then(t)}},{name:"v-7e771070",path:"/view/docs/%E5%AE%89%E8%A3%85/spark%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-7e771070").then(t)}},{path:"/view/docs/安装/spark环境搭建.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/spark%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"},{path:"/view/docs/安装/spark环境搭建.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/spark%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"},{name:"v-132be533",path:"/view/docs/%E5%AE%89%E8%A3%85/win%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-132be533").then(t)}},{path:"/view/docs/安装/win大数据搭建.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/win%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA.html"},{path:"/view/docs/安装/win大数据搭建.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/win%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA.html"},{name:"v-3ce254cc",path:"/view/docs/%E5%AE%89%E8%A3%85/hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-3ce254cc").then(t)}},{path:"/view/docs/安装/hadoop分布式运行环境.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83.html"},{path:"/view/docs/安装/hadoop分布式运行环境.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83.html"},{name:"v-d63eacf6",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAsqoop%E5%92%8CFlume.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-d63eacf6").then(t)}},{path:"/view/docs/安装/搭建sqoop和Flume.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAsqoop%E5%92%8CFlume.html"},{path:"/view/docs/安装/搭建sqoop和Flume.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAsqoop%E5%92%8CFlume.html"},{name:"v-4c624479",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAhadoop%20HA.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-4c624479").then(t)}},{path:"/view/docs/安装/搭建hadoop HA.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAhadoop%20HA.html"},{path:"/view/docs/安装/搭建hadoop HA.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAhadoop%20HA.html"},{name:"v-7851ce0c",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAHIVE.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-7851ce0c").then(t)}},{path:"/view/docs/安装/搭建HIVE.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAHIVE.html"},{path:"/view/docs/安装/搭建HIVE.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAHIVE.html"},{name:"v-76aea4b8",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAkafka.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-76aea4b8").then(t)}},{path:"/view/docs/安装/搭建kafka.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAkafka.html"},{path:"/view/docs/安装/搭建kafka.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAkafka.html"},{name:"v-0089f5e2",path:"/view/docs/web/2021/websorcket.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-0089f5e2").then(t)}},{name:"v-3a771900",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BA%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-3a771900").then(t)}},{path:"/view/docs/安装/搭建分布式集群.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BA%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4.html"},{path:"/view/docs/安装/搭建分布式集群.html",redirect:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BA%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4.html"},{name:"v-7743345c",path:"/view/docs/%E7%AC%94%E8%AE%B0/12.sqoop.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-7743345c").then(t)}},{path:"/view/docs/笔记/12.sqoop.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/12.sqoop.html"},{path:"/view/docs/笔记/12.sqoop.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/12.sqoop.html"},{name:"v-23ba8d92",path:"/view/docs/%E7%AC%94%E8%AE%B0/10.kafka.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-23ba8d92").then(t)}},{path:"/view/docs/笔记/10.kafka.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/10.kafka.html"},{path:"/view/docs/笔记/10.kafka.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/10.kafka.html"},{name:"v-7a3989dc",path:"/view/docs/%E7%AC%94%E8%AE%B0/14.Oozie.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-7a3989dc").then(t)}},{path:"/view/docs/笔记/14.Oozie.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/14.Oozie.html"},{path:"/view/docs/笔记/14.Oozie.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/14.Oozie.html"},{name:"v-56fded9c",path:"/view/docs/%E7%AC%94%E8%AE%B0/13.azkaban.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-56fded9c").then(t)}},{path:"/view/docs/笔记/13.azkaban.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/13.azkaban.html"},{path:"/view/docs/笔记/13.azkaban.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/13.azkaban.html"},{name:"v-5c6715f2",path:"/view/docs/%E7%AC%94%E8%AE%B0/15.Hue.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-5c6715f2").then(t)}},{path:"/view/docs/笔记/15.Hue.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/15.Hue.html"},{path:"/view/docs/笔记/15.Hue.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/15.Hue.html"},{name:"v-c119c20c",path:"/view/docs/%E7%AC%94%E8%AE%B0/20.Kylin%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-c119c20c").then(t)}},{path:"/view/docs/笔记/20.Kylin即席查询.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/20.Kylin%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html"},{path:"/view/docs/笔记/20.Kylin即席查询.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/20.Kylin%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html"},{name:"v-553f9a5c",path:"/view/docs/%E7%AC%94%E8%AE%B0/16.scala.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-553f9a5c").then(t)}},{path:"/view/docs/笔记/16.scala.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/16.scala.html"},{path:"/view/docs/笔记/16.scala.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/16.scala.html"},{name:"v-377761dc",path:"/view/docs/%E7%AC%94%E8%AE%B0/11.hbase.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-377761dc").then(t)}},{path:"/view/docs/笔记/11.hbase.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/11.hbase.html"},{path:"/view/docs/笔记/11.hbase.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/11.hbase.html"},{name:"v-1d22ef68",path:"/view/docs/%E7%AC%94%E8%AE%B0/22.Presto%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-1d22ef68").then(t)}},{path:"/view/docs/笔记/22.Presto即席查询.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/22.Presto%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html"},{path:"/view/docs/笔记/22.Presto即席查询.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/22.Presto%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html"},{name:"v-ff763138",path:"/view/docs/%E7%AC%94%E8%AE%B0/26.zabbix.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-ff763138").then(t)}},{path:"/view/docs/笔记/26.zabbix.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/26.zabbix.html"},{path:"/view/docs/笔记/26.zabbix.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/26.zabbix.html"},{name:"v-1500dd1e",path:"/view/docs/%E7%AC%94%E8%AE%B0/23.superset%E5%8F%AF%E8%A7%86%E5%8C%96.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-1500dd1e").then(t)}},{path:"/view/docs/笔记/23.superset可视化.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/23.superset%E5%8F%AF%E8%A7%86%E5%8C%96.html"},{path:"/view/docs/笔记/23.superset可视化.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/23.superset%E5%8F%AF%E8%A7%86%E5%8C%96.html"},{name:"v-3705dc52",path:"/view/docs/%E7%AC%94%E8%AE%B0/Pandas.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-3705dc52").then(t)}},{path:"/view/docs/笔记/Pandas.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/Pandas.html"},{path:"/view/docs/笔记/Pandas.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/Pandas.html"},{name:"v-464eb01e",path:"/view/docs/%E7%AC%94%E8%AE%B0/28.Kerberos.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-464eb01e").then(t)}},{path:"/view/docs/笔记/28.Kerberos.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/28.Kerberos.html"},{path:"/view/docs/笔记/28.Kerberos.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/28.Kerberos.html"},{name:"v-9a9115a4",path:"/view/docs/%E7%AC%94%E8%AE%B0/34.es.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-9a9115a4").then(t)}},{path:"/view/docs/笔记/34.es.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/34.es.html"},{path:"/view/docs/笔记/34.es.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/34.es.html"},{name:"v-5fede7f9",path:"/view/docs/%E8%B8%A9%E5%9D%91/idea%E7%BC%96%E7%A0%81.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-5fede7f9").then(t)}},{path:"/view/docs/踩坑/idea编码.html",redirect:"/view/docs/%E8%B8%A9%E5%9D%91/idea%E7%BC%96%E7%A0%81.html"},{path:"/view/docs/踩坑/idea编码.html",redirect:"/view/docs/%E8%B8%A9%E5%9D%91/idea%E7%BC%96%E7%A0%81.html"},{name:"v-59464431",path:"/view/docs/%E7%AC%94%E8%AE%B0/python%E7%88%AC%E8%99%AB.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-59464431").then(t)}},{path:"/view/docs/笔记/python爬虫.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/python%E7%88%AC%E8%99%AB.html"},{path:"/view/docs/笔记/python爬虫.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/python%E7%88%AC%E8%99%AB.html"},{name:"v-0f87b710",path:"/view/docs/%E7%AC%94%E8%AE%B0/32.Redis6.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-0f87b710").then(t)}},{path:"/view/docs/笔记/32.Redis6.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/32.Redis6.html"},{path:"/view/docs/笔记/32.Redis6.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/32.Redis6.html"},{name:"v-cb7920d6",path:"/view/docs/%E7%AC%94%E8%AE%B0/30.%E6%95%B0%E4%BB%934.x.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-cb7920d6").then(t)}},{path:"/view/docs/笔记/30.数仓4.x.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/30.%E6%95%B0%E4%BB%934.x.html"},{path:"/view/docs/笔记/30.数仓4.x.html",redirect:"/view/docs/%E7%AC%94%E8%AE%B0/30.%E6%95%B0%E4%BB%934.x.html"},{name:"v-225e74a0",path:"/view/docs/%E8%B8%A9%E5%9D%91/spark%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-225e74a0").then(t)}},{path:"/view/docs/踩坑/spark程序打包.html",redirect:"/view/docs/%E8%B8%A9%E5%9D%91/spark%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85.html"},{path:"/view/docs/踩坑/spark程序打包.html",redirect:"/view/docs/%E8%B8%A9%E5%9D%91/spark%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85.html"},{name:"v-50934d48",path:"/view/reward.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-50934d48").then(t)}},{name:"v-3ce3331c",path:"/view/docs/%E8%B8%A9%E5%9D%91/hive.html",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-3ce3331c").then(t)}},{path:"/view/docs/踩坑/hive.html",redirect:"/view/docs/%E8%B8%A9%E5%9D%91/hive.html"},{path:"/view/docs/踩坑/hive.html",redirect:"/view/docs/%E8%B8%A9%E5%9D%91/hive.html"},{name:"v-b1564aac",path:"/tag/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tags","v-b1564aac").then(t)},meta:{pid:"tags",id:"tags"}},{path:"/tag/index.html",redirect:"/tag/"},{name:"v-ef9325c4",path:"/categories/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("FrontmatterKey","v-ef9325c4").then(t)},meta:{pid:"categories",id:"categories"}},{path:"/categories/index.html",redirect:"/categories/"},{name:"v-6319eb4e",path:"/timeline/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("TimeLines","v-6319eb4e").then(t)},meta:{pid:"timeline",id:"timeline"}},{path:"/timeline/index.html",redirect:"/timeline/"},{name:"v-052f93d7",path:"/about/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("About","v-052f93d7").then(t)},meta:{pid:"about",id:"about"}},{path:"/about/index.html",redirect:"/about/"},{name:"v-32555732",path:"/tag/Git/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-32555732").then(t)},meta:{pid:"tags",id:"Git"}},{path:"/tag/Git/index.html",redirect:"/tag/Git/"},{name:"v-f5f3b4b4",path:"/tag/MyBatis/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-f5f3b4b4").then(t)},meta:{pid:"tags",id:"MyBatis"}},{path:"/tag/MyBatis/index.html",redirect:"/tag/MyBatis/"},{name:"v-230412de",path:"/tag/MyBatis-Plus/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-230412de").then(t)},meta:{pid:"tags",id:"MyBatis-Plus"}},{path:"/tag/MyBatis-Plus/index.html",redirect:"/tag/MyBatis-Plus/"},{name:"v-76ecf1d8",path:"/tag/spring/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-76ecf1d8").then(t)},meta:{pid:"tags",id:"spring"}},{path:"/tag/spring/index.html",redirect:"/tag/spring/"},{name:"v-97019ce8",path:"/tag/工具/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-97019ce8").then(t)},meta:{pid:"tags",id:"工具"}},{path:"/tag/工具/index.html",redirect:"/tag/工具/"},{name:"v-69ed6cbe",path:"/tag/置顶/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-69ed6cbe").then(t)},meta:{pid:"tags",id:"置顶"}},{path:"/tag/置顶/index.html",redirect:"/tag/置顶/"},{name:"v-dfb71430",path:"/tag/vuepress/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-dfb71430").then(t)},meta:{pid:"tags",id:"vuepress"}},{path:"/tag/vuepress/index.html",redirect:"/tag/vuepress/"},{name:"v-143daf56",path:"/tag/log4/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-143daf56").then(t)},meta:{pid:"tags",id:"log4"}},{path:"/tag/log4/index.html",redirect:"/tag/log4/"},{name:"v-73f318a6",path:"/tag/springboot/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-73f318a6").then(t)},meta:{pid:"tags",id:"springboot"}},{path:"/tag/springboot/index.html",redirect:"/tag/springboot/"},{name:"v-3256ec9e",path:"/tag/Es6/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-3256ec9e").then(t)},meta:{pid:"tags",id:"Es6"}},{path:"/tag/Es6/index.html",redirect:"/tag/Es6/"},{name:"v-322a45da",path:"/tag/vue/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-322a45da").then(t)},meta:{pid:"tags",id:"vue"}},{path:"/tag/vue/index.html",redirect:"/tag/vue/"},{name:"v-131e635a",path:"/tag/vuex/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-131e635a").then(t)},meta:{pid:"tags",id:"vuex"}},{path:"/tag/vuex/index.html",redirect:"/tag/vuex/"},{name:"v-09e9e182",path:"/tag/Echarts/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-09e9e182").then(t)},meta:{pid:"tags",id:"Echarts"}},{path:"/tag/Echarts/index.html",redirect:"/tag/Echarts/"},{name:"v-09fb9814",path:"/tag/安装/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-09fb9814").then(t)},meta:{pid:"tags",id:"安装"}},{path:"/tag/安装/index.html",redirect:"/tag/安装/"},{name:"v-5a9a828c",path:"/tag/websorcket/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-5a9a828c").then(t)},meta:{pid:"tags",id:"websorcket"}},{path:"/tag/websorcket/index.html",redirect:"/tag/websorcket/"},{name:"v-5b52f3b2",path:"/tag/sqoop/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-5b52f3b2").then(t)},meta:{pid:"tags",id:"sqoop"}},{path:"/tag/sqoop/index.html",redirect:"/tag/sqoop/"},{name:"v-786bbe1a",path:"/tag/kafka/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-786bbe1a").then(t)},meta:{pid:"tags",id:"kafka"}},{path:"/tag/kafka/index.html",redirect:"/tag/kafka/"},{name:"v-d65e6dfa",path:"/tag/Oozie/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-d65e6dfa").then(t)},meta:{pid:"tags",id:"Oozie"}},{path:"/tag/Oozie/index.html",redirect:"/tag/Oozie/"},{name:"v-1d724679",path:"/tag/azkaban/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-1d724679").then(t)},meta:{pid:"tags",id:"azkaban"}},{path:"/tag/azkaban/index.html",redirect:"/tag/azkaban/"},{name:"v-325417fe",path:"/tag/Hue/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-325417fe").then(t)},meta:{pid:"tags",id:"Hue"}},{path:"/tag/Hue/index.html",redirect:"/tag/Hue/"},{name:"v-e2f81514",path:"/tag/Kylin/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-e2f81514").then(t)},meta:{pid:"tags",id:"Kylin"}},{path:"/tag/Kylin/index.html",redirect:"/tag/Kylin/"},{name:"v-5cea5a5a",path:"/tag/scala/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-5cea5a5a").then(t)},meta:{pid:"tags",id:"scala"}},{path:"/tag/scala/index.html",redirect:"/tag/scala/"},{name:"v-8290f180",path:"/tag/hbase/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-8290f180").then(t)},meta:{pid:"tags",id:"hbase"}},{path:"/tag/hbase/index.html",redirect:"/tag/hbase/"},{name:"v-3e29fada",path:"/tag/Presto/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-3e29fada").then(t)},meta:{pid:"tags",id:"Presto"}},{path:"/tag/Presto/index.html",redirect:"/tag/Presto/"},{name:"v-6289b022",path:"/tag/zabbix/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-6289b022").then(t)},meta:{pid:"tags",id:"zabbix"}},{path:"/tag/zabbix/index.html",redirect:"/tag/zabbix/"},{name:"v-067c8e9e",path:"/tag/superset/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-067c8e9e").then(t)},meta:{pid:"tags",id:"superset"}},{path:"/tag/superset/index.html",redirect:"/tag/superset/"},{name:"v-7ca256ac",path:"/tag/Kerberos/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-7ca256ac").then(t)},meta:{pid:"tags",id:"Kerberos"}},{path:"/tag/Kerberos/index.html",redirect:"/tag/Kerberos/"},{name:"v-e8d89352",path:"/tag/es/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-e8d89352").then(t)},meta:{pid:"tags",id:"es"}},{path:"/tag/es/index.html",redirect:"/tag/es/"},{name:"v-14b36356",path:"/tag/hive/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-14b36356").then(t)},meta:{pid:"tags",id:"hive"}},{path:"/tag/hive/index.html",redirect:"/tag/hive/"},{name:"v-cd4f2d44",path:"/tag/Redis/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-cd4f2d44").then(t)},meta:{pid:"tags",id:"Redis"}},{path:"/tag/Redis/index.html",redirect:"/tag/Redis/"},{name:"v-3ff636a5",path:"/tag/离线数仓/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-3ff636a5").then(t)},meta:{pid:"tags",id:"离线数仓"}},{path:"/tag/离线数仓/index.html",redirect:"/tag/离线数仓/"},{name:"v-5b7bc7c8",path:"/tag/spark/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Tag","v-5b7bc7c8").then(t)},meta:{pid:"tags",id:"spark"}},{path:"/tag/spark/index.html",redirect:"/tag/spark/"},{name:"v-62faafef",path:"/categories/java/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Category","v-62faafef").then(t)},meta:{pid:"categories",id:"java"}},{path:"/categories/java/index.html",redirect:"/categories/java/"},{name:"v-7fc479ec",path:"/categories/其他/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Category","v-7fc479ec").then(t)},meta:{pid:"categories",id:"其他"}},{path:"/categories/其他/index.html",redirect:"/categories/其他/"},{name:"v-500bebd0",path:"/categories/收藏/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Category","v-500bebd0").then(t)},meta:{pid:"categories",id:"收藏"}},{path:"/categories/收藏/index.html",redirect:"/categories/收藏/"},{name:"v-14bbbf36",path:"/categories/前端/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Category","v-14bbbf36").then(t)},meta:{pid:"categories",id:"前端"}},{path:"/categories/前端/index.html",redirect:"/categories/前端/"},{name:"v-55dc2dc0",path:"/categories/安装/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Category","v-55dc2dc0").then(t)},meta:{pid:"categories",id:"安装"}},{path:"/categories/安装/index.html",redirect:"/categories/安装/"},{name:"v-5a3bf502",path:"/categories/笔记/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Category","v-5a3bf502").then(t)},meta:{pid:"categories",id:"笔记"}},{path:"/categories/笔记/index.html",redirect:"/categories/笔记/"},{name:"v-ace8702e",path:"/categories/踩坑/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Category","v-ace8702e").then(t)},meta:{pid:"categories",id:"踩坑"}},{path:"/categories/踩坑/index.html",redirect:"/categories/踩坑/"},{name:"v-498db35e",path:"/categories/笔记/page/2/",component:Me,beforeEnter:function(n,e,t){Object(Xn.a)("Layout","v-498db35e").then(t)},meta:{pid:"categories",id:"笔记"}},{path:"/categories/笔记/page/2/index.html",redirect:"/categories/笔记/page/2/"},{path:"*",component:Me}],Re={title:"须贺",description:"《鸟欲高飞先展翅，人求上进先读书》",base:"/",headTags:[["link",{rel:"icon",href:"/img/favicon.ico"}],["meta",{name:"viewport",content:"width=device-width,initial-scale=1,user-scalable=no"}],["script",{},'\n          var _hmt = _hmt || [];\n          (function() {\n            var hm = document.createElement("script");\n            hm.src = "https://hm.baidu.com/hm.js?9146a86d484b79eb7a9fab54d0655aa0";\n            var s = document.getElementsByTagName("script")[0]; \n            s.parentNode.insertBefore(hm, s);\n          })();\n        '],["script",{language:"javascript",type:"text/javascript",src:"https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js"}],["script",{language:"javascript",type:"text/javascript",src:"/js/MouseClickEffect.js"}]],pages:[{title:"第一次提交",frontmatter:{},regularPath:"/REMADME.html",relativePath:"REMADME.md",key:"v-48d9f322",path:"/REMADME.html",headers:[{level:2,title:"第一次提交",slug:"第一次提交",normalizedTitle:"第一次提交",charIndex:2}],lastUpdated:"2021/8/12 下午2:06:24",headersStr:"第一次提交",content:"# 第一次提交",normalizedContent:"# 第一次提交",charsets:{cjk:!0}},{title:"Home",frontmatter:{home:!0,all:!0,heroText:"愿你保持初心和善良,笑里尽是温暖与坦荡。",tagline:"A simple and beautiful vuepress blog theme.",bgImageStyle:{height:"100vh"},isShowTitleInHome:!1,actionText:"Guide",actionLink:"/views/other/guide",features:[{title:"Yesterday",details:"开发一款看着开心、写着顺手的 vuepress 博客主题"},{title:"Today",details:"希望帮助更多的人花更多的时间在内容创作上，而不是博客搭建上"},{title:"Tomorrow",details:"希望更多的爱好者能够参与进来，帮助这个主题更好的成长"}]},regularPath:"/",relativePath:"README.md",key:"v-79ac7268",path:"/",lastUpdated:"2021/8/12 下午2:26:07",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"java 全栈路线",frontmatter:{},regularPath:"/view/docs/java/",relativePath:"view/docs/java/README.md",key:"v-2131ff62",path:"/view/docs/java/",headers:[{level:2,title:"java 全栈路线",slug:"java-全栈路线",normalizedTitle:"java 全栈路线",charIndex:2}],lastUpdated:"2021/8/27 下午10:53:09",headersStr:"java 全栈路线",content:"# java 全栈路线",normalizedContent:"# java 全栈路线",charsets:{cjk:!0}},{title:"Mybatis-plus 逆向工程",frontmatter:{},regularPath:"/view/docs/java/mybatisplus.html",relativePath:"view/docs/java/mybatisplus.md",key:"v-5ebb7c74",path:"/view/docs/java/mybatisplus.html",headers:[{level:2,title:"Mybatis-plus 逆向工程",slug:"mybatis-plus-逆向工程",normalizedTitle:"mybatis-plus 逆向工程",charIndex:2}],lastUpdated:"2021/12/22 下午4:13:20",headersStr:"Mybatis-plus 逆向工程",content:'# Mybatis-plus 逆向工程\n\n 1. 导入依赖\n    \n    \x3c!--    mp依赖--\x3e\n        <dependency>\n          <groupId>com.baomidou</groupId>\n          <artifactId>mybatis-plus-boot-starter</artifactId>\n          <version>3.1.1</version>\n        </dependency>\n    \x3c!--代码生成器--\x3e\n        <dependency>\n          <groupId>com.baomidou</groupId>\n          <artifactId>mybatis-plus-generator</artifactId>\n          <version>3.1.1</version>\n        </dependency>\n    \x3c!--    freemarke 依赖 生成需要用到--\x3e\n        <dependency>\n          <groupId>org.freemarker</groupId>\n          <artifactId>freemarker</artifactId>\n        </dependency>\n    \x3c!--    mysql 依赖--\x3e\n        <dependency>\n          <groupId>mysql</groupId>\n          <artifactId>mysql-connector-java</artifactId>\n          <scope>runtime</scope>\n        </dependency>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    \n\n 2. 编写配置类\n    \n    package com.axcmsm.generator;\n    \n    import com.baomidou.mybatisplus.core.exceptions.MybatisPlusException;\n    import com.baomidou.mybatisplus.core.toolkit.StringPool;\n    import com.baomidou.mybatisplus.core.toolkit.StringUtils;\n    import com.baomidou.mybatisplus.generator.AutoGenerator;\n    import com.baomidou.mybatisplus.generator.InjectionConfig;\n    import com.baomidou.mybatisplus.generator.config.*;\n    import com.baomidou.mybatisplus.generator.config.po.TableInfo;\n    import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;\n    import com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;\n    \n    import java.util.ArrayList;\n    import java.util.List;\n    import java.util.Scanner;\n    \n    /**\n     * 执行 main 方法控制台输入模块表名回车自动生成对应项目目录中\n     *\n     * @author zhoubin\n     * @since 1.0.0\n     */\n    public class CodeGenerator {\n        /**\n         * <p>\n         * 读取控制台内容\n         * </p>\n         */\n        public static String scanner(String tip) {\n            Scanner scanner = new Scanner(System.in);\n            StringBuilder help = new StringBuilder();\n            help.append("请输入" + tip + "：");\n            System.out.println(help.toString());\n            if (scanner.hasNext()) {\n                String ipt = scanner.next();\n                if (StringUtils.isNotEmpty(ipt)) {\n                    return ipt;\n                }\n            }\n            throw  new MybatisPlusException("请输入正确的" + tip + "！");\n        }\n    \n        public static void main(String[] args) {\n            // 代码生成器\n            AutoGenerator mpg = new AutoGenerator();\n            // 全局配置\n            GlobalConfig gc = new GlobalConfig();\n            String projectPath = System.getProperty("user.dir");\n            gc.setOutputDir(projectPath + "/src/main/java");\n            //作者\n            gc.setAuthor("axcmsm");\n            //打开输出目录\n            gc.setOpen(false);\n            //xml开启 BaseResultMap\n            gc.setBaseResultMap(true);\n            //xml 开启BaseColumnList\n            gc.setBaseColumnList(true);\n            // 实体属性 Swagger2 注解\n            gc.setSwagger2(true);\n            mpg.setGlobalConfig(gc);\n            // 数据源配置\n            DataSourceConfig dsc = new DataSourceConfig();\n            dsc.setUrl("jdbc:mysql://hadoop111:3306/yeb?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia" + "/Shanghai");\n            dsc.setDriverName("com.mysql.cj.jdbc.Driver");\n            dsc.setUsername("root");\n            dsc.setPassword("hadoop");\n            mpg.setDataSource(dsc);\n            // 包配置\n            PackageConfig pc = new PackageConfig();\n            pc.setParent("com.axcmsm")\n                    .setEntity("pojo")\n                    .setMapper("mapper")\n                    .setService("service")\n                    .setServiceImpl("service.impl")\n                    .setController("controller");\n            mpg.setPackageInfo(pc);\n            // 自定义配置\n            InjectionConfig cfg = new InjectionConfig() {\n                @Override\n                public void initMap() {\n                    // to do nothing\n                }\n            };\n            // 如果模板引擎是 freemarker\n            String templatePath = "/templates/mapper.xml.ftl";\n            // 如果模板引擎是 velocity\n            // String templatePath = "/templates/mapper.xml.vm";\n            // 自定义输出配置\n            List<FileOutConfig> focList = new ArrayList<>();\n            // 自定义配置会被优先输出\n            focList.add(new FileOutConfig(templatePath) {\n                @Override\n                public String outputFile(TableInfo tableInfo) {\n                    // 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！\n                    return projectPath + "/src/main/resources/mapper/"\n                            + tableInfo.getEntityName() + "Mapper"\n                            + StringPool.DOT_XML;\n                }\n            });\n            cfg.setFileOutConfigList(focList);\n            mpg.setCfg(cfg);\n            // 配置模板\n            TemplateConfig templateConfig = new TemplateConfig();\n            templateConfig.setXml(null);\n            mpg.setTemplate(templateConfig);\n            // 策略配置\n            StrategyConfig strategy = new StrategyConfig();\n            //数据库表映射到实体的命名策略\n            strategy.setNaming(NamingStrategy.underline_to_camel);\n            //数据库表字段映射到实体的命名策略\n            strategy.setColumnNaming(NamingStrategy.no_change);\n            //lombok模型\n            strategy.setEntityLombokModel(true);\n            //生成 @RestController 控制器\n            strategy.setRestControllerStyle(true);\n            strategy.setInclude(scanner("表名，多个英文逗号分割").split(","));\n            strategy.setControllerMappingHyphenStyle(true);\n            //表前缀\n            strategy.setTablePrefix("t_");\n            mpg.setStrategy(strategy);\n            mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n            mpg.execute();\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    63\n    64\n    65\n    66\n    67\n    68\n    69\n    70\n    71\n    72\n    73\n    74\n    75\n    76\n    77\n    78\n    79\n    80\n    81\n    82\n    83\n    84\n    85\n    86\n    87\n    88\n    89\n    90\n    91\n    92\n    93\n    94\n    95\n    96\n    97\n    98\n    99\n    100\n    101\n    102\n    103\n    104\n    105\n    106\n    107\n    108\n    109\n    110\n    111\n    112\n    113\n    114\n    115\n    116\n    117\n    118\n    119\n    120\n    121\n    122\n    123\n    124\n    ',normalizedContent:'# mybatis-plus 逆向工程\n\n 1. 导入依赖\n    \n    \x3c!--    mp依赖--\x3e\n        <dependency>\n          <groupid>com.baomidou</groupid>\n          <artifactid>mybatis-plus-boot-starter</artifactid>\n          <version>3.1.1</version>\n        </dependency>\n    \x3c!--代码生成器--\x3e\n        <dependency>\n          <groupid>com.baomidou</groupid>\n          <artifactid>mybatis-plus-generator</artifactid>\n          <version>3.1.1</version>\n        </dependency>\n    \x3c!--    freemarke 依赖 生成需要用到--\x3e\n        <dependency>\n          <groupid>org.freemarker</groupid>\n          <artifactid>freemarker</artifactid>\n        </dependency>\n    \x3c!--    mysql 依赖--\x3e\n        <dependency>\n          <groupid>mysql</groupid>\n          <artifactid>mysql-connector-java</artifactid>\n          <scope>runtime</scope>\n        </dependency>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    \n\n 2. 编写配置类\n    \n    package com.axcmsm.generator;\n    \n    import com.baomidou.mybatisplus.core.exceptions.mybatisplusexception;\n    import com.baomidou.mybatisplus.core.toolkit.stringpool;\n    import com.baomidou.mybatisplus.core.toolkit.stringutils;\n    import com.baomidou.mybatisplus.generator.autogenerator;\n    import com.baomidou.mybatisplus.generator.injectionconfig;\n    import com.baomidou.mybatisplus.generator.config.*;\n    import com.baomidou.mybatisplus.generator.config.po.tableinfo;\n    import com.baomidou.mybatisplus.generator.config.rules.namingstrategy;\n    import com.baomidou.mybatisplus.generator.engine.freemarkertemplateengine;\n    \n    import java.util.arraylist;\n    import java.util.list;\n    import java.util.scanner;\n    \n    /**\n     * 执行 main 方法控制台输入模块表名回车自动生成对应项目目录中\n     *\n     * @author zhoubin\n     * @since 1.0.0\n     */\n    public class codegenerator {\n        /**\n         * <p>\n         * 读取控制台内容\n         * </p>\n         */\n        public static string scanner(string tip) {\n            scanner scanner = new scanner(system.in);\n            stringbuilder help = new stringbuilder();\n            help.append("请输入" + tip + "：");\n            system.out.println(help.tostring());\n            if (scanner.hasnext()) {\n                string ipt = scanner.next();\n                if (stringutils.isnotempty(ipt)) {\n                    return ipt;\n                }\n            }\n            throw  new mybatisplusexception("请输入正确的" + tip + "！");\n        }\n    \n        public static void main(string[] args) {\n            // 代码生成器\n            autogenerator mpg = new autogenerator();\n            // 全局配置\n            globalconfig gc = new globalconfig();\n            string projectpath = system.getproperty("user.dir");\n            gc.setoutputdir(projectpath + "/src/main/java");\n            //作者\n            gc.setauthor("axcmsm");\n            //打开输出目录\n            gc.setopen(false);\n            //xml开启 baseresultmap\n            gc.setbaseresultmap(true);\n            //xml 开启basecolumnlist\n            gc.setbasecolumnlist(true);\n            // 实体属性 swagger2 注解\n            gc.setswagger2(true);\n            mpg.setglobalconfig(gc);\n            // 数据源配置\n            datasourceconfig dsc = new datasourceconfig();\n            dsc.seturl("jdbc:mysql://hadoop111:3306/yeb?useunicode=true&characterencoding=utf-8&servertimezone=asia" + "/shanghai");\n            dsc.setdrivername("com.mysql.cj.jdbc.driver");\n            dsc.setusername("root");\n            dsc.setpassword("hadoop");\n            mpg.setdatasource(dsc);\n            // 包配置\n            packageconfig pc = new packageconfig();\n            pc.setparent("com.axcmsm")\n                    .setentity("pojo")\n                    .setmapper("mapper")\n                    .setservice("service")\n                    .setserviceimpl("service.impl")\n                    .setcontroller("controller");\n            mpg.setpackageinfo(pc);\n            // 自定义配置\n            injectionconfig cfg = new injectionconfig() {\n                @override\n                public void initmap() {\n                    // to do nothing\n                }\n            };\n            // 如果模板引擎是 freemarker\n            string templatepath = "/templates/mapper.xml.ftl";\n            // 如果模板引擎是 velocity\n            // string templatepath = "/templates/mapper.xml.vm";\n            // 自定义输出配置\n            list<fileoutconfig> foclist = new arraylist<>();\n            // 自定义配置会被优先输出\n            foclist.add(new fileoutconfig(templatepath) {\n                @override\n                public string outputfile(tableinfo tableinfo) {\n                    // 自定义输出文件名 ， 如果你 entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！\n                    return projectpath + "/src/main/resources/mapper/"\n                            + tableinfo.getentityname() + "mapper"\n                            + stringpool.dot_xml;\n                }\n            });\n            cfg.setfileoutconfiglist(foclist);\n            mpg.setcfg(cfg);\n            // 配置模板\n            templateconfig templateconfig = new templateconfig();\n            templateconfig.setxml(null);\n            mpg.settemplate(templateconfig);\n            // 策略配置\n            strategyconfig strategy = new strategyconfig();\n            //数据库表映射到实体的命名策略\n            strategy.setnaming(namingstrategy.underline_to_camel);\n            //数据库表字段映射到实体的命名策略\n            strategy.setcolumnnaming(namingstrategy.no_change);\n            //lombok模型\n            strategy.setentitylombokmodel(true);\n            //生成 @restcontroller 控制器\n            strategy.setrestcontrollerstyle(true);\n            strategy.setinclude(scanner("表名，多个英文逗号分割").split(","));\n            strategy.setcontrollermappinghyphenstyle(true);\n            //表前缀\n            strategy.settableprefix("t_");\n            mpg.setstrategy(strategy);\n            mpg.settemplateengine(new freemarkertemplateengine());\n            mpg.execute();\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    63\n    64\n    65\n    66\n    67\n    68\n    69\n    70\n    71\n    72\n    73\n    74\n    75\n    76\n    77\n    78\n    79\n    80\n    81\n    82\n    83\n    84\n    85\n    86\n    87\n    88\n    89\n    90\n    91\n    92\n    93\n    94\n    95\n    96\n    97\n    98\n    99\n    100\n    101\n    102\n    103\n    104\n    105\n    106\n    107\n    108\n    109\n    110\n    111\n    112\n    113\n    114\n    115\n    116\n    117\n    118\n    119\n    120\n    121\n    122\n    123\n    124\n    ',charsets:{cjk:!0}},{title:"git",frontmatter:{title:"git",date:"2021-08-13T00:00:00.000Z",cover:"https://gitee.com/axcmsm/tmp/raw/master/20210816175143.png",tags:["Git"],categories:["java","其他"]},regularPath:"/view/docs/java/0816.html",relativePath:"view/docs/java/0816.md",key:"v-4d64a25c",path:"/view/docs/java/0816.html",headers:[{level:2,title:"Git 简介",slug:"git-简介",normalizedTitle:"git 简介",charIndex:31},{level:2,title:"Git 安装",slug:"git-安装",normalizedTitle:"git 安装",charIndex:519},{level:2,title:"本地仓库",slug:"本地仓库",normalizedTitle:"本地仓库",charIndex:266},{level:3,title:"添加本地仓库命令：",slug:"添加本地仓库命令",normalizedTitle:"添加本地仓库命令：",charIndex:1737},{level:3,title:"分支",slug:"分支",normalizedTitle:"分支",charIndex:88},{level:2,title:"Git远程仓库",slug:"git远程仓库",normalizedTitle:"git远程仓库",charIndex:4183},{level:3,title:"创建远程仓库",slug:"创建远程仓库",normalizedTitle:"创建远程仓库",charIndex:4343},{level:3,title:"操作远程仓库",slug:"操作远程仓库",normalizedTitle:"操作远程仓库",charIndex:4803},{level:2,title:"在 Idea 中使用 Git",slug:"在-idea-中使用-git",normalizedTitle:"在 idea 中使用 git",charIndex:6052},{level:3,title:"浏览：",slug:"浏览",normalizedTitle:"浏览：",charIndex:6788}],lastUpdated:"2021/8/28 下午6:40:26",headersStr:"Git 简介 Git 安装 本地仓库 添加本地仓库命令： 分支 Git远程仓库 创建远程仓库 操作远程仓库 在 Idea 中使用 Git 浏览：",content:"简介\n\nGit 快速入门\n\n\n\n# Git 快速入门\n\n\n# Git 简介\n\nGit是分布式版本控制系统\n\n简单来说 Git 就是一个工具他可以帮助你克隆远程仓库代码，创建不同分支修改完再合并，这样不影响主线程每个版本之间是独立的。\n\n\n\nGit 工作流程：\n\n----------------------------------------\n\n\n\n----------------------------------------\n\n命令如下：\n\n 1. clone（克隆）：从远程仓库克隆代码\n 2. checkout（检出）：从本地仓库中检出一个仓库分支然后进行修订\n 3. add（添加）: 在提交前先将代码提交到暂存区\n 4. commit（提交）: 提交到本地仓库。本地仓库中保存修改的各个历史版本\n 5. fetch (抓取) ： 从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。\n 6. pull (拉取) ： 从远程库拉到本地库，自动进行合并(merge)，然后放到到工作区，相当于 fetch+merge\n 7. push（推送） : 修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库\n\n\n# Git 安装\n\n 1. 下载地址：https://git-scm.com/download\n    \n    安装完后：右键查看到\n    \n    备注：Git GUI：Git 提供的图形界面工具 Git Bash：Git 提供的命令行工具\n\n 2. 基本配置\n    \n    1. 打开 Git Bash\n    \n    2. 设置用户信息\n       \n       git config --global user.name “ax”\n       git config --global user.email “24614721@xx.com”\n       \n       \n       1\n       2\n       \n\n 3. 为常用指令配置别名（可选）\n    \n    有些常用的指令参数非常多，每次都要输入好多参数，我们可以使用别名\n    \n    1. 打开用户目录，创建.bashrc文件\n       \n       如果不支持就打开 gitBash,执行 touch ~/.bashrc\n       \n       \n    \n    2. 在 .bashrc 文件中输入如下内容：\n       \n       #用于输出git提交日志\n       alias git-log='git log --pretty=oneline --all --graph --abbrev-commit'\n       #用于输出当前目录所有文件及基本信息\n       alias ll='ls -al'\n       \n       \n       1\n       2\n       3\n       4\n       \n    \n    3. 然后刷新这个配置文件 source ~/.bashrc\n\n 4. 如果出现乱码\n    \n    执行：\n    \n    git config --global core.quotepath false\n    \n    \n    1\n    \n    \n    在${git_home}/etc/bash.bashrc 添加：\n    \n    export LANG=\"zh_CN.UTF-8\"\n    export LC_ALL=\"zh_CN.UTF-8\"\n    \n    \n    1\n    2\n    \n\n 5. 获取本地仓库\n    \n    1. 创建一个空目录，进入空目录 （这个目录就是你的本地仓库了）\n    2. 在这个目录中打开 git bash 窗口\n    3. 执行 git init 初始化仓库\n    4. 创建成功后可在文件夹下看到隐藏的.git 目录。\n\n\n# 本地仓库\n\n本地仓库中有三个区域，分别是工作区，暂存区、和仓库\n\n工作区是用来改东西的，改完后可提交到暂存区最后再提交到本地仓库\n\n\n\n\n# 添加本地仓库命令：\n\n 1. git add (工作区 --\x3e 暂存区)\n    \n    命令形式:：git add 单个文件名|通配符\n    \n    例如:\n    \n    git add .\n    # 提交所以修改文件\n    \n    \n    1\n    2\n    \n\n 2. git commit (暂存区 --\x3e 本地仓库)\n    \n    命令形式：git commit -m '注释内容'\n    \n    作用：提交暂存区内容到本地仓库的当前分支\n    \n    git commit -m '第一次提交'\n    \n    \n    1\n    \n\n 3. git status 查看的修改的状态（暂存区、工作区）\n\n 4. git-log 查看提交记录：命令形式：git log [option]\n    \n    * options\n      * all 显示所有分支\n      * pretty=oneline 将提交信息显示为一行\n      * abbrev-commit 使得输出的 commitId 更简短\n      * graph 以图的形式显示\n\n 5. 版本回退\n    \n    * 作用：版本切换\n    * 命令形式：git reset --hard commitID\n      * commitID 可以使用 git-log 或 git log 指令查看\n    * git reflflog 查看已删除记录\n\n 6. 添加文件至忽略列表\n    \n    一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动\n    \n    生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录\n    \n    中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。\n    \n    示例：\n    \n    # no .a files\n    *.a\n    #  but do track lib.a, even though you're ignoring .a files above\n    # only ignore the TODO file in the current directory, not subdir/TODO\n    /TODO\n    # ignore all files in the build/ directory\n    build/\n    # ignore doc/notes.txt, but not doc/server/arch.txt\n    doc/*.txt\n    # ignore all .pdf files in the doc/ directory\n    doc/**/*.pdf\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n\n# 分支\n\n----------------------------------------\n\n几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离\n\n开来进行重大的 Bug 修改、开发新的功能，以免影响开发主线。\n\n分支命令：\n\n 1. 查看本地分支\n    \n    * 命令：git branch\n\n 2. 创建本地分支\n    \n    * 命令：git branch 分支名\n\n 3. 切换分支(checkout)\n    \n    * 命令：git checkout 分支名\n    \n    我们还可以直接切换到一个不存在的分支（创建并切换）\n    \n    * 命令：git checkout -b 分支名\n\n 4. 合并分支(merge)\n    \n    一个分支上的提交可以合并到另一个分支\n    \n    命令：git merge 分支名称\n\n 5. 删除分支\n    \n    不能删除当前分支，只能删除其他分支\n    \n    git branch -d b1 删除分支时，需要做各种检查\n    \n    git branch -D b1 不做任何检查，强制删除\n\n 6. 解决冲突\n    \n    如果俩个分支存在同时修改同一个文件同一行，需要手动解决冲突\n    \n    1. 找出文章冲突的地方\n    2. 将其解决，解决完加入暂存区 add\n    3. 提交到仓库 commit\n\n 7. 开发中分支使用原则与流程\n    \n    使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的 Bug 修改、开发新的功能，以免影响开发主线\n    \n    流程如下：\n    \n    * master （生产） 分支\n      \n      线上分支，主分支，中小规模项目作为线上运行的应用对应的分支；\n    \n    * develop（开发）分支\n      \n      主要开发分支开发完合并到 master 分支上\n    \n    * feature/xxxx 分支\n      \n      从 develop 创建的分支，合并到 develop 分支中\n    \n    * hotfifix/xxxx 分支\n      \n      从 master 派生的分支，一般作为线上 bug 修复使用，修复完成后需要合并到 master、test、develop 分支。\n    \n    * 还有一些其他分支，例如 test 分支（用于代码测试）、pre 分支（预上线分支）等等。\n\n----------------------------------------\n\n\n# Git远程仓库\n\n常用的托管服务[远程仓库]\n\n我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有GitHub、码云、GitLab等\n\nGitLab：开源项目，一般用于在企业、学校等内部网络搭建 git 私服。\n\n----------------------------------------\n\n\n# 创建远程仓库\n\n 1. 注册码云或者 github\n\n 2. 新建仓库\n\n 3. 配置 ssh 公钥\n    \n    * 生成 SSH 公钥\n      \n      ssh-keygen -t rsa\n      # 不断回车即可\n      #如果公钥已经存在，则自动覆盖\n      \n      \n      1\n      2\n      3\n      \n    \n    * 设置账户共公钥\n      \n      # 获取公钥\n      cat ~/.ssh/id_rsa.pub\n      \n      \n      1\n      2\n      \n      \n      然后把公钥贴在 gitee 或者 github 的公钥中\n    \n    * 验证是否配置成功\n      \n      ssh -T git@gitee.com\n      \n      \n      1\n      \n\n----------------------------------------\n\n\n# 操作远程仓库\n\n----------------------------------------\n\n此操作是先初始化本地库，然后与已创建的远程库进行对接。\n\n 1. 添加远程仓库\n    \n    * 命令： git remote add <远端名称> <仓库路径>\n      * 远端名称，默认是 origin，取决于远端服务器设置\n      * 仓库路径，从远端服务器获取此 URl\n      * 例如：git remote add origin git@gitee.com:czbk_zhang_meng/git_test.git\n\n 2. 查看远程仓库\n    \n    * 命令：git remote\n\n 3. 推送到远程仓库\n    \n    * 命令：git push [-f][--set-upstream] [远端名称 [本地分支名][:远端分支名] ]\n      * 如果远程分支名和本地分支名称相同，则可以只写本地分支\n      * git push origin master\n    * -f 表示强制覆盖\n    * --set-upstream 推送到远端的同时并且建立起和远端分支的关联关系。\n      * git push --set-upstream origin master\n    * 如果当前分支已经和远端分支关联，则可以省略分支名和远端名。\n      * git push 将 master 分支推送到已关联的远端分支。\n\n 4. 本地分支与远程分支的关联关系\n    \n    * 查看关联关系我们可以使用 git branch -vv 命令\n\n 5. 从远程仓库克隆\n    \n    * 如果已经有一个远端仓库，我们可以直接 clone 到本地\n    * 命令: git clone <仓库路径> [本地目录]\n      * 本地目录可以省略，会自动生成一个目录\n\n 6. 从远程仓库中抓取和拉取\n    \n    远程分支和本地的分支一样，我们可以进行 merge 操作，只是需要先把远端仓库里的更新都下载到本地，再进行操作\n    \n    * 抓取 命令：git fetch [remote name][branch name]\n      * 抓取指令就是将仓库里的更新都抓取到本地，不会进行合并\n      * 如果不指定远端名称和分支名，则抓取所有分支\n    * 拉取 命令：git pull [remote name][branch name]\n      * 拉取指令就是将远端仓库的修改拉到本地并自动进行合并，等同于fetch+merge (抓取 加 合并分支)\n      * 如果不指定远端名称和分支名，则抓取所有并更新当前分支。\n\n 7. 解决合并冲突\n    \n    方法跟上面一样,添加合并分支冲突一样\n\n----------------------------------------\n\n\n# 在 Idea 中使用 Git\n\n 1. 在 idea 中配置 git\n    \n    * 找到配置 git 路径，选择 File→Settings 打开设置窗口，找到 Version Control 下的 git 选项\n      \n      \n    \n    * 点击 Test 按钮,现在执行成功，配置完成\n\n 2. 在 Idea 中操作 Git\n    \n    * 新建远程仓库\n    \n    * 初始化本地仓库\n      \n      然后选择本地创建的仓库即可\n    \n    * 设置远程仓库\n    \n    * 提交本地仓库\n    \n    * 推送到远程仓库\n      \n      \n    \n    * 克隆仓库\n      \n      \n    \n    * 创建分支\n      \n      右下角或者点击创建新分支的位置，右键\n      \n      \n    \n    * 切换分支及其他分支相关操作\n      \n      * \n    \n    * 解决冲突\n      \n      当发生执行 merge 或 pull 操作冲突时\n      \n      到代码修改完再提交\n\n 3. IDEA 常用 GIT 操作入口\n    \n    \n    \n    在 vcs 中也有相应操作功能\n\n----------------------------------------\n\n> 提示\n> \n> 切换分支线提交本地，提交过的代码可找回\n> \n> 以及 idea 集成 gitBash 作为 terminal\n\n\n\n----------------------------------------\n\n\n# 浏览：\n\n\n\n----------------------------------------\n\n\n\n",normalizedContent:"简介\n\ngit 快速入门\n\n\n\n# git 快速入门\n\n\n# git 简介\n\ngit是分布式版本控制系统\n\n简单来说 git 就是一个工具他可以帮助你克隆远程仓库代码，创建不同分支修改完再合并，这样不影响主线程每个版本之间是独立的。\n\n\n\ngit 工作流程：\n\n----------------------------------------\n\n\n\n----------------------------------------\n\n命令如下：\n\n 1. clone（克隆）：从远程仓库克隆代码\n 2. checkout（检出）：从本地仓库中检出一个仓库分支然后进行修订\n 3. add（添加）: 在提交前先将代码提交到暂存区\n 4. commit（提交）: 提交到本地仓库。本地仓库中保存修改的各个历史版本\n 5. fetch (抓取) ： 从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。\n 6. pull (拉取) ： 从远程库拉到本地库，自动进行合并(merge)，然后放到到工作区，相当于 fetch+merge\n 7. push（推送） : 修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库\n\n\n# git 安装\n\n 1. 下载地址：https://git-scm.com/download\n    \n    安装完后：右键查看到\n    \n    备注：git gui：git 提供的图形界面工具 git bash：git 提供的命令行工具\n\n 2. 基本配置\n    \n    1. 打开 git bash\n    \n    2. 设置用户信息\n       \n       git config --global user.name “ax”\n       git config --global user.email “24614721@xx.com”\n       \n       \n       1\n       2\n       \n\n 3. 为常用指令配置别名（可选）\n    \n    有些常用的指令参数非常多，每次都要输入好多参数，我们可以使用别名\n    \n    1. 打开用户目录，创建.bashrc文件\n       \n       如果不支持就打开 gitbash,执行 touch ~/.bashrc\n       \n       \n    \n    2. 在 .bashrc 文件中输入如下内容：\n       \n       #用于输出git提交日志\n       alias git-log='git log --pretty=oneline --all --graph --abbrev-commit'\n       #用于输出当前目录所有文件及基本信息\n       alias ll='ls -al'\n       \n       \n       1\n       2\n       3\n       4\n       \n    \n    3. 然后刷新这个配置文件 source ~/.bashrc\n\n 4. 如果出现乱码\n    \n    执行：\n    \n    git config --global core.quotepath false\n    \n    \n    1\n    \n    \n    在${git_home}/etc/bash.bashrc 添加：\n    \n    export lang=\"zh_cn.utf-8\"\n    export lc_all=\"zh_cn.utf-8\"\n    \n    \n    1\n    2\n    \n\n 5. 获取本地仓库\n    \n    1. 创建一个空目录，进入空目录 （这个目录就是你的本地仓库了）\n    2. 在这个目录中打开 git bash 窗口\n    3. 执行 git init 初始化仓库\n    4. 创建成功后可在文件夹下看到隐藏的.git 目录。\n\n\n# 本地仓库\n\n本地仓库中有三个区域，分别是工作区，暂存区、和仓库\n\n工作区是用来改东西的，改完后可提交到暂存区最后再提交到本地仓库\n\n\n\n\n# 添加本地仓库命令：\n\n 1. git add (工作区 --\x3e 暂存区)\n    \n    命令形式:：git add 单个文件名|通配符\n    \n    例如:\n    \n    git add .\n    # 提交所以修改文件\n    \n    \n    1\n    2\n    \n\n 2. git commit (暂存区 --\x3e 本地仓库)\n    \n    命令形式：git commit -m '注释内容'\n    \n    作用：提交暂存区内容到本地仓库的当前分支\n    \n    git commit -m '第一次提交'\n    \n    \n    1\n    \n\n 3. git status 查看的修改的状态（暂存区、工作区）\n\n 4. git-log 查看提交记录：命令形式：git log [option]\n    \n    * options\n      * all 显示所有分支\n      * pretty=oneline 将提交信息显示为一行\n      * abbrev-commit 使得输出的 commitid 更简短\n      * graph 以图的形式显示\n\n 5. 版本回退\n    \n    * 作用：版本切换\n    * 命令形式：git reset --hard commitid\n      * commitid 可以使用 git-log 或 git log 指令查看\n    * git reflflog 查看已删除记录\n\n 6. 添加文件至忽略列表\n    \n    一般我们总会有些文件无需纳入 git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动\n    \n    生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录\n    \n    中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。\n    \n    示例：\n    \n    # no .a files\n    *.a\n    #  but do track lib.a, even though you're ignoring .a files above\n    # only ignore the todo file in the current directory, not subdir/todo\n    /todo\n    # ignore all files in the build/ directory\n    build/\n    # ignore doc/notes.txt, but not doc/server/arch.txt\n    doc/*.txt\n    # ignore all .pdf files in the doc/ directory\n    doc/**/*.pdf\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n\n# 分支\n\n----------------------------------------\n\n几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离\n\n开来进行重大的 bug 修改、开发新的功能，以免影响开发主线。\n\n分支命令：\n\n 1. 查看本地分支\n    \n    * 命令：git branch\n\n 2. 创建本地分支\n    \n    * 命令：git branch 分支名\n\n 3. 切换分支(checkout)\n    \n    * 命令：git checkout 分支名\n    \n    我们还可以直接切换到一个不存在的分支（创建并切换）\n    \n    * 命令：git checkout -b 分支名\n\n 4. 合并分支(merge)\n    \n    一个分支上的提交可以合并到另一个分支\n    \n    命令：git merge 分支名称\n\n 5. 删除分支\n    \n    不能删除当前分支，只能删除其他分支\n    \n    git branch -d b1 删除分支时，需要做各种检查\n    \n    git branch -d b1 不做任何检查，强制删除\n\n 6. 解决冲突\n    \n    如果俩个分支存在同时修改同一个文件同一行，需要手动解决冲突\n    \n    1. 找出文章冲突的地方\n    2. 将其解决，解决完加入暂存区 add\n    3. 提交到仓库 commit\n\n 7. 开发中分支使用原则与流程\n    \n    使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的 bug 修改、开发新的功能，以免影响开发主线\n    \n    流程如下：\n    \n    * master （生产） 分支\n      \n      线上分支，主分支，中小规模项目作为线上运行的应用对应的分支；\n    \n    * develop（开发）分支\n      \n      主要开发分支开发完合并到 master 分支上\n    \n    * feature/xxxx 分支\n      \n      从 develop 创建的分支，合并到 develop 分支中\n    \n    * hotfifix/xxxx 分支\n      \n      从 master 派生的分支，一般作为线上 bug 修复使用，修复完成后需要合并到 master、test、develop 分支。\n    \n    * 还有一些其他分支，例如 test 分支（用于代码测试）、pre 分支（预上线分支）等等。\n\n----------------------------------------\n\n\n# git远程仓库\n\n常用的托管服务[远程仓库]\n\n我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有github、码云、gitlab等\n\ngitlab：开源项目，一般用于在企业、学校等内部网络搭建 git 私服。\n\n----------------------------------------\n\n\n# 创建远程仓库\n\n 1. 注册码云或者 github\n\n 2. 新建仓库\n\n 3. 配置 ssh 公钥\n    \n    * 生成 ssh 公钥\n      \n      ssh-keygen -t rsa\n      # 不断回车即可\n      #如果公钥已经存在，则自动覆盖\n      \n      \n      1\n      2\n      3\n      \n    \n    * 设置账户共公钥\n      \n      # 获取公钥\n      cat ~/.ssh/id_rsa.pub\n      \n      \n      1\n      2\n      \n      \n      然后把公钥贴在 gitee 或者 github 的公钥中\n    \n    * 验证是否配置成功\n      \n      ssh -t git@gitee.com\n      \n      \n      1\n      \n\n----------------------------------------\n\n\n# 操作远程仓库\n\n----------------------------------------\n\n此操作是先初始化本地库，然后与已创建的远程库进行对接。\n\n 1. 添加远程仓库\n    \n    * 命令： git remote add <远端名称> <仓库路径>\n      * 远端名称，默认是 origin，取决于远端服务器设置\n      * 仓库路径，从远端服务器获取此 url\n      * 例如：git remote add origin git@gitee.com:czbk_zhang_meng/git_test.git\n\n 2. 查看远程仓库\n    \n    * 命令：git remote\n\n 3. 推送到远程仓库\n    \n    * 命令：git push [-f][--set-upstream] [远端名称 [本地分支名][:远端分支名] ]\n      * 如果远程分支名和本地分支名称相同，则可以只写本地分支\n      * git push origin master\n    * -f 表示强制覆盖\n    * --set-upstream 推送到远端的同时并且建立起和远端分支的关联关系。\n      * git push --set-upstream origin master\n    * 如果当前分支已经和远端分支关联，则可以省略分支名和远端名。\n      * git push 将 master 分支推送到已关联的远端分支。\n\n 4. 本地分支与远程分支的关联关系\n    \n    * 查看关联关系我们可以使用 git branch -vv 命令\n\n 5. 从远程仓库克隆\n    \n    * 如果已经有一个远端仓库，我们可以直接 clone 到本地\n    * 命令: git clone <仓库路径> [本地目录]\n      * 本地目录可以省略，会自动生成一个目录\n\n 6. 从远程仓库中抓取和拉取\n    \n    远程分支和本地的分支一样，我们可以进行 merge 操作，只是需要先把远端仓库里的更新都下载到本地，再进行操作\n    \n    * 抓取 命令：git fetch [remote name][branch name]\n      * 抓取指令就是将仓库里的更新都抓取到本地，不会进行合并\n      * 如果不指定远端名称和分支名，则抓取所有分支\n    * 拉取 命令：git pull [remote name][branch name]\n      * 拉取指令就是将远端仓库的修改拉到本地并自动进行合并，等同于fetch+merge (抓取 加 合并分支)\n      * 如果不指定远端名称和分支名，则抓取所有并更新当前分支。\n\n 7. 解决合并冲突\n    \n    方法跟上面一样,添加合并分支冲突一样\n\n----------------------------------------\n\n\n# 在 idea 中使用 git\n\n 1. 在 idea 中配置 git\n    \n    * 找到配置 git 路径，选择 file→settings 打开设置窗口，找到 version control 下的 git 选项\n      \n      \n    \n    * 点击 test 按钮,现在执行成功，配置完成\n\n 2. 在 idea 中操作 git\n    \n    * 新建远程仓库\n    \n    * 初始化本地仓库\n      \n      然后选择本地创建的仓库即可\n    \n    * 设置远程仓库\n    \n    * 提交本地仓库\n    \n    * 推送到远程仓库\n      \n      \n    \n    * 克隆仓库\n      \n      \n    \n    * 创建分支\n      \n      右下角或者点击创建新分支的位置，右键\n      \n      \n    \n    * 切换分支及其他分支相关操作\n      \n      * \n    \n    * 解决冲突\n      \n      当发生执行 merge 或 pull 操作冲突时\n      \n      到代码修改完再提交\n\n 3. idea 常用 git 操作入口\n    \n    \n    \n    在 vcs 中也有相应操作功能\n\n----------------------------------------\n\n> 提示\n> \n> 切换分支线提交本地，提交过的代码可找回\n> \n> 以及 idea 集成 gitbash 作为 terminal\n\n\n\n----------------------------------------\n\n\n# 浏览：\n\n\n\n----------------------------------------\n\n\n\n",charsets:{cjk:!0}},{title:"MyBatis+mp 笔记",frontmatter:{title:"MyBatis+mp 笔记",date:"2021-08-28T00:00:00.000Z",tags:["MyBatis","MyBatis-Plus"],categories:["java"]},regularPath:"/view/docs/java/3.mybaits+mp.html",relativePath:"view/docs/java/3.mybaits+mp.md",key:"v-6db14b88",path:"/view/docs/java/3.mybaits+mp.html",headers:[{level:2,title:"Mybatis",slug:"mybatis",normalizedTitle:"mybatis",charIndex:2},{level:3,title:"常用注解",slug:"常用注解",normalizedTitle:"常用注解",charIndex:34},{level:2,title:"Mybatis-Plus",slug:"mybatis-plus",normalizedTitle:"mybatis-plus",charIndex:202},{level:3,title:"特性:",slug:"特性",normalizedTitle:"特性:",charIndex:385},{level:3,title:"Springboot+Mybatis+MP",slug:"springboot-mybatis-mp",normalizedTitle:"springboot+mybatis+mp",charIndex:1425},{level:3,title:"通用CRUD",slug:"通用crud",normalizedTitle:"通用crud",charIndex:6808},{level:3,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:516},{level:3,title:"条件构造器",slug:"条件构造器",normalizedTitle:"条件构造器",charIndex:541},{level:2,title:"ActiveRecord",slug:"activerecord",normalizedTitle:"activerecord",charIndex:841},{level:2,title:"乐观锁插件",slug:"乐观锁插件",normalizedTitle:"乐观锁插件",charIndex:13820},{level:2,title:"其他配置：",slug:"其他配置",normalizedTitle:"其他配置：",charIndex:14326},{level:2,title:"代码生成器",slug:"代码生成器",normalizedTitle:"代码生成器",charIndex:1021},{level:2,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:20810}],lastUpdated:"2021/12/22 下午4:13:20",headersStr:"Mybatis 常用注解 Mybatis-Plus 特性: Springboot+Mybatis+MP 通用CRUD 配置 条件构造器 ActiveRecord 乐观锁插件 其他配置： 代码生成器 注意事项",content:'# Mybatis\n\n持久层框架\n\nMyBatis官网地址\n\n\n# 常用注解\n\n * @Insert：实现新增\n * @Update：实现更新\n * @Delete：实现删除\n * @Select：实现查询\n * @Result：实现结果集封装\n * @Results：可以与@Result 一起使用，封装多个结果集\n * @One：实现一对一结果集封装\n * @Many：实现一对多结果集封装\n\n\n# Mybatis-Plus\n\n> MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生\n\n官网 <https://mybatis.plus/ > 或 https://mp.baomidou.com/\n\n文档地址：https://mybatis.plus/guide/\n\n\n# 特性:\n\n详情\n * 无侵入 ：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑\n * 损耗小 ：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作\n * 强大的 CRUD 操作：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求\n * 支持 Lambda 形式调用：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错\n * 支持多种数据库 ：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、 SQLServer2005、SQLServer 等多种数据库\n * 支持主键自动生成 ：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题\n * 支持 XML 热加载：Mapper 对应的 XML 支持热加载，对于简单的 CRUD 操作，甚至可以无 XML 启动\n * 支持 ActiveRecord 模式：支持 ActiveRecord 形式调用，实体类只需继承Model类即可进行强大的 CRUD 操 作\n * 支持自定义全局通用操作 ：支持全局通用方法注入（ Write once, use anywhere ）\n * 支持关键词自动转义 ：支持数据库关键词（order、key......）自动转义，还可自定义关键词\n * 内置代码生成器 ：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，\n * 支持模板引擎，更有超多自定义配置等您来使用\n * 内置分页插件 ：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List查询\n * 内置性能分析插件 ：可输出 Sql 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询\n * 内置全局拦截插件 ：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作\n * 内置 Sql 注入剥离器：支持 Sql 注入剥离，有效预防 Sql 注入攻击\n\n用法：\n\n> 对于 Mybatis整合MP有常常有三种用法，分别是Mybatis+MP、Spring+Mybatis+MP、Spring Boot+Mybatis+MP。\n\n\n# Springboot+Mybatis+MP\n\n 1. 创建springboot工程\n\n 2. 导入依赖\n    \n    详情\n    \n    <?xml version="1.0" encoding="UTF-8"?>\n    <project xmlns="http://maven.apache.org/POM/4.0.0"\n        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\n    http://maven.apache.org/xsd/maven-4.0.0.xsd">\n      <modelVersion>4.0.0</modelVersion>\n      <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.1.4.RELEASE</version>\n      </parent>\n      <groupId>com.one.mp</groupId>\n      <artifactId>com-mp-springboot</artifactId>\n      <version>1.0-SNAPSHOT</version>\n      <dependencies>\n        <dependency>\n          <groupId>org.springframework.boot</groupId>\n          <artifactId>spring-boot-starter</artifactId>\n          <exclusions>\n            <exclusion>\n             <groupId>org.springframework.boot</groupId>\n              <artifactId>spring-boot-starter-logging</artifactId>\n            </exclusion>\n          </exclusions>\n        </dependency>\n        <dependency>\n          <groupId>org.springframework.boot</groupId>\n          <artifactId>spring-boot-starter-test</artifactId>\n          <scope>test</scope>\n        </dependency>\n        \x3c!--简化代码的工具包--\x3e\n        <dependency>\n          <groupId>org.projectlombok</groupId>\n          <artifactId>lombok</artifactId>\n          <optional>true</optional>\n        </dependency>\n        \x3c!--mybatis-plus的springboot支持--\x3e\n        <dependency>\n          <groupId>com.baomidou</groupId>\n          <artifactId>mybatis-plus-boot-starter</artifactId>\n          <version>3.1.1</version>\n        </dependency>\n        \x3c!--mysql驱动--\x3e\n        <dependency>\n          <groupId>mysql</groupId>\n          <artifactId>mysql-connector-java</artifactId>\n          <version>5.1.47</version>\n        </dependency>\n        <dependency>\n          <groupId>org.slf4j</groupId>\n          <artifactId>slf4j-log4j12</artifactId>\n        </dependency>\n      </dependencies>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-maven-plugin</artifactId>\n          </plugin>\n        </plugins>\n      </build>\n    </project>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    \n\n 3. 编写配置文件\n\nSee More\n\nlog4j.properties:\n\nlog4j.rootLogger =DEBUG,A1\nlog4j.appender.A1=org.apache.log4j.ConsoleAppender\nlog4j.appender.A1.layout=org.apache.log4j.PatternLayout\nlog4j.appender.A1.layout.ConversionPattern=[%t] [%c]-[%p] %m%n\n\n\n1\n2\n3\n4\n\n\napplication.properties:\n\nspring.application.name =com-mp-springboot\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\nspring.datasource.url=jdbc:mysql://127.0.0.1:3306/mp?\nuseUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&useSSL\n=false\nspring.datasource.username=root\nspring.datasource.password=root\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 4. 编写pojo\n\nSee More\n\npackage com.one.mp.pojo;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@TableName("tb_user")\npublic class User {\n  private Long id;\n  private String userName;\n  private String password;\n  private String name;\n  private Integer age;\n  private String email;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n 5. 编写mapper\n    \n    See More\n    \n    package com.one.mp.mapper;\n    import com.one.mp.pojo.User;\n    import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n    public interface UserMapper extends BaseMapper<User> {\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 6. 编写启动类\n    \n    See More\n    \n    package com.one.mp;\n    import org.mybatis.spring.annotation.MapperScan;\n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.WebApplicationType;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.boot.builder.SpringApplicationBuilder;\n    @MapperScan("com.one.mp.mapper") //设置mapper接口的扫描包\n    @SpringBootApplication\n    public class MyApplication {\n      public static void main(String[] args) {\n        SpringApplication.run(MyApplication.class, args);\n     }\n    }\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n 7. 测试:\n\nSee More\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport java.util.List;\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class UserMapperTest {\n  @Autowired\n  private UserMapper userMapper;\n  @Test\n  public void testSelect() {\n    List<User> userList = userMapper.selectList(null);\n    for (User user : userList) {\n      System.out.println(user);\n   }\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 通用CRUD\n\n> 在MP中通过@TableField注解可以指定字段的一些属性，对象中的属性名和字段名不一致的问题（非驼峰）,\n> \n> 对象中的属性字段在表中不存在的问题\n\n插入：\n\n * int insert(T entity);\n\n更新：\n\n * int updateById(@Param(Constants.ENTITY) T entity);\n\n删除：\n\n * int deleteById(Serializable id);\n * int deleteByMap(@Param(Constants.COLUMN_MAP) Map<String, Object> columnMap);\n * int delete(@Param(Constants.WRAPPER) Wrapper< T > wrapper);\n * int deleteBatchIds(@Param(Constants.COLLECTION) Collection<? extends Serializable> idList);\n\n查询：\n\n * T selectById(Serializable id);\n * List< T > selectBatchIds(@Param(Constants.COLLECTION) Collection<? extends Serializable> idList);\n * T selectOne(@Param(Constants.WRAPPER) Wrapper< T > queryWrapper);\n * Integer selectCount(@Param(Constants.WRAPPER) Wrapper< T > queryWrapper);\n * List< T > selectList(@Param(Constants.WRAPPER) Wrapper< T > queryWrapper);\n * IPage< T > selectPage(IPage< T > page, @Param(Constants.WRAPPER) Wrapper< T > queryWrapper);\n\n\n# 配置\n\n * mapperLocations\n   \n   springboot\n   \n   mybatis-plus.mapper-locations = classpath*:mybatis/*.xml \n   \n   \n   1\n   \n   \n   mvc:\n   \n   < bean id="sqlSessionFactory"\n   class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">\n     <property name="mapperLocations" value="classpath*:mybatis/*.xml"/>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   \n   \n   > Maven 多模块项目的扫描路径需以 classpath*: 开头 （即加载多个 jar 包下的 XML 文件）\n\n * typeAliasesPackage\n   \n   > 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）\n   \n   mybatis-plus.type-aliases-package = com.one.mp.pojo \n   \n   \n   1\n   \n   \n   < bean id="sqlSessionFactory"\n   class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">\n     <property name="typeAliasesPackage"\n   value="com.baomidou.mybatisplus.samples.quickstart.entity"/>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * mapUnderscoreToCamelCase\n   \n   # 关闭自动驼峰映射，该参数不能和mybatis-plus.config-location同时存在\n   mybatis-plus.configuration.map-underscore-to-camel-case=false\n   \n   \n   1\n   2\n   \n\n * cacheEnabled\n   \n   # 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。\n   mybatis-plus.configuration.cache-enabled =false \n   \n   \n   1\n   2\n   \n\n * idType\n   \n   # 设置后，即可省略实体对象中的@TableId(type = IdType.AUTO)配置。\n   mybatis-plus.global-config.db-config.id-type =auto \n   \n   \n   1\n   2\n   \n   \n   \x3c!-- 这里使用MP提供的sqlSessionFactory，完成了Spring与MP的整合--\x3e\n     <bean id="sqlSessionFactory"\n   class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">\n       <property name="dataSource" ref="dataSource"/>\n       <property name="globalConfig">\n         <bean class="com.baomidou.mybatisplus.core.config.GlobalConfig">\n           <property name="dbConfig">\n             <bean\n   class="com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig">\n               <property name="idType" value="AUTO"/>\n             </bean>\n           </property>\n         </bean>\n       </property>\n     </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * tablePrefix\n   \n   # 表名前缀，全局配置后可省略 @TableName()配置。\n   mybatis-plus.global-config.db-config.table-prefix =tb_ \n   \n   \n   1\n   2\n   \n   \n   SpringMVC:\n   \n   <bean id="sqlSessionFactory"\n   class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">\n       <property name="dataSource" ref="dataSource"/>\n       <property name="globalConfig">\n         <bean class="com.baomidou.mybatisplus.core.config.GlobalConfig">\n           <property name="dbConfig">\n             <bean\n   class="com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig">\n               <property name="idType" value="AUTO"/>\n               <property name="tablePrefix" value="tb_"/>\n             </bean>\n           </property>\n         </bean>\n       </property>\n     </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n\n# 条件构造器\n\n> AbstractWrapper和AbstractChainWrapper是重点实现\n\n官网文档地址： https://mybatis.plus/guide/wrapper.html\n\n * allEq\n\n * 基本比较操作\n   \n   * eq 等于 =\n   \n   * ne 不等于 <>\n   \n   * gt 大于 >\n   \n   * ge 大于等于 >=\n   \n   * lt 小于 <\n   \n   * le 小于等于 <=\n   \n   * between BETWEEN 值1 AND 值2\n   \n   * notBetween NOT BETWEEN 值1 AND 值2\n   \n   * in 字段 IN (value.get(0), value.get(1), ...)\n   \n   * notIn 字段 NOT IN (v0, v1, ...)\n   \n   * @RunWith(SpringRunner.class)\n     @SpringBootTest\n     public class UserMapperTest {\n       @Autowired\n       private UserMapper userMapper;\n       @Test\n       public void testEq() {\n         QueryWrapper<User> wrapper = new QueryWrapper<>();\n         //SELECT id,user_name,password,name,age,email FROM tb_user WHERE password = ?\n     AND age >= ? AND name IN (?,?,?)\n         wrapper.eq("password", "123456")\n            .ge("age", 20)\n            .in("name", "李四", "王五", "赵六");\n         List<User> users = this.userMapper.selectList(wrapper);\n         for (User user : users) {\n           System.out.println(user);\n        }\n      }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     \n\n * 模糊查询\n   \n   * like LIKE \'% 值%\' 例 : like("name", " 王") ---\x3e name like \'% 王%\'\n   \n   * notLike NOT LIKE \'% 值%\'\n     \n     例 : notLike("name", " 王") ---\x3e name not like \'% 王%\'\n   \n   * likeLeft LIKE \'% 值\' 例 : likeLeft("name", " 王") ---\x3e name like \'% 王\'\n   \n   * likeRight LIKE \' 值%\' 例 : likeRight("name", " 王") ---\x3e name like \' 王%\'\n\n * 排序\n   \n   * orderBy 排序： ORDER BY 字段, ...\n     \n     例 : orderBy(true, true, "id", "name") ---\x3e order by id ASC,name ASC\n   \n   * orderByAsc 排序： ORDER BY 字段, ... ASC 例 : orderByAsc("id", "name") ---\x3e order by id ASC,name ASC\n   \n   * orderByDesc 排序： ORDER BY 字段, ... DESC 例 : orderByDesc("id", "name") ---\x3e order by id DESC,name DESC\n\n * 逻辑查询\n   \n   * or 拼接 OR 主动调用 or 表示紧接着下一个方法不是用 and 连接!(不调用 or 则默认为使用 and 连接)\n   * and AND 嵌套 例 : and(i -> i.eq("name", "李白").ne("status", "活着")) ---\x3e and (name = \'李白\' and status <> \'活着\')\n\n * select\n   \n   > 在MP查询中，默认查询所有的字段，如果有需要也可以通过select方法进行指定字段。\n\n\n# ActiveRecord\n\n在MP中开启AR之旅，只需要将实体对象继承Model即可。\n\nimport com.baomidou.mybatisplus.annotation.IdType;\nimport com.baomidou.mybatisplus.annotation.TableField;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.extension.activerecord.Model;\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User extends Model<User> {\n private Long id;\n  private String userName;\n  private String password;\n  private String name;\n  private Integer age;\n  private String email;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n就可以直接进行操作\n\n@RunWith (SpringRunner.class)\n@SpringBootTest\npublic class UserMapperTest {\n  @Autowired\n  private UserMapper userMapper;\n  @Test\n  public void testAR() {\n    User user = new User();\n    user.setId(2L);\n    User user2 = user.selectById();\n    System.out.println(user2);\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 乐观锁插件\n\nspring xml:\n\n< bean class="com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor"/> \n\n\n1\n\n\nspringboot\n\n@Bean\npublic OptimisticLockerInterceptor optimisticLockerInterceptor() {\n  return new OptimisticLockerInterceptor();\n}\n\n\n1\n2\n3\n4\n\n\n> 需要为实体字段添加@Version注解。\n> \n> 支持的数据类型只有 :int,Integer,long,Long,Date,Timestamp,LocalDateTime 整数类型下 newVersion = oldVersion + 1 newVersion 会回写到 entity 中 仅支持 updateById(id) 与 update(entity, wrapper) 方法 在 update(entity, wrapper) 方法下, wrapper 不能复用!!!\n\n\n# 其他配置：\n\nSql 注入器\n\n自动填充功能:@TableField注解\n\n逻辑删除:@TableLogic注解\n\n# 逻辑已删除值(默认为 1)\nmybatis-plus.global-config.db-config.logic-delete-value=1\n# 逻辑未删除值(默认为 0)\nmybatis-plus.global-config.db-config.logic-not-delete-value=0\n\n\n1\n2\n3\n4\n\n\n修改表结构\n\n通用枚举\n\n\n# 代码生成器\n\n> AutoGenerator 是 MyBatis-Plus 的代码生成器，通过 AutoGenerator 可以快速生成 Entity、Mapper、Mapper XML、Service、Controller 等各个模块的代码，极大的提升了开发效率。\n\n创建工程：\n\n<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\nhttp://maven.apache.org/xsd/maven-4.0.0.xsd">\n  <modelVersion>4.0.0</modelVersion>\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.1.4.RELEASE</version>\n  </parent>\n  <groupId>com.one.mp</groupId>\n  <artifactId>itcast-mp-generator</artifactId>\n  <version>1.0-SNAPSHOT</version>\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n    \x3c!--mybatis-plus的springboot支持--\x3e\n    <dependency>\n      <groupId>com.baomidou</groupId>\n      <artifactId>mybatis-plus-boot-starter</artifactId>\n      <version>3.1.1</version>\n    </dependency>\n    <dependency>\n      <groupId>com.baomidou</groupId>\n      <artifactId>mybatis-plus-generator</artifactId>\n      <version>3.1.1</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-freemarker</artifactId>\n    </dependency>\n    \x3c!--mysql驱动--\x3e\n    <dependency>\n      <groupId>mysql</groupId>\n      <artifactId>mysql-connector-java</artifactId>\n      <version>5.1.47</version>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-log4j12</artifactId>\n    </dependency>\n  </dependencies>\n  <build>\n   <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n\n\n代码:\n\npackage com.one.mp.generator;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\nimport com.baomidou.mybatisplus.core.exceptions.MybatisPlusException;\nimport com.baomidou.mybatisplus.core.toolkit.StringPool;\nimport com.baomidou.mybatisplus.core.toolkit.StringUtils;\nimport com.baomidou.mybatisplus.generator.AutoGenerator;\nimport com.baomidou.mybatisplus.generator.InjectionConfig;\nimport com.baomidou.mybatisplus.generator.config.DataSourceConfig;\nimport com.baomidou.mybatisplus.generator.config.FileOutConfig;\nimport com.baomidou.mybatisplus.generator.config.GlobalConfig;\nimport com.baomidou.mybatisplus.generator.config.PackageConfig;\nimport com.baomidou.mybatisplus.generator.config.StrategyConfig;\nimport com.baomidou.mybatisplus.generator.config.TemplateConfig;\nimport com.baomidou.mybatisplus.generator.config.po.TableInfo;\nimport com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;\nimport com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;\n/**\n* <p>\n* mysql 代码生成器演示例子\n* </p>\n*/\npublic class MysqlGenerator {\n  /**\n  * <p>\n  * 读取控制台内容\n  * </p>\n  */\n  public static String scanner(String tip) {\n    Scanner scanner = new Scanner(System.in);\n    StringBuilder help = new StringBuilder();\n    help.append("请输入" + tip + "：");\n    System.out.println(help.toString());\n    if (scanner.hasNext()) {\n      String ipt = scanner.next();\n       if (StringUtils.isNotEmpty(ipt)) {\n        return ipt;\n     }\n   }\n    throw new MybatisPlusException("请输入正确的" + tip + "！");\n }\n  /**\n  * RUN THIS\n  */\n  public static void main(String[] args) {\n    // 代码生成器\n    AutoGenerator mpg = new AutoGenerator();\n    // 全局配置\n    GlobalConfig gc = new GlobalConfig();\n    String projectPath = System.getProperty("user.dir");\n    gc.setOutputDir(projectPath + "/src/main/java");\n    gc.setAuthor("itcast");\n    gc.setOpen(false);\n    mpg.setGlobalConfig(gc);\n    // 数据源配置\n    DataSourceConfig dsc = new DataSourceConfig();\n    dsc.setUrl("jdbc:mysql://127.0.0.1:3306/mp?\nuseUnicode=true&useSSL=false&characterEncoding=utf8");\n    // dsc.setSchemaName("public");\n    dsc.setDriverName("com.mysql.jdbc.Driver");\n    dsc.setUsername("root");\n    dsc.setPassword("root");\n    mpg.setDataSource(dsc);\n    // 包配置\n    PackageConfig pc = new PackageConfig();\n    pc.setModuleName(scanner("模块名"));\n    pc.setParent("com.one.mp.generator");\n    mpg.setPackageInfo(pc);\n    // 自定义配置\n    InjectionConfig cfg = new InjectionConfig() {\n      @Override\n      public void initMap() {\n        // to do nothing\n     }\n   };\n    List<FileOutConfig> focList = new ArrayList<>();\n    focList.add(new FileOutConfig("/templates/mapper.xml.ftl") {\n      @Override\n      public String outputFile(TableInfo tableInfo) {\n        // 自定义输入文件名称\n        return projectPath + "/itcast-mp-\ngenerator/src/main/resources/mapper/" + pc.getModuleName()\n  + "/" + tableInfo.getEntityName() + "Mapper" +\nStringPool.DOT_XML;\n     }\n   });\n    cfg.setFileOutConfigList(focList);\n    mpg.setCfg(cfg);\n    mpg.setTemplate(new TemplateConfig().setXml(null));\n    // 策略配置\n    StrategyConfig strategy = new StrategyConfig();\n    strategy.setNaming(NamingStrategy.underline_to_camel);\n    strategy.setColumnNaming(NamingStrategy.underline_to_camel);\n  \n// strategy.setSuperEntityClass("com.baomidou.mybatisplus.samples.generator.common.BaseE\n// ntity");\n    strategy.setEntityLombokModel(true);\n\n//strategy.setSuperControllerClass("com.baomidou.mybatisplus.samples.generator.common.B\n//aseController");\n    strategy.setInclude(scanner("表名"));\n    strategy.setSuperEntityColumns("id");\n    strategy.setControllerMappingHyphenStyle(true);\n    strategy.setTablePrefix(pc.getModuleName() + "_");\n    mpg.setStrategy(strategy);\n    // 选择 freemarker 引擎需要指定如下加，注意 pom 依赖必须有！\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n    mpg.execute();\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n\n\n\n# 注意事项\n\n数据库id策略：\n\n * mp默认生成id是分布式id采用雪花算法\n   \n   @TableId(type=IdType.ASSIGN_ID) //默认id类型 方便以后用户多，分布式不唯一\n   @TableId(type=IdType.A) //用数据库的id\n   \n   \n   1\n   2\n   \n\n----------------------------------------',normalizedContent:'# mybatis\n\n持久层框架\n\nmybatis官网地址\n\n\n# 常用注解\n\n * @insert：实现新增\n * @update：实现更新\n * @delete：实现删除\n * @select：实现查询\n * @result：实现结果集封装\n * @results：可以与@result 一起使用，封装多个结果集\n * @one：实现一对一结果集封装\n * @many：实现一对多结果集封装\n\n\n# mybatis-plus\n\n> mybatis-plus（简称 mp）是一个 mybatis 的增强工具，在 mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生\n\n官网 <https://mybatis.plus/ > 或 https://mp.baomidou.com/\n\n文档地址：https://mybatis.plus/guide/\n\n\n# 特性:\n\n详情\n * 无侵入 ：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑\n * 损耗小 ：启动即会自动注入基本 curd，性能基本无损耗，直接面向对象操作\n * 强大的 crud 操作：内置通用 mapper、通用 service，仅仅通过少量配置即可实现单表大部分 crud 操作，更有强大的条件构造器，满足各类使用需求\n * 支持 lambda 形式调用：通过 lambda 表达式，方便的编写各类查询条件，无需再担心字段写错\n * 支持多种数据库 ：支持 mysql、mariadb、oracle、db2、h2、hsql、sqlite、postgre、 sqlserver2005、sqlserver 等多种数据库\n * 支持主键自动生成 ：支持多达 4 种主键策略（内含分布式唯一 id 生成器 - sequence），可自由配置，完美解决主键问题\n * 支持 xml 热加载：mapper 对应的 xml 支持热加载，对于简单的 crud 操作，甚至可以无 xml 启动\n * 支持 activerecord 模式：支持 activerecord 形式调用，实体类只需继承model类即可进行强大的 crud 操 作\n * 支持自定义全局通用操作 ：支持全局通用方法注入（ write once, use anywhere ）\n * 支持关键词自动转义 ：支持数据库关键词（order、key......）自动转义，还可自定义关键词\n * 内置代码生成器 ：采用代码或者 maven 插件可快速生成 mapper 、 model 、 service 、 controller 层代码，\n * 支持模板引擎，更有超多自定义配置等您来使用\n * 内置分页插件 ：基于 mybatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 list查询\n * 内置性能分析插件 ：可输出 sql 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询\n * 内置全局拦截插件 ：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作\n * 内置 sql 注入剥离器：支持 sql 注入剥离，有效预防 sql 注入攻击\n\n用法：\n\n> 对于 mybatis整合mp有常常有三种用法，分别是mybatis+mp、spring+mybatis+mp、spring boot+mybatis+mp。\n\n\n# springboot+mybatis+mp\n\n 1. 创建springboot工程\n\n 2. 导入依赖\n    \n    详情\n    \n    <?xml version="1.0" encoding="utf-8"?>\n    <project xmlns="http://maven.apache.org/pom/4.0.0"\n        xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n        xsi:schemalocation="http://maven.apache.org/pom/4.0.0\n    http://maven.apache.org/xsd/maven-4.0.0.xsd">\n      <modelversion>4.0.0</modelversion>\n      <parent>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-parent</artifactid>\n        <version>2.1.4.release</version>\n      </parent>\n      <groupid>com.one.mp</groupid>\n      <artifactid>com-mp-springboot</artifactid>\n      <version>1.0-snapshot</version>\n      <dependencies>\n        <dependency>\n          <groupid>org.springframework.boot</groupid>\n          <artifactid>spring-boot-starter</artifactid>\n          <exclusions>\n            <exclusion>\n             <groupid>org.springframework.boot</groupid>\n              <artifactid>spring-boot-starter-logging</artifactid>\n            </exclusion>\n          </exclusions>\n        </dependency>\n        <dependency>\n          <groupid>org.springframework.boot</groupid>\n          <artifactid>spring-boot-starter-test</artifactid>\n          <scope>test</scope>\n        </dependency>\n        \x3c!--简化代码的工具包--\x3e\n        <dependency>\n          <groupid>org.projectlombok</groupid>\n          <artifactid>lombok</artifactid>\n          <optional>true</optional>\n        </dependency>\n        \x3c!--mybatis-plus的springboot支持--\x3e\n        <dependency>\n          <groupid>com.baomidou</groupid>\n          <artifactid>mybatis-plus-boot-starter</artifactid>\n          <version>3.1.1</version>\n        </dependency>\n        \x3c!--mysql驱动--\x3e\n        <dependency>\n          <groupid>mysql</groupid>\n          <artifactid>mysql-connector-java</artifactid>\n          <version>5.1.47</version>\n        </dependency>\n        <dependency>\n          <groupid>org.slf4j</groupid>\n          <artifactid>slf4j-log4j12</artifactid>\n        </dependency>\n      </dependencies>\n      <build>\n        <plugins>\n          <plugin>\n            <groupid>org.springframework.boot</groupid>\n            <artifactid>spring-boot-maven-plugin</artifactid>\n          </plugin>\n        </plugins>\n      </build>\n    </project>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    \n\n 3. 编写配置文件\n\nsee more\n\nlog4j.properties:\n\nlog4j.rootlogger =debug,a1\nlog4j.appender.a1=org.apache.log4j.consoleappender\nlog4j.appender.a1.layout=org.apache.log4j.patternlayout\nlog4j.appender.a1.layout.conversionpattern=[%t] [%c]-[%p] %m%n\n\n\n1\n2\n3\n4\n\n\napplication.properties:\n\nspring.application.name =com-mp-springboot\nspring.datasource.driver-class-name=com.mysql.jdbc.driver\nspring.datasource.url=jdbc:mysql://127.0.0.1:3306/mp?\nuseunicode=true&characterencoding=utf8&autoreconnect=true&allowmultiqueries=true&usessl\n=false\nspring.datasource.username=root\nspring.datasource.password=root\n\n\n1\n2\n3\n4\n5\n6\n7\n\n 4. 编写pojo\n\nsee more\n\npackage com.one.mp.pojo;\nimport com.baomidou.mybatisplus.annotation.tablename;\nimport lombok.allargsconstructor;\nimport lombok.data;\nimport lombok.noargsconstructor;\n@data\n@noargsconstructor\n@allargsconstructor\n@tablename("tb_user")\npublic class user {\n  private long id;\n  private string username;\n  private string password;\n  private string name;\n  private integer age;\n  private string email;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n 5. 编写mapper\n    \n    see more\n    \n    package com.one.mp.mapper;\n    import com.one.mp.pojo.user;\n    import com.baomidou.mybatisplus.core.mapper.basemapper;\n    public interface usermapper extends basemapper<user> {\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 6. 编写启动类\n    \n    see more\n    \n    package com.one.mp;\n    import org.mybatis.spring.annotation.mapperscan;\n    import org.springframework.boot.springapplication;\n    import org.springframework.boot.webapplicationtype;\n    import org.springframework.boot.autoconfigure.springbootapplication;\n    import org.springframework.boot.builder.springapplicationbuilder;\n    @mapperscan("com.one.mp.mapper") //设置mapper接口的扫描包\n    @springbootapplication\n    public class myapplication {\n      public static void main(string[] args) {\n        springapplication.run(myapplication.class, args);\n     }\n    }\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n 7. 测试:\n\nsee more\n\nimport org.junit.test;\nimport org.junit.runner.runwith;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.boot.test.context.springboottest;\nimport org.springframework.test.context.junit4.springrunner;\nimport java.util.list;\n@runwith(springrunner.class)\n@springboottest\npublic class usermappertest {\n  @autowired\n  private usermapper usermapper;\n  @test\n  public void testselect() {\n    list<user> userlist = usermapper.selectlist(null);\n    for (user user : userlist) {\n      system.out.println(user);\n   }\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 通用crud\n\n> 在mp中通过@tablefield注解可以指定字段的一些属性，对象中的属性名和字段名不一致的问题（非驼峰）,\n> \n> 对象中的属性字段在表中不存在的问题\n\n插入：\n\n * int insert(t entity);\n\n更新：\n\n * int updatebyid(@param(constants.entity) t entity);\n\n删除：\n\n * int deletebyid(serializable id);\n * int deletebymap(@param(constants.column_map) map<string, object> columnmap);\n * int delete(@param(constants.wrapper) wrapper< t > wrapper);\n * int deletebatchids(@param(constants.collection) collection<? extends serializable> idlist);\n\n查询：\n\n * t selectbyid(serializable id);\n * list< t > selectbatchids(@param(constants.collection) collection<? extends serializable> idlist);\n * t selectone(@param(constants.wrapper) wrapper< t > querywrapper);\n * integer selectcount(@param(constants.wrapper) wrapper< t > querywrapper);\n * list< t > selectlist(@param(constants.wrapper) wrapper< t > querywrapper);\n * ipage< t > selectpage(ipage< t > page, @param(constants.wrapper) wrapper< t > querywrapper);\n\n\n# 配置\n\n * mapperlocations\n   \n   springboot\n   \n   mybatis-plus.mapper-locations = classpath*:mybatis/*.xml \n   \n   \n   1\n   \n   \n   mvc:\n   \n   < bean id="sqlsessionfactory"\n   class="com.baomidou.mybatisplus.extension.spring.mybatissqlsessionfactorybean">\n     <property name="mapperlocations" value="classpath*:mybatis/*.xml"/>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   \n   \n   > maven 多模块项目的扫描路径需以 classpath*: 开头 （即加载多个 jar 包下的 xml 文件）\n\n * typealiasespackage\n   \n   > 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 mapper 对应的 xml 文件中可以直接使用类名，而不用使用全限定的类名（即 xml 中调用的时候不用包含包名）\n   \n   mybatis-plus.type-aliases-package = com.one.mp.pojo \n   \n   \n   1\n   \n   \n   < bean id="sqlsessionfactory"\n   class="com.baomidou.mybatisplus.extension.spring.mybatissqlsessionfactorybean">\n     <property name="typealiasespackage"\n   value="com.baomidou.mybatisplus.samples.quickstart.entity"/>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * mapunderscoretocamelcase\n   \n   # 关闭自动驼峰映射，该参数不能和mybatis-plus.config-location同时存在\n   mybatis-plus.configuration.map-underscore-to-camel-case=false\n   \n   \n   1\n   2\n   \n\n * cacheenabled\n   \n   # 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。\n   mybatis-plus.configuration.cache-enabled =false \n   \n   \n   1\n   2\n   \n\n * idtype\n   \n   # 设置后，即可省略实体对象中的@tableid(type = idtype.auto)配置。\n   mybatis-plus.global-config.db-config.id-type =auto \n   \n   \n   1\n   2\n   \n   \n   \x3c!-- 这里使用mp提供的sqlsessionfactory，完成了spring与mp的整合--\x3e\n     <bean id="sqlsessionfactory"\n   class="com.baomidou.mybatisplus.extension.spring.mybatissqlsessionfactorybean">\n       <property name="datasource" ref="datasource"/>\n       <property name="globalconfig">\n         <bean class="com.baomidou.mybatisplus.core.config.globalconfig">\n           <property name="dbconfig">\n             <bean\n   class="com.baomidou.mybatisplus.core.config.globalconfig$dbconfig">\n               <property name="idtype" value="auto"/>\n             </bean>\n           </property>\n         </bean>\n       </property>\n     </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * tableprefix\n   \n   # 表名前缀，全局配置后可省略 @tablename()配置。\n   mybatis-plus.global-config.db-config.table-prefix =tb_ \n   \n   \n   1\n   2\n   \n   \n   springmvc:\n   \n   <bean id="sqlsessionfactory"\n   class="com.baomidou.mybatisplus.extension.spring.mybatissqlsessionfactorybean">\n       <property name="datasource" ref="datasource"/>\n       <property name="globalconfig">\n         <bean class="com.baomidou.mybatisplus.core.config.globalconfig">\n           <property name="dbconfig">\n             <bean\n   class="com.baomidou.mybatisplus.core.config.globalconfig$dbconfig">\n               <property name="idtype" value="auto"/>\n               <property name="tableprefix" value="tb_"/>\n             </bean>\n           </property>\n         </bean>\n       </property>\n     </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n\n# 条件构造器\n\n> abstractwrapper和abstractchainwrapper是重点实现\n\n官网文档地址： https://mybatis.plus/guide/wrapper.html\n\n * alleq\n\n * 基本比较操作\n   \n   * eq 等于 =\n   \n   * ne 不等于 <>\n   \n   * gt 大于 >\n   \n   * ge 大于等于 >=\n   \n   * lt 小于 <\n   \n   * le 小于等于 <=\n   \n   * between between 值1 and 值2\n   \n   * notbetween not between 值1 and 值2\n   \n   * in 字段 in (value.get(0), value.get(1), ...)\n   \n   * notin 字段 not in (v0, v1, ...)\n   \n   * @runwith(springrunner.class)\n     @springboottest\n     public class usermappertest {\n       @autowired\n       private usermapper usermapper;\n       @test\n       public void testeq() {\n         querywrapper<user> wrapper = new querywrapper<>();\n         //select id,user_name,password,name,age,email from tb_user where password = ?\n     and age >= ? and name in (?,?,?)\n         wrapper.eq("password", "123456")\n            .ge("age", 20)\n            .in("name", "李四", "王五", "赵六");\n         list<user> users = this.usermapper.selectlist(wrapper);\n         for (user user : users) {\n           system.out.println(user);\n        }\n      }\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     \n\n * 模糊查询\n   \n   * like like \'% 值%\' 例 : like("name", " 王") ---\x3e name like \'% 王%\'\n   \n   * notlike not like \'% 值%\'\n     \n     例 : notlike("name", " 王") ---\x3e name not like \'% 王%\'\n   \n   * likeleft like \'% 值\' 例 : likeleft("name", " 王") ---\x3e name like \'% 王\'\n   \n   * likeright like \' 值%\' 例 : likeright("name", " 王") ---\x3e name like \' 王%\'\n\n * 排序\n   \n   * orderby 排序： order by 字段, ...\n     \n     例 : orderby(true, true, "id", "name") ---\x3e order by id asc,name asc\n   \n   * orderbyasc 排序： order by 字段, ... asc 例 : orderbyasc("id", "name") ---\x3e order by id asc,name asc\n   \n   * orderbydesc 排序： order by 字段, ... desc 例 : orderbydesc("id", "name") ---\x3e order by id desc,name desc\n\n * 逻辑查询\n   \n   * or 拼接 or 主动调用 or 表示紧接着下一个方法不是用 and 连接!(不调用 or 则默认为使用 and 连接)\n   * and and 嵌套 例 : and(i -> i.eq("name", "李白").ne("status", "活着")) ---\x3e and (name = \'李白\' and status <> \'活着\')\n\n * select\n   \n   > 在mp查询中，默认查询所有的字段，如果有需要也可以通过select方法进行指定字段。\n\n\n# activerecord\n\n在mp中开启ar之旅，只需要将实体对象继承model即可。\n\nimport com.baomidou.mybatisplus.annotation.idtype;\nimport com.baomidou.mybatisplus.annotation.tablefield;\nimport com.baomidou.mybatisplus.annotation.tableid;\nimport com.baomidou.mybatisplus.annotation.tablename;\nimport com.baomidou.mybatisplus.extension.activerecord.model;\nimport lombok.allargsconstructor;\nimport lombok.data;\nimport lombok.noargsconstructor;\n@data\n@noargsconstructor\n@allargsconstructor\npublic class user extends model<user> {\n private long id;\n  private string username;\n  private string password;\n  private string name;\n  private integer age;\n  private string email;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n就可以直接进行操作\n\n@runwith (springrunner.class)\n@springboottest\npublic class usermappertest {\n  @autowired\n  private usermapper usermapper;\n  @test\n  public void testar() {\n    user user = new user();\n    user.setid(2l);\n    user user2 = user.selectbyid();\n    system.out.println(user2);\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 乐观锁插件\n\nspring xml:\n\n< bean class="com.baomidou.mybatisplus.extension.plugins.optimisticlockerinterceptor"/> \n\n\n1\n\n\nspringboot\n\n@bean\npublic optimisticlockerinterceptor optimisticlockerinterceptor() {\n  return new optimisticlockerinterceptor();\n}\n\n\n1\n2\n3\n4\n\n\n> 需要为实体字段添加@version注解。\n> \n> 支持的数据类型只有 :int,integer,long,long,date,timestamp,localdatetime 整数类型下 newversion = oldversion + 1 newversion 会回写到 entity 中 仅支持 updatebyid(id) 与 update(entity, wrapper) 方法 在 update(entity, wrapper) 方法下, wrapper 不能复用!!!\n\n\n# 其他配置：\n\nsql 注入器\n\n自动填充功能:@tablefield注解\n\n逻辑删除:@tablelogic注解\n\n# 逻辑已删除值(默认为 1)\nmybatis-plus.global-config.db-config.logic-delete-value=1\n# 逻辑未删除值(默认为 0)\nmybatis-plus.global-config.db-config.logic-not-delete-value=0\n\n\n1\n2\n3\n4\n\n\n修改表结构\n\n通用枚举\n\n\n# 代码生成器\n\n> autogenerator 是 mybatis-plus 的代码生成器，通过 autogenerator 可以快速生成 entity、mapper、mapper xml、service、controller 等各个模块的代码，极大的提升了开发效率。\n\n创建工程：\n\n<?xml version="1.0" encoding="utf-8"?>\n<project xmlns="http://maven.apache.org/pom/4.0.0"\n    xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n    xsi:schemalocation="http://maven.apache.org/pom/4.0.0\nhttp://maven.apache.org/xsd/maven-4.0.0.xsd">\n  <modelversion>4.0.0</modelversion>\n  <parent>\n    <groupid>org.springframework.boot</groupid>\n    <artifactid>spring-boot-starter-parent</artifactid>\n    <version>2.1.4.release</version>\n  </parent>\n  <groupid>com.one.mp</groupid>\n  <artifactid>itcast-mp-generator</artifactid>\n  <version>1.0-snapshot</version>\n  <dependencies>\n    <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-starter-test</artifactid>\n      <scope>test</scope>\n    </dependency>\n    \x3c!--mybatis-plus的springboot支持--\x3e\n    <dependency>\n      <groupid>com.baomidou</groupid>\n      <artifactid>mybatis-plus-boot-starter</artifactid>\n      <version>3.1.1</version>\n    </dependency>\n    <dependency>\n      <groupid>com.baomidou</groupid>\n      <artifactid>mybatis-plus-generator</artifactid>\n      <version>3.1.1</version>\n    </dependency>\n    <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-starter-freemarker</artifactid>\n    </dependency>\n    \x3c!--mysql驱动--\x3e\n    <dependency>\n      <groupid>mysql</groupid>\n      <artifactid>mysql-connector-java</artifactid>\n      <version>5.1.47</version>\n    </dependency>\n    <dependency>\n      <groupid>org.slf4j</groupid>\n      <artifactid>slf4j-log4j12</artifactid>\n    </dependency>\n  </dependencies>\n  <build>\n   <plugins>\n      <plugin>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-maven-plugin</artifactid>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n\n\n代码:\n\npackage com.one.mp.generator;\nimport java.util.arraylist;\nimport java.util.list;\nimport java.util.scanner;\nimport com.baomidou.mybatisplus.core.exceptions.mybatisplusexception;\nimport com.baomidou.mybatisplus.core.toolkit.stringpool;\nimport com.baomidou.mybatisplus.core.toolkit.stringutils;\nimport com.baomidou.mybatisplus.generator.autogenerator;\nimport com.baomidou.mybatisplus.generator.injectionconfig;\nimport com.baomidou.mybatisplus.generator.config.datasourceconfig;\nimport com.baomidou.mybatisplus.generator.config.fileoutconfig;\nimport com.baomidou.mybatisplus.generator.config.globalconfig;\nimport com.baomidou.mybatisplus.generator.config.packageconfig;\nimport com.baomidou.mybatisplus.generator.config.strategyconfig;\nimport com.baomidou.mybatisplus.generator.config.templateconfig;\nimport com.baomidou.mybatisplus.generator.config.po.tableinfo;\nimport com.baomidou.mybatisplus.generator.config.rules.namingstrategy;\nimport com.baomidou.mybatisplus.generator.engine.freemarkertemplateengine;\n/**\n* <p>\n* mysql 代码生成器演示例子\n* </p>\n*/\npublic class mysqlgenerator {\n  /**\n  * <p>\n  * 读取控制台内容\n  * </p>\n  */\n  public static string scanner(string tip) {\n    scanner scanner = new scanner(system.in);\n    stringbuilder help = new stringbuilder();\n    help.append("请输入" + tip + "：");\n    system.out.println(help.tostring());\n    if (scanner.hasnext()) {\n      string ipt = scanner.next();\n       if (stringutils.isnotempty(ipt)) {\n        return ipt;\n     }\n   }\n    throw new mybatisplusexception("请输入正确的" + tip + "！");\n }\n  /**\n  * run this\n  */\n  public static void main(string[] args) {\n    // 代码生成器\n    autogenerator mpg = new autogenerator();\n    // 全局配置\n    globalconfig gc = new globalconfig();\n    string projectpath = system.getproperty("user.dir");\n    gc.setoutputdir(projectpath + "/src/main/java");\n    gc.setauthor("itcast");\n    gc.setopen(false);\n    mpg.setglobalconfig(gc);\n    // 数据源配置\n    datasourceconfig dsc = new datasourceconfig();\n    dsc.seturl("jdbc:mysql://127.0.0.1:3306/mp?\nuseunicode=true&usessl=false&characterencoding=utf8");\n    // dsc.setschemaname("public");\n    dsc.setdrivername("com.mysql.jdbc.driver");\n    dsc.setusername("root");\n    dsc.setpassword("root");\n    mpg.setdatasource(dsc);\n    // 包配置\n    packageconfig pc = new packageconfig();\n    pc.setmodulename(scanner("模块名"));\n    pc.setparent("com.one.mp.generator");\n    mpg.setpackageinfo(pc);\n    // 自定义配置\n    injectionconfig cfg = new injectionconfig() {\n      @override\n      public void initmap() {\n        // to do nothing\n     }\n   };\n    list<fileoutconfig> foclist = new arraylist<>();\n    foclist.add(new fileoutconfig("/templates/mapper.xml.ftl") {\n      @override\n      public string outputfile(tableinfo tableinfo) {\n        // 自定义输入文件名称\n        return projectpath + "/itcast-mp-\ngenerator/src/main/resources/mapper/" + pc.getmodulename()\n  + "/" + tableinfo.getentityname() + "mapper" +\nstringpool.dot_xml;\n     }\n   });\n    cfg.setfileoutconfiglist(foclist);\n    mpg.setcfg(cfg);\n    mpg.settemplate(new templateconfig().setxml(null));\n    // 策略配置\n    strategyconfig strategy = new strategyconfig();\n    strategy.setnaming(namingstrategy.underline_to_camel);\n    strategy.setcolumnnaming(namingstrategy.underline_to_camel);\n  \n// strategy.setsuperentityclass("com.baomidou.mybatisplus.samples.generator.common.basee\n// ntity");\n    strategy.setentitylombokmodel(true);\n\n//strategy.setsupercontrollerclass("com.baomidou.mybatisplus.samples.generator.common.b\n//asecontroller");\n    strategy.setinclude(scanner("表名"));\n    strategy.setsuperentitycolumns("id");\n    strategy.setcontrollermappinghyphenstyle(true);\n    strategy.settableprefix(pc.getmodulename() + "_");\n    mpg.setstrategy(strategy);\n    // 选择 freemarker 引擎需要指定如下加，注意 pom 依赖必须有！\n    mpg.settemplateengine(new freemarkertemplateengine());\n    mpg.execute();\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n\n\n\n# 注意事项\n\n数据库id策略：\n\n * mp默认生成id是分布式id采用雪花算法\n   \n   @tableid(type=idtype.assign_id) //默认id类型 方便以后用户多，分布式不唯一\n   @tableid(type=idtype.a) //用数据库的id\n   \n   \n   1\n   2\n   \n\n----------------------------------------',charsets:{cjk:!0}},{title:"spring 笔记",frontmatter:{title:"spring 笔记",date:"2021-08-28T00:00:00.000Z",tags:["spring"],categories:["java"]},regularPath:"/view/docs/java/spring.html",relativePath:"view/docs/java/spring.md",key:"v-31c8e948",path:"/view/docs/java/spring.html",headers:[{level:2,title:"Spring",slug:"spring",normalizedTitle:"spring",charIndex:2},{level:2,title:"Spring的Ioc",slug:"spring的ioc",normalizedTitle:"spring的ioc",charIndex:96},{level:3,title:"设计模式-工厂模式",slug:"设计模式-工厂模式",normalizedTitle:"设计模式-工厂模式",charIndex:111},{level:3,title:"IOC和DI",slug:"ioc和di",normalizedTitle:"ioc和di",charIndex:256},{level:3,title:"Spring注解驱动开发",slug:"spring注解驱动开发",normalizedTitle:"spring注解驱动开发",charIndex:402},{level:3,title:"注解开发入门案例",slug:"注解开发入门案例",normalizedTitle:"注解开发入门案例",charIndex:574},{level:3,title:"IOC的常用注解",slug:"ioc的常用注解",normalizedTitle:"ioc的常用注解",charIndex:3718},{level:2,title:"Spring的Aop",slug:"spring的aop",normalizedTitle:"spring的aop",charIndex:5093},{level:3,title:"设计模式 -代理模式",slug:"设计模式-代理模式",normalizedTitle:"设计模式 -代理模式",charIndex:5108},{level:3,title:"AOP思想及实现原理",slug:"aop思想及实现原理",normalizedTitle:"aop思想及实现原理",charIndex:5200},{level:3,title:"注解驱动AOP开发入门",slug:"注解驱动aop开发入门",normalizedTitle:"注解驱动aop开发入门",charIndex:5580},{level:3,title:"加载过程",slug:"加载过程",normalizedTitle:"加载过程",charIndex:8996},{level:3,title:"切入点表达式",slug:"切入点表达式",normalizedTitle:"切入点表达式",charIndex:6441},{level:3,title:"注解类型",slug:"注解类型",normalizedTitle:"注解类型",charIndex:9413},{level:2,title:"Spring的JDBC和事务",slug:"spring的jdbc和事务",normalizedTitle:"spring的jdbc和事务",charIndex:10543},{level:3,title:"入门案例",slug:"入门案例",normalizedTitle:"入门案例",charIndex:578},{level:3,title:"NamedParameterJdbcTemplate（推荐）",slug:"namedparameterjdbctemplate-推荐",normalizedTitle:"namedparameterjdbctemplate（推荐）",charIndex:13980},{level:3,title:"Spring中的事务",slug:"spring中的事务",normalizedTitle:"spring中的事务",charIndex:16835},{level:2,title:"SpringMVC",slug:"springmvc",normalizedTitle:"springmvc",charIndex:18090},{level:3,title:"SpringMVC注解驱动开发的环境搭建",slug:"springmvc注解驱动开发的环境搭建",normalizedTitle:"springmvc注解驱动开发的环境搭建",charIndex:18104},{level:3,title:"执行流程：",slug:"执行流程",normalizedTitle:"执行流程：",charIndex:21743},{level:3,title:"组件解析",slug:"组件解析",normalizedTitle:"组件解析",charIndex:21755},{level:3,title:"常用注解",slug:"常用注解",normalizedTitle:"常用注解",charIndex:3722}],lastUpdated:"2021/8/28 下午6:40:26",headersStr:"Spring Spring的Ioc 设计模式-工厂模式 IOC和DI Spring注解驱动开发 注解开发入门案例 IOC的常用注解 Spring的Aop 设计模式 -代理模式 AOP思想及实现原理 注解驱动AOP开发入门 加载过程 切入点表达式 注解类型 Spring的JDBC和事务 入门案例 NamedParameterJdbcTemplate（推荐） Spring中的事务 SpringMVC SpringMVC注解驱动开发的环境搭建 执行流程： 组件解析 常用注解",content:'# Spring\n\n轻量级开源框架，内核是Ioc (控制反转）和AOP （面向切面编程）\n\n> 并且提供了 springmvc 展现层和Spring JDBCTemplate 持久层\n\n\n# Spring的Ioc\n\n\n# 设计模式-工厂模式\n\n> 工厂模式是常用的实例化对象的模式，用工厂的方法代替了new对象的一种设计模式\n> \n> 这样可以尽量将长的代码分派“切割”成每段，将每段再“封装”起来(减少段和段之间耦合联系性)，就会将风险分散，以后如果需要修改，只要更改每段，不会再发生牵一动百的情况。\n\n\n# IOC和DI\n\nIOC\n\n> 控制反转。它不是一个技术，而是一种思想。其作用是用于削减代码间的耦合。它的实现思想就是利用了工厂设计模式，把创建对象代码从具体类中剥离出去，交由工厂来完成，从而降低代码间的依赖关系\n\nDI\n\n> 全称是依赖注入。是spring框架核心ioc的具体实现。\n\n\n# Spring注解驱动开发\n\n> 从Spring 3版本开始，Spring JavaConfig项目提供的许多特性成为核心Spring框架的一部分。因此，可以使用Java而不是XML文件来定义应用程序类外部的bean。在这里面官方文档为我们提供了四个基本注解@Configuration,@Bean,@Import,@DependsOn\n\n\n# 注解开发入门案例\n\n----------------------------------------\n\n1.需求：\n\t实现保存一条数据到数据库。\n2.表结构：\n\tcreate table account(\n\t\tid int primary key auto_increment,\n\t\tname varchar(50),\n\t\tmoney double(7,2)\n\t);\n3.要求：\n\t使用spring框架中的JdbcTemplate和DriverManagerDataSource\n\t使用纯注解配置spring的ioc\t\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n具体实现：\n\n 1. 导入坐标\n    \n    <dependencies>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-context</artifactId>\n                <version>5.1.6.RELEASE</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-jdbc</artifactId>\n                <version>5.1.6.RELEASE</version>\n            </dependency>\n            <dependency>\n                <groupId>mysql</groupId>\n                <artifactId>mysql-connector-java</artifactId>\n                <version>5.1.45</version>\n            </dependency>\n        </dependencies>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    \n\n 2. 编写配置类\n    \n    @Configuration\n    @Import(JdbcConfig.class)\n    @PropertySource("classpath:jdbc.properties")\n    public class SpringConfiguration {\n    }\n    public class JdbcConfig {\n        @Value("${jdbc.driver}")\n        private String driver;\n        @Value("${jdbc.url}")\n        private String url;\n        @Value("${jdbc.username}")\n        private String username;\n        @Value("${jdbc.password}")\n        private String password;\n    \n        @Bean("jdbcTemplate")\n        public JdbcTemplate createJdbcTemplate(DataSource dataSource){\n            return new JdbcTemplate(dataSource);\n        }\n        @Bean("dataSource")\n        public DataSource createDataSource(){\n            DriverManagerDataSource dataSource = new DriverManagerDataSource();\n            dataSource.setDriverClassName(driver);\n            dataSource.setUrl(url);\n            dataSource.setUsername(username);\n            dataSource.setPassword(password);\n            return dataSource;\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    \n\n 3. 编写配置文件\n    \n    jdbc.driver=com.mysql.jdbc.Driver\n    jdbc.url=jdbc:mysql://localhost:3306/spring_day01\n    jdbc.username=root\n    jdbc.password=1234\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 编写测试类\n    \n    public class SpringAnnotationDrivenTest {\n    \n        /**\n         * 测试\n         * @param args\n         */\n        public static void main(String[] args) {\n            //1.获取容器\n            ApplicationContext ac = new AnnotationConfigApplicationContext(SpringConfiguration.class);\n            //2.根据id获取对象\n            JdbcTemplate jdbcTemplate = ac.getBean("jdbcTemplate",JdbcTemplate.class);\n            //3.执行操作\n            jdbcTemplate.update("insert into account(name,money)values(?,?)","test",12345);\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    \n\n\n# IOC的常用注解\n\n注解                                                   说明\n@Component                                           使用在类上用于实例化Bean\n@Controller                                          使用在web层类上用于实例化Bean\n@Service                                             使用在service层类上用于实例化Bean\n@Repository                                          使用在dao层类上用于实例化Bean\n@Autowired                                           使用在字段上用于根据类型依赖注入\n@Qualifier                                           结合@Autowired一起使用用于根据名称进行依赖注入\n@Resource                                            相当于@Autowired+@Qualifier，按照名称进行注入\n@Value                                               注入普通属性\n@Scope                                               标注Bean的作用范围\n@PostConstruct                                       使用在方法上标注该方法是Bean的初始化方法\n@PreDestroy                                          使用在方法上标注该方法是Bean的销毁方法\n@Configuration                                       用于指定当前类是一个 Spring 配置类，当创建容器时会从该类上加载注解\n@ComponentScan                                       用于指定 Spring 在初始化容器时要扫描的包。\n作用和在 Spring 的 xml 配置文件中的                             \n<context:component-scan base-package="com.one"/>一样   \n@Bean                                                使用在方法上，标注将该方法的返回值存储到 Spring 容器中\n@PropertySource                                      用于加载.properties 文件中的配置\n@Import                                              用于导入其他配置类\n\n\n# Spring的Aop\n\n\n# 设计模式 -代理模式\n\n> 代理模式：给某一个对象提供一个代理对象，并由代理对象控制对源对象的引用。\n> \n> 特点：\n> \n>  * 起到中介隔离作用\n>  * 有增强作用\n\n\n# AOP思想及实现原理\n\nAop思想\n\n> 面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。\n\n原理\n\n> 基于动态代理技术实现，动态代理特点：字节码随用时创建加载，分类：基于接口动态代理（官方jkd)，基于子类动态代理(第三方 cglib包)，作用：在不修改源码的基础上进行方法的增强。\n\n术语\n\n * Joinpoint( 连接点):\n * Pointcut(切入点):\n * Advice(通知/增强):\n * Introduction(引介):\n * Target(目标对象):\n * Weaving(织入):\n * Proxy（代理）:\n * Aspect(切面):\n\n\n# 注解驱动AOP开发入门\n\n----------------------------------------\n\n需求： \n  实现在执行service方法时输出执行日志。（除了业务层外，表现层和持久层也可\n以实现）\n\n\n1\n2\n3\n\n实现\n\n  实体类：（在本案例中没有实际作用）\n  public class User implements Serializable {\n      private String id;\n      private String username;\n      private String password;\n      private String email;\n      private Date birthday;\n      private String gender;\n      private String mobile;\n      private String nickname;\n  }\n业务层接口：\n    public interface UserService {\n        /**\n         * 保存用户\n         * @param user\n         */\n        void save(User user);\n    }\n业务层实现类：\n    @Service("userService")\n    public class UserServiceImpl implements UserService{\n        @Override\n        public void save(User user) {\n             System.out.println("保存用："+user);\n        }\n    }\n日志工具类：\n    @Component\n    @Aspect\n    public class LogUtil {\n        /**\n         * 通用切入点表达式\n         */\n        @Pointcut("execution(* com.one.service.impl.*.*(..))")\n        private void pt1(){}\n        /**\n         * 前置通知\n         */\n        @Before("pt1()")\n        public void beforeLog(){\n            System.out.println("执行切入点方法前记录日志");\n        }\n        /**\n         * 后置通知\n         */\n        @AfterReturning("pt1()")\n        public void afterReturningLog(){\n            System.out.println("正常执行切入点方法后记录日志");\n        }\n        /**\n         * 异常通知\n         */\n        @AfterThrowing("pt1()")\n        public void afterThrowingLog(){\n            System.out.println("执行切入点方法产生异常后记录日志");\n             }\n        /**\n         * 最终通知\n         */\n        @After("pt1()")\n        public void afterLog(){\n            System.out.println("无论切入点方法执行是否有异常都记录日志");\n        }\n        /**\n         * 环绕通知\n         */\n        @Around("pt1()")\n        public Object arountPrintLog(ProceedingJoinPoint pjp){\n            //1.定义返回值\n            Object rtValue = null;\n            try{\n                //前置通知\n                System.out.println("执行切入点方法前记录日志");\n                //2.获取方法执行所需的参数\n                Object[] args = pjp.getArgs();\n                //3.执行切入点方法\n                rtValue = pjp.proceed(args);\n                //后置通知\n                System.out.println("正常执行切入点方法后记录日志");\n            }catch (Throwable t){\n                //异常通知\n                System.out.println("执行切入点方法产生异常后记录日志");\n            }finally {\n                //最终通知\n                System.out.println("无论切入点方法执行是否有异常都记录日志");\n            }\n            return rtValue;\n        }\n    }\n配置类：\n     @Configuration\n    @ComponentScan("com.one")\n    @EnableAspectJAutoProxy\n    public class SpringConfiguration {\n    }\n测试类：\npublic class SpringAOPTest {\n    public static void main(String[] args) {\n        //1.获取容器\n        AnnotationConfigApplicationContext ac = new\nAnnotationConfigApplicationContext(SpringConfiguration.class);\n        //2.获取bean对象\n        UserService userService =\nac.getBean("userService",UserService.class);\n        //3.准备数据\n        User user = new User();\n        user.setId("1");\n        user.setUsername("test");\n        user.setNickname("泰斯特");\n        //4.执行方法\n        userService.save(user);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n\n\n\n# 加载过程\n\n 1. 执行父类AbstractAutoProxyCreator中的postProcessAfterInitialization()方法\n 2. 判断是否需要增强或已经被增强过了\n 3. 判断是否为基础类（通知类\n 4. 获取增强的代码\n 5. 根据增强创建代理对象\n\n\n# 切入点表达式\n\n关键字\n\n支持的 AspectJ切入点指示符如下：\n    execution：用于匹配方法执行的连接点；\n    within：用于匹配指定类型内的方法执行；\n    this：用于匹配当前AOP代理对象类型的执行方法；注意是AOP代理对象的类型匹配，这\n样就可能包括引入接口也类型匹配；\n    target：用于匹配当前目标对象类型的执行方法；注意是目标对象的类型匹配，这样就\n不包括引入接口也类型匹配；\n    args：用于匹配当前执行的方法传入的参数为指定类型的执行方法；\n    @within：用于匹配所以持有指定注解类型内的方法；\n    @target：用于匹配当前目标对象类型的执行方法，其中目标对象持有指定的注解；\n    @args：用于匹配当前执行的方法传入的参数持有指定注解的执行；\n    @annotation：用于匹配当前执行方法持有指定注解的方法；\n    bean：Spring AOP扩展的，AspectJ没有对于指示符，用于匹配特定名称的Bean对象的\n执行方法；\n    reference pointcut：表示引用其他命名切入点，只有@ApectJ风格支持，Schema风\n格不支持。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n通配符\n\nAspectJ 类型匹配的通配符：    *：匹配任何数量字符；    ..：匹配任何数量字符的重复，如在类型模式中匹配任何数量子包；而在方法参数模式中匹配任何数量参数。    +：匹配指定类型的子类型；仅能作为后缀放在类型模式后边。说明：        java.lang.String 匹配String类型；    java.*.String 匹配java包下的任何“一级子包”下的String类型；    如匹配java.lang.String，但不匹配java.lang.ss.String    java..* 匹配java包及任何子包下的任何类型;    如匹配java.lang.String、java.lang.annotation.Annotation    java.lang.*ing 匹配任何java.lang包下的以ing结尾的类型；    java.lang.Number+ 匹配java.lang包下的任何Number的自类型；    如匹配java.lang.Integer，也匹配java.math.BigInteger\n\n\n1\n\n\n逻辑条件\n\n> && and || or ! not\n\n\n# 注解类型\n\n名称       注解                说明\n前置通知     @Before           用于配置前置通知。指定增强的方法在切入点方法之前执行\n后置通知     @AfterReturning   用于配置后置通知。指定增强的方法在切入点方法之后执行\n环绕通知     @Around           用于配置环绕通知。指定增强的方法在切入点方法之前和之后都执行\n异常抛出通知   @AfterThrowing    用于配置异常抛出通知。指定增强的方法在出现异常时执行\n最终通知     @After            用于配置最终通知。无论增强方式执行是否有异常都会执行\n\n\n# Spring的JDBC和事务\n\n> Spring对数据库的操作在jdbc上面做了基本的封装，让开发者在操作数据库时只需关注SQL语句和查询 结果处理器，即可完成功能（当然，只使用JdbcTemplate，还不能摆脱持久层实现类的编写）。 在配合spring的IoC功能，可以把DataSource注册到JdbcTemplate之中。同时利用spring基于 aop的事务即可完成简单的数据库CRUD操作。 JdbcTemplate的限定命名为org.springframework.jdbc.core.JdbcTemplate。要使用 JdbcTemlate需要导入spring-jdbc和spring-tx两个坐标。\n\n\n# 入门案例\n\n 1. 导入坐标\n    \n    <dependencies>    <dependency>      <groupId>org.springframework</groupId>      <artifactId>spring-context</artifactId>      <version>5.1.6.RELEASE</version>    </dependency>    <dependency>      <groupId>org.springframework</groupId>      <artifactId>spring-jdbc</artifactId>      <version>5.1.6.RELEASE</version>    </dependency>    <dependency>      <groupId>mysql</groupId>      <artifactId>mysql-connector-java</artifactId>      <version>5.1.45</version>    </dependency>    <dependency>      <groupId>org.springframework</groupId>      <artifactId>spring-test</artifactId>      <version>5.1.6.RELEASE</version>    </dependency>    <dependency>      <groupId>junit</groupId>      <artifactId>junit</artifactId>      <version>4.12</version>    </dependency>  </dependencies>\n    \n    \n    1\n    \n\n 2. 编写实体类\n    \n    public class Account implements Serializable{  private Integer id;  private String name;  private Double money;  public Integer getId() {  public void setId(Integer id) {    this.id = id; }  public String getName() {    return name; }  public void setName(String name) {    this.name = name; }  public Double getMoney() {    return money; }  public void setMoney(Double money) {    this.money = money; }}\n    \n    \n    1\n    \n\n 3. 编写配置类\n    \n    @Configuration@Import(JdbcConfig.class)@PropertySource("classpath:jdbc.properties")public class SpringConfiguration {}public class JdbcConfig {  @Value("${jdbc.driver}")  private String driver;  @Value("${jdbc.url}")  private String url;  @Value("${jdbc.username}")  private String username;  @Value("${jdbc.password}")  private String password;  @Bean  public JdbcTemplate createJdbcTemplate(DataSource dataSource){  @Bean  public DataSource createDataSource(){    DriverManagerDataSource dataSource = newDriverManagerDataSource(url,username,password);    dataSource.setDriverClassName(driver);    return dataSource; }}\n    \n    \n    1\n    \n\n 4. 编写配置文件\n    \n    jdbc.driver=com.mysql.jdbc.Driverjdbc.url=jdbc:mysql://localhost:3306/spring_iocjdbc.username=rootjdbc.password=1234\n    \n    \n    1\n    \n\n 5. 测试方法\n    \n    @RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(classes = SpringConfiguration.class)public class SpringJdbcTemplateUseTest {  @Autowired  private NamedParameterJdbcTemplate namedParameterJdbcTemplate;  @Autowired  private JdbcTemplate jdbcTemplate;  @Test  public void testFindMore(){//    List<Account> accounts = jdbcTemplate.query("select * from accountwhere id in (?,?)",new Object[]{1,2},new BeanPropertyRowMapper<Account>(Account.class));    Map<String,List<Integer>> map = new HashMap<>();    List<Integer> list = new ArrayList<>();    list.add(1);    list.add(2);account where id in (:ids)",map,new BeanPropertyRowMapper<Account>(Account.class));    System.out.println(accounts); }  @Test  public void testNamedParameter(){    Account account = new Account();    account.setName("test");    account.setMoney(12345d);    BeanMap  beanMap = BeanMap.create(account);    namedParameterJdbcTemplate.update("insert intoaccount(name,money)values(:name,:money)",beanMap); }}\n    \n    \n    1\n    \n\n\n# NamedParameterJdbcTemplate（推荐）\n\n> 具名参数只在 NamedParameterJdbcTemplate 中得到支持。NamedParameterJdbcTemplate可以使 用全部jdbcTemplate方法\n\n入门案例\n\n 1. 导入坐标\n    \n    <dependencies>    <dependency>      <groupId>org.springframework</groupId>      <artifactId>spring-context</artifactId>      <version>5.1.6.RELEASE</version>    </dependency>    <dependency>      <groupId>org.springframework</groupId>      <artifactId>spring-jdbc</artifactId>      <version>5.1.6.RELEASE</version>    </dependency>    <dependency>      <groupId>mysql</groupId>      <artifactId>mysql-connector-java</artifactId>      <version>5.1.45</version>    </dependency>    <dependency>      <groupId>org.springframework</groupId>      <artifactId>spring-test</artifactId>      <version>5.1.6.RELEASE</version>    </dependency>    <dependency>      <groupId>junit</groupId>      <artifactId>junit</artifactId>      <version>4.12</version>    </dependency>  </dependencies>\n    \n    \n    1\n    \n\n 2. 实体类\n\n 3. 编写配置类\n    \n    @Configuration@Import(JdbcConfig.class)@PropertySource("classpath:jdbc.properties")public class SpringConfiguration {}public class JdbcConfig {  @Value("${jdbc.driver}")  private String driver;  @Value("${jdbc.url}")  private String url;  @Value("${jdbc.username}")  private String username;  @Value("${jdbc.password}")  private String password;  @Bean  public JdbcTemplate createJdbcTemplate(DataSource dataSource){    return new JdbcTemplate(dataSource); }  @Bean  public DataSource createDataSource(){    DriverManagerDataSource dataSource = newDriverManagerDataSource(url,username,password);    dataSource.setDriverClassName(driver);    return dataSource; }  @Bean  public NamedParameterJdbcTemplate createNamedJdbcTemplate(JdbcTemplatejdbcTemplate){    return new NamedParameterJdbcTemplate(jdbcTemplate); }}\n    \n    \n    1\n    \n\n 4. 配置文件\n\n 5. 测试\n    \n    @RunWith(SpringJUnit4ClassRunner.class)@ContextConfiguration(classes = SpringConfiguration.class)public class SpringJdbcTemplateUseTest {  @Autowired  private NamedParameterJdbcTemplate namedParameterJdbcTemplate;  @Autowired  private JdbcTemplate jdbcTemplate;  @Test  public void testFindMore(){//    List<Account> accounts = jdbcTemplate.query("select * from accountwhere id in (?,?)",new Object[]{1,2},new BeanPropertyRowMapper<Account>(Account.class));    Map<String,List<Integer>> map = new HashMap<>();    List<Integer> list = new ArrayList<>();    list.add(1);    list.add(2);    account where id in (:ids)",map,new BeanPropertyRowMapper<Account>(Account.class));    System.out.println(accounts); }  @Test  public void testNamedParameter(){    Account account = new Account();    account.setName("test");    account.setMoney(12345d);    BeanMap  beanMap = BeanMap.create(account);    namedParameterJdbcTemplate.update("insert intoaccount(name,money)values(:name,:money)",beanMap); }}\n    \n    \n    1\n    \n\n\n# Spring中的事务\n\n> 主要api\n> \n> PlatformTransactionManager(事务管理器)和它的实现类\n> \n> > 它里面提供了我们常用的操作事务的方法、commit rollback getTransaction\n> > \n> > 方法                                                       说明\n> > TransactionStatus getTransaction(TransactionDefination   获取事务的状态信息\n> > defination)\n> > void commit(TransactionStatus status)                    提交事务\n> > void rollback(TransactionStatus status)                  回滚事务\n> \n> TransactionDefinition(隔离级别）\n> \n> > 设置隔离级别，可以解决事务并发产生的问题，如脏读、不可重复读和虚读。\n> > \n> > 方法                             说明\n> > int getIsolationLevel()        获得事务的隔离级别\n> > int getPropogationBehavior()   获得事务的传播行为\n> > int getTimeout()               获得超时时间\n> > boolean isReadOnly()           是否只读\n> \n> TransactionStatus\n> \n> > 事务具体的运行状态\n> > \n> > 方法                           说明\n> > boolean hasSavepoint()       是否存储回滚点\n> > boolean isCompleted()        事务是否完成\n> > boolean isNewTransaction()   是否是新事务\n> > boolean isRollbackOnly()     事务是否回滚\n\n注解\n\n * @EnableTransactionManagement\n   \n   > 此注解是Spring支持注解事务配置的标志。表明Spring开启注解事务配置的支持。是注解驱动开发事 务配置的必备注解。\n\n * @Transactional\n   \n   > 此注解是Spring注解配置事务的核心注解，无论是注解驱动开发还是注解和XML混合开发，只有涉及配 置事务采用注解的方式，都需要使用此注解。\n\n * @TransactionEventListener\n   \n   > 用于配置一个事务的事件监听器。使我们在事务提交和回滚前 后可以做一些额外的功能。例如：对事务执行监控，执行中同步做一些操作等等\n\n\n# SpringMVC\n\n\n# SpringMVC注解驱动开发的环境搭建\n\n 1. 导入坐标\n    \n    <properties>    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>    <maven.compiler.source>1.8</maven.compiler.source>    <maven.compiler.target>1.8</maven.compiler.target>  </properties>  <dependencies>    <dependency>      <groupId>org.springframework</groupId>      <artifactId>spring-context</artifactId>      <version>5.1.6.RELEASE</version>    </dependency>    <dependency>      <groupId>org.springframework</groupId>      <artifactId>spring-webmvc</artifactId>      <version>5.1.6.RELEASE</version>    </dependency>    \x3c!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api--\x3e    <dependency>      <groupId>javax.servlet</groupId>      <artifactId>javax.servlet-api</artifactId>      <version>3.0.1</version>      <scope>provided</scope>    </dependency>    \x3c!--https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api --\x3e    <dependency>      <groupId>javax.servlet.jsp</groupId>      <artifactId>javax.servlet.jsp-api</artifactId>      <version>2.3.1</version>      <scope>provided</scope>    </dependency>    <dependency>      <groupId>log4j</groupId>      <artifactId>log4j</artifactId>      <version>1.2.17</version>    </dependency>    <dependency>      <groupId>org.springframework</groupId>      <artifactId>spring-context-support</artifactId>      <version>5.1.6.RELEASE</version>\n    \n    \n    1\n    \n\n 2. 编写控制器\n    \n    @Controllerpublic class HelloController {  /**  * 控制器方法  * @param name  * @return  */  @RequestMapping("/hello")  public String sayHello(){    return "success"; }}\n    \n    \n    1\n    \n\n 3. 编写配置类\n    \n    public class Config extends AbstractDispatcherServletInitializer{  /**  * 添加字符集过滤器  * @param servletContext  * @throws ServletException  */  @Override  public void onStartup(ServletContext servletContext) throws ServletException{    CharacterEncodingFilter characterEncodingFilter = newCharacterEncodingFilter();    characterEncodingFilter.setEncoding("UTF-8");   servletContext.addFilter("characterEncodingFilter",characterEncodingFilter);//    servletContext.gets    super.onStartup(servletContext); }  /**  * 创建web的Ioc容器  * @return  */  @Override  AnnotationConfigWebApplicationContext();    acw.register(SpringMVCConfiguration.class);    return acw; }  /**  * 配置servlet的映射  * @return  */  @Override  protected String[] getServletMappings() {    return new String[]{"/"}; }  /**  * 创建根容器（非web层的对象容器）  * @return  */  @Override  protected WebApplicationContext createRootApplicationContext() {    AnnotationConfigWebApplicationContext acw = newAnnotationConfigWebApplicationContext();    acw.register(SpringConfiguration.class);    return acw; }}\n    \n    \n    1\n    \n    \n    @Configuration@EnableScheduling@ComponentScan(value = "com.one",    excludeFilters = @ComponentScan.Filter(type =FilterType.ANNOTATION,classes = Controller.class))public class SpringConfiguration {}\n    \n    \n    1\n    \n    \n    @Configuration@ComponentScan("com.one.web")public class SpringMVCConfiguration {  @Bean  public ViewResolver createViewResolver(){    InternalResourceViewResolver viewResolver = newInternalResourceViewResolver();    viewResolver.setPrefix("/WEB-INF/pages/");    viewResolver.setSuffix(".jsp");    return viewResolver;  }}\n    \n    \n    1\n    \n\n 4. 编写页面\n    \n    <%@page pageEncoding="UTF-8" language="java" contentType="text/html; UTF-8" %><html><body><a href="${pageContext.request.contextPath}/hello"></a></body></html>\n    \n    \n    1\n    \n    \n    <%@page pageEncoding="UTF-8" language="java" contentType="text/html; UTF-8" %><html><body><h2>执行成功！</h2></body></html>\n    \n    \n    1\n    \n\n\n# 执行流程：\n\n\n\n\n# 组件解析\n\n 1. 前端控制器：DispatcherServlet\n 2. 处理器映射器：HandlerMapping\n 3. 处理器适配器：HandlerAdapter\n 4. 处理器：Handler\n 5. 视图解析器：View Resolver\n 6. 视图：View\n\n\n# 常用注解\n\n * @Controller\n * @RequestMapping\n * @RequestParam\n * @InitBinder\n * @ControllerAdvice\n * @RequestHeader\n * @CookieValue\n * @ModelAttribute\n * @SessionAttribute和@SessionAttributes\n * @ExceptionHandler\n\n与json相关注解\n\n * @RequestBody\n * @ResponseBody\n * @RestController\n * @RestControllerAdvice\n\nRest风格URL请求相关注解\n\n * @PathVariable\n\n跨域访问\n\n> 跨域访问即跨站 HTTP 请求(Cross-site HTTP request)，它是指发起请求的资源所在域不同于该 请求所指向资源所在的域的 HTTP 请求\n\n * @CrossOrigin',normalizedContent:'# spring\n\n轻量级开源框架，内核是ioc (控制反转）和aop （面向切面编程）\n\n> 并且提供了 springmvc 展现层和spring jdbctemplate 持久层\n\n\n# spring的ioc\n\n\n# 设计模式-工厂模式\n\n> 工厂模式是常用的实例化对象的模式，用工厂的方法代替了new对象的一种设计模式\n> \n> 这样可以尽量将长的代码分派“切割”成每段，将每段再“封装”起来(减少段和段之间耦合联系性)，就会将风险分散，以后如果需要修改，只要更改每段，不会再发生牵一动百的情况。\n\n\n# ioc和di\n\nioc\n\n> 控制反转。它不是一个技术，而是一种思想。其作用是用于削减代码间的耦合。它的实现思想就是利用了工厂设计模式，把创建对象代码从具体类中剥离出去，交由工厂来完成，从而降低代码间的依赖关系\n\ndi\n\n> 全称是依赖注入。是spring框架核心ioc的具体实现。\n\n\n# spring注解驱动开发\n\n> 从spring 3版本开始，spring javaconfig项目提供的许多特性成为核心spring框架的一部分。因此，可以使用java而不是xml文件来定义应用程序类外部的bean。在这里面官方文档为我们提供了四个基本注解@configuration,@bean,@import,@dependson\n\n\n# 注解开发入门案例\n\n----------------------------------------\n\n1.需求：\n\t实现保存一条数据到数据库。\n2.表结构：\n\tcreate table account(\n\t\tid int primary key auto_increment,\n\t\tname varchar(50),\n\t\tmoney double(7,2)\n\t);\n3.要求：\n\t使用spring框架中的jdbctemplate和drivermanagerdatasource\n\t使用纯注解配置spring的ioc\t\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n具体实现：\n\n 1. 导入坐标\n    \n    <dependencies>\n            <dependency>\n                <groupid>org.springframework</groupid>\n                <artifactid>spring-context</artifactid>\n                <version>5.1.6.release</version>\n            </dependency>\n            <dependency>\n                <groupid>org.springframework</groupid>\n                <artifactid>spring-jdbc</artifactid>\n                <version>5.1.6.release</version>\n            </dependency>\n            <dependency>\n                <groupid>mysql</groupid>\n                <artifactid>mysql-connector-java</artifactid>\n                <version>5.1.45</version>\n            </dependency>\n        </dependencies>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    \n\n 2. 编写配置类\n    \n    @configuration\n    @import(jdbcconfig.class)\n    @propertysource("classpath:jdbc.properties")\n    public class springconfiguration {\n    }\n    public class jdbcconfig {\n        @value("${jdbc.driver}")\n        private string driver;\n        @value("${jdbc.url}")\n        private string url;\n        @value("${jdbc.username}")\n        private string username;\n        @value("${jdbc.password}")\n        private string password;\n    \n        @bean("jdbctemplate")\n        public jdbctemplate createjdbctemplate(datasource datasource){\n            return new jdbctemplate(datasource);\n        }\n        @bean("datasource")\n        public datasource createdatasource(){\n            drivermanagerdatasource datasource = new drivermanagerdatasource();\n            datasource.setdriverclassname(driver);\n            datasource.seturl(url);\n            datasource.setusername(username);\n            datasource.setpassword(password);\n            return datasource;\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    \n\n 3. 编写配置文件\n    \n    jdbc.driver=com.mysql.jdbc.driver\n    jdbc.url=jdbc:mysql://localhost:3306/spring_day01\n    jdbc.username=root\n    jdbc.password=1234\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 编写测试类\n    \n    public class springannotationdriventest {\n    \n        /**\n         * 测试\n         * @param args\n         */\n        public static void main(string[] args) {\n            //1.获取容器\n            applicationcontext ac = new annotationconfigapplicationcontext(springconfiguration.class);\n            //2.根据id获取对象\n            jdbctemplate jdbctemplate = ac.getbean("jdbctemplate",jdbctemplate.class);\n            //3.执行操作\n            jdbctemplate.update("insert into account(name,money)values(?,?)","test",12345);\n        }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    \n\n\n# ioc的常用注解\n\n注解                                                   说明\n@component                                           使用在类上用于实例化bean\n@controller                                          使用在web层类上用于实例化bean\n@service                                             使用在service层类上用于实例化bean\n@repository                                          使用在dao层类上用于实例化bean\n@autowired                                           使用在字段上用于根据类型依赖注入\n@qualifier                                           结合@autowired一起使用用于根据名称进行依赖注入\n@resource                                            相当于@autowired+@qualifier，按照名称进行注入\n@value                                               注入普通属性\n@scope                                               标注bean的作用范围\n@postconstruct                                       使用在方法上标注该方法是bean的初始化方法\n@predestroy                                          使用在方法上标注该方法是bean的销毁方法\n@configuration                                       用于指定当前类是一个 spring 配置类，当创建容器时会从该类上加载注解\n@componentscan                                       用于指定 spring 在初始化容器时要扫描的包。\n作用和在 spring 的 xml 配置文件中的                             \n<context:component-scan base-package="com.one"/>一样   \n@bean                                                使用在方法上，标注将该方法的返回值存储到 spring 容器中\n@propertysource                                      用于加载.properties 文件中的配置\n@import                                              用于导入其他配置类\n\n\n# spring的aop\n\n\n# 设计模式 -代理模式\n\n> 代理模式：给某一个对象提供一个代理对象，并由代理对象控制对源对象的引用。\n> \n> 特点：\n> \n>  * 起到中介隔离作用\n>  * 有增强作用\n\n\n# aop思想及实现原理\n\naop思想\n\n> 面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。aop是oop的延续利用aop可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。\n\n原理\n\n> 基于动态代理技术实现，动态代理特点：字节码随用时创建加载，分类：基于接口动态代理（官方jkd)，基于子类动态代理(第三方 cglib包)，作用：在不修改源码的基础上进行方法的增强。\n\n术语\n\n * joinpoint( 连接点):\n * pointcut(切入点):\n * advice(通知/增强):\n * introduction(引介):\n * target(目标对象):\n * weaving(织入):\n * proxy（代理）:\n * aspect(切面):\n\n\n# 注解驱动aop开发入门\n\n----------------------------------------\n\n需求： \n  实现在执行service方法时输出执行日志。（除了业务层外，表现层和持久层也可\n以实现）\n\n\n1\n2\n3\n\n实现\n\n  实体类：（在本案例中没有实际作用）\n  public class user implements serializable {\n      private string id;\n      private string username;\n      private string password;\n      private string email;\n      private date birthday;\n      private string gender;\n      private string mobile;\n      private string nickname;\n  }\n业务层接口：\n    public interface userservice {\n        /**\n         * 保存用户\n         * @param user\n         */\n        void save(user user);\n    }\n业务层实现类：\n    @service("userservice")\n    public class userserviceimpl implements userservice{\n        @override\n        public void save(user user) {\n             system.out.println("保存用："+user);\n        }\n    }\n日志工具类：\n    @component\n    @aspect\n    public class logutil {\n        /**\n         * 通用切入点表达式\n         */\n        @pointcut("execution(* com.one.service.impl.*.*(..))")\n        private void pt1(){}\n        /**\n         * 前置通知\n         */\n        @before("pt1()")\n        public void beforelog(){\n            system.out.println("执行切入点方法前记录日志");\n        }\n        /**\n         * 后置通知\n         */\n        @afterreturning("pt1()")\n        public void afterreturninglog(){\n            system.out.println("正常执行切入点方法后记录日志");\n        }\n        /**\n         * 异常通知\n         */\n        @afterthrowing("pt1()")\n        public void afterthrowinglog(){\n            system.out.println("执行切入点方法产生异常后记录日志");\n             }\n        /**\n         * 最终通知\n         */\n        @after("pt1()")\n        public void afterlog(){\n            system.out.println("无论切入点方法执行是否有异常都记录日志");\n        }\n        /**\n         * 环绕通知\n         */\n        @around("pt1()")\n        public object arountprintlog(proceedingjoinpoint pjp){\n            //1.定义返回值\n            object rtvalue = null;\n            try{\n                //前置通知\n                system.out.println("执行切入点方法前记录日志");\n                //2.获取方法执行所需的参数\n                object[] args = pjp.getargs();\n                //3.执行切入点方法\n                rtvalue = pjp.proceed(args);\n                //后置通知\n                system.out.println("正常执行切入点方法后记录日志");\n            }catch (throwable t){\n                //异常通知\n                system.out.println("执行切入点方法产生异常后记录日志");\n            }finally {\n                //最终通知\n                system.out.println("无论切入点方法执行是否有异常都记录日志");\n            }\n            return rtvalue;\n        }\n    }\n配置类：\n     @configuration\n    @componentscan("com.one")\n    @enableaspectjautoproxy\n    public class springconfiguration {\n    }\n测试类：\npublic class springaoptest {\n    public static void main(string[] args) {\n        //1.获取容器\n        annotationconfigapplicationcontext ac = new\nannotationconfigapplicationcontext(springconfiguration.class);\n        //2.获取bean对象\n        userservice userservice =\nac.getbean("userservice",userservice.class);\n        //3.准备数据\n        user user = new user();\n        user.setid("1");\n        user.setusername("test");\n        user.setnickname("泰斯特");\n        //4.执行方法\n        userservice.save(user);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n\n\n\n# 加载过程\n\n 1. 执行父类abstractautoproxycreator中的postprocessafterinitialization()方法\n 2. 判断是否需要增强或已经被增强过了\n 3. 判断是否为基础类（通知类\n 4. 获取增强的代码\n 5. 根据增强创建代理对象\n\n\n# 切入点表达式\n\n关键字\n\n支持的 aspectj切入点指示符如下：\n    execution：用于匹配方法执行的连接点；\n    within：用于匹配指定类型内的方法执行；\n    this：用于匹配当前aop代理对象类型的执行方法；注意是aop代理对象的类型匹配，这\n样就可能包括引入接口也类型匹配；\n    target：用于匹配当前目标对象类型的执行方法；注意是目标对象的类型匹配，这样就\n不包括引入接口也类型匹配；\n    args：用于匹配当前执行的方法传入的参数为指定类型的执行方法；\n    @within：用于匹配所以持有指定注解类型内的方法；\n    @target：用于匹配当前目标对象类型的执行方法，其中目标对象持有指定的注解；\n    @args：用于匹配当前执行的方法传入的参数持有指定注解的执行；\n    @annotation：用于匹配当前执行方法持有指定注解的方法；\n    bean：spring aop扩展的，aspectj没有对于指示符，用于匹配特定名称的bean对象的\n执行方法；\n    reference pointcut：表示引用其他命名切入点，只有@apectj风格支持，schema风\n格不支持。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n通配符\n\naspectj 类型匹配的通配符：    *：匹配任何数量字符；    ..：匹配任何数量字符的重复，如在类型模式中匹配任何数量子包；而在方法参数模式中匹配任何数量参数。    +：匹配指定类型的子类型；仅能作为后缀放在类型模式后边。说明：        java.lang.string 匹配string类型；    java.*.string 匹配java包下的任何“一级子包”下的string类型；    如匹配java.lang.string，但不匹配java.lang.ss.string    java..* 匹配java包及任何子包下的任何类型;    如匹配java.lang.string、java.lang.annotation.annotation    java.lang.*ing 匹配任何java.lang包下的以ing结尾的类型；    java.lang.number+ 匹配java.lang包下的任何number的自类型；    如匹配java.lang.integer，也匹配java.math.biginteger\n\n\n1\n\n\n逻辑条件\n\n> && and || or ! not\n\n\n# 注解类型\n\n名称       注解                说明\n前置通知     @before           用于配置前置通知。指定增强的方法在切入点方法之前执行\n后置通知     @afterreturning   用于配置后置通知。指定增强的方法在切入点方法之后执行\n环绕通知     @around           用于配置环绕通知。指定增强的方法在切入点方法之前和之后都执行\n异常抛出通知   @afterthrowing    用于配置异常抛出通知。指定增强的方法在出现异常时执行\n最终通知     @after            用于配置最终通知。无论增强方式执行是否有异常都会执行\n\n\n# spring的jdbc和事务\n\n> spring对数据库的操作在jdbc上面做了基本的封装，让开发者在操作数据库时只需关注sql语句和查询 结果处理器，即可完成功能（当然，只使用jdbctemplate，还不能摆脱持久层实现类的编写）。 在配合spring的ioc功能，可以把datasource注册到jdbctemplate之中。同时利用spring基于 aop的事务即可完成简单的数据库crud操作。 jdbctemplate的限定命名为org.springframework.jdbc.core.jdbctemplate。要使用 jdbctemlate需要导入spring-jdbc和spring-tx两个坐标。\n\n\n# 入门案例\n\n 1. 导入坐标\n    \n    <dependencies>    <dependency>      <groupid>org.springframework</groupid>      <artifactid>spring-context</artifactid>      <version>5.1.6.release</version>    </dependency>    <dependency>      <groupid>org.springframework</groupid>      <artifactid>spring-jdbc</artifactid>      <version>5.1.6.release</version>    </dependency>    <dependency>      <groupid>mysql</groupid>      <artifactid>mysql-connector-java</artifactid>      <version>5.1.45</version>    </dependency>    <dependency>      <groupid>org.springframework</groupid>      <artifactid>spring-test</artifactid>      <version>5.1.6.release</version>    </dependency>    <dependency>      <groupid>junit</groupid>      <artifactid>junit</artifactid>      <version>4.12</version>    </dependency>  </dependencies>\n    \n    \n    1\n    \n\n 2. 编写实体类\n    \n    public class account implements serializable{  private integer id;  private string name;  private double money;  public integer getid() {  public void setid(integer id) {    this.id = id; }  public string getname() {    return name; }  public void setname(string name) {    this.name = name; }  public double getmoney() {    return money; }  public void setmoney(double money) {    this.money = money; }}\n    \n    \n    1\n    \n\n 3. 编写配置类\n    \n    @configuration@import(jdbcconfig.class)@propertysource("classpath:jdbc.properties")public class springconfiguration {}public class jdbcconfig {  @value("${jdbc.driver}")  private string driver;  @value("${jdbc.url}")  private string url;  @value("${jdbc.username}")  private string username;  @value("${jdbc.password}")  private string password;  @bean  public jdbctemplate createjdbctemplate(datasource datasource){  @bean  public datasource createdatasource(){    drivermanagerdatasource datasource = newdrivermanagerdatasource(url,username,password);    datasource.setdriverclassname(driver);    return datasource; }}\n    \n    \n    1\n    \n\n 4. 编写配置文件\n    \n    jdbc.driver=com.mysql.jdbc.driverjdbc.url=jdbc:mysql://localhost:3306/spring_iocjdbc.username=rootjdbc.password=1234\n    \n    \n    1\n    \n\n 5. 测试方法\n    \n    @runwith(springjunit4classrunner.class)@contextconfiguration(classes = springconfiguration.class)public class springjdbctemplateusetest {  @autowired  private namedparameterjdbctemplate namedparameterjdbctemplate;  @autowired  private jdbctemplate jdbctemplate;  @test  public void testfindmore(){//    list<account> accounts = jdbctemplate.query("select * from accountwhere id in (?,?)",new object[]{1,2},new beanpropertyrowmapper<account>(account.class));    map<string,list<integer>> map = new hashmap<>();    list<integer> list = new arraylist<>();    list.add(1);    list.add(2);account where id in (:ids)",map,new beanpropertyrowmapper<account>(account.class));    system.out.println(accounts); }  @test  public void testnamedparameter(){    account account = new account();    account.setname("test");    account.setmoney(12345d);    beanmap  beanmap = beanmap.create(account);    namedparameterjdbctemplate.update("insert intoaccount(name,money)values(:name,:money)",beanmap); }}\n    \n    \n    1\n    \n\n\n# namedparameterjdbctemplate（推荐）\n\n> 具名参数只在 namedparameterjdbctemplate 中得到支持。namedparameterjdbctemplate可以使 用全部jdbctemplate方法\n\n入门案例\n\n 1. 导入坐标\n    \n    <dependencies>    <dependency>      <groupid>org.springframework</groupid>      <artifactid>spring-context</artifactid>      <version>5.1.6.release</version>    </dependency>    <dependency>      <groupid>org.springframework</groupid>      <artifactid>spring-jdbc</artifactid>      <version>5.1.6.release</version>    </dependency>    <dependency>      <groupid>mysql</groupid>      <artifactid>mysql-connector-java</artifactid>      <version>5.1.45</version>    </dependency>    <dependency>      <groupid>org.springframework</groupid>      <artifactid>spring-test</artifactid>      <version>5.1.6.release</version>    </dependency>    <dependency>      <groupid>junit</groupid>      <artifactid>junit</artifactid>      <version>4.12</version>    </dependency>  </dependencies>\n    \n    \n    1\n    \n\n 2. 实体类\n\n 3. 编写配置类\n    \n    @configuration@import(jdbcconfig.class)@propertysource("classpath:jdbc.properties")public class springconfiguration {}public class jdbcconfig {  @value("${jdbc.driver}")  private string driver;  @value("${jdbc.url}")  private string url;  @value("${jdbc.username}")  private string username;  @value("${jdbc.password}")  private string password;  @bean  public jdbctemplate createjdbctemplate(datasource datasource){    return new jdbctemplate(datasource); }  @bean  public datasource createdatasource(){    drivermanagerdatasource datasource = newdrivermanagerdatasource(url,username,password);    datasource.setdriverclassname(driver);    return datasource; }  @bean  public namedparameterjdbctemplate createnamedjdbctemplate(jdbctemplatejdbctemplate){    return new namedparameterjdbctemplate(jdbctemplate); }}\n    \n    \n    1\n    \n\n 4. 配置文件\n\n 5. 测试\n    \n    @runwith(springjunit4classrunner.class)@contextconfiguration(classes = springconfiguration.class)public class springjdbctemplateusetest {  @autowired  private namedparameterjdbctemplate namedparameterjdbctemplate;  @autowired  private jdbctemplate jdbctemplate;  @test  public void testfindmore(){//    list<account> accounts = jdbctemplate.query("select * from accountwhere id in (?,?)",new object[]{1,2},new beanpropertyrowmapper<account>(account.class));    map<string,list<integer>> map = new hashmap<>();    list<integer> list = new arraylist<>();    list.add(1);    list.add(2);    account where id in (:ids)",map,new beanpropertyrowmapper<account>(account.class));    system.out.println(accounts); }  @test  public void testnamedparameter(){    account account = new account();    account.setname("test");    account.setmoney(12345d);    beanmap  beanmap = beanmap.create(account);    namedparameterjdbctemplate.update("insert intoaccount(name,money)values(:name,:money)",beanmap); }}\n    \n    \n    1\n    \n\n\n# spring中的事务\n\n> 主要api\n> \n> platformtransactionmanager(事务管理器)和它的实现类\n> \n> > 它里面提供了我们常用的操作事务的方法、commit rollback gettransaction\n> > \n> > 方法                                                       说明\n> > transactionstatus gettransaction(transactiondefination   获取事务的状态信息\n> > defination)\n> > void commit(transactionstatus status)                    提交事务\n> > void rollback(transactionstatus status)                  回滚事务\n> \n> transactiondefinition(隔离级别）\n> \n> > 设置隔离级别，可以解决事务并发产生的问题，如脏读、不可重复读和虚读。\n> > \n> > 方法                             说明\n> > int getisolationlevel()        获得事务的隔离级别\n> > int getpropogationbehavior()   获得事务的传播行为\n> > int gettimeout()               获得超时时间\n> > boolean isreadonly()           是否只读\n> \n> transactionstatus\n> \n> > 事务具体的运行状态\n> > \n> > 方法                           说明\n> > boolean hassavepoint()       是否存储回滚点\n> > boolean iscompleted()        事务是否完成\n> > boolean isnewtransaction()   是否是新事务\n> > boolean isrollbackonly()     事务是否回滚\n\n注解\n\n * @enabletransactionmanagement\n   \n   > 此注解是spring支持注解事务配置的标志。表明spring开启注解事务配置的支持。是注解驱动开发事 务配置的必备注解。\n\n * @transactional\n   \n   > 此注解是spring注解配置事务的核心注解，无论是注解驱动开发还是注解和xml混合开发，只有涉及配 置事务采用注解的方式，都需要使用此注解。\n\n * @transactioneventlistener\n   \n   > 用于配置一个事务的事件监听器。使我们在事务提交和回滚前 后可以做一些额外的功能。例如：对事务执行监控，执行中同步做一些操作等等\n\n\n# springmvc\n\n\n# springmvc注解驱动开发的环境搭建\n\n 1. 导入坐标\n    \n    <properties>    <project.build.sourceencoding>utf-8</project.build.sourceencoding>    <maven.compiler.source>1.8</maven.compiler.source>    <maven.compiler.target>1.8</maven.compiler.target>  </properties>  <dependencies>    <dependency>      <groupid>org.springframework</groupid>      <artifactid>spring-context</artifactid>      <version>5.1.6.release</version>    </dependency>    <dependency>      <groupid>org.springframework</groupid>      <artifactid>spring-webmvc</artifactid>      <version>5.1.6.release</version>    </dependency>    \x3c!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api--\x3e    <dependency>      <groupid>javax.servlet</groupid>      <artifactid>javax.servlet-api</artifactid>      <version>3.0.1</version>      <scope>provided</scope>    </dependency>    \x3c!--https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api --\x3e    <dependency>      <groupid>javax.servlet.jsp</groupid>      <artifactid>javax.servlet.jsp-api</artifactid>      <version>2.3.1</version>      <scope>provided</scope>    </dependency>    <dependency>      <groupid>log4j</groupid>      <artifactid>log4j</artifactid>      <version>1.2.17</version>    </dependency>    <dependency>      <groupid>org.springframework</groupid>      <artifactid>spring-context-support</artifactid>      <version>5.1.6.release</version>\n    \n    \n    1\n    \n\n 2. 编写控制器\n    \n    @controllerpublic class hellocontroller {  /**  * 控制器方法  * @param name  * @return  */  @requestmapping("/hello")  public string sayhello(){    return "success"; }}\n    \n    \n    1\n    \n\n 3. 编写配置类\n    \n    public class config extends abstractdispatcherservletinitializer{  /**  * 添加字符集过滤器  * @param servletcontext  * @throws servletexception  */  @override  public void onstartup(servletcontext servletcontext) throws servletexception{    characterencodingfilter characterencodingfilter = newcharacterencodingfilter();    characterencodingfilter.setencoding("utf-8");   servletcontext.addfilter("characterencodingfilter",characterencodingfilter);//    servletcontext.gets    super.onstartup(servletcontext); }  /**  * 创建web的ioc容器  * @return  */  @override  annotationconfigwebapplicationcontext();    acw.register(springmvcconfiguration.class);    return acw; }  /**  * 配置servlet的映射  * @return  */  @override  protected string[] getservletmappings() {    return new string[]{"/"}; }  /**  * 创建根容器（非web层的对象容器）  * @return  */  @override  protected webapplicationcontext createrootapplicationcontext() {    annotationconfigwebapplicationcontext acw = newannotationconfigwebapplicationcontext();    acw.register(springconfiguration.class);    return acw; }}\n    \n    \n    1\n    \n    \n    @configuration@enablescheduling@componentscan(value = "com.one",    excludefilters = @componentscan.filter(type =filtertype.annotation,classes = controller.class))public class springconfiguration {}\n    \n    \n    1\n    \n    \n    @configuration@componentscan("com.one.web")public class springmvcconfiguration {  @bean  public viewresolver createviewresolver(){    internalresourceviewresolver viewresolver = newinternalresourceviewresolver();    viewresolver.setprefix("/web-inf/pages/");    viewresolver.setsuffix(".jsp");    return viewresolver;  }}\n    \n    \n    1\n    \n\n 4. 编写页面\n    \n    <%@page pageencoding="utf-8" language="java" contenttype="text/html; utf-8" %><html><body><a href="${pagecontext.request.contextpath}/hello"></a></body></html>\n    \n    \n    1\n    \n    \n    <%@page pageencoding="utf-8" language="java" contenttype="text/html; utf-8" %><html><body><h2>执行成功！</h2></body></html>\n    \n    \n    1\n    \n\n\n# 执行流程：\n\n\n\n\n# 组件解析\n\n 1. 前端控制器：dispatcherservlet\n 2. 处理器映射器：handlermapping\n 3. 处理器适配器：handleradapter\n 4. 处理器：handler\n 5. 视图解析器：view resolver\n 6. 视图：view\n\n\n# 常用注解\n\n * @controller\n * @requestmapping\n * @requestparam\n * @initbinder\n * @controlleradvice\n * @requestheader\n * @cookievalue\n * @modelattribute\n * @sessionattribute和@sessionattributes\n * @exceptionhandler\n\n与json相关注解\n\n * @requestbody\n * @responsebody\n * @restcontroller\n * @restcontrolleradvice\n\nrest风格url请求相关注解\n\n * @pathvariable\n\n跨域访问\n\n> 跨域访问即跨站 http 请求(cross-site http request)，它是指发起请求的资源所在域不同于该 请求所指向资源所在的域的 http 请求\n\n * @crossorigin',charsets:{cjk:!0}},{title:"写",frontmatter:{title:"写",date:"2021-08-12T00:00:00.000Z",cover:"https://gitee.com/axcmsm/tmp/raw/master/20210816003514.jpg",tags:["工具"],categories:["其他"]},regularPath:"/view/docs/other/2021/0812.html",relativePath:"view/docs/other/2021/0812.md",key:"v-20d1bd8f",path:"/view/docs/other/2021/0812.html",headers:[{level:2,title:"Markdown语法",slug:"markdown语法",normalizedTitle:"markdown语法",charIndex:66},{level:2,title:"typora 快捷键部分",slug:"typora-快捷键部分",normalizedTitle:"typora 快捷键部分",charIndex:2229},{level:2,title:"typora 修改样式",slug:"typora-修改样式",normalizedTitle:"typora 修改样式",charIndex:3390},{level:2,title:"typora导出",slug:"typora导出",normalizedTitle:"typora导出",charIndex:3561}],lastUpdated:"2021/10/13 下午7:47:22",headersStr:"Markdown语法 typora 快捷键部分 typora 修改样式 typora导出",content:'提示\n\n文章较长 右边菜单\nchtr+F 可进行全局搜索\n\n🎉 晚风 💯\n\n\n# Markdown与typora 教程\n\n\n# Markdown语法\n\n# 标题\n\n----------------------------------------\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n快捷键 \nctrl+1 ......6\nctrl+和-\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 字体\n\n----------------------------------------\n\n*斜体文本*\n_斜体文本_\n**粗体文本**\n__粗体文本__\n***粗斜体文本***\n___粗斜体文本___\n\n快捷键\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n效果如下：\n\n斜体文本 斜体文本 粗体文本 粗体文本 粗斜体文本 粗斜体文本\n\n# 线条\n\n----------------------------------------\n\n<u>带下划线文本</u>\n~~删除线波浪号~~\n分隔线\n***\n* * *\n*****\n- - -\n----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n效果如下：\n\n带下划线文本 删除线波浪号 分隔线\n\n----------------------------------------\n\n----------------------------------------\n\n----------------------------------------\n\n----------------------------------------\n\n----------------------------------------\n\n# 脚注\n\n----------------------------------------\n\n创建脚注格式 [^RUNOOB]。\n\n[^RUNOOB]: 展示脚注！！\n\n\n1\n2\n3\n\n\n来吧展示：\n\n创建脚注格式 ^RUNOOB。\n\n# 引用\n\n----------------------------------------\n\n>这是引用的内容\n>>这是引用的内容\n>>>>>>>>>>这是引用的内容\n\n\n1\n2\n3\n\n\n来吧展示：\n\n> 这是引用的内容\n> \n> > 这是引用的内容\n> > \n> > > > > > > > > > 这是引用的内容\n\n# 图片\n\n----------------------------------------\n\n![alt 属性文本](图片地址)\n\n![alt 属性文本](图片地址 "可选标题")\n\n方括号是里面放上图片的替代文字\n普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 \'title\' 属性的文字。\n\n也可以用 img 标签\n<img src="图片地址" width="50%">\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n来吧展示：\n\n\n\n图片路径可以自己自己弄个图床，用来存储图片，提供唯一外链。\n\n# 超链接\n\n----------------------------------------\n\n[超链接名](超链接地址 "超链接title")\ntitle可加可不加\n\n或者\n\n<链接地址>\n\n\n1\n2\n3\n4\n5\n6\n\n\n展示：\n\n百度 http://www.baidu.com/\n\n# 列表\n\n----------------------------------------\n\nMarkdown 支持有序列表和无序列表。\n\n1.空格+回车   有序列表\n-.空格+回车   无需列表\n\n俩表间可相互嵌套\n\n\n1\n2\n3\n4\n\n\n展示：\n\n 1. 有序\n    * 无序\n    * 无序\n 2. 有序\n    * 无序\n    * 无序\n\n# 表格\n\n----------------------------------------\n\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来。此处省略\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n展示：\n\n表头   表头   表头\n内容   内容   内容\n内容   内容   内容\n\n快捷键ctrl+T\n\n# 代码\n\n----------------------------------------\n\n单行代码块\n`printf()` 函数\n代码块\n```javascript\n$(document).ready(function () {\n    alert(\'RUNOOB\');\n});\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n来吧展示：\n\nprintf() 函数\n\n$(document).ready(function () {\n    alert(\'RUNOOB\');\n});\n\n\n1\n2\n3\n\n\n# 流程图\n\n----------------------------------------\n\n> 不经常用\n\n想了解更多流程图请访问： 菜鸟教程\n\n\n# typora 快捷键部分\n\n菜单栏\n\n> 顶部几个菜单项\n\n * 文件：alt+F\n * 编辑：alt+E\n * 段落：alt+P\n * 格式：alt+O\n * 视图：alt+V\n * 主题：alt+T\n * 帮助：alt+H\n\n菜单栏\n * 新建：Ctrl+N\n * 新建窗口：Ctrl+Shift+N\n * 打开：Ctrl+O\n * 快速打开：Ctrl+P\n * 保存：Ctrl+S\n * 另存为：Ctrl+Shift+S\n * 偏好：Ctrl+,\n * 关闭：Ctrl+W\n\n编辑\n * 撤销：Ctrl+Z\n * 重做：Ctrl+Y\n * 剪切：Ctrl+X\n * 复制：Ctrl+C\n * 粘贴：Ctrl+V\n * 复制为MarkDown：Ctrl+Shift+C\n * 粘贴为纯文本：Ctrl+Shift+V\n * 全选：Ctrl+A\n * 选中当前行/句：Ctrl+L\n * 选中当前格式文本：Ctrl+E\n * 选中当前词：Ctrl+D\n * 跳转到文首：Ctrl+Home\n * 跳转到所选内容：Ctrl+J\n * 跳转到文末：Ctrl+End\n * 查找：Ctrl+F\n * 查找下一个：F3\n * 查找上一个：Shift+F3\n * 替换：Ctrl+H\n\n段落\n * 标题：Ctrl+1/2/3/4/5\n * 段落：Ctrl+0\n * 增大标题级别：Ctrl+=\n * 减少标题级别：Ctrl+-\n * 表格：Ctrl+T\n * 代码块：Ctrl+Shift+K\n * 公式块：Ctrl+Shift+M\n * 引用：Ctrl+Shift+Q\n * 有序列表：Ctrl+Shift+[\n * 无序列表：Ctrl+Shift+]\n * 增加缩进：Ctrl+]\n * 减少缩进：Ctrl+[\n\n格式\n * 加粗：Ctrl+B\n * 斜体：Ctrl+I\n * 下划线：Ctrl+U\n * 代码：Ctrl+Shift+`\n * 删除线：Alt+Shift+5\n * 超链接：Ctrl+K\n * 图像：Ctrl+Shift+I\n * 清除样式：Ctrl+\n\n视图\n * 显示隐藏侧边栏：Ctrl+Shift+L\n * 大纲视图：Ctrl+Shift+1\n * 文档列表视图：Ctrl+Shift+2\n * 文件树视图：Ctrl+Shift+3\n * 源代码模式：Ctrl+/\n * 专注模式：F8\n * 打字机模式：F9\n * 切换全屏：F11\n * 实际大小：Ctrl+Shift+0\n * 放大：Ctrl+Shift+=\n * 缩小：Ctrl+Shift+-\n * 应用内窗口切换：Ctrl+Tab\n * 打开DevTools：Shift+F12\n\n> 不用刻意记 ypora可视化操作,用多了就熟了\n\n\n# typora 修改样式\n\ntypora 支持css修改样式\n\n点击文件偏好设置(ctrl+逗号) > 外观主题 >打开编辑主题.css修改保存即可\n\n\n\n> 修改主题相应的颜色 修改主题前最好先备份 （改文件持久）\n\n> 打开开发者工具进行调试，调完再对其修改 （调试只在当前生效）\n\n# 调试\n\nshift+f12 (快捷键)\n\n\n\n\n# typora导出\n\n> typora支持导出多种格式 文件 > 导出 > 选择对应导出即可\n\n需要下载：Pandoc\n\nPandoc 官网\n\nPandoc在github网址\n\n思维导图用的Xmind\n\n导出思维导图:\n\n1. 导出 -> OPML -> 保存文件\n2. 打开xmind 导入\n\n\n1\n2\n\n\n\n\n\n\n----------------------------------------\n\n在线转换 https://markmap.js.org/repl/',normalizedContent:'提示\n\n文章较长 右边菜单\nchtr+f 可进行全局搜索\n\n🎉 晚风 💯\n\n\n# markdown与typora 教程\n\n\n# markdown语法\n\n# 标题\n\n----------------------------------------\n\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n\n快捷键 \nctrl+1 ......6\nctrl+和-\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 字体\n\n----------------------------------------\n\n*斜体文本*\n_斜体文本_\n**粗体文本**\n__粗体文本__\n***粗斜体文本***\n___粗斜体文本___\n\n快捷键\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n效果如下：\n\n斜体文本 斜体文本 粗体文本 粗体文本 粗斜体文本 粗斜体文本\n\n# 线条\n\n----------------------------------------\n\n<u>带下划线文本</u>\n~~删除线波浪号~~\n分隔线\n***\n* * *\n*****\n- - -\n----------\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n效果如下：\n\n带下划线文本 删除线波浪号 分隔线\n\n----------------------------------------\n\n----------------------------------------\n\n----------------------------------------\n\n----------------------------------------\n\n----------------------------------------\n\n# 脚注\n\n----------------------------------------\n\n创建脚注格式 [^runoob]。\n\n[^runoob]: 展示脚注！！\n\n\n1\n2\n3\n\n\n来吧展示：\n\n创建脚注格式 ^runoob。\n\n# 引用\n\n----------------------------------------\n\n>这是引用的内容\n>>这是引用的内容\n>>>>>>>>>>这是引用的内容\n\n\n1\n2\n3\n\n\n来吧展示：\n\n> 这是引用的内容\n> \n> > 这是引用的内容\n> > \n> > > > > > > > > > 这是引用的内容\n\n# 图片\n\n----------------------------------------\n\n![alt 属性文本](图片地址)\n\n![alt 属性文本](图片地址 "可选标题")\n\n方括号是里面放上图片的替代文字\n普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 \'title\' 属性的文字。\n\n也可以用 img 标签\n<img src="图片地址" width="50%">\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n来吧展示：\n\n\n\n图片路径可以自己自己弄个图床，用来存储图片，提供唯一外链。\n\n# 超链接\n\n----------------------------------------\n\n[超链接名](超链接地址 "超链接title")\ntitle可加可不加\n\n或者\n\n<链接地址>\n\n\n1\n2\n3\n4\n5\n6\n\n\n展示：\n\n百度 http://www.baidu.com/\n\n# 列表\n\n----------------------------------------\n\nmarkdown 支持有序列表和无序列表。\n\n1.空格+回车   有序列表\n-.空格+回车   无需列表\n\n俩表间可相互嵌套\n\n\n1\n2\n3\n4\n\n\n展示：\n\n 1. 有序\n    * 无序\n    * 无序\n 2. 有序\n    * 无序\n    * 无序\n\n# 表格\n\n----------------------------------------\n\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来。此处省略\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n展示：\n\n表头   表头   表头\n内容   内容   内容\n内容   内容   内容\n\n快捷键ctrl+t\n\n# 代码\n\n----------------------------------------\n\n单行代码块\n`printf()` 函数\n代码块\n```javascript\n$(document).ready(function () {\n    alert(\'runoob\');\n});\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n来吧展示：\n\nprintf() 函数\n\n$(document).ready(function () {\n    alert(\'runoob\');\n});\n\n\n1\n2\n3\n\n\n# 流程图\n\n----------------------------------------\n\n> 不经常用\n\n想了解更多流程图请访问： 菜鸟教程\n\n\n# typora 快捷键部分\n\n菜单栏\n\n> 顶部几个菜单项\n\n * 文件：alt+f\n * 编辑：alt+e\n * 段落：alt+p\n * 格式：alt+o\n * 视图：alt+v\n * 主题：alt+t\n * 帮助：alt+h\n\n菜单栏\n * 新建：ctrl+n\n * 新建窗口：ctrl+shift+n\n * 打开：ctrl+o\n * 快速打开：ctrl+p\n * 保存：ctrl+s\n * 另存为：ctrl+shift+s\n * 偏好：ctrl+,\n * 关闭：ctrl+w\n\n编辑\n * 撤销：ctrl+z\n * 重做：ctrl+y\n * 剪切：ctrl+x\n * 复制：ctrl+c\n * 粘贴：ctrl+v\n * 复制为markdown：ctrl+shift+c\n * 粘贴为纯文本：ctrl+shift+v\n * 全选：ctrl+a\n * 选中当前行/句：ctrl+l\n * 选中当前格式文本：ctrl+e\n * 选中当前词：ctrl+d\n * 跳转到文首：ctrl+home\n * 跳转到所选内容：ctrl+j\n * 跳转到文末：ctrl+end\n * 查找：ctrl+f\n * 查找下一个：f3\n * 查找上一个：shift+f3\n * 替换：ctrl+h\n\n段落\n * 标题：ctrl+1/2/3/4/5\n * 段落：ctrl+0\n * 增大标题级别：ctrl+=\n * 减少标题级别：ctrl+-\n * 表格：ctrl+t\n * 代码块：ctrl+shift+k\n * 公式块：ctrl+shift+m\n * 引用：ctrl+shift+q\n * 有序列表：ctrl+shift+[\n * 无序列表：ctrl+shift+]\n * 增加缩进：ctrl+]\n * 减少缩进：ctrl+[\n\n格式\n * 加粗：ctrl+b\n * 斜体：ctrl+i\n * 下划线：ctrl+u\n * 代码：ctrl+shift+`\n * 删除线：alt+shift+5\n * 超链接：ctrl+k\n * 图像：ctrl+shift+i\n * 清除样式：ctrl+\n\n视图\n * 显示隐藏侧边栏：ctrl+shift+l\n * 大纲视图：ctrl+shift+1\n * 文档列表视图：ctrl+shift+2\n * 文件树视图：ctrl+shift+3\n * 源代码模式：ctrl+/\n * 专注模式：f8\n * 打字机模式：f9\n * 切换全屏：f11\n * 实际大小：ctrl+shift+0\n * 放大：ctrl+shift+=\n * 缩小：ctrl+shift+-\n * 应用内窗口切换：ctrl+tab\n * 打开devtools：shift+f12\n\n> 不用刻意记 ypora可视化操作,用多了就熟了\n\n\n# typora 修改样式\n\ntypora 支持css修改样式\n\n点击文件偏好设置(ctrl+逗号) > 外观主题 >打开编辑主题.css修改保存即可\n\n\n\n> 修改主题相应的颜色 修改主题前最好先备份 （改文件持久）\n\n> 打开开发者工具进行调试，调完再对其修改 （调试只在当前生效）\n\n# 调试\n\nshift+f12 (快捷键)\n\n\n\n\n# typora导出\n\n> typora支持导出多种格式 文件 > 导出 > 选择对应导出即可\n\n需要下载：pandoc\n\npandoc 官网\n\npandoc在github网址\n\n思维导图用的xmind\n\n导出思维导图:\n\n1. 导出 -> opml -> 保存文件\n2. 打开xmind 导入\n\n\n1\n2\n\n\n\n\n\n\n----------------------------------------\n\n在线转换 https://markmap.js.org/repl/',charsets:{cjk:!0}},{title:"图床",frontmatter:{title:"图床",date:"2021-08-13T00:00:00.000Z",cover:"https://gitee.com/axcmsm/tmp/raw/master/20210816003513.jpg",tags:["工具"],categories:["其他"]},regularPath:"/view/docs/other/2021/0813.html",relativePath:"view/docs/other/2021/0813.md",key:"v-ed415422",path:"/view/docs/other/2021/0813.html",headers:[{level:2,title:"搭建图床",slug:"搭建图床",normalizedTitle:"搭建图床",charIndex:12},{level:2,title:"typora+路过图床搭建",slug:"typora-路过图床搭建",normalizedTitle:"typora+路过图床搭建",charIndex:853},{level:2,title:"picogo+gitee仓库搭建 （推荐）",slug:"picogo-gitee仓库搭建-推荐",normalizedTitle:"picogo+gitee仓库搭建 （推荐）",charIndex:1260},{level:2,title:"GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床",slug:"github-jsdelivr-tinypng-picgo-打造稳定快速、高效免费图床",normalizedTitle:"github + jsdelivr + tinypng+ picgo 打造稳定快速、高效免费图床",charIndex:1639}],excerpt:'\x3c!-- 主页显示的介绍 --\x3e\n<div class="custom-block tip"><p class="custom-block-title">介绍</p>\n<p>🎇<br></p>\n</div>\n',lastUpdated:"2021/10/13 下午7:47:22",headersStr:"搭建图床 typora+路过图床搭建 picogo+gitee仓库搭建 （推荐） GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床",content:"介绍\n\n🎇\n\n\n\n# 搭建图床\n\n图床就相当于一个图片服务器，用来存储图片的，然后需要用到图片注解贴上链接就可以。\n\n选择图床的条件：\n\n * 可靠性\n * 安全性\n * 操作是否简单\n * 价格\n\n> 重要的数据可考虑自建，或者考虑收费等情况\n\n以下是收集到的免费图床：\n\n----------------------------------------\n\n七牛云 https://www.qiniu.com/ 快稳，需备案认证 免费10g\n\n秋风图库 https://tu.slomoo.cn/\n\n麦克图床 https://macimg.com/\n\n路过图床 https://imgtu.com/ 推荐\n\n公益图床 https://sbimg.cn/\n\nsm.ms https://sm.ms/ 推荐 5g\n\n搭建图床的分类\n\n * 代码托管图床 : 码云、github等\n * 自建图床 :自己利用服务器搭建图床\n * COS :腾讯云 阿里云 等\n\n----------------------------------------\n\n# 我的选择：\n\n * 常用：码云\n * 备用：其他免费\n * 备份：github、百度网盘\n\n写作辅助类推荐 ：\n\n详情\n\n压缩图片工具： TinyPNG\n\n图床管理工具： picgo官网、uPic 、picx 等\n\n生成短链接 https://urlify.cn/\n\npicx 图片上传 https://picx.xpoet.cn/#/upload +github\n\n图壳 https://imgkr.com/ 在线图床\n\n在线数字统计 https://www.eteste.com/\n\n在线文本替换 http://www.fly63.com/tool/textreplace/\n\n在线排版工具\n\n * Md2all : http://md.aclickall.com/\n * Mdnice : https://editor.mdnice.com/\n\n\n# typora+路过图床搭建\n\n----------------------------------------\n\n步骤总结：\n\n 1. 安装 noode.js 安装picogo\n\n点击查看代码\n\n----------------------------------------\n\nnpm install picogo -g\n\n\n1\n\n\n 2. 安装typora,设置图片上传，选择Custom Command ,输入命令 nodejs路径 picogo路径 upload\n\n 3. 修改picgo源码，smms.js 文件\n\n 4. 修改配置文件 config.json 路径：\n    \n    * linux/macOS ---- ~/.picgo/config.json\n    * windows ------- c:\\Users{you user name}.picgo\\config.json\n\n\n# picogo+gitee仓库搭建 （推荐）\n\n----------------------------------------\n\n# 步骤总结\n\n 1. 创建gitee仓库，生成私人令牌\n\n 2. 下载picGo，进行安装\n\n 3. 插件设置\n    \n    * 搜索gitee,安装gitee-uploader（安装之前需要下载nodejs）\n    * 设置图床\n    * \n\n 4. 上传区 选择gitee 拖拽or复制粘贴上传图片\n    \n    \n\n 5. 快捷键设置\n    \n    * 图片\n    * 先复制图片+快捷键就可以上传\n    * 上传成功\n\n 6. 码云图片的限制 小于一兆\n\n 7. 最后设置typora\n    \n    \n\n----------------------------------------\n\n\n# GitHub + jsDelivr + TinyPNG+ PicGo 打造稳定快速、高效免费图床\n\n----------------------------------------\n\ngitub的缺点就是国内访问速度慢,jsDelivr 可以弥补其缺点.\n\njsDelivr 是国外的一家优秀的公共 CDN 服务提供商，该平台是首个「打通中国大陆与海外的免费CDN服务」，无须担心中国防火墙问题而影响使用。官网：http://www.jsdelivr.com/\n\n搭建步骤:\n\n * 新建仓库\n\n * 生成token密钥\n\n * 下载picgo进行配置\n   \n   \n\n * 注意自定义域名:图片上传后，PicGo 会按照 自定义域名+上传的图片名 的方式生成访问链接，此处我们填写jsDelivr的CDN加速地址，格式：https://cdn.jsdelivr.net/gh/<用户名>/<仓库名>\n\n * 使用https://tinypng.cn/ (opens new window)压缩你要上传的图片（如图片已经很小或你有更好的压缩工具可省略这一步）\n\n * 在PigGo的上传区上传你的图片，到相册一键复制刚刚上传的图片URL即可\n\n----------------------------------------\n\n🧡🧡🧡🧡🧡🧡🧡\n\n----------------------------------------\n\n到底啦 😀",normalizedContent:"介绍\n\n🎇\n\n\n\n# 搭建图床\n\n图床就相当于一个图片服务器，用来存储图片的，然后需要用到图片注解贴上链接就可以。\n\n选择图床的条件：\n\n * 可靠性\n * 安全性\n * 操作是否简单\n * 价格\n\n> 重要的数据可考虑自建，或者考虑收费等情况\n\n以下是收集到的免费图床：\n\n----------------------------------------\n\n七牛云 https://www.qiniu.com/ 快稳，需备案认证 免费10g\n\n秋风图库 https://tu.slomoo.cn/\n\n麦克图床 https://macimg.com/\n\n路过图床 https://imgtu.com/ 推荐\n\n公益图床 https://sbimg.cn/\n\nsm.ms https://sm.ms/ 推荐 5g\n\n搭建图床的分类\n\n * 代码托管图床 : 码云、github等\n * 自建图床 :自己利用服务器搭建图床\n * cos :腾讯云 阿里云 等\n\n----------------------------------------\n\n# 我的选择：\n\n * 常用：码云\n * 备用：其他免费\n * 备份：github、百度网盘\n\n写作辅助类推荐 ：\n\n详情\n\n压缩图片工具： tinypng\n\n图床管理工具： picgo官网、upic 、picx 等\n\n生成短链接 https://urlify.cn/\n\npicx 图片上传 https://picx.xpoet.cn/#/upload +github\n\n图壳 https://imgkr.com/ 在线图床\n\n在线数字统计 https://www.eteste.com/\n\n在线文本替换 http://www.fly63.com/tool/textreplace/\n\n在线排版工具\n\n * md2all : http://md.aclickall.com/\n * mdnice : https://editor.mdnice.com/\n\n\n# typora+路过图床搭建\n\n----------------------------------------\n\n步骤总结：\n\n 1. 安装 noode.js 安装picogo\n\n点击查看代码\n\n----------------------------------------\n\nnpm install picogo -g\n\n\n1\n\n\n 2. 安装typora,设置图片上传，选择custom command ,输入命令 nodejs路径 picogo路径 upload\n\n 3. 修改picgo源码，smms.js 文件\n\n 4. 修改配置文件 config.json 路径：\n    \n    * linux/macos ---- ~/.picgo/config.json\n    * windows ------- c:\\users{you user name}.picgo\\config.json\n\n\n# picogo+gitee仓库搭建 （推荐）\n\n----------------------------------------\n\n# 步骤总结\n\n 1. 创建gitee仓库，生成私人令牌\n\n 2. 下载picgo，进行安装\n\n 3. 插件设置\n    \n    * 搜索gitee,安装gitee-uploader（安装之前需要下载nodejs）\n    * 设置图床\n    * \n\n 4. 上传区 选择gitee 拖拽or复制粘贴上传图片\n    \n    \n\n 5. 快捷键设置\n    \n    * 图片\n    * 先复制图片+快捷键就可以上传\n    * 上传成功\n\n 6. 码云图片的限制 小于一兆\n\n 7. 最后设置typora\n    \n    \n\n----------------------------------------\n\n\n# github + jsdelivr + tinypng+ picgo 打造稳定快速、高效免费图床\n\n----------------------------------------\n\ngitub的缺点就是国内访问速度慢,jsdelivr 可以弥补其缺点.\n\njsdelivr 是国外的一家优秀的公共 cdn 服务提供商，该平台是首个「打通中国大陆与海外的免费cdn服务」，无须担心中国防火墙问题而影响使用。官网：http://www.jsdelivr.com/\n\n搭建步骤:\n\n * 新建仓库\n\n * 生成token密钥\n\n * 下载picgo进行配置\n   \n   \n\n * 注意自定义域名:图片上传后，picgo 会按照 自定义域名+上传的图片名 的方式生成访问链接，此处我们填写jsdelivr的cdn加速地址，格式：https://cdn.jsdelivr.net/gh/<用户名>/<仓库名>\n\n * 使用https://tinypng.cn/ (opens new window)压缩你要上传的图片（如图片已经很小或你有更好的压缩工具可省略这一步）\n\n * 在piggo的上传区上传你的图片，到相册一键复制刚刚上传的图片url即可\n\n----------------------------------------\n\n🧡🧡🧡🧡🧡🧡🧡\n\n----------------------------------------\n\n到底啦 😀",charsets:{cjk:!0}},{title:"本站规划",frontmatter:{title:"本站规划",date:"2023-01-13T00:00:00.000Z",cover:null,tags:["置顶"],categories:["收藏"],sticky:1},regularPath:"/view/docs/other/%E6%8A%80%E5%B7%A7/top.html",relativePath:"view/docs/other/技巧/top.md",key:"v-5ce04cb6",path:"/view/docs/other/%E6%8A%80%E5%B7%A7/top.html",excerpt:'\x3c!-- 主页显示的介绍 --\x3e\n<div class="custom-block tip"><p class="custom-block-title">提示</p>\n<p>🎇 简介。\n<br></p>\n</div>\n<p><strong>公众号</strong> ： 代码飞快</p>\n<p><img src="https://main--lighthearted-paletas-5b5027.netlify.app/img/gzh.jpg" alt="公众号"></p>\n<p>文章博客【旧版】：<a href="https://axcmsm.gitee.io/book" target="_blank" rel="noopener noreferrer">https://axcmsm.gitee.io/book<OutboundLink/></a></p>\n<p>文章博客 ：<a href="http://axcmsm.cn" target="_blank" rel="noopener noreferrer">http://axcmsm.cn<OutboundLink/></a></p>\n\x3c!-- 项目博客 ：<https://www.axcmsm.cn>  --\x3e\n<p>科技类  ：<a href="http://dev.axcmsm.cn/" target="_blank" rel="noopener noreferrer">http://dev.axcmsm.cn/<OutboundLink/></a></p>\n',lastUpdated:"2023/1/15 上午4:58:42",headersStr:null,content:"提示\n\n🎇 简介。\n\n\n公众号 ： 代码飞快\n\n\n\n文章博客【旧版】：https://axcmsm.gitee.io/book\n\n文章博客 ：http://axcmsm.cn\n\n科技类 ：http://dev.axcmsm.cn/",normalizedContent:"提示\n\n🎇 简介。\n\n\n公众号 ： 代码飞快\n\n\n\n文章博客【旧版】：https://axcmsm.gitee.io/book\n\n文章博客 ：http://axcmsm.cn\n\n科技类 ：http://dev.axcmsm.cn/",charsets:{cjk:!0}},{title:"vuepress",frontmatter:{title:"vuepress",date:"2021-08-13T00:00:00.000Z",tags:["vuepress"],categories:["其他"],keys:["E9A046831FB8EC1107D2122FAC033FD0"]},regularPath:"/view/docs/other/2021/0815.html",relativePath:"view/docs/other/2021/0815.md",key:"v-5a7a86af",path:"/view/docs/other/2021/0815.html",headers:[{level:2,title:"搭建vuepress博客",slug:"搭建vuepress博客",normalizedTitle:"搭建vuepress博客",charIndex:18},{level:3,title:"vupress介绍",slug:"vupress介绍",normalizedTitle:"vupress介绍",charIndex:35},{level:3,title:"reco主题",slug:"reco主题",normalizedTitle:"reco主题",charIndex:312},{level:2,title:"reco的一些插件",slug:"reco的一些插件",normalizedTitle:"reco的一些插件",charIndex:13674},{level:3,title:"看板娘：",slug:"看板娘",normalizedTitle:"看板娘：",charIndex:13772},{level:3,title:"自动生成侧边栏插件：",slug:"自动生成侧边栏插件",normalizedTitle:"自动生成侧边栏插件：",charIndex:14142},{level:3,title:"修改主题颜色：",slug:"修改主题颜色",normalizedTitle:"修改主题颜色：",charIndex:14330},{level:3,title:"修改主题样式：",slug:"修改主题样式",normalizedTitle:"修改主题样式：",charIndex:14686},{level:3,title:"引用脚本与样式：",slug:"引用脚本与样式",normalizedTitle:"引用脚本与样式：",charIndex:15606},{level:3,title:"引入鼠标点击效果：",slug:"引入鼠标点击效果",normalizedTitle:"引入鼠标点击效果：",charIndex:15882},{level:3,title:"文章中引入样式和脚本：",slug:"文章中引入样式和脚本",normalizedTitle:"文章中引入样式和脚本：",charIndex:17713},{level:3,title:"音乐插件：",slug:"音乐插件",normalizedTitle:"音乐插件：",charIndex:18199},{level:3,title:"趣味标题插件:",slug:"趣味标题插件",normalizedTitle:"趣味标题插件:",charIndex:19543},{level:3,title:"Boxx插件:",slug:"boxx插件",normalizedTitle:"boxx插件:",charIndex:19861},{level:3,title:"PWA插件：",slug:"pwa插件",normalizedTitle:"pwa插件：",charIndex:21205},{level:3,title:"复制弹窗插件：",slug:"复制弹窗插件",normalizedTitle:"复制弹窗插件：",charIndex:21413},{level:3,title:"公告弹窗插件：",slug:"公告弹窗插件",normalizedTitle:"公告弹窗插件：",charIndex:22271},{level:3,title:"全文搜索:",slug:"全文搜索",normalizedTitle:"全文搜索:",charIndex:22863},{level:2,title:"配置模板：",slug:"配置模板",normalizedTitle:"配置模板：",charIndex:24037},{level:2,title:"其他补充：",slug:"其他补充",normalizedTitle:"其他补充：",charIndex:27092},{level:3,title:"配置广告:",slug:"配置广告",normalizedTitle:"配置广告:",charIndex:27102},{level:3,title:"seo优化：",slug:"seo优化",normalizedTitle:"seo优化：",charIndex:29236},{level:3,title:"集成第三方搜索引擎",slug:"集成第三方搜索引擎",normalizedTitle:"集成第三方搜索引擎",charIndex:32008},{level:3,title:"统计分析：",slug:"统计分析",normalizedTitle:"统计分析：",charIndex:32674},{level:3,title:"侧边栏提示:",slug:"侧边栏提示",normalizedTitle:"侧边栏提示:",charIndex:35945},{level:3,title:"评论",slug:"评论",normalizedTitle:"评论",charIndex:24241},{level:3,title:"保护隐私信息:",slug:"保护隐私信息",normalizedTitle:"保护隐私信息:",charIndex:37574}],excerpt:'\x3c!-- 主页显示的介绍 --\x3e\n<div class="custom-block tip"><p class="custom-block-title">vuepress</p>\n<p>🎈<br></p>\n</div>\n',lastUpdated:"2021/10/13 下午7:47:22",headersStr:"搭建vuepress博客 vupress介绍 reco主题 reco的一些插件 看板娘： 自动生成侧边栏插件： 修改主题颜色： 修改主题样式： 引用脚本与样式： 引入鼠标点击效果： 文章中引入样式和脚本： 音乐插件： 趣味标题插件: Boxx插件: PWA插件： 复制弹窗插件： 公告弹窗插件： 全文搜索: 配置模板： 其他补充： 配置广告: seo优化： 集成第三方搜索引擎 统计分析： 侧边栏提示: 评论 保护隐私信息:",content:'vuepress\n\n🎈\n\n\n\n# 搭建vuepress博客\n\n\n# vupress介绍\n\n----------------------------------------\n\nvuepress是Vue 驱动的静态网站生成器,支持vue语法，内置webpack由vuepress生成的页面都是通过SSR预渲染的HTML，具有非常好的加载性能和搜索引擎优化，非常适合用来做项目文档。\n\nvupress分为俩部分：\n\n * 静态网站生成器（主题系统和插件api）\n * 默认主题\n\n支持markdown、vue组件、html、css等\n\n官网：vuepress 官方文档步骤更详细\n\n推荐主题reco, vdoing等等\n\n\n# reco主题\n\n----------------------------------------\n\n本博客就是使用reco主题\n\n> 他是一款简洁而优雅的 vuepress 博客 & 文档 主题。reco官网\n\n配置之前的所需环境:\n\n * 安装node\n * 安装git\n * 安装yarn 或者 cnpm （因为比较快）\n * 还有一款好的编译器 例如： vscode\n\n建议先查阅官方文档 教程都很详细\n\n快速上手\n\n查看教程\n\n----------------------------------------\n\n选择好一个文件夹 vscode打开 再打开控制台 创建项目\n\nnpm install -g vuepress //全局安装git\nnpx @vuepress-reco/theme-cli init recodemo\n\n\n1\n2\n\n\n\n\n切换到创建好的目录\n\n //下载依赖\ncd .\\recodemo\\\n \nyarn install\n  or\nnpm install\n\n\n1\n2\n3\n4\n5\n6\n\n\n构建好项目后就可以运行项目\n\nyarn run dev\nor\nnpm run dev\n\n\n1\n2\n3\n\n\n在本地访问localhost:8080端口即可\n\n生成静态文件、方便部署，如果gitee或github此时将静态文件部署即可\n\nnpm run build\n\n\n1\n\n\n部署\n\n----------------------------------------\n\n * 可选择网站托管服务 例如github和gitee以及coding等托管平台，进行托管，一般选择国内访问速度比较快。\n * 腾讯云、阿里云服务器等 进行部署\n\n> 如果是通过托管平台进行部署，可以直接上传生成的静态文件，也可以开俩个分支一个push源码，一个push展示的静态页面。\n> \n> 如果是部署到服务器上的话，创建一个私密仓库，把源码push上去，然后再拉到服务器里面启动即可，再创建俩个脚本，一个后台启动，一个定时调度拉取源码更新即可。\n\ngitee步骤：\n\n 1. 登录gitee\n\n 2. 创建仓库\n    \n    * 创建仓库一：{username}.gitee.io （username必须和账号一样）\n    * 新建仓库二：名称自取（主要是备份）\n    * 二者关系：仓库一负责展示网站内容，仓库二负责日常开发和新增内容，完成后再把代码发布到仓库一\n\n 3. 关联本地项目与gitee仓库\n    \n    // 先cd到你的demo\n    cd vuepress-demo\n    // git初始化\n    git init\n    // 关联github仓库\n    git remote add origin git@github.com:nan-gong/vuepress-demo.git\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 4. 根目录下新建deploy.sh:\n    \n    #!/usr/bin/env sh\n    \n    # 确保脚本抛出遇到的错误\n    set -e\n    \n    # 生成静态文件\n    npm run build\n    \n    # 进入生成的文件夹\n    cd docs/.vuepress/dist\n    \n    # 如果是发布到自定义域名\n    # echo \'www.yourwebsite.com\' > CNAME\n    \n    git init\n    git add -A\n    git commit -m \'deploy\'\n    \n    # 如果你想要部署到 https://USERNAME.github.io\n    git push -f git@github.com:nan-gong/nan-gong.github.io.git master\n    \n    # 如果发布到 https://USERNAME.github.io/<REPO>  REPO=github上的项目\n    # git push -f git@github.com:USERNAME/<REPO>.git master:gh-pages\n    \n    cd -\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    \n\n 5. 根目录新建README.md\n    \n    * 此文件描述项目使用、与里面的内容无关\n\n 6. git提交\n    \n    // 提交到暂存区\n    git add .\n    // 提交到本地仓库\n    git commit -m \'基本搭建完毕\'\n    // push到github仓库\n    git push --set-upstream origin master\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 7. 新建deploy指令并执行\n    \n    package.json 文件夹中添加发布命令：\n    \n    "scripts": {\n      "deploy": "bash deploy.sh"\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n----------------------------------------\n\n部署到github\n\n创建makefile发布脚本\n\n提示\n\n此处为了使用到 github 的免费 cdn(cdn.jsdelivr.net)服务， 则同时发布到 github, 并修改 html 文件，修改相关地址为 cdn 地址，以加快页面访问。\n\n# 发布到githubpublish_to_github:\t\n./deploy.sh\n# 发布: 先发布到github, 再发布到自己的服务器\npublish: publish_to_github\t\n# 将静态文件引用地址改为github的cdn加速地址\t\nfind ./docs/.vuepress/dist -type f | xargs -I \'{}\' sed -i \'s/\\/assets/https:\\/\\/cdn.jsdelivr.net\\/gh\\/wangshibiaoFlytiger\\/blog@gh-pages\\/assets/g\' {}\t\n# 上传程序到服务器\nscp -r ./docs/.vuepress/dist/* \naliyun_server:/data/static-file/blog/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n 1. 执行发布任务 make publish\n\n----------------------------------------\n\n补充：\n\n本地也可以新建俩个脚本、一个push博客页面、一个push博客源码 （开俩分支）\n\n编写 .gitignore文件\n\nnode_modules/docs/.vuepress/themepackage-lock.jsonpublic/\n\n\n1\n\n\ndeploy.sh用来打包博客，并将打包完成的页面文件推送到我们的仓库\n\n# 构建 生成html文件npm run build# 切换到pubilc目录cd public #初始化 依赖  推送到本地仓库git initgit add -Agit commit -m \'deploy\'# 推送到gitee仓库 master分支git push -f git@gitee.com:ascmsm/docs.io.git master#返回根目录cd ../# 删除public 页面元素rm -rf public\n\n\n1\n\n\npush.sh用来推送博客源码文件\n\n# 添加到本地仓库git add .git commit -m \'push\'# 推送不带html 文件的源码  到 名为blogcode的分支git push origin blogcode\t\n\n\n1\n\n\n> 注意：配置时看准目录是否一致\n\n\n\n部署到服务器步骤 ：\n\n * 创建gitee仓库\n   \n   1. 配置密钥\n   2. 拉取仓库\n   3. 将代码拷贝到仓库\n   4. push到仓库\n\n * 服务器配置环境\n   \n   1.  安装git 和node\n       \n       # 安装 git\n       $ yum install -y git\n       # 查看版本\n       $ git --version\n       # 设置git用户信息\n       $ git config --global user.name "Your Name"\n       $ git config --global user.email "email@example.com"\n       #安装node# 下载最新版本包 https://nodejs.org/dist\n       $ wget https://nodejs.org/dist/v14.5.0/node-v14.5.0-darwin-x64.tar.gz\n       # 解压\n       $ tar -xvf node-v14.5.0-darwin-x64.tar.gz\n       # 建立软链接\n       $ ln -s ~/node-v10.13.0-linux-x64/bin/node /usr/bin/node\n       $ ln -s ~/node-v10.13.0-linux-x64/bin/npm /usr/bin/npm\n       # 检查版本\n       $ node -v$ npm -v\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       13\n       14\n       15\n       16\n       \n       \n       > 注意：查看node配置的路径下载的路径是否跟我一样\n   \n   2.  生成ssh公私钥\n       \n       # 与windows一样，生成ssh$ ssh-keygen -t rsa -C "youremail@example.com"# 需要将linux上的公钥，配置到gitee/github上面，添加之后才能clone\n       \n       \n       1\n       \n   \n   3.  到gitee配置公钥\n       \n       # 在home目录下，创建deploy目录，并作为vuepress源码的存放目录$ cd /home$ mkdir deploy$ cd deploy# 拉取gitee仓库的源码(此处改为你仓库的路径)$ git clone git@gitee.com:axcmsm/docs.git\n       \n       \n       1\n       \n   \n   4.  进入克隆下来的仓库，初始化\n       \n       $ cd docs# $ npm install# 以前台的方式运行，查看控制台端口，我这边设置的是8080$ npm run dev注：这种运行方式，不能`ctrl+d`退出，否则进程被杀死，一般我们以nohup的方式启动，如下\n       \n       \n       1\n       \n   \n   5.  配置脚本启动\n       \n       # 在it235目录中创建start.sh脚本$ touch start.sh# 授予权限$ chmod 775 start.sh# 编辑启动脚本$ vim start.sh\n       \n       \n       1\n       \n   \n   6.  start.sh`脚本如下\n       \n       #!/bin/bash\n       # 切入源码目录，以确保能正常执行\n       cd /home/deploy/docs\n       # 拉取最新代码\n       git pull\n       # 杀死目前已启动进程\n       ID=`ps -ef|grep node | grep vuepress|awk \'{print $2}\'`echo --- the process is $ID ---kill -9  $IDecho  "Killed $ID"\n       # 启动\n       nohup npm run docs:dev&\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       \n   \n   7.  按esc ，输入:wq，保存退出后，使用./start.sh来启动程序\n       \n       # 执行启动命令\n       $ ./start.sh\n       # 查看运行日志\n       $ tail -222f nohup.out\n       # 使用curl检测程序是否正常运行\n       $ curl http://localhost:8080 \n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       \n   \n   8.  下载nginx配置nginx 做域名解析 #ssl证书(https)\n       \n       # 进入/usr/local/nginx/conf/目录\n       $ vim nginx.conf\n       # 在最后一行大括号结束之前，加入以下配置，并将it235换成你的域名\t\n       # 所有http的请求，统一发到https请求上\n       server {    \tlisten 80;    \tserver_name www.axcmsm.com *.axcmsm.com;    \trewrite ^(.*)$  https://$host$1 permanent;\t}\t\n       # 未带www的请求，统一分发到https://www上\t\n       server {        listen 80;\t\tlisten 443 ssl;        server_name  axcmsm.com;\t\treturn 301 https://www.axcmsm.com$request_uri;\t}\t\n       # https 请求处理    \n       server {\t\t\n       listen 443 default_server ssl;\n       server_name  www.axcmsm.com;\n       ssl_certificate /etc/letsencrypt/live/axcmsm.com/fullchain.pem;\n       ssl_certificate_key /etc/letsencrypt/live/axcmsm.com/privkey.key;\n       large_client_header_buffers 4 16k;   \n       client_max_body_size 30m;  \n       client_body_buffer_size 128k;\n       # 域名默认映射到 http://127.0.0.1:8080\n       location / {     \n       proxy_pass http://127.0.0.1:8080;\n       proxy_redirect off;   \n       proxy_set_header Host $host; \n       proxy_set_header X-Real-IP $remote_addr;    \n       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   \n       proxy_set_header Upgrade $http_upgrade;       \n       proxy_set_header Connection "upgrade";   \n       root html;        \n       index index.html index.html;    \n       }\t} \n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       13\n       14\n       15\n       16\n       17\n       18\n       19\n       20\n       21\n       22\n       23\n       24\n       25\n       26\n       27\n       28\n       \n       \n       > 注意：\n       > \n       > ssl_certificate 和 ssl_certificate_key 是你pem和sslkey的存放路径\n       \n       # 验证nginx配置文件是否正确\n       $ /usr/local/nginx/sbin/nginx -t\n       # 重新加载nginx配置文件，重新加载才会生效\n       $ /usr/local/nginx/sbin/nginx -s reload \n       \n       \n       1\n       2\n       3\n       4\n       \n   \n   9.  最终：访问部署的网站成功并且加上锁即可\n   \n   10. 设置自动构建发布\n       \n       接口核心代码编写\n       \n       package com.webhook.controller;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.web.bind.annotation.*;\n       import java.io.File;\n       import java.io.IOException;\n       import java.util.Map;@RestController@RequestMapping("webhook")\n       public class PullController {    \n           @Value("${shell.startFileName:start.sh}")\n           private String startFileName; \n           @Value("${shell.directory}")\n           private String directory; \n           @Value("${shell.token:zhima123}")\n           private String token;\n           private static final Logger logger = LoggerFactory.getLogger(PullController.class);  \n           /**     \n           * 请求     \n           * @param userAgent\n           * @param giteeToken\n           * @param giteeEvent\n           * @return\n           * @throws IOException \n           */\n           @PostMapping("it235")\n           public String auto(@RequestHeader("User-Agent") String userAgent,\n                              @RequestHeader("X-Gitee-Token") String giteeToken, \n                              @RequestHeader("X-Gitee-Event") String giteeEvent) throws IOException {  \n               //git-oschina-hook\n               logger.info("User-Agent:{}", userAgent); \n               //zhimaxxx\n               logger.info("X-Gitee-Token:{}", giteeToken);\n               //Push Hook\n               logger.info("Gitee-Event:{}", giteeEvent);\n               if("git-oschina-hook".equals(userAgent) \n                  && "PUSH HOOK".equals(giteeEvent) \n                  && token.equals(giteeToken)){ \n                   //才去调用shell脚本\n                   executeShell();\n                   return "ok"; \n               } \n               return "非法调用"; \n           }   \n           /**     \n           * 执行脚本 \n           * @throws IOException \n           */   \n           public void executeShell() throws IOException {  \n               String fullName = getFullName(startFileName);    \n               File file = new File(fullName);  \n               if(!file.exists()) {   \n                   logger.error("file {} not existed!", fullName);   \n                   return;      \n               }\n               \n           //赋予755权限并调用\n               ProcessBuilder processBuilder = new ProcessBuilder("/bin/chmod", "755", fullName);\n               processBuilder.directory(new File(directory));\n               Process process = processBuilder.start();\n               int runningStatus = 0;\n               try { \n                   runningStatus = process.waitFor();\n               } catch (InterruptedException e) {\n                   logger.error("shell", e);\n               }        \n               if(runningStatus != 0) {\n                   logger.error("failed.");\n               }else {\n                   logger.info("success.");\n               } \n           }    \n           /** \n           *文件调用全路径\n           * @param fileName\n           * @return\n           */\n           private String getFullName(String fileName) {\n               return directory + File.separator + fileName; \n           }}\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       13\n       14\n       15\n       16\n       17\n       18\n       19\n       20\n       21\n       22\n       23\n       24\n       25\n       26\n       27\n       28\n       29\n       30\n       31\n       32\n       33\n       34\n       35\n       36\n       37\n       38\n       39\n       40\n       41\n       42\n       43\n       44\n       45\n       46\n       47\n       48\n       49\n       50\n       51\n       52\n       53\n       54\n       55\n       56\n       57\n       58\n       59\n       60\n       61\n       62\n       63\n       64\n       65\n       66\n       67\n       68\n       69\n       70\n       71\n       72\n       73\n       74\n       75\n       \n   \n   11. webhooks自动触发 到gitee配置自动触发构建\n       \n       * 打开仓库>管理>webhooks>添加\n   \n   ----------------------------------------\n   \n   以上就是部署的步骤了.如果你还想安装一些插件的话,就继续往下阅读，\n   \n   其中reco主题内置了一些插件，就无需重复安装了，在package.json的dependencies里查看内置的插件\n   \n   ----------------------------------------\n\nPWA (可选)\n\n----------------------------------------\n\nPWA，即progressive web apps，以web的形式给你原生app的体验\n\n 1. config.js添加配置：\n    \n    head: [ // 注入到当前页面的 HTML <head> 中的标签 \n    [\'link\', { rel: \'manifest\', href: \'/photo.jpg\' }],\n    [\'link\', { rel: \'apple-touch-icon\', href: \'/photo.jpg\' }],\n    ],\n    serviceWorker: true // 是否开启 PWA\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 2. public 文件夹下新建 manifest.json 文件，添加：\n    \n    {    \n    "name": "名称",\n    "short_name": "名称",\n    "start_url": "index.html",\n    "display": "standalone",\n    "background_color": "#2196f3",\n    "description": "简介", \n    "theme_color": "blue", \n    "icons": [ \n    { \n    "src": "./avatar.png",\n    "sizes": "144x144",\n    "type": "image/png" \n    }    ], \n    "related_applications": [ \n    {       \n    "platform": "web"\n    }, \n    {  \n    "platform": "play", \n    "url": "https://play.google.com/store/apps/details?id=cheeaun.hackerweb"\n    }    ]  }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    \n\n 3. 重新部署：npm run deploy\n\n 4. 移动端操作查看\n\n----------------------------------------\n\n\n# reco的一些插件\n\n----------------------------------------\n\n此段展示reco主题的一些插件\n\n> 提示：插件要用中括号包起来\n\n点击查看详情\n\n\n# 看板娘：\n\n@vuepress-reco/vuepress-plugin-kan-ban-niang\n\n"@vuepress-reco/vuepress-plugin-kan-ban-niang",      { \n    //主题 \n    theme: ["blackCat"],\n    clean: false,\n    messages: { \n        welcome: \'欢迎你来啦 我是肥猫 \',\n        home: \'心里的花，我想要带你回家。\', \n        theme: \'好吧，希望你能喜欢我的其他小伙伴。\', \n        close: \'再见哦\'\n        //还可以设置宽高 透明度按钮等 \n    }      }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 自动生成侧边栏插件：\n\nvuepress-plugin-auto-sidebar\n\n先安装依赖npm i vuepress-plugin-auto-sidebar -D 然后修改config.js配置 删除手动配置\n\n"plugins": {  "vuepress-plugin-auto-sidebar": {}}\n\n\n1\n\n\n> 访问根目录要加readme.md\n\n\n# 修改主题颜色：\n\n配置 .vuepress/styles/palette.styl 来快速修改主题的一些颜色属性（没有就创建）\n\n// 默认值\n$accentColor = #3eaf7c                      // 主题颜色\n$textColor = #2c3e50                        // 文本颜色\n$borderColor = #eaecef                      // 边框线颜色\n$codeBgColor = #282c34                      // 代码块背景色\n$backgroundColor = #ffffff                  // 悬浮块背景色\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 修改主题样式：\n\n创建一个 .vuepress/styles/index.styl 文件以方便地添加额外样式，这是一个 Stylus 文件，但你也可以使用正常的 CSS 语法，看个人需求\n\n// 侧边栏样式\n// 左侧侧边栏标题\n.sidebar > .sidebar-links > li > a.sidebar-link {\n  font-size: 1.5em !important;\n  margin-left: -1em;\n}\n// 右侧文章标题导航栏\na.sidebar-link {\n  font-size: 16px !important;\n}\n// 左侧边栏标题字体大小样式\n.sidebar-heading span{\n    font-size: 1.2em;\n    font-weight: bold;\n\n}\n.sidebar-heading.open span{\n    font-weight: bold;\n}\n\n\n// 左侧边栏展开文章的字体大小\na.sidebar-link.active {\n    color: #070808 !important;\n    font-size: 14px !important;\n    background: #c3d4b742 !important;\n}\n.sidebar-sub-headers a.sidebar-link {\n    margin: 0 1rem 0 1rem !important;\n}\n// 分组的透明度修改，未生效\n.sidebar-group.is-sub-group > .sidebar-heading:not(.clickable){\n    opacity: 0.5;\n}\n\n// 去除左上角标题，作者，标签等\n.page .page-title {\n    display: none;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# 引用脚本与样式：\n\n自己写好的css和js样式进行导入\n\nmodule.exports = { \n    head: [   \n        ["link", { rel: "stylesheet", href: "https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css" }], \n                          \n        ["script", { src: "scripts/demo.js" }]\n    ]}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 引入鼠标点击效果：\n\n在.vuepress\\public\\js文件夹下创建MouseClickEffect.js文件\n\nvar a_idx = 0;\n\nfunction getRandom(max, min) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\njQuery(document).ready(function ($) {\n    $("body").click(function (e) {\n        var a = new Array("富强", "民主", "文明", "和谐", "自由", "平等", "公正", "法治", "爱国", "敬业", "诚信", "友善");\n        var $i = $("<span/>").text(a[a_idx]);\n        a_idx = (a_idx + 1) % a.length;\n        var x = e.pageX,\n            y = e.pageY;\n        $i.css({\n            "z-index": 999999999999999999999999999999999999999999999999999999999999999999999,\n            "top": y - 20,\n            "left": x,\n            "position": "absolute",\n            "font-weight": "bold",\n            "color": `rgb(${getRandom(255,0)},${getRandom(255,0)},${getRandom(255,0)})`,\n            "user-select": \'none\',\n            "cursor": \'default\'\n        });\n        $("body").append($i);\n        $i.animate({\n                "top": y - 180,\n                "opacity": 0\n            },\n            1500,\n            function () {\n                $i.remove();\n            });\n    });\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n然后在主题配置文件config.js导入脚本，因为用到jquery所以也要导一下jquery\n\n head: [\n    // 网页标签栏图标\n    [\'link\', { rel: \'icon\', href: \'/vuepress/favicon.ico\' }],\n    // 移动栏优化\n    [\'meta\', { name: \'viewport\', content: \'width=device-width,initial-scale=1,user-scalable=no\' }],\n    // 引入jquery\n    ["script", {\n      "language": "javascript",\n      "type": "text/javascript",\n      "src": "https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js"\n    }],\n    // 引入鼠标点击脚本\n    ["script", {\n      "language": "javascript",\n      "type": "text/javascript",\n      "src": "/js/MouseClickEffect.js"\n    }]\n  ],\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 文章中引入样式和脚本：\n\n在当前页面应用一些 JavaScript 或者 CSS，这样可以在Markdown文件中使用原生的语法 或者标签。它们将会从编译后的 HTML 文件中提取出来，并作为生成的 Vue 单文件组件的和标签。\n\n直接在当前文件输入\n\n<p class="demo" :class="$style.example"></p>\n\n<style module>\n.example {\n  color: #41b883;\n}\n</style>\n\n<script>\nexport default {\n  props: [\'slot-key\'],\n  mounted () {\n    document.querySelector(`.${this.$style.example}`)\n      .textContent = \'这个块是被内联的脚本渲染的，样式也采用了内联样式。\'\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n输出\n\n因为这是内联脚本渲染，优先级较高一些。\n\n\n# 音乐插件：\n\n 1. meting：（推荐，功能强配置丰富、还支持在markdown直接插入）\n 2. bgm-player：好看功能不强\n 3. music-bar: 目前只支持网易云\n\n配置完meting直接插入\n\n#下载依赖\nyarn add vuepress-plugin-meting -D\n# or\nuse npmnpm i vuepress-plugin-meting -D\n----------------------------------------\n#在配置文件中添加插件配置有四个部分metingApi、meting、aplayer、mobile 四部分\n#栈里是简介\n{\n# 平台 \nserver: "netease",  \n#  类型 列表  song单曲等等  \ntype: "playlist",\nmid: "6838211960",\n}\normeting: {\nauto: \'https://music.163.com/#/playlist?id=6838211960\'}\n#aplayer \n#展示lrcType:歌词解析模式  0禁用 1字符串 3文件\nlistMaxHeight：不妨列表高度 默认值250 像素pxloop：循环模式 all one \nnonefixed:false 吸盘模式\nmini:false 迷你模式\ntheme：播放器默认主题颜色\nvolume：0.7设置播放音量\n#mobilelrc:是否显示歌词 true\n----------------------------------------------------------------Examples 例:\n// .vuepress/config.js\nmodule.exports = {\nplugins: [\n\'meting\',      {         // 这个 API 是不可用的，只是作为示例而已    \nmetingApi: \'https://meting.example.com/api/\',\nmeting: {\nserver: \'netease\',  \ntype: \'playlist\',  \nmid: \'6838211960\', \n}, \n// 不配置该项的话不会出现全局播放器\naplayer: { \nlrcType: 3,   \n},   \n},  \n],}\n# 页面单独插入 \nabout.md<Meting server="netease"\n\t\t\t\ttype="playlist"\n                mid="2539599584"\n                :lrc-type="3"/>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n音乐外链网 http://music.xf1433.com/ aplayer https://aplayer.js.org/#/zh-Hans/\n\n\n# 趣味标题插件:\n\n主要在标签栏当时选中和离开页面时会有变化\n\nnpm i vuepress-plugin-dynamic-title -D\n\n\n1\n\n\nmodule.exports = {  plugins: [  \n[      "dynamic-title",     \n{        showIcon: "/favicon.ico",\nshowText: "(/≧▽≦/)咦！又好了！", \nhideIcon: "/failure.ico",       \nhideText: "(●—●)喔哟，崩溃啦！",   \nrecoverTime: 2000      }    ]  ]}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# Boxx插件:\n\n可以为博客文章自动随机添加名人名言或其他，可自定义样式和内容\n\n在文件package.json中的devDependencies下加入"vuepress-plugin-boxx": "0.0.7"\n\n"devDependencies": {    "vuepress-plugin-boxx": "0.0.7"}\n\n\n1\n\n\n在 vuepress 的config.js中配置plugins\n\nplugins: [    ["vuepress-plugin-boxx"]],\n\n\n1\n\n\n在package.json目录下执行命令：npm install\n\n启动项目即可\n\n使用：\n\n * 引入：只需在你想要插入的地方加入<Boxx/>即可（如顶部所示）\n * 内容：默认随机展示名人名句，支持自定义\n * 样式：有三种样式，默认为 tip 样式，支持自定义\n * 注意：除<Boxx/>这个标签是必须外，标签属性均为可选，所有标签属性会在下文中详细介绍\n\n\n\n自定义样式\n\n\n\n * 可以通过以下几个属性实现\n\nNAME           TYPE     DESCRIPTION\nblockStyle     Object   整体块元素的样式\ntitleStyle     Object   只针对title的样式\ncontentStyle   Object   只针对content的样式\nchangeTime     Number   以毫秒值为单位的动态变化时间，顶部为例\n\n需要注意的是：属性值传输的对象只能通过v-bind:绑定来实现\n\n例如：在Markdown中加入\n\n<marquee><Boxx :blockStyle="blockStyle"  /><Boxx type="warning" :blockStyle="titleStyle" :titleStyle="titleStyle" changeTime="1000" title="我是一个大大的且变化的 title"/><Boxx type="danger" :blockStyle="contentStyle" :contentStyle="contentStyle" content="我是一个小小的<br><marquee>content</marquee>"/></marquee><script>\texport default {\t\tdata() {\t\t\treturn {\t\t\t\tblockStyle: {\'background\':\'#eee\',\'color\':\'red\'},                titleStyle: {\'margin-right\': \'10%\',\'font-size\':\'16px\'},                contentStyle: {\'margin-right\': \'20%\',\'font-size\':\'10px\',                               "margin-top": "1rem","margin-bottom": "0.4rem"},\t\t\t}\t\t}\t}<\/script>\n\n\n1\n\n\n\n# PWA插件：\n\n本站更新时用于弹出一个提示用户是否刷新网页\n\nnpm install -D @vuepress/plugin-pwa\n\n\n1\n\n\n        serviceWorker: true,        updatePopup: {            message: "发现新内容可用",            buttonText: "刷新"        }    }],\n\n\n1\n\n\n\n# 复制弹窗插件：\n\n俩个插件:\n\n第一个:vuepress-plugin-nuggets-style-copy\n\nnpm install -D vuepress-plugin-nuggets-style-copy\n\n\n1\n\n\n["vuepress-plugin-nuggets-style-copy", {  copyText: "复制代码",  tip: {      content: "复制成功!"  }}]\n\n\n1\n\n\n第二个:Vuepress Code Copy Plugin\n\n$ npm install vuepress-plugin-code-copy\n# OR\n$ yarn add vuepress-plugin-code-copy\n\n\n1\n2\n3\n\n\nmodule.exports = {\nplugins: [   \n["vuepress-plugin-code-copy", \n{\n// 这是复制按钮组件将附加到的CSS 选择器。\nselector: div[class*="language-"] pre, \n//对其 top和bottom  \nalign: bottom, \n//颜色  十六进制代码\n。        color: #27b1ff, \n// 背景过度 \nbackgroundTransition: true, \n//背景颜色  \nbackgroundColor: #0075b8,  \n//当用户按下复制按钮时显示的文本。\nsuccessText: "复制成功", \n//静态图标  复制图标仅在悬停在代码块上时可见或始终可见\n。        staticIcon:false  \n}    ]  ]}\n//ormodule.exports = { \nplugins: [[\'vuepress-plugin-code-copy\', true]]}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 公告弹窗插件：\n\n下载\n\nhttps://www.npmjs.com/package/@vuepress-yard/vuepress-plugin-window\n\n修改源码\n\n不到迫不得已还是不要修改源码，我主要是因为使用分组的侧边栏后，如果嵌套的内容标题下，不加这个path参数(如果加了每次点侧边栏标题都会转跳，非常难受)，颜色就会偏淡，通过上文中index.styl无论如何也不能加深\n\nchildren: [    {  \ntitle: \'Matplotlib\', \n// 必要的  \n//path: \'\',  \n// 可选的, 标题的跳转链接，应为绝对路径且必须存在 \ncollapsable: true, // 可选的, 默认值是 true,\nchildren: [      \n\'Python/Matplotlib/Matplotlib绘图指南\', \n\'webc/01.Requests使用技巧\',  \n\'webc/02.数据存入Excel\',   \n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n通过全局搜索，终于找到在源码文件\\xxx\\blog\\node_modules\\vuepress-theme-reco\\components\\SidebarGroup.vue中发现问题，罪魁祸首就是这个opacity 0.5，致此，将其改成1即可\n\n\n# 全文搜索:\n\nvuepress支持全文搜索,通过 vuepress-plugin-fulltext-search 实现\n\n yarn add -D vuepress-plugin-fulltext-search\n\n\n1\n\n\n修改配置: vi docs/.vuepress/config.js\n\n  module.exports = {  // ...  plugins: [\'fulltext-search\'],  }\n\n\n1\n\n\n展示效果和 algolia 相似\n\n> 存在依赖冲突,关键词不显示等\n\n----------------------------------------\n\n还可以通过 vuepress-plugin-flexsearch 实现 (不匹配中文)\n\nyarn add -D vuepress-plugin-flexsearch\n\n\n1\n\n\n修改配置\n\n// .vuepress/config.jsmodule.exports = { \nplugins: [  \n[\'flexsearch\'],    \n// other plugins  \n]}\n\n\n1\n2\n3\n4\n5\n\n\n优点:提供更多配置 和高亮\n\n> 官方文档\n\n集成第三方免费搜索服务algolia\n\n * 访问Algolia DcSearch\n\n * 填写博客的访问地址和邮箱\n   \n   \n\n * Algolia DocSearch 会发送确认邮件，收回复一下，并且可以修改网站代码\n   \n   \n\n * Algolia DocSearch 会发送一封使用邮件，里面有 apiKey 和 indexName\n   \n   \n\n * 修改配置文件 config.js\n   \n   apiKey 和 indexName 就是上面邮件中的内容\n   \n   \n\n * 效果:\n   \n   \n\nvuepress自定义vue组件:\n\n * 创建vue组件\n   \n   在.vuepress/components目录下创建vue文件,例如:ArticleTopAd.vue\n   \n   <template>  <div>这是自定义的组件</div></template><script>export default {};<\/script>\n   \n   \n   1\n   \n   \n   \n\n * md文档引入vue组件\n   \n   \n   \n   ## 联系方式<ArticleTopAd></ArticleTopAd>_**联系方式**_\n   \n   \n   1\n   \n\n----------------------------------------\n\n----------------------------------------\n\n\n# 配置模板：\n\n----------------------------------------\n\n详情\n\n文章模板：\n\n---\ntitle: 文章标题date: 2020-02-02\ntags: - 标签categories: - 分类\nkeys: - \'123456\' //文章加密密码sticky: 1   //文章置顶 1, 2, 3, ...\nisShowComments: false //是否开启评论\npublish: true //文章是否发布\n---\n<Boxx/> //随机展示名人名言[[toc]] //目录链接- 这里可以写`摘要`等其它\n\x3c!-- more --\x3e \n//在\x3c!-- more --\x3e之前的内容会展示为文章摘要## 正式开始你的markdown- I am the text...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n推荐配置样式：\n\nmodule.exports = [    // 流程图插件    \n[\'flowchart\'],    // 标签加强    \n["vuepress-plugin-boxx" ],    // 动态标题    \n["dynamic-title",      {\n    showIcon: "vuepress/smile.ico", \n    showText: "(/≧▽≦/)欢迎帅哥美女！", \n    hideIcon: "vuepress/cry.ico",  \n    hideText: "(●—●)呜呜，不要走嘛！！",\n    recoverTime: 2000      }], \n// 更新刷新插件\n[\'@vuepress/pwa\', {\n    serviceWorker: true,\n    updatePopup: {\n         message: "发现新内容可用",\n         buttonText: "刷新"        } \n}], \n// 代码复制弹窗插件    \n["vuepress-plugin-nuggets-style-copy", {  \n        copyText: "复制代码", \n        tip: {          content: "复制成功!"      } \n           }],    \n// 音乐插件    \n[\'meting\', {       \n     //metingApi: "https://meting.sigure.xyz/api/music",\n        meting: {  \n                    // 网易          server: "netease", \n                   // 读取歌单 \n                            type: "playlist",          mid: "696441716",        },    \n                     // 不配置该项的话不会出现全局播放器      \n                     aplayer: {      \n                             // 吸底模式  \n                             fixed: true,\n                             // 自动播放 \n                             autoplay: true,// 歌曲栏折叠 \n                             listFolded:true,          // 颜色\n                             theme: \'#f9bcdd\',\n                             // 播放顺序为随机 \n                             order: \'random\',\n                             // 初始音量\n                              volume: 0.1, \n                             // 关闭歌词显示 \n                             lrcType: 0 \n                                    }, \n                     mobile :{ \n                             // 手机端去掉cover图\n                             cover: false,      \n                               }\n }]  \n/* 弹窗公告插件\n[      "@vuepress-yard/vuepress-plugin-window"    ], */  \n/* 音乐插件\n["@vuepress-reco/vuepress-plugin-bgm-player",        \n  {            audios: [              \n      // 网络文件示例            \n        {                name: \'年轮\',          \n              artist: \'张碧晨\',             \n              url: \'https://cdn.jsdelivr.net/gh/fudalijunyi/cdn/MP3/年轮.mp3\',              \n              cover: \'https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200715154924.png\'              }          \n                   ] ,           \n   // 自动缩小            autoShrink:true ,           \n    // 悬浮窗模式，吸边            shrinkMode: \'float\' ,           \n   // 悬浮窗位置            floatStyle:{ bottom: \'10px\', \'z-index\': \'999999\' },          }],*/]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n\n\n----------------------------------------\n\n\n# 其他补充：\n\n\n# 配置广告:\n\n----------------------------------------\n\n百度广告\n\n集成百度广告的步骤:\n\n * 注册百度联盟账号\n\n * 创建媒体\n   \n   \n   \n   > 注意:必须是主域名(子域名也生效),且域名已经备案\n   \n   然后就是等待审核了 上线初期可能会遭到申请未通过\n\n * 创建代码\n   \n   审核通过后就可以投放广告,进入百度联盟后台, 创建代码\n   \n   \n   \n   获取代码\n   \n   \n   \n   获取异步代码, 比同步代码有更好的用户体验\n   \n   \n   \n   <div class="_ei7jzolqhvd">\n   </div><script type="text/javascript"> \n   (window.slotbydup = window.slotbydup || []).push({\n   id: "u111111",  \n   container: "_ei7jzolqhvd", \n   async: true  \n   });\n   <\/script>\x3c!-- 多条广告如下脚本只需引入一次 --\x3e\n   <script type="text/javascript" src="//cpro.baidustatic.com/cpro/ui/cm.js" async="async" defer="defer" ><\/script>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * 配置广告\n   \n   1. 修改项目配置文件 .vuepress/config.js\n      \n      因为百度联盟要求该 js 文件只需要引入一次, 所以配置在 config.js 中。\n      \n      module.exports = {  head: [  \n      // 添加百度联盟广告的js    [      "script", \n      {        defer: "defer",      \n      async: "async",   \n      src: "//cpro.baidustatic.com/cpro/ui/cm.js" \n      }    ],  ]};\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      \n   \n   2. 创建广告位组件 .vuepress/components/WapFeedBaiduAd.vue\n      \n      // 信息流广告(异步方式)\n      <template> \n      <div class="_vwkoulqtfei">\n      </div>\n      </template>\n      <script>\n      export default { \n      methods: {  \n      /**     * 加载百度广告     * id值从百度联盟后台获取     */ \n      loadBaiduAdAsync() {    \n      (window.slotbydup = window.slotbydup || []).push({  \n      id: "u1111111",        container: "_vwkoulqtfei",  \n      async: true      });   \n      }  },  \n      mounted() {  \n      // 加载百度广告  \n      this.loadBaiduAdAsync();\n      }};\n      <\/script>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      \n      \n      > 提示\n      > \n      > 注意将如上广告位组件中的 div 的 class、id、container 修改为实际值。\n      > \n      > 这些值从上面步骤中获取\n   \n   3. 插入广告\n      \n      在文档的对应广告位处, 注入广告位组件 ArticleTopAd 即可。\n      \n      ## 联系方式<WapFeedBaiduAd></WapFeedBaiduAd>\n      \n      \n      1\n      \n\n还有谷歌广告\n\n----------------------------------------\n\n\n# seo优化：\n\n包含：title标题decription描述信息faicon图标author作者keywords关键词\n\n配置详情\n\n * 页面配置:\n   \n   // config.jsmodule.exports = {    title: "填写网站的标题",    description: \'填写网站描述\',    head: [        [\'meta\', { name: \'keywords\', content: \'填写关键字\'}]    ]}\n   \n   \n   1\n   \n   \n   单独页面:若想对个别页面自定义 title、description 或 keywords, 可以通过 vuepress 提供的frontmatter (opens new window)来为页面单独配置 meta 信息\n\n * 安装百度自动推送代码\n   \n   实现资源自动推送到百度搜索引擎。\n\n * 验证站点 访问百度站长, 添加站点, 系统会给出验证代码, 复制, 并配置到 config.js 中\n   \n   // config.js// 百度站长的验证, 不能删除["meta", { name: "baidu-site-verification", content: "gZcjfbZtAw" }],\n   \n   \n   1\n   \n\n * 安装自动推送代码\n   \n   推送资源到百度站长-验证站点\n   \n   > 提示:也可以使用 vuepress-plugin-baidu-autopush 插件实现该功能。但为了和其它站长的安装方法统一，则不借助第三方插件实现\n   \n   创建.vuepress/public/assets/js/autopush-baidu.js\n   \n   // 最好不要在本地访问页面，以免造成多域名重复推送问题\n   (function() {\n   var bp = document.createElement("script");\n   var curProtocol = window.location.protocol.split(":")[0];\n   if (curProtocol === "https") {  \n   bp.src = "https://zz.bdstatic.com/linksubmit/push.js"; \n   } else {   \n   bp.src = "http://push.zhanzhang.baidu.com/push.js"; \n   }  \n   var s = document.getElementsByTagName("script")[0]; \n   s.parentNode.insertBefore(bp, s);})();\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n   \n   修改 config.js\n   \n   //head  //添加百度站长的自动推送代码[  "script",  {    src: "/assets/js/autopush-baidu.js"  }]\n   \n   \n   1\n   \n\n * 安装 360 自动推送代码\n   \n   实现站点资源自动推送到 360 搜索引擎。\n   \n   验证站点\n   \n   访问360 站长 (opens new window), 添加站点, 系统会给出验证代码, 复制验证代码, 并配置到 config.js 中 vi config.js\n   \n   //360站长的验证代码[  \n   "meta",  {  \n   name: "360-site-verification",\n   content: "c87794c984680283c380b401a10321af" \n   }]\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   安装自动推送代码:\n   \n   > 提示\n   > \n   > 不要使用 vuepress-plugin-qihu-autopush 插件,该插件有 bug，不会发生推送请求\n   \n   创建.vuepress/public/assets/js/autopush-360.js\n   \n   // 最好不要在本地访问页面，以免造成多域名重复推送问题\n   (function() {  \n   var src =    \n   "https://jspassport.ssl.qhimg.com/11.0.1.js?d182b3f28525f2db83acfaaf6e696dba";  \n   document.write(\'<script src="\' + src + \'" id="sozz">\n   <\/script>\');\n   })();\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n   \n   修改 config.js\n   \n   // 添加360站长的自动推送代码[  "script",  {    src: "/assets/js/autopush-360.js"  }]\n   \n   \n   1\n   \n\n * 还有 谷歌.神马.Bing,搜狗等站长推送 都不支持自动推送, 过程跟其他站长雷同\n\n * sitemap\n   \n   * vuepress-plugin-sitemap 生成站点地图\n   \n   * // sitemap生成插件\n     // .vuepress/config.js\n     module.exports = { \n     plugins: {    \n     \'sitemap\': {     \n     hostname: "https://www.sofineday.com", \n     // 排除无实际内容的页面      \n     exclude: ["/404.html"]    }  }}\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n     \n     详见官方文档\n\n * robots.txt\n   \n   * 使用插件 vuepress-plugin-robots\n   * 详见官网\n\n----------------------------------------\n\n\n# 集成第三方搜索引擎\n\n将第三方搜索的搜索入口会和内置搜索融为一体，当要搜索的内容没有出现在内置搜索中时，即可使用第三方搜索\n\n配置详情\n\nyarn add vuepress-plugin-thirdparty-search -D\n\n\n1\n\n\n修改 config.js, 添加插件配置\n\n// 配置插件vuepress-plugin-thirdparty-search, 默认主题的搜索框集成第三方搜索引擎[ \n"thirdparty-search",  { \nthirdparty: [    \n// 可选，默认 []  \n{     \ntitle: "在谷歌中搜索", \nfrontUrl: "https://www.google.com.hk/search?q="  \n},   \n{      \ntitle: "在百度中搜索",\n// 在搜索结果显示的文字    \nfrontUrl: "https://www.baidu.com/s?wd=", \n// 搜索链接的前面部分 \nbehindUrl: "" \n// 搜索链接的后面部分，可选，默认 \'\'    \n},    \n{    \ntitle: "在360中搜索",  \nfrontUrl: "https://www.so.com/s?q="   \n}    ]  }]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n----------------------------------------\n\n\n# 统计分析：\n\n谷歌统计详情\n\n步骤：\n\n * 官网 进行注册登录\n\n * 创建媒体资源 复制统计代码\n   \n   \n   \n   \x3c!-- Global site tag (gtag.js) - Google Analytics --\x3e<script async src="https://www.googletagmanager.com/gtag/js?id=UA-168383599-1"><\/script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag(\'js\', new Date());  gtag(\'config\', \'UA-168383599-1\');<\/script>\n   \n   \n   1\n   \n\n * 安装依赖 (推荐方案)\n   \n   yarn add -D @vuepress/plugin-google-analytics\n   \n   \n   1\n   \n\n * 配置config.js\n   \n    module.exports = { \n    plugins: [   \n    [      \'@vuepress/google-analytics\',  \n    {        \'ga\': \'UA-00000000-0\' //替换成自己实际申请的ID      }  \n    ]  ]}\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   参考官方文档\n\n * 不推荐方案(网上教程)\n   \n   head: [   \n   /*************** start 添加谷歌统计 ***********/   \n   [      "script",    \n   {    \n   src: "https://www.googletagmanager.com/gtag/js?id=UA-168383599-1",  \n   async: true      \n   }    ],  \n   [      "script",      {}, \n   `        window.dataLayer = window.dataLayer || [];  \n   function gtag(){dataLayer.push(arguments);}    \n   gtag(\'js\', new Date());     \n   gtag(\'config\', \'UA-168383599-1\');   \n   `    ],  \n   /*************** end 添加谷歌统计 ***********/ \n   ] \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 验证:\n   \n   \n   \n   推荐chrome 插件 Tag Assistant\n   \n   功能:检查 ga gtm 以及其他谷歌营销先观代码\n\n----------------------------------------\n\n百度统计详情\n\n步骤：\n\n * 官网：进行注册登录\n\n * 添加站点\n\n * 在config.js中添加配置\n   \n   head: [    // 添加百度统计   \n   [      "script",      {},  \n   `      var _hmt = _hmt || []; \n   (function() { \n   var hm = document.createElement("script"); \n   hm.src = "https://hm.baidu.com/hm.js?44212d6ce872df50b804d94b24889284";  \n   var s = document.getElementsByTagName("script")[0];  \n   s.parentNode.insertBefore(hm, s);      })();    \n   `    ]  ]\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   > 提示:\n   > \n   > vuepress 是基于 vue 的单页面应用，所以页面切换过程中，不会重新加载页面，故而不会触发百度统计.仅在访问首页或者刷新页面时才会触发 谷歌也都是一样的\n\n解决方法:监听路由切换事件，当切换页面时, 手动上报百度统计, 具体实现如下:\n\n编辑 .vuepress/enhanceApp.js\n\nexport default ({ router }) => { \n/**   * 路由切换事件处理   */  \nrouter.beforeEach((to, from, next) => {  \nconsole.log("切换路由", to.fullPath, from.fullPath); \n//触发百度的pv统计 \nif (typeof _hmt != "undefined") {  \nif (to.path) {    \n_hmt.push(["_trackPageview", to.fullPath]);    \nconsole.log("上报百度统计", to.fullPath); \n}    }   \n// continue  \nnext(); \n});};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n> 提示\n> \n> 切换路由就会触发统计上报。例:\n> \n>  * 首次访问\n>  * 刷新页面\n>  * 切换到当前文章的其他章节,所以一个人会促发多次上报\n\n更多详情请查阅:百度统计官方文档\n\n还有cnzz统计友盟统计后台 步骤差不多\n\n//复制统计代码\nhttps://v1.cnzz.com/z_stat.php?id=1278957718&web_id=1278957718\n//配置统计代码head: [  \n// 添加cnzz统计  \n[      "script",   \n{        src: "https://v1.cnzz.com/z_stat.php?id=1278957718&web_id=1278957718"    \n}    ]  ]\n//vi .vuepress/enhanceApp.js\nexport default ({ router }) => { \n/**   * 路由切换事件处理   */ \nrouter.beforeEach((to, from, next) => {    \nconsole.log("切换路由", to.fullPath, from.fullPath);  \n//发送cnzz的pv统计 \nif (typeof _czc != "undefined") {  \nif (to.path) {     \n_czc.push(["_trackPageview", to.fullPath, from.fullPath]);  \nconsole.log("上报cnzz统计", to.fullPath);   \n}    }   \n// continue \nnext();\n});};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n----------------------------------------\n\n\n# 侧边栏提示:\n\n----------------------------------------\n\nh1不参与生成侧边栏且 提议在文章开头添加h1文章标题 可优化seo ,文章其他标题全部可采用h2,h3....作为标题\n\n配置详情\n\n自动配置:\n\n通过自动配置生成的简单侧边栏，展示的侧边栏仅是针对当前页面的，比较独立，影响用户体验。\n\n可使用使用 vdoing 主题自带的方案\n\nvdoing 是基于 vuepress 默认主题开发的一个第三方主题，该主题提供的侧边栏生成方式非常友好，同时提供了目录页功能。\n\nvuepress-theme-vdoing 主题的官方文档\n\n//安装依赖yarn add -D vuepress-theme-vdoing\n//配置主题为 vdoing  module.exports = {   \ntheme: \'vdoing\' \n}//自动生成结构化侧边栏\nmodule.exports = { \nthemeConfig: {    \n// 自动生成结构化侧边栏, 注意最多支持4级目录,切文件名前需要指定序号 \nsidebar: \'structuring\' \n//  \'structuring\' | { \nmode: \'structuring\', collapsable: Boolean} | \'auto\' | 自定义 \n}}//按该主题的规范命名目录和文件以"数字."开头\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n> 提示:\n> \n>  1. 有了目录页, 就可以对博客站点的目录结构有个整体的认识\n>  2. 我们并不希望目录页文件被放到侧边栏, 解决方法:不对目录页文件加序号,因为这样的命名不符合该主题的规范,所以不会收录到侧边栏中\n>  3. 只能对 docs 下的直接子目录生成目录页 并不是所有的目录都可以生成目录页。\n\n----------------------------------------\n\n\n# 评论\n\n----------------------------------------\n\n选型是 valine+leancloud, 支持匿名评论，缺点是数据没有存储在自己手里。市面上也有其他的方案, 如 gitalk,vssue 等, 但需要用户登录 github 才能发表评论, 但 github 经常无法连接,导致体验非常差。\n\n评论配置详情\n\n注册 leancloud\n\n----------------------------------------\n\n * 注册leancloud账号,创建应用\n\n * 复制 AppID 和 AppKey\n   \n   \n   \n   > 提示\n   > \n   > 可通过 leancloud 后台管理评论内容\n\n添加评论插件\n\nyarn add vuepress-plugin-comment -D\n\n\n1\n\n * vi ./config.js\n\n// 评论插件[  "vuepress-plugin-comment",  {  \nchoosen: "valine",  \n// options选项中的所有参数，会传给Valine的配置 \noptions: {     \nel: "#valine-vuepress-comment",  \nappId: "cxPSbJA9SE1uXWt0ywBRl0Cr-gzGzoHsz",  \nappKey: "jKPdKyf3rUlfcVV03gPyBSd1",   \npath: \'<%- frontmatter.to.path %>\'  \n}  }]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n> 注意\n> \n> 若不配置 path，则切换页面时评论内容不会刷新\n\nvaline官详\n\n----------------------------------------\n\n\n# 保护隐私信息:\n\n----------------------------------------\n\n上传文件时防止隐私文件给push上去,所以我们要配置.env或.gitignore\n\n详情可查git官网\n\n步骤\n\n * 在.vuepress下创建隐私.js文件,并且把私密信息写道其中\n   \n   // xxx.jsmodule.exports = { \n   appId: "xxx",// your appId    \n   appKey: "xxx", // your appKey  \n   avatar: "", //}\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 然后在(插件.js 或 config.js)相应的.js文件中导入xxx.js文件\n   \n   const secret=require("./xxx.js")\n   //替换里面的内容\n   module.exports = { \n   "appId": secret.appId,// your appId  \n   "appKey": secret.appKey, // your appKey    \n   "avatar": secret.avatar //}\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 然后到.gitignore文件中隐藏刚刚的文件 加入\n   \n   xxx.js\n   \n   \n   1\n   \n\n * 然后push验证\n\n> 提示:因为仓库没有这个文件所以要在本地保存好\n\n资料来源于网络\n\n----------------------------------------\n\n后记：\n\n> 我们千万不要在样式上花费太多时间，多花些时间去沉淀',normalizedContent:'vuepress\n\n🎈\n\n\n\n# 搭建vuepress博客\n\n\n# vupress介绍\n\n----------------------------------------\n\nvuepress是vue 驱动的静态网站生成器,支持vue语法，内置webpack由vuepress生成的页面都是通过ssr预渲染的html，具有非常好的加载性能和搜索引擎优化，非常适合用来做项目文档。\n\nvupress分为俩部分：\n\n * 静态网站生成器（主题系统和插件api）\n * 默认主题\n\n支持markdown、vue组件、html、css等\n\n官网：vuepress 官方文档步骤更详细\n\n推荐主题reco, vdoing等等\n\n\n# reco主题\n\n----------------------------------------\n\n本博客就是使用reco主题\n\n> 他是一款简洁而优雅的 vuepress 博客 & 文档 主题。reco官网\n\n配置之前的所需环境:\n\n * 安装node\n * 安装git\n * 安装yarn 或者 cnpm （因为比较快）\n * 还有一款好的编译器 例如： vscode\n\n建议先查阅官方文档 教程都很详细\n\n快速上手\n\n查看教程\n\n----------------------------------------\n\n选择好一个文件夹 vscode打开 再打开控制台 创建项目\n\nnpm install -g vuepress //全局安装git\nnpx @vuepress-reco/theme-cli init recodemo\n\n\n1\n2\n\n\n\n\n切换到创建好的目录\n\n //下载依赖\ncd .\\recodemo\\\n \nyarn install\n  or\nnpm install\n\n\n1\n2\n3\n4\n5\n6\n\n\n构建好项目后就可以运行项目\n\nyarn run dev\nor\nnpm run dev\n\n\n1\n2\n3\n\n\n在本地访问localhost:8080端口即可\n\n生成静态文件、方便部署，如果gitee或github此时将静态文件部署即可\n\nnpm run build\n\n\n1\n\n\n部署\n\n----------------------------------------\n\n * 可选择网站托管服务 例如github和gitee以及coding等托管平台，进行托管，一般选择国内访问速度比较快。\n * 腾讯云、阿里云服务器等 进行部署\n\n> 如果是通过托管平台进行部署，可以直接上传生成的静态文件，也可以开俩个分支一个push源码，一个push展示的静态页面。\n> \n> 如果是部署到服务器上的话，创建一个私密仓库，把源码push上去，然后再拉到服务器里面启动即可，再创建俩个脚本，一个后台启动，一个定时调度拉取源码更新即可。\n\ngitee步骤：\n\n 1. 登录gitee\n\n 2. 创建仓库\n    \n    * 创建仓库一：{username}.gitee.io （username必须和账号一样）\n    * 新建仓库二：名称自取（主要是备份）\n    * 二者关系：仓库一负责展示网站内容，仓库二负责日常开发和新增内容，完成后再把代码发布到仓库一\n\n 3. 关联本地项目与gitee仓库\n    \n    // 先cd到你的demo\n    cd vuepress-demo\n    // git初始化\n    git init\n    // 关联github仓库\n    git remote add origin git@github.com:nan-gong/vuepress-demo.git\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 4. 根目录下新建deploy.sh:\n    \n    #!/usr/bin/env sh\n    \n    # 确保脚本抛出遇到的错误\n    set -e\n    \n    # 生成静态文件\n    npm run build\n    \n    # 进入生成的文件夹\n    cd docs/.vuepress/dist\n    \n    # 如果是发布到自定义域名\n    # echo \'www.yourwebsite.com\' > cname\n    \n    git init\n    git add -a\n    git commit -m \'deploy\'\n    \n    # 如果你想要部署到 https://username.github.io\n    git push -f git@github.com:nan-gong/nan-gong.github.io.git master\n    \n    # 如果发布到 https://username.github.io/<repo>  repo=github上的项目\n    # git push -f git@github.com:username/<repo>.git master:gh-pages\n    \n    cd -\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    \n\n 5. 根目录新建readme.md\n    \n    * 此文件描述项目使用、与里面的内容无关\n\n 6. git提交\n    \n    // 提交到暂存区\n    git add .\n    // 提交到本地仓库\n    git commit -m \'基本搭建完毕\'\n    // push到github仓库\n    git push --set-upstream origin master\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 7. 新建deploy指令并执行\n    \n    package.json 文件夹中添加发布命令：\n    \n    "scripts": {\n      "deploy": "bash deploy.sh"\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n----------------------------------------\n\n部署到github\n\n创建makefile发布脚本\n\n提示\n\n此处为了使用到 github 的免费 cdn(cdn.jsdelivr.net)服务， 则同时发布到 github, 并修改 html 文件，修改相关地址为 cdn 地址，以加快页面访问。\n\n# 发布到githubpublish_to_github:\t\n./deploy.sh\n# 发布: 先发布到github, 再发布到自己的服务器\npublish: publish_to_github\t\n# 将静态文件引用地址改为github的cdn加速地址\t\nfind ./docs/.vuepress/dist -type f | xargs -i \'{}\' sed -i \'s/\\/assets/https:\\/\\/cdn.jsdelivr.net\\/gh\\/wangshibiaoflytiger\\/blog@gh-pages\\/assets/g\' {}\t\n# 上传程序到服务器\nscp -r ./docs/.vuepress/dist/* \naliyun_server:/data/static-file/blog/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n 1. 执行发布任务 make publish\n\n----------------------------------------\n\n补充：\n\n本地也可以新建俩个脚本、一个push博客页面、一个push博客源码 （开俩分支）\n\n编写 .gitignore文件\n\nnode_modules/docs/.vuepress/themepackage-lock.jsonpublic/\n\n\n1\n\n\ndeploy.sh用来打包博客，并将打包完成的页面文件推送到我们的仓库\n\n# 构建 生成html文件npm run build# 切换到pubilc目录cd public #初始化 依赖  推送到本地仓库git initgit add -agit commit -m \'deploy\'# 推送到gitee仓库 master分支git push -f git@gitee.com:ascmsm/docs.io.git master#返回根目录cd ../# 删除public 页面元素rm -rf public\n\n\n1\n\n\npush.sh用来推送博客源码文件\n\n# 添加到本地仓库git add .git commit -m \'push\'# 推送不带html 文件的源码  到 名为blogcode的分支git push origin blogcode\t\n\n\n1\n\n\n> 注意：配置时看准目录是否一致\n\n\n\n部署到服务器步骤 ：\n\n * 创建gitee仓库\n   \n   1. 配置密钥\n   2. 拉取仓库\n   3. 将代码拷贝到仓库\n   4. push到仓库\n\n * 服务器配置环境\n   \n   1.  安装git 和node\n       \n       # 安装 git\n       $ yum install -y git\n       # 查看版本\n       $ git --version\n       # 设置git用户信息\n       $ git config --global user.name "your name"\n       $ git config --global user.email "email@example.com"\n       #安装node# 下载最新版本包 https://nodejs.org/dist\n       $ wget https://nodejs.org/dist/v14.5.0/node-v14.5.0-darwin-x64.tar.gz\n       # 解压\n       $ tar -xvf node-v14.5.0-darwin-x64.tar.gz\n       # 建立软链接\n       $ ln -s ~/node-v10.13.0-linux-x64/bin/node /usr/bin/node\n       $ ln -s ~/node-v10.13.0-linux-x64/bin/npm /usr/bin/npm\n       # 检查版本\n       $ node -v$ npm -v\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       13\n       14\n       15\n       16\n       \n       \n       > 注意：查看node配置的路径下载的路径是否跟我一样\n   \n   2.  生成ssh公私钥\n       \n       # 与windows一样，生成ssh$ ssh-keygen -t rsa -c "youremail@example.com"# 需要将linux上的公钥，配置到gitee/github上面，添加之后才能clone\n       \n       \n       1\n       \n   \n   3.  到gitee配置公钥\n       \n       # 在home目录下，创建deploy目录，并作为vuepress源码的存放目录$ cd /home$ mkdir deploy$ cd deploy# 拉取gitee仓库的源码(此处改为你仓库的路径)$ git clone git@gitee.com:axcmsm/docs.git\n       \n       \n       1\n       \n   \n   4.  进入克隆下来的仓库，初始化\n       \n       $ cd docs# $ npm install# 以前台的方式运行，查看控制台端口，我这边设置的是8080$ npm run dev注：这种运行方式，不能`ctrl+d`退出，否则进程被杀死，一般我们以nohup的方式启动，如下\n       \n       \n       1\n       \n   \n   5.  配置脚本启动\n       \n       # 在it235目录中创建start.sh脚本$ touch start.sh# 授予权限$ chmod 775 start.sh# 编辑启动脚本$ vim start.sh\n       \n       \n       1\n       \n   \n   6.  start.sh`脚本如下\n       \n       #!/bin/bash\n       # 切入源码目录，以确保能正常执行\n       cd /home/deploy/docs\n       # 拉取最新代码\n       git pull\n       # 杀死目前已启动进程\n       id=`ps -ef|grep node | grep vuepress|awk \'{print $2}\'`echo --- the process is $id ---kill -9  $idecho  "killed $id"\n       # 启动\n       nohup npm run docs:dev&\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       \n   \n   7.  按esc ，输入:wq，保存退出后，使用./start.sh来启动程序\n       \n       # 执行启动命令\n       $ ./start.sh\n       # 查看运行日志\n       $ tail -222f nohup.out\n       # 使用curl检测程序是否正常运行\n       $ curl http://localhost:8080 \n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       \n   \n   8.  下载nginx配置nginx 做域名解析 #ssl证书(https)\n       \n       # 进入/usr/local/nginx/conf/目录\n       $ vim nginx.conf\n       # 在最后一行大括号结束之前，加入以下配置，并将it235换成你的域名\t\n       # 所有http的请求，统一发到https请求上\n       server {    \tlisten 80;    \tserver_name www.axcmsm.com *.axcmsm.com;    \trewrite ^(.*)$  https://$host$1 permanent;\t}\t\n       # 未带www的请求，统一分发到https://www上\t\n       server {        listen 80;\t\tlisten 443 ssl;        server_name  axcmsm.com;\t\treturn 301 https://www.axcmsm.com$request_uri;\t}\t\n       # https 请求处理    \n       server {\t\t\n       listen 443 default_server ssl;\n       server_name  www.axcmsm.com;\n       ssl_certificate /etc/letsencrypt/live/axcmsm.com/fullchain.pem;\n       ssl_certificate_key /etc/letsencrypt/live/axcmsm.com/privkey.key;\n       large_client_header_buffers 4 16k;   \n       client_max_body_size 30m;  \n       client_body_buffer_size 128k;\n       # 域名默认映射到 http://127.0.0.1:8080\n       location / {     \n       proxy_pass http://127.0.0.1:8080;\n       proxy_redirect off;   \n       proxy_set_header host $host; \n       proxy_set_header x-real-ip $remote_addr;    \n       proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;   \n       proxy_set_header upgrade $http_upgrade;       \n       proxy_set_header connection "upgrade";   \n       root html;        \n       index index.html index.html;    \n       }\t} \n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       13\n       14\n       15\n       16\n       17\n       18\n       19\n       20\n       21\n       22\n       23\n       24\n       25\n       26\n       27\n       28\n       \n       \n       > 注意：\n       > \n       > ssl_certificate 和 ssl_certificate_key 是你pem和sslkey的存放路径\n       \n       # 验证nginx配置文件是否正确\n       $ /usr/local/nginx/sbin/nginx -t\n       # 重新加载nginx配置文件，重新加载才会生效\n       $ /usr/local/nginx/sbin/nginx -s reload \n       \n       \n       1\n       2\n       3\n       4\n       \n   \n   9.  最终：访问部署的网站成功并且加上锁即可\n   \n   10. 设置自动构建发布\n       \n       接口核心代码编写\n       \n       package com.webhook.controller;import org.slf4j.logger;import org.slf4j.loggerfactory;import org.springframework.beans.factory.annotation.autowired;import org.springframework.beans.factory.annotation.value;import org.springframework.web.bind.annotation.*;\n       import java.io.file;\n       import java.io.ioexception;\n       import java.util.map;@restcontroller@requestmapping("webhook")\n       public class pullcontroller {    \n           @value("${shell.startfilename:start.sh}")\n           private string startfilename; \n           @value("${shell.directory}")\n           private string directory; \n           @value("${shell.token:zhima123}")\n           private string token;\n           private static final logger logger = loggerfactory.getlogger(pullcontroller.class);  \n           /**     \n           * 请求     \n           * @param useragent\n           * @param giteetoken\n           * @param giteeevent\n           * @return\n           * @throws ioexception \n           */\n           @postmapping("it235")\n           public string auto(@requestheader("user-agent") string useragent,\n                              @requestheader("x-gitee-token") string giteetoken, \n                              @requestheader("x-gitee-event") string giteeevent) throws ioexception {  \n               //git-oschina-hook\n               logger.info("user-agent:{}", useragent); \n               //zhimaxxx\n               logger.info("x-gitee-token:{}", giteetoken);\n               //push hook\n               logger.info("gitee-event:{}", giteeevent);\n               if("git-oschina-hook".equals(useragent) \n                  && "push hook".equals(giteeevent) \n                  && token.equals(giteetoken)){ \n                   //才去调用shell脚本\n                   executeshell();\n                   return "ok"; \n               } \n               return "非法调用"; \n           }   \n           /**     \n           * 执行脚本 \n           * @throws ioexception \n           */   \n           public void executeshell() throws ioexception {  \n               string fullname = getfullname(startfilename);    \n               file file = new file(fullname);  \n               if(!file.exists()) {   \n                   logger.error("file {} not existed!", fullname);   \n                   return;      \n               }\n               \n           //赋予755权限并调用\n               processbuilder processbuilder = new processbuilder("/bin/chmod", "755", fullname);\n               processbuilder.directory(new file(directory));\n               process process = processbuilder.start();\n               int runningstatus = 0;\n               try { \n                   runningstatus = process.waitfor();\n               } catch (interruptedexception e) {\n                   logger.error("shell", e);\n               }        \n               if(runningstatus != 0) {\n                   logger.error("failed.");\n               }else {\n                   logger.info("success.");\n               } \n           }    \n           /** \n           *文件调用全路径\n           * @param filename\n           * @return\n           */\n           private string getfullname(string filename) {\n               return directory + file.separator + filename; \n           }}\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       13\n       14\n       15\n       16\n       17\n       18\n       19\n       20\n       21\n       22\n       23\n       24\n       25\n       26\n       27\n       28\n       29\n       30\n       31\n       32\n       33\n       34\n       35\n       36\n       37\n       38\n       39\n       40\n       41\n       42\n       43\n       44\n       45\n       46\n       47\n       48\n       49\n       50\n       51\n       52\n       53\n       54\n       55\n       56\n       57\n       58\n       59\n       60\n       61\n       62\n       63\n       64\n       65\n       66\n       67\n       68\n       69\n       70\n       71\n       72\n       73\n       74\n       75\n       \n   \n   11. webhooks自动触发 到gitee配置自动触发构建\n       \n       * 打开仓库>管理>webhooks>添加\n   \n   ----------------------------------------\n   \n   以上就是部署的步骤了.如果你还想安装一些插件的话,就继续往下阅读，\n   \n   其中reco主题内置了一些插件，就无需重复安装了，在package.json的dependencies里查看内置的插件\n   \n   ----------------------------------------\n\npwa (可选)\n\n----------------------------------------\n\npwa，即progressive web apps，以web的形式给你原生app的体验\n\n 1. config.js添加配置：\n    \n    head: [ // 注入到当前页面的 html <head> 中的标签 \n    [\'link\', { rel: \'manifest\', href: \'/photo.jpg\' }],\n    [\'link\', { rel: \'apple-touch-icon\', href: \'/photo.jpg\' }],\n    ],\n    serviceworker: true // 是否开启 pwa\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 2. public 文件夹下新建 manifest.json 文件，添加：\n    \n    {    \n    "name": "名称",\n    "short_name": "名称",\n    "start_url": "index.html",\n    "display": "standalone",\n    "background_color": "#2196f3",\n    "description": "简介", \n    "theme_color": "blue", \n    "icons": [ \n    { \n    "src": "./avatar.png",\n    "sizes": "144x144",\n    "type": "image/png" \n    }    ], \n    "related_applications": [ \n    {       \n    "platform": "web"\n    }, \n    {  \n    "platform": "play", \n    "url": "https://play.google.com/store/apps/details?id=cheeaun.hackerweb"\n    }    ]  }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    \n\n 3. 重新部署：npm run deploy\n\n 4. 移动端操作查看\n\n----------------------------------------\n\n\n# reco的一些插件\n\n----------------------------------------\n\n此段展示reco主题的一些插件\n\n> 提示：插件要用中括号包起来\n\n点击查看详情\n\n\n# 看板娘：\n\n@vuepress-reco/vuepress-plugin-kan-ban-niang\n\n"@vuepress-reco/vuepress-plugin-kan-ban-niang",      { \n    //主题 \n    theme: ["blackcat"],\n    clean: false,\n    messages: { \n        welcome: \'欢迎你来啦 我是肥猫 \',\n        home: \'心里的花，我想要带你回家。\', \n        theme: \'好吧，希望你能喜欢我的其他小伙伴。\', \n        close: \'再见哦\'\n        //还可以设置宽高 透明度按钮等 \n    }      }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 自动生成侧边栏插件：\n\nvuepress-plugin-auto-sidebar\n\n先安装依赖npm i vuepress-plugin-auto-sidebar -d 然后修改config.js配置 删除手动配置\n\n"plugins": {  "vuepress-plugin-auto-sidebar": {}}\n\n\n1\n\n\n> 访问根目录要加readme.md\n\n\n# 修改主题颜色：\n\n配置 .vuepress/styles/palette.styl 来快速修改主题的一些颜色属性（没有就创建）\n\n// 默认值\n$accentcolor = #3eaf7c                      // 主题颜色\n$textcolor = #2c3e50                        // 文本颜色\n$bordercolor = #eaecef                      // 边框线颜色\n$codebgcolor = #282c34                      // 代码块背景色\n$backgroundcolor = #ffffff                  // 悬浮块背景色\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 修改主题样式：\n\n创建一个 .vuepress/styles/index.styl 文件以方便地添加额外样式，这是一个 stylus 文件，但你也可以使用正常的 css 语法，看个人需求\n\n// 侧边栏样式\n// 左侧侧边栏标题\n.sidebar > .sidebar-links > li > a.sidebar-link {\n  font-size: 1.5em !important;\n  margin-left: -1em;\n}\n// 右侧文章标题导航栏\na.sidebar-link {\n  font-size: 16px !important;\n}\n// 左侧边栏标题字体大小样式\n.sidebar-heading span{\n    font-size: 1.2em;\n    font-weight: bold;\n\n}\n.sidebar-heading.open span{\n    font-weight: bold;\n}\n\n\n// 左侧边栏展开文章的字体大小\na.sidebar-link.active {\n    color: #070808 !important;\n    font-size: 14px !important;\n    background: #c3d4b742 !important;\n}\n.sidebar-sub-headers a.sidebar-link {\n    margin: 0 1rem 0 1rem !important;\n}\n// 分组的透明度修改，未生效\n.sidebar-group.is-sub-group > .sidebar-heading:not(.clickable){\n    opacity: 0.5;\n}\n\n// 去除左上角标题，作者，标签等\n.page .page-title {\n    display: none;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# 引用脚本与样式：\n\n自己写好的css和js样式进行导入\n\nmodule.exports = { \n    head: [   \n        ["link", { rel: "stylesheet", href: "https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/katex.min.css" }], \n                          \n        ["script", { src: "scripts/demo.js" }]\n    ]}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 引入鼠标点击效果：\n\n在.vuepress\\public\\js文件夹下创建mouseclickeffect.js文件\n\nvar a_idx = 0;\n\nfunction getrandom(max, min) {\n    return math.floor(math.random() * (max - min + 1) + min);\n}\njquery(document).ready(function ($) {\n    $("body").click(function (e) {\n        var a = new array("富强", "民主", "文明", "和谐", "自由", "平等", "公正", "法治", "爱国", "敬业", "诚信", "友善");\n        var $i = $("<span/>").text(a[a_idx]);\n        a_idx = (a_idx + 1) % a.length;\n        var x = e.pagex,\n            y = e.pagey;\n        $i.css({\n            "z-index": 999999999999999999999999999999999999999999999999999999999999999999999,\n            "top": y - 20,\n            "left": x,\n            "position": "absolute",\n            "font-weight": "bold",\n            "color": `rgb(${getrandom(255,0)},${getrandom(255,0)},${getrandom(255,0)})`,\n            "user-select": \'none\',\n            "cursor": \'default\'\n        });\n        $("body").append($i);\n        $i.animate({\n                "top": y - 180,\n                "opacity": 0\n            },\n            1500,\n            function () {\n                $i.remove();\n            });\n    });\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n然后在主题配置文件config.js导入脚本，因为用到jquery所以也要导一下jquery\n\n head: [\n    // 网页标签栏图标\n    [\'link\', { rel: \'icon\', href: \'/vuepress/favicon.ico\' }],\n    // 移动栏优化\n    [\'meta\', { name: \'viewport\', content: \'width=device-width,initial-scale=1,user-scalable=no\' }],\n    // 引入jquery\n    ["script", {\n      "language": "javascript",\n      "type": "text/javascript",\n      "src": "https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js"\n    }],\n    // 引入鼠标点击脚本\n    ["script", {\n      "language": "javascript",\n      "type": "text/javascript",\n      "src": "/js/mouseclickeffect.js"\n    }]\n  ],\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 文章中引入样式和脚本：\n\n在当前页面应用一些 javascript 或者 css，这样可以在markdown文件中使用原生的语法 或者标签。它们将会从编译后的 html 文件中提取出来，并作为生成的 vue 单文件组件的和标签。\n\n直接在当前文件输入\n\n<p class="demo" :class="$style.example"></p>\n\n<style module>\n.example {\n  color: #41b883;\n}\n</style>\n\n<script>\nexport default {\n  props: [\'slot-key\'],\n  mounted () {\n    document.queryselector(`.${this.$style.example}`)\n      .textcontent = \'这个块是被内联的脚本渲染的，样式也采用了内联样式。\'\n  }\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n输出\n\n因为这是内联脚本渲染，优先级较高一些。\n\n\n# 音乐插件：\n\n 1. meting：（推荐，功能强配置丰富、还支持在markdown直接插入）\n 2. bgm-player：好看功能不强\n 3. music-bar: 目前只支持网易云\n\n配置完meting直接插入\n\n#下载依赖\nyarn add vuepress-plugin-meting -d\n# or\nuse npmnpm i vuepress-plugin-meting -d\n----------------------------------------\n#在配置文件中添加插件配置有四个部分metingapi、meting、aplayer、mobile 四部分\n#栈里是简介\n{\n# 平台 \nserver: "netease",  \n#  类型 列表  song单曲等等  \ntype: "playlist",\nmid: "6838211960",\n}\normeting: {\nauto: \'https://music.163.com/#/playlist?id=6838211960\'}\n#aplayer \n#展示lrctype:歌词解析模式  0禁用 1字符串 3文件\nlistmaxheight：不妨列表高度 默认值250 像素pxloop：循环模式 all one \nnonefixed:false 吸盘模式\nmini:false 迷你模式\ntheme：播放器默认主题颜色\nvolume：0.7设置播放音量\n#mobilelrc:是否显示歌词 true\n----------------------------------------------------------------examples 例:\n// .vuepress/config.js\nmodule.exports = {\nplugins: [\n\'meting\',      {         // 这个 api 是不可用的，只是作为示例而已    \nmetingapi: \'https://meting.example.com/api/\',\nmeting: {\nserver: \'netease\',  \ntype: \'playlist\',  \nmid: \'6838211960\', \n}, \n// 不配置该项的话不会出现全局播放器\naplayer: { \nlrctype: 3,   \n},   \n},  \n],}\n# 页面单独插入 \nabout.md<meting server="netease"\n\t\t\t\ttype="playlist"\n                mid="2539599584"\n                :lrc-type="3"/>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n音乐外链网 http://music.xf1433.com/ aplayer https://aplayer.js.org/#/zh-hans/\n\n\n# 趣味标题插件:\n\n主要在标签栏当时选中和离开页面时会有变化\n\nnpm i vuepress-plugin-dynamic-title -d\n\n\n1\n\n\nmodule.exports = {  plugins: [  \n[      "dynamic-title",     \n{        showicon: "/favicon.ico",\nshowtext: "(/≧▽≦/)咦！又好了！", \nhideicon: "/failure.ico",       \nhidetext: "(●—●)喔哟，崩溃啦！",   \nrecovertime: 2000      }    ]  ]}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# boxx插件:\n\n可以为博客文章自动随机添加名人名言或其他，可自定义样式和内容\n\n在文件package.json中的devdependencies下加入"vuepress-plugin-boxx": "0.0.7"\n\n"devdependencies": {    "vuepress-plugin-boxx": "0.0.7"}\n\n\n1\n\n\n在 vuepress 的config.js中配置plugins\n\nplugins: [    ["vuepress-plugin-boxx"]],\n\n\n1\n\n\n在package.json目录下执行命令：npm install\n\n启动项目即可\n\n使用：\n\n * 引入：只需在你想要插入的地方加入<boxx/>即可（如顶部所示）\n * 内容：默认随机展示名人名句，支持自定义\n * 样式：有三种样式，默认为 tip 样式，支持自定义\n * 注意：除<boxx/>这个标签是必须外，标签属性均为可选，所有标签属性会在下文中详细介绍\n\n\n\n自定义样式\n\n\n\n * 可以通过以下几个属性实现\n\nname           type     description\nblockstyle     object   整体块元素的样式\ntitlestyle     object   只针对title的样式\ncontentstyle   object   只针对content的样式\nchangetime     number   以毫秒值为单位的动态变化时间，顶部为例\n\n需要注意的是：属性值传输的对象只能通过v-bind:绑定来实现\n\n例如：在markdown中加入\n\n<marquee><boxx :blockstyle="blockstyle"  /><boxx type="warning" :blockstyle="titlestyle" :titlestyle="titlestyle" changetime="1000" title="我是一个大大的且变化的 title"/><boxx type="danger" :blockstyle="contentstyle" :contentstyle="contentstyle" content="我是一个小小的<br><marquee>content</marquee>"/></marquee><script>\texport default {\t\tdata() {\t\t\treturn {\t\t\t\tblockstyle: {\'background\':\'#eee\',\'color\':\'red\'},                titlestyle: {\'margin-right\': \'10%\',\'font-size\':\'16px\'},                contentstyle: {\'margin-right\': \'20%\',\'font-size\':\'10px\',                               "margin-top": "1rem","margin-bottom": "0.4rem"},\t\t\t}\t\t}\t}<\/script>\n\n\n1\n\n\n\n# pwa插件：\n\n本站更新时用于弹出一个提示用户是否刷新网页\n\nnpm install -d @vuepress/plugin-pwa\n\n\n1\n\n\n        serviceworker: true,        updatepopup: {            message: "发现新内容可用",            buttontext: "刷新"        }    }],\n\n\n1\n\n\n\n# 复制弹窗插件：\n\n俩个插件:\n\n第一个:vuepress-plugin-nuggets-style-copy\n\nnpm install -d vuepress-plugin-nuggets-style-copy\n\n\n1\n\n\n["vuepress-plugin-nuggets-style-copy", {  copytext: "复制代码",  tip: {      content: "复制成功!"  }}]\n\n\n1\n\n\n第二个:vuepress code copy plugin\n\n$ npm install vuepress-plugin-code-copy\n# or\n$ yarn add vuepress-plugin-code-copy\n\n\n1\n2\n3\n\n\nmodule.exports = {\nplugins: [   \n["vuepress-plugin-code-copy", \n{\n// 这是复制按钮组件将附加到的css 选择器。\nselector: div[class*="language-"] pre, \n//对其 top和bottom  \nalign: bottom, \n//颜色  十六进制代码\n。        color: #27b1ff, \n// 背景过度 \nbackgroundtransition: true, \n//背景颜色  \nbackgroundcolor: #0075b8,  \n//当用户按下复制按钮时显示的文本。\nsuccesstext: "复制成功", \n//静态图标  复制图标仅在悬停在代码块上时可见或始终可见\n。        staticicon:false  \n}    ]  ]}\n//ormodule.exports = { \nplugins: [[\'vuepress-plugin-code-copy\', true]]}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 公告弹窗插件：\n\n下载\n\nhttps://www.npmjs.com/package/@vuepress-yard/vuepress-plugin-window\n\n修改源码\n\n不到迫不得已还是不要修改源码，我主要是因为使用分组的侧边栏后，如果嵌套的内容标题下，不加这个path参数(如果加了每次点侧边栏标题都会转跳，非常难受)，颜色就会偏淡，通过上文中index.styl无论如何也不能加深\n\nchildren: [    {  \ntitle: \'matplotlib\', \n// 必要的  \n//path: \'\',  \n// 可选的, 标题的跳转链接，应为绝对路径且必须存在 \ncollapsable: true, // 可选的, 默认值是 true,\nchildren: [      \n\'python/matplotlib/matplotlib绘图指南\', \n\'webc/01.requests使用技巧\',  \n\'webc/02.数据存入excel\',   \n]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n通过全局搜索，终于找到在源码文件\\xxx\\blog\\node_modules\\vuepress-theme-reco\\components\\sidebargroup.vue中发现问题，罪魁祸首就是这个opacity 0.5，致此，将其改成1即可\n\n\n# 全文搜索:\n\nvuepress支持全文搜索,通过 vuepress-plugin-fulltext-search 实现\n\n yarn add -d vuepress-plugin-fulltext-search\n\n\n1\n\n\n修改配置: vi docs/.vuepress/config.js\n\n  module.exports = {  // ...  plugins: [\'fulltext-search\'],  }\n\n\n1\n\n\n展示效果和 algolia 相似\n\n> 存在依赖冲突,关键词不显示等\n\n----------------------------------------\n\n还可以通过 vuepress-plugin-flexsearch 实现 (不匹配中文)\n\nyarn add -d vuepress-plugin-flexsearch\n\n\n1\n\n\n修改配置\n\n// .vuepress/config.jsmodule.exports = { \nplugins: [  \n[\'flexsearch\'],    \n// other plugins  \n]}\n\n\n1\n2\n3\n4\n5\n\n\n优点:提供更多配置 和高亮\n\n> 官方文档\n\n集成第三方免费搜索服务algolia\n\n * 访问algolia dcsearch\n\n * 填写博客的访问地址和邮箱\n   \n   \n\n * algolia docsearch 会发送确认邮件，收回复一下，并且可以修改网站代码\n   \n   \n\n * algolia docsearch 会发送一封使用邮件，里面有 apikey 和 indexname\n   \n   \n\n * 修改配置文件 config.js\n   \n   apikey 和 indexname 就是上面邮件中的内容\n   \n   \n\n * 效果:\n   \n   \n\nvuepress自定义vue组件:\n\n * 创建vue组件\n   \n   在.vuepress/components目录下创建vue文件,例如:articletopad.vue\n   \n   <template>  <div>这是自定义的组件</div></template><script>export default {};<\/script>\n   \n   \n   1\n   \n   \n   \n\n * md文档引入vue组件\n   \n   \n   \n   ## 联系方式<articletopad></articletopad>_**联系方式**_\n   \n   \n   1\n   \n\n----------------------------------------\n\n----------------------------------------\n\n\n# 配置模板：\n\n----------------------------------------\n\n详情\n\n文章模板：\n\n---\ntitle: 文章标题date: 2020-02-02\ntags: - 标签categories: - 分类\nkeys: - \'123456\' //文章加密密码sticky: 1   //文章置顶 1, 2, 3, ...\nisshowcomments: false //是否开启评论\npublish: true //文章是否发布\n---\n<boxx/> //随机展示名人名言[[toc]] //目录链接- 这里可以写`摘要`等其它\n\x3c!-- more --\x3e \n//在\x3c!-- more --\x3e之前的内容会展示为文章摘要## 正式开始你的markdown- i am the text...\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n推荐配置样式：\n\nmodule.exports = [    // 流程图插件    \n[\'flowchart\'],    // 标签加强    \n["vuepress-plugin-boxx" ],    // 动态标题    \n["dynamic-title",      {\n    showicon: "vuepress/smile.ico", \n    showtext: "(/≧▽≦/)欢迎帅哥美女！", \n    hideicon: "vuepress/cry.ico",  \n    hidetext: "(●—●)呜呜，不要走嘛！！",\n    recovertime: 2000      }], \n// 更新刷新插件\n[\'@vuepress/pwa\', {\n    serviceworker: true,\n    updatepopup: {\n         message: "发现新内容可用",\n         buttontext: "刷新"        } \n}], \n// 代码复制弹窗插件    \n["vuepress-plugin-nuggets-style-copy", {  \n        copytext: "复制代码", \n        tip: {          content: "复制成功!"      } \n           }],    \n// 音乐插件    \n[\'meting\', {       \n     //metingapi: "https://meting.sigure.xyz/api/music",\n        meting: {  \n                    // 网易          server: "netease", \n                   // 读取歌单 \n                            type: "playlist",          mid: "696441716",        },    \n                     // 不配置该项的话不会出现全局播放器      \n                     aplayer: {      \n                             // 吸底模式  \n                             fixed: true,\n                             // 自动播放 \n                             autoplay: true,// 歌曲栏折叠 \n                             listfolded:true,          // 颜色\n                             theme: \'#f9bcdd\',\n                             // 播放顺序为随机 \n                             order: \'random\',\n                             // 初始音量\n                              volume: 0.1, \n                             // 关闭歌词显示 \n                             lrctype: 0 \n                                    }, \n                     mobile :{ \n                             // 手机端去掉cover图\n                             cover: false,      \n                               }\n }]  \n/* 弹窗公告插件\n[      "@vuepress-yard/vuepress-plugin-window"    ], */  \n/* 音乐插件\n["@vuepress-reco/vuepress-plugin-bgm-player",        \n  {            audios: [              \n      // 网络文件示例            \n        {                name: \'年轮\',          \n              artist: \'张碧晨\',             \n              url: \'https://cdn.jsdelivr.net/gh/fudalijunyi/cdn/mp3/年轮.mp3\',              \n              cover: \'https://cdn.jsdelivr.net/gh/fudalijunyi/picture-bed/img/20200715154924.png\'              }          \n                   ] ,           \n   // 自动缩小            autoshrink:true ,           \n    // 悬浮窗模式，吸边            shrinkmode: \'float\' ,           \n   // 悬浮窗位置            floatstyle:{ bottom: \'10px\', \'z-index\': \'999999\' },          }],*/]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n\n\n----------------------------------------\n\n\n# 其他补充：\n\n\n# 配置广告:\n\n----------------------------------------\n\n百度广告\n\n集成百度广告的步骤:\n\n * 注册百度联盟账号\n\n * 创建媒体\n   \n   \n   \n   > 注意:必须是主域名(子域名也生效),且域名已经备案\n   \n   然后就是等待审核了 上线初期可能会遭到申请未通过\n\n * 创建代码\n   \n   审核通过后就可以投放广告,进入百度联盟后台, 创建代码\n   \n   \n   \n   获取代码\n   \n   \n   \n   获取异步代码, 比同步代码有更好的用户体验\n   \n   \n   \n   <div class="_ei7jzolqhvd">\n   </div><script type="text/javascript"> \n   (window.slotbydup = window.slotbydup || []).push({\n   id: "u111111",  \n   container: "_ei7jzolqhvd", \n   async: true  \n   });\n   <\/script>\x3c!-- 多条广告如下脚本只需引入一次 --\x3e\n   <script type="text/javascript" src="//cpro.baidustatic.com/cpro/ui/cm.js" async="async" defer="defer" ><\/script>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * 配置广告\n   \n   1. 修改项目配置文件 .vuepress/config.js\n      \n      因为百度联盟要求该 js 文件只需要引入一次, 所以配置在 config.js 中。\n      \n      module.exports = {  head: [  \n      // 添加百度联盟广告的js    [      "script", \n      {        defer: "defer",      \n      async: "async",   \n      src: "//cpro.baidustatic.com/cpro/ui/cm.js" \n      }    ],  ]};\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      \n   \n   2. 创建广告位组件 .vuepress/components/wapfeedbaiduad.vue\n      \n      // 信息流广告(异步方式)\n      <template> \n      <div class="_vwkoulqtfei">\n      </div>\n      </template>\n      <script>\n      export default { \n      methods: {  \n      /**     * 加载百度广告     * id值从百度联盟后台获取     */ \n      loadbaiduadasync() {    \n      (window.slotbydup = window.slotbydup || []).push({  \n      id: "u1111111",        container: "_vwkoulqtfei",  \n      async: true      });   \n      }  },  \n      mounted() {  \n      // 加载百度广告  \n      this.loadbaiduadasync();\n      }};\n      <\/script>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      \n      \n      > 提示\n      > \n      > 注意将如上广告位组件中的 div 的 class、id、container 修改为实际值。\n      > \n      > 这些值从上面步骤中获取\n   \n   3. 插入广告\n      \n      在文档的对应广告位处, 注入广告位组件 articletopad 即可。\n      \n      ## 联系方式<wapfeedbaiduad></wapfeedbaiduad>\n      \n      \n      1\n      \n\n还有谷歌广告\n\n----------------------------------------\n\n\n# seo优化：\n\n包含：title标题decription描述信息faicon图标author作者keywords关键词\n\n配置详情\n\n * 页面配置:\n   \n   // config.jsmodule.exports = {    title: "填写网站的标题",    description: \'填写网站描述\',    head: [        [\'meta\', { name: \'keywords\', content: \'填写关键字\'}]    ]}\n   \n   \n   1\n   \n   \n   单独页面:若想对个别页面自定义 title、description 或 keywords, 可以通过 vuepress 提供的frontmatter (opens new window)来为页面单独配置 meta 信息\n\n * 安装百度自动推送代码\n   \n   实现资源自动推送到百度搜索引擎。\n\n * 验证站点 访问百度站长, 添加站点, 系统会给出验证代码, 复制, 并配置到 config.js 中\n   \n   // config.js// 百度站长的验证, 不能删除["meta", { name: "baidu-site-verification", content: "gzcjfbztaw" }],\n   \n   \n   1\n   \n\n * 安装自动推送代码\n   \n   推送资源到百度站长-验证站点\n   \n   > 提示:也可以使用 vuepress-plugin-baidu-autopush 插件实现该功能。但为了和其它站长的安装方法统一，则不借助第三方插件实现\n   \n   创建.vuepress/public/assets/js/autopush-baidu.js\n   \n   // 最好不要在本地访问页面，以免造成多域名重复推送问题\n   (function() {\n   var bp = document.createelement("script");\n   var curprotocol = window.location.protocol.split(":")[0];\n   if (curprotocol === "https") {  \n   bp.src = "https://zz.bdstatic.com/linksubmit/push.js"; \n   } else {   \n   bp.src = "http://push.zhanzhang.baidu.com/push.js"; \n   }  \n   var s = document.getelementsbytagname("script")[0]; \n   s.parentnode.insertbefore(bp, s);})();\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n   \n   修改 config.js\n   \n   //head  //添加百度站长的自动推送代码[  "script",  {    src: "/assets/js/autopush-baidu.js"  }]\n   \n   \n   1\n   \n\n * 安装 360 自动推送代码\n   \n   实现站点资源自动推送到 360 搜索引擎。\n   \n   验证站点\n   \n   访问360 站长 (opens new window), 添加站点, 系统会给出验证代码, 复制验证代码, 并配置到 config.js 中 vi config.js\n   \n   //360站长的验证代码[  \n   "meta",  {  \n   name: "360-site-verification",\n   content: "c87794c984680283c380b401a10321af" \n   }]\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   安装自动推送代码:\n   \n   > 提示\n   > \n   > 不要使用 vuepress-plugin-qihu-autopush 插件,该插件有 bug，不会发生推送请求\n   \n   创建.vuepress/public/assets/js/autopush-360.js\n   \n   // 最好不要在本地访问页面，以免造成多域名重复推送问题\n   (function() {  \n   var src =    \n   "https://jspassport.ssl.qhimg.com/11.0.1.js?d182b3f28525f2db83acfaaf6e696dba";  \n   document.write(\'<script src="\' + src + \'" id="sozz">\n   <\/script>\');\n   })();\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n   \n   修改 config.js\n   \n   // 添加360站长的自动推送代码[  "script",  {    src: "/assets/js/autopush-360.js"  }]\n   \n   \n   1\n   \n\n * 还有 谷歌.神马.bing,搜狗等站长推送 都不支持自动推送, 过程跟其他站长雷同\n\n * sitemap\n   \n   * vuepress-plugin-sitemap 生成站点地图\n   \n   * // sitemap生成插件\n     // .vuepress/config.js\n     module.exports = { \n     plugins: {    \n     \'sitemap\': {     \n     hostname: "https://www.sofineday.com", \n     // 排除无实际内容的页面      \n     exclude: ["/404.html"]    }  }}\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n     \n     详见官方文档\n\n * robots.txt\n   \n   * 使用插件 vuepress-plugin-robots\n   * 详见官网\n\n----------------------------------------\n\n\n# 集成第三方搜索引擎\n\n将第三方搜索的搜索入口会和内置搜索融为一体，当要搜索的内容没有出现在内置搜索中时，即可使用第三方搜索\n\n配置详情\n\nyarn add vuepress-plugin-thirdparty-search -d\n\n\n1\n\n\n修改 config.js, 添加插件配置\n\n// 配置插件vuepress-plugin-thirdparty-search, 默认主题的搜索框集成第三方搜索引擎[ \n"thirdparty-search",  { \nthirdparty: [    \n// 可选，默认 []  \n{     \ntitle: "在谷歌中搜索", \nfronturl: "https://www.google.com.hk/search?q="  \n},   \n{      \ntitle: "在百度中搜索",\n// 在搜索结果显示的文字    \nfronturl: "https://www.baidu.com/s?wd=", \n// 搜索链接的前面部分 \nbehindurl: "" \n// 搜索链接的后面部分，可选，默认 \'\'    \n},    \n{    \ntitle: "在360中搜索",  \nfronturl: "https://www.so.com/s?q="   \n}    ]  }]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n----------------------------------------\n\n\n# 统计分析：\n\n谷歌统计详情\n\n步骤：\n\n * 官网 进行注册登录\n\n * 创建媒体资源 复制统计代码\n   \n   \n   \n   \x3c!-- global site tag (gtag.js) - google analytics --\x3e<script async src="https://www.googletagmanager.com/gtag/js?id=ua-168383599-1"><\/script><script>  window.datalayer = window.datalayer || [];  function gtag(){datalayer.push(arguments);}  gtag(\'js\', new date());  gtag(\'config\', \'ua-168383599-1\');<\/script>\n   \n   \n   1\n   \n\n * 安装依赖 (推荐方案)\n   \n   yarn add -d @vuepress/plugin-google-analytics\n   \n   \n   1\n   \n\n * 配置config.js\n   \n    module.exports = { \n    plugins: [   \n    [      \'@vuepress/google-analytics\',  \n    {        \'ga\': \'ua-00000000-0\' //替换成自己实际申请的id      }  \n    ]  ]}\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   参考官方文档\n\n * 不推荐方案(网上教程)\n   \n   head: [   \n   /*************** start 添加谷歌统计 ***********/   \n   [      "script",    \n   {    \n   src: "https://www.googletagmanager.com/gtag/js?id=ua-168383599-1",  \n   async: true      \n   }    ],  \n   [      "script",      {}, \n   `        window.datalayer = window.datalayer || [];  \n   function gtag(){datalayer.push(arguments);}    \n   gtag(\'js\', new date());     \n   gtag(\'config\', \'ua-168383599-1\');   \n   `    ],  \n   /*************** end 添加谷歌统计 ***********/ \n   ] \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 验证:\n   \n   \n   \n   推荐chrome 插件 tag assistant\n   \n   功能:检查 ga gtm 以及其他谷歌营销先观代码\n\n----------------------------------------\n\n百度统计详情\n\n步骤：\n\n * 官网：进行注册登录\n\n * 添加站点\n\n * 在config.js中添加配置\n   \n   head: [    // 添加百度统计   \n   [      "script",      {},  \n   `      var _hmt = _hmt || []; \n   (function() { \n   var hm = document.createelement("script"); \n   hm.src = "https://hm.baidu.com/hm.js?44212d6ce872df50b804d94b24889284";  \n   var s = document.getelementsbytagname("script")[0];  \n   s.parentnode.insertbefore(hm, s);      })();    \n   `    ]  ]\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   > 提示:\n   > \n   > vuepress 是基于 vue 的单页面应用，所以页面切换过程中，不会重新加载页面，故而不会触发百度统计.仅在访问首页或者刷新页面时才会触发 谷歌也都是一样的\n\n解决方法:监听路由切换事件，当切换页面时, 手动上报百度统计, 具体实现如下:\n\n编辑 .vuepress/enhanceapp.js\n\nexport default ({ router }) => { \n/**   * 路由切换事件处理   */  \nrouter.beforeeach((to, from, next) => {  \nconsole.log("切换路由", to.fullpath, from.fullpath); \n//触发百度的pv统计 \nif (typeof _hmt != "undefined") {  \nif (to.path) {    \n_hmt.push(["_trackpageview", to.fullpath]);    \nconsole.log("上报百度统计", to.fullpath); \n}    }   \n// continue  \nnext(); \n});};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n> 提示\n> \n> 切换路由就会触发统计上报。例:\n> \n>  * 首次访问\n>  * 刷新页面\n>  * 切换到当前文章的其他章节,所以一个人会促发多次上报\n\n更多详情请查阅:百度统计官方文档\n\n还有cnzz统计友盟统计后台 步骤差不多\n\n//复制统计代码\nhttps://v1.cnzz.com/z_stat.php?id=1278957718&web_id=1278957718\n//配置统计代码head: [  \n// 添加cnzz统计  \n[      "script",   \n{        src: "https://v1.cnzz.com/z_stat.php?id=1278957718&web_id=1278957718"    \n}    ]  ]\n//vi .vuepress/enhanceapp.js\nexport default ({ router }) => { \n/**   * 路由切换事件处理   */ \nrouter.beforeeach((to, from, next) => {    \nconsole.log("切换路由", to.fullpath, from.fullpath);  \n//发送cnzz的pv统计 \nif (typeof _czc != "undefined") {  \nif (to.path) {     \n_czc.push(["_trackpageview", to.fullpath, from.fullpath]);  \nconsole.log("上报cnzz统计", to.fullpath);   \n}    }   \n// continue \nnext();\n});};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n----------------------------------------\n\n\n# 侧边栏提示:\n\n----------------------------------------\n\nh1不参与生成侧边栏且 提议在文章开头添加h1文章标题 可优化seo ,文章其他标题全部可采用h2,h3....作为标题\n\n配置详情\n\n自动配置:\n\n通过自动配置生成的简单侧边栏，展示的侧边栏仅是针对当前页面的，比较独立，影响用户体验。\n\n可使用使用 vdoing 主题自带的方案\n\nvdoing 是基于 vuepress 默认主题开发的一个第三方主题，该主题提供的侧边栏生成方式非常友好，同时提供了目录页功能。\n\nvuepress-theme-vdoing 主题的官方文档\n\n//安装依赖yarn add -d vuepress-theme-vdoing\n//配置主题为 vdoing  module.exports = {   \ntheme: \'vdoing\' \n}//自动生成结构化侧边栏\nmodule.exports = { \nthemeconfig: {    \n// 自动生成结构化侧边栏, 注意最多支持4级目录,切文件名前需要指定序号 \nsidebar: \'structuring\' \n//  \'structuring\' | { \nmode: \'structuring\', collapsable: boolean} | \'auto\' | 自定义 \n}}//按该主题的规范命名目录和文件以"数字."开头\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n> 提示:\n> \n>  1. 有了目录页, 就可以对博客站点的目录结构有个整体的认识\n>  2. 我们并不希望目录页文件被放到侧边栏, 解决方法:不对目录页文件加序号,因为这样的命名不符合该主题的规范,所以不会收录到侧边栏中\n>  3. 只能对 docs 下的直接子目录生成目录页 并不是所有的目录都可以生成目录页。\n\n----------------------------------------\n\n\n# 评论\n\n----------------------------------------\n\n选型是 valine+leancloud, 支持匿名评论，缺点是数据没有存储在自己手里。市面上也有其他的方案, 如 gitalk,vssue 等, 但需要用户登录 github 才能发表评论, 但 github 经常无法连接,导致体验非常差。\n\n评论配置详情\n\n注册 leancloud\n\n----------------------------------------\n\n * 注册leancloud账号,创建应用\n\n * 复制 appid 和 appkey\n   \n   \n   \n   > 提示\n   > \n   > 可通过 leancloud 后台管理评论内容\n\n添加评论插件\n\nyarn add vuepress-plugin-comment -d\n\n\n1\n\n * vi ./config.js\n\n// 评论插件[  "vuepress-plugin-comment",  {  \nchoosen: "valine",  \n// options选项中的所有参数，会传给valine的配置 \noptions: {     \nel: "#valine-vuepress-comment",  \nappid: "cxpsbja9se1uxwt0ywbrl0cr-gzgzohsz",  \nappkey: "jkpdkyf3rulfcvv03gpybsd1",   \npath: \'<%- frontmatter.to.path %>\'  \n}  }]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n> 注意\n> \n> 若不配置 path，则切换页面时评论内容不会刷新\n\nvaline官详\n\n----------------------------------------\n\n\n# 保护隐私信息:\n\n----------------------------------------\n\n上传文件时防止隐私文件给push上去,所以我们要配置.env或.gitignore\n\n详情可查git官网\n\n步骤\n\n * 在.vuepress下创建隐私.js文件,并且把私密信息写道其中\n   \n   // xxx.jsmodule.exports = { \n   appid: "xxx",// your appid    \n   appkey: "xxx", // your appkey  \n   avatar: "", //}\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 然后在(插件.js 或 config.js)相应的.js文件中导入xxx.js文件\n   \n   const secret=require("./xxx.js")\n   //替换里面的内容\n   module.exports = { \n   "appid": secret.appid,// your appid  \n   "appkey": secret.appkey, // your appkey    \n   "avatar": secret.avatar //}\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 然后到.gitignore文件中隐藏刚刚的文件 加入\n   \n   xxx.js\n   \n   \n   1\n   \n\n * 然后push验证\n\n> 提示:因为仓库没有这个文件所以要在本地保存好\n\n资料来源于网络\n\n----------------------------------------\n\n后记：\n\n> 我们千万不要在样式上花费太多时间，多花些时间去沉淀',charsets:{cjk:!0}},{title:"⛳log4的使用",frontmatter:{title:"⛳log4的使用",date:"2021-08-12T00:00:00.000Z",cover:"https://gitee.com/axcmsm/tmp/raw/master/20210816003514.jpg",tags:["log4"],categories:["其他"]},regularPath:"/view/docs/other/2021/log4%E4%BD%BF%E7%94%A8.html",relativePath:"view/docs/other/2021/log4使用.md",key:"v-74d4bdbb",path:"/view/docs/other/2021/log4%E4%BD%BF%E7%94%A8.html",headers:[{level:2,title:"Log4j简介",slug:"log4j简介",normalizedTitle:"log4j简介",charIndex:2},{level:2,title:"三大组件：",slug:"三大组件",normalizedTitle:"三大组件：",charIndex:188},{level:2,title:"日志的级别",slug:"日志的级别",normalizedTitle:"日志的级别",charIndex:411},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:45},{level:2,title:"补充Google-option",slug:"补充google-option",normalizedTitle:"补充google-option",charIndex:1510}],lastUpdated:"2021/9/9 下午8:27:34",headersStr:"Log4j简介 三大组件： 日志的级别 使用 补充Google-option",content:'# Log4j简介\n\n简介：\n\nLog4J 是 Apache 的一个开源项目。通过在项目中使用 Log4J，我们可以控制日志信息输出到控制台、文件、GUI 组件、甚至是数据库中。我们可以控制每一条日志的输出格式，通过定义日志的输出级别，可以更灵活的控制日志的输出过程。方便项目的调试\n\n官网 https://logging.apache.org/log4j/2.x/\n\n\n# 三大组件：\n\nLog4J主要由Logger(日志记录器)、Appender（输出端）和 Layout（日志格式化器）组成。\n\n * Logger控制日志的输出级别与日志是否输出；\n * Appender指定日志的输出方式（ConsoleAppender控制台、FileAppender文件、JDBCAppender等）；\n * Layout控制日志信息的输出格式（simple格式、HTML格式、PatternLayout自定义格式）。\n\n\n# 日志的级别\n\n> Log4J 在 org.apache.log4j.Level 类中定义了OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、ALL八种日志级别。\n\n一般常用四种：优先级从高到低为 ERROR > WARN > INFO > DEBUG\n\n目录      说明\nERROR   发生错误事件，但仍不影响系统的继续运行\nWARN    警告，即潜在的错误情形\nINFO    一般在粗粒度级别上，强调应用程序的运行全程\nDEBUG   一般用于细粒度级别上，对调试应用程序非常有帮助\n\n\n# 使用\n\n配置文件log4j.properties\n\n# 控制台输出配置\nlog4j.appender.Console=org.apache.log4j.ConsoleAppender\nlog4j.appender.Console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.Console.layout.ConversionPattern=%d [%t] %p [%c] - %m%n\n#指定日志的输出级别与输出端\nlog4j.rootLogger=DEBUG,Console\n\n\n1\n2\n3\n4\n5\n6\n\n\n说明：\n\n%p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL, \n%d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，\n比如：%d{yyyy-MM-dd HH:mm:ss,SSS}，输出类似：2011-10-18 22:10:28,921 \n%r: 输出自应用启动到输出该log信息耗费的毫秒数 \n%c: 输出日志信息所属的类目，通常就是所在类的全名 \n%t: 输出产生该日志事件的线程名 \n%l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、\n发生的线程，以及在代码中的行数。\n%x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。\n%%: 输出一个"%"字符 \n%F: 输出日志消息产生时所在的文件名称 \n%L: 输出代码中的行号 \n%m: 输出代码中指定的消息,产生的日志具体信息 \n%n: 输出一个回车换行符，Windows平台为"\\r\\n"，Unix平台为"\\n"输出日志信息换行 \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n项目中引入log4j的jar包即可使用+上配置文件即可使用\n\n\n# 补充Google-option\n\nGoogle-option是Bazel Project中的命令行参数解析器。\n\nGitHub：https://github.com/pcj/google-options\n\n导入jar包\n\n<dependency>\n<groupId>com.github.pcj</groupId>\n<artifactId>google-options</artifactId>\n<version>1.0.0</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n使用:\n\n> 类应提供与预期的命令行选项相对应的public字段； 每个public字段都应使用@Option注释进行注释\n\npublic class ServerOptions extends OptionsBase {\v    @Option(\nname = "help",\nabbrev = \'h\',\nhelp = "Prints usage info.",\ndefaultValue = "true"\n)\npublic boolean help;\n@Option(\nname = "host",\nabbrev = \'o\',\nhelp = "The server host.",\ncategory = "startup",\ndefaultValue = ""\n)\npublic String host;\n@Option(\nname = "port",\nabbrev = \'p\',\nhelp = "The server port.",\ncategory = "startup",\ndefaultValue = "8080"\n)\npublic int port;\n\n@Option(\nname = "dir",\nabbrev = \'d\',\nhelp = "Name of directory to serve static files.",\ncategory = "startup",\nallowMultiple = true,\ndefaultValue = ""\n)\npublic List<String> dirs;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\nOption注解参数说明\n\nname:选项名称\ndefaultValue:默认值\nabbrev:选项的单字符缩写\nhelp:使用信息的帮助字符串\ncategory:描述此选项所属的类别\nallowMultiple:一个标志，指示是否应允许选项类型在单个选项列表中多次出现。\n\n\n1\n2\n3\n4\n5\n6\n\n\n解析方法：\n\npublic class Server {\npublic static void main(String[] args) {\nOptionsParser parser = OptionsParser.newOptionsParser(ServerOptions.class);\nparser.parseAndExitUponError(args);\nServerOptions options = parser.getOptions(ServerOptions.class);\nif (options.host.isEmpty() || options.port < 0 || options.dirs.isEmpty()) {\nprintUsage(parser);\nreturn;\n}\nSystem.out.format("Starting server at %s:%d...\\n", options.host, options.port);\nfor (String dirname : options.dirs) {\nSystem.out.format("\\\\--\x3e Serving static files at <%s>\\n", dirname);\n}\n}\nprivate static void printUsage(OptionsParser parser) {\nSystem.out.println("Usage: java -jar server.jar OPTIONS");\nSystem.out.println(parser.describeOptions(Collections.<String, String>emptyMap(),\nOptionsParser.HelpVerbosity.LONG));\n}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',normalizedContent:'# log4j简介\n\n简介：\n\nlog4j 是 apache 的一个开源项目。通过在项目中使用 log4j，我们可以控制日志信息输出到控制台、文件、gui 组件、甚至是数据库中。我们可以控制每一条日志的输出格式，通过定义日志的输出级别，可以更灵活的控制日志的输出过程。方便项目的调试\n\n官网 https://logging.apache.org/log4j/2.x/\n\n\n# 三大组件：\n\nlog4j主要由logger(日志记录器)、appender（输出端）和 layout（日志格式化器）组成。\n\n * logger控制日志的输出级别与日志是否输出；\n * appender指定日志的输出方式（consoleappender控制台、fileappender文件、jdbcappender等）；\n * layout控制日志信息的输出格式（simple格式、html格式、patternlayout自定义格式）。\n\n\n# 日志的级别\n\n> log4j 在 org.apache.log4j.level 类中定义了off、fatal、error、warn、info、debug、trace、all八种日志级别。\n\n一般常用四种：优先级从高到低为 error > warn > info > debug\n\n目录      说明\nerror   发生错误事件，但仍不影响系统的继续运行\nwarn    警告，即潜在的错误情形\ninfo    一般在粗粒度级别上，强调应用程序的运行全程\ndebug   一般用于细粒度级别上，对调试应用程序非常有帮助\n\n\n# 使用\n\n配置文件log4j.properties\n\n# 控制台输出配置\nlog4j.appender.console=org.apache.log4j.consoleappender\nlog4j.appender.console.layout=org.apache.log4j.patternlayout\nlog4j.appender.console.layout.conversionpattern=%d [%t] %p [%c] - %m%n\n#指定日志的输出级别与输出端\nlog4j.rootlogger=debug,console\n\n\n1\n2\n3\n4\n5\n6\n\n\n说明：\n\n%p: 输出日志信息优先级，即debug，info，warn，error，fatal, \n%d: 输出日志时间点的日期或时间，默认格式为iso8601，也可以在其后指定格式，\n比如：%d{yyyy-mm-dd hh:mm:ss,sss}，输出类似：2011-10-18 22:10:28,921 \n%r: 输出自应用启动到输出该log信息耗费的毫秒数 \n%c: 输出日志信息所属的类目，通常就是所在类的全名 \n%t: 输出产生该日志事件的线程名 \n%l: 输出日志事件的发生位置，相当于%c.%m(%f:%l)的组合,包括类目名、\n发生的线程，以及在代码中的行数。\n%x: 输出和当前线程相关联的ndc(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。\n%%: 输出一个"%"字符 \n%f: 输出日志消息产生时所在的文件名称 \n%l: 输出代码中的行号 \n%m: 输出代码中指定的消息,产生的日志具体信息 \n%n: 输出一个回车换行符，windows平台为"\\r\\n"，unix平台为"\\n"输出日志信息换行 \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n项目中引入log4j的jar包即可使用+上配置文件即可使用\n\n\n# 补充google-option\n\ngoogle-option是bazel project中的命令行参数解析器。\n\ngithub：https://github.com/pcj/google-options\n\n导入jar包\n\n<dependency>\n<groupid>com.github.pcj</groupid>\n<artifactid>google-options</artifactid>\n<version>1.0.0</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n\n\n使用:\n\n> 类应提供与预期的命令行选项相对应的public字段； 每个public字段都应使用@option注释进行注释\n\npublic class serveroptions extends optionsbase {\v    @option(\nname = "help",\nabbrev = \'h\',\nhelp = "prints usage info.",\ndefaultvalue = "true"\n)\npublic boolean help;\n@option(\nname = "host",\nabbrev = \'o\',\nhelp = "the server host.",\ncategory = "startup",\ndefaultvalue = ""\n)\npublic string host;\n@option(\nname = "port",\nabbrev = \'p\',\nhelp = "the server port.",\ncategory = "startup",\ndefaultvalue = "8080"\n)\npublic int port;\n\n@option(\nname = "dir",\nabbrev = \'d\',\nhelp = "name of directory to serve static files.",\ncategory = "startup",\nallowmultiple = true,\ndefaultvalue = ""\n)\npublic list<string> dirs;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\noption注解参数说明\n\nname:选项名称\ndefaultvalue:默认值\nabbrev:选项的单字符缩写\nhelp:使用信息的帮助字符串\ncategory:描述此选项所属的类别\nallowmultiple:一个标志，指示是否应允许选项类型在单个选项列表中多次出现。\n\n\n1\n2\n3\n4\n5\n6\n\n\n解析方法：\n\npublic class server {\npublic static void main(string[] args) {\noptionsparser parser = optionsparser.newoptionsparser(serveroptions.class);\nparser.parseandexituponerror(args);\nserveroptions options = parser.getoptions(serveroptions.class);\nif (options.host.isempty() || options.port < 0 || options.dirs.isempty()) {\nprintusage(parser);\nreturn;\n}\nsystem.out.format("starting server at %s:%d...\\n", options.host, options.port);\nfor (string dirname : options.dirs) {\nsystem.out.format("\\\\--\x3e serving static files at <%s>\\n", dirname);\n}\n}\nprivate static void printusage(optionsparser parser) {\nsystem.out.println("usage: java -jar server.jar options");\nsystem.out.println(parser.describeoptions(collections.<string, string>emptymap(),\noptionsparser.helpverbosity.long));\n}\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n',charsets:{cjk:!0}},{title:"Vdoing主题",frontmatter:{title:"Vdoing主题",date:"2021-08-17T00:00:00.000Z",cover:"https://gitee.com/axcmsm/tmp/raw/master/20210816003206.jpg",tags:["vuepress"],categories:["其他"]},regularPath:"/view/docs/other/2021/8017.html",relativePath:"view/docs/other/2021/8017.md",key:"v-07f3dd22",path:"/view/docs/other/2021/8017.html",headers:[{level:2,title:"Vdoing 主题",slug:"vdoing-主题",normalizedTitle:"vdoing 主题",charIndex:2},{level:2,title:"快速上手",slug:"快速上手",normalizedTitle:"快速上手",charIndex:160},{level:3,title:"版本升级",slug:"版本升级",normalizedTitle:"版本升级",charIndex:1016},{level:2,title:"目录结构",slug:"目录结构",normalizedTitle:"目录结构",charIndex:1392},{level:2,title:"约定",slug:"约定",normalizedTitle:"约定",charIndex:2117},{level:3,title:"命名约定",slug:"命名约定",normalizedTitle:"命名约定",charIndex:2539},{level:3,title:"级别",slug:"级别",normalizedTitle:"级别",charIndex:2638},{level:3,title:"侧边栏添加提示",slug:"侧边栏添加提示",normalizedTitle:"侧边栏添加提示",charIndex:3923},{level:2,title:"自动生成 front matter",slug:"自动生成-front-matter",normalizedTitle:"自动生成 front matter",charIndex:4025},{level:2,title:"容器：",slug:"容器",normalizedTitle:"容器：",charIndex:4681},{level:3,title:"布局容器",slug:"布局容器",normalizedTitle:"布局容器",charIndex:4976},{level:3,title:"卡片列表",slug:"卡片列表",normalizedTitle:"卡片列表",charIndex:5477},{level:3,title:"图文卡片列表",slug:"图文卡片列表",normalizedTitle:"图文卡片列表",charIndex:5763},{level:3,title:"导图&流程图",slug:"导图-流程图",normalizedTitle:"导图&amp;流程图",charIndex:null},{level:3,title:"Demo 演示框",slug:"demo-演示框",normalizedTitle:"demo 演示框",charIndex:6863},{level:2,title:"Markdown 中使用组件",slug:"markdown-中使用组件",normalizedTitle:"markdown 中使用组件",charIndex:7939},{level:3,title:"代码块选项卡",slug:"代码块选项卡",normalizedTitle:"代码块选项卡",charIndex:8187}],lastUpdated:"2021/10/13 下午7:47:22",headersStr:"Vdoing 主题 快速上手 版本升级 目录结构 约定 命名约定 级别 侧边栏添加提示 自动生成 front matter 容器： 布局容器 卡片列表 图文卡片列表 导图&流程图 Demo 演示框 Markdown 中使用组件 代码块选项卡",content:'# Vdoing 主题\n\nVdoing 是基于 vuepress 基础上设计的一款知识管理主题，方便好用，可以帮助我们很好的管理知识，并能够快速地把遗忘的知识点找回来.\n\n一个好的知识管理可以帮助我们提高开发质量和开发效率\n\n\n\n----------------------------------------\n\n\n# 快速上手\n\n----------------------------------------\n\n 1. 安装与启动\n    \n    # clone the project\n    git clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n    \n    # enter the project directory\n    cd vuepress-theme-vdoing\n    \n    # install dependency\n    npm install # or yarn install\n    \n    # develop\n    npm run dev # or yarn dev\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n 2. 使用 Vdoing 主题\n    \n    1. 安装最新主题包\n       \n       npm install vuepress-theme-vdoing -D\n       \n       \n       1\n       \n    \n    2. 在.vuepress/config.js中配置使用主题：\n       \n       // config.js\n       module.exports = {\n         theme: \'vdoing\'\n       }\n       \n       \n       1\n       2\n       3\n       4\n       \n\n提示\n\n 1. 不建议在原默认 vuepress 项目上单独安装使用本主题包，而是 clone 整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n你只需更新 npm 主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n1\n\n\n注意\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n\n 2. 在.vuepress/config.js 中，设置theme: \'vdoing\'才是使用 npm 主题依赖包\n    \n    // config.js\n    module.exports = {\n      theme: \'vdoing\', // npm主题依赖包\n      // theme: require.resolve(\'../../theme-vdoing\'), // 使用本地主题包\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n\n# 目录结构\n\n----------------------------------------\n\n.\n├── .github   (可选，GitHub Actions所需文件)\n│   ├── workflows\n│   │   ├── baiduPush.yml (可选，百度定时自动推送)\n│   │   └── ci.yml (可选，自动部署)\n├── docs (必须，不要修改文件夹名称)\n│   ├── .vuepress （同官方，查看：https://vuepress.vuejs.org/zh/guide/directory-structure.html#目录结构）\n│   ├── @pages (可选，自动生成的文件夹，存放分类页、标签页、归档页)\n│   ├── _posts (可选，专门存放碎片化博客文章的文件夹)\n│   ├── <结构化目录>\n│   └── index.md (首页)\n├── theme-vdoing (可选，本地的vdoing主题)\n├── utils  (可选，vdoing主题使用的node工具)\n│   ├── modules\n│   ├── config.yml (可选，批量操作front matter配置)\n│   ├── editFrontmatter.js (可选，批量操作front matter工具)\n├── baiduPush.sh (可选，百度推送命令脚本)\n├── deploy.sh (可选，部署命令脚本)\n│\n└── package.json\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 约定\n\n----------------------------------------\n\n其遵循约定优于配置的原则\n\n// config.js\nmodule.exports = {\n  themeConfig: {\n     sidebar: \'structuring\' //  \'structuring\' | { mode: \'structuring\', collapsable: Boolean} | \'auto\' | 自定义\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 README.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n * 文件或文件夹名称中间不能出现多余的点.，如01.我是.名称.md中间出现.将会导致解析错误。\n   \n   提示\n   \n   序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多到四级目录。\n\n * 一级目录不参与数据生成\n * 二三级目录可放文件夹或者文件\n * 四级目录只能放 md 文件\n\n所有级别内至少有一个文件或文件夹\n\n例：\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《JavaScript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.JavaScript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n# 侧边栏添加提示\n\n执行(npm run dev)\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\nwarning: 该文件\'xxx\'序号出错，请填写正确的序号。 表示失败\n\n\n# 自动生成 front matter\n\n当你没有给.md文件的front matter (opens new window)指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n生成示例：\n\n---\ntitle: 《JavaScript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - JavaScript\ntags:\n  -\n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\npermalink\n\n * 类型: string\n\n * 默认值：/pages/+ 6 位字母加数字的随机码\n   \n   当前页面的永久链接\n   \n   > Q：自动生成 front matter 为什么要包含永久链接？\n   > \n   > A：使用永久链接是出于以下几点考虑:\n   > \n   >  * 在 config.js 配置 nav 时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n   >  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n   >  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# 容器：\n\n----------------------------------------\n\n::: tip\n这是一条提示\n:::\n\n::: warning\n这是一条注意\n:::\n\n::: danger\n这是一条警告\n:::\n\n::: note\n这是笔记容器，在 <Badge text="v1.5.0 +" /> 版本才支持哦~\n:::\n\n::: details 折叠\n这是一个详情块\n```js\nconsole.log(\'这是一个详情块\')\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 布局容器\n\n----------------------------------------\n\n::: center\n  ### 我是居中的内容\n  （可用于标题、图片等的居中）\n:::\n\n::: right\n  [我是右浮动的内容](https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E8%BF%90%E5%8A%A8%E5%AE%9A%E5%BE%8B)\n:::\n\n::: details\n这是一个详情块，在 IE / Edge 中不生效\n```js\nconsole.log(\'这是一个详情块\')\n```\n:::\n\n::: theorem 牛顿第一定律\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n::: right\n来自 [维基百科](https://zh.wikipedia.org/wiki/%E7%89%9B%E9%A1%BF%E8%BF%90%E5%8A%A8%E5%AE%9A%E5%BE%8B)\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 卡片列表\n\n用于友链或者收藏的网站\n\n语法：\n\n::: cardList <每行显示数量>\n``` yaml\n- name: 名称\n  desc: 描述\n  avatar: https://xxx.jpg # 头像，可选\n  link: https://xxx/ # 链接，可选\n  bgColor: \'#CBEAFA\' # 背景色，可选，默认var(--bodyBg)。颜色值有#号时请添加引号\n  textColor: \'#6854A1\' # 文本色，可选，默认var(--textColor)\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 图文卡片列表\n\n图文卡片列表容器，可用于项目展示、产品展示等。\n\n语法：\n\n::: cardImgList <每行显示数量>\n``` yaml\n- img: https://xxx.jpg # 图片地址\n  link: https://xxx.com # 链接地址\n  name: 标题\n  desc: 描述 # 可选\n  author: 作者名称 # 可选\n  avatar: https://xxx.jpg # 作者头像，可选\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 导图&流程图\n\n----------------------------------------\n\n 1. 方法 1\n    \n    1. 使用Markmap，生成导图 html 文件\n    \n    2. 将 html 文件放在docs/.vuepress/public/markmap/\n    \n    3. 通过<iframe>插入到 Markdown\n    \n    4. <iframe :src="$withBase(\'/markmap/01.html\')" width="100%" height="400" frameborder="0" scrolling="No" leftmargin="0" topmargin="0"></iframe>\n       \n       \n       1\n       \n\n 2. 方法 2\n    \n    1. 通过<iframe>标签引入processon (opens new window)或其他在线作图工具生成的链接。\n    \n    2. <iframe src="https://www.processon.com/view/link/5e718942e4b015182028682c" width="100%" height="500" frameborder="0" scrolling="No" leftmargin="0" topmargin="0"></iframe>\n       \n       \n       1\n       \n\n 3. 方法 3\n    \n    1. 使用流程图插件：\n    2. [vuepress-plugin-flowchart(https://flowchart.vuepress.ulivz.com/)\n    3. vuepress-plugin-mermaidjs\n\n----------------------------------------\n\n\n# Demo 演示框\n\n----------------------------------------\n\n 1. 方法一：\n    \n    1. 安装 vuepress-plugin-demo-block (opens new window)或其他同类插件，使用方法看插件文档\n    2. 在.vuepress/config.js配置插件\n    3. Markdown 中使用\n    \n    > 同类插件：vuepress-plugin-demo-container\n\n 2. 方法 2：\n    \n    嵌入codepen\n    \n    <iframe height="400" style="width: 100%;" scrolling="no" title="【CSS：行为】使用:hover和attr()定制悬浮提示" src="https://codepen.io/xugaoyi/embed/vYNKNaq?height=400&theme-id=light&default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" loading="lazy">\n      See the Pen <a href="https://codepen.io/xugaoyi/pen/vYNKNaq">【CSS：行为】使用:hover和attr()定制悬浮提示</a> by xugaoyi (<a href="https://codepen.io/xugaoyi">@xugaoyi</a>) on <a href="https://codepen.io">CodePen</a>.\n    </iframe>\n    \n    \n    1\n    2\n    3\n    \n    \n    例：\n    \n    ----------------------------------------\n    \n    See the Pen 【CSS：行为】使用:hover和attr()定制悬浮提示 by xugaoyi (@xugaoyi) on CodePen.\n\n----------------------------------------\n\n提示\n\n<iframe>标签还可以嵌入其他任何外部网页如视频、地图等\n\n----------------------------------------\n\n\n# Markdown 中使用组件\n\n主题的内置组件可以直接在Markdown文件中以类似 html 标签的方式使用。\n\n#### 《沁园春·雪》 <Badge text="摘"/>\n北国风光<Badge text="注释" type="warning"/>，千里冰封，万里雪飘。\n\n> <Badge text="译文" type="error" vertical="middle"/>: 北方的风光。\n\n\n1\n2\n3\n4\n\n\n效果：\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 代码块选项卡\n\n在<code-group>中嵌套<code-block>来配合使用。在<code-block>标签添加title来指定 tab 标题，active指定当前 tab：\n\n<code-group>\n  <code-block title="YARN" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -D\n  ```\n  </code-block>\n\n  <code-block title="NPM">\n  ```bash\n  npm install vuepress-theme-vdoing -D\n  ```\n  </code-block>\n</code-group>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -D\n\n\n1\n\n\nnpm install vuepress-theme-vdoing -D\n\n\n1\n\n\n提示\n\n * 请在<code-group>标签与 markdown 内容之间使用空行隔开，否则可能会解析不出来。\n * 该组件只适用于放置代码块，放其他内容在体验上并不友好。如您确实需要放置其他内容的选项卡，推荐使用vuepress-plugin-tabs (opens new window)插件。\n\n----------------------------------------\n\n摘要Vdoing 主题文档',normalizedContent:'# vdoing 主题\n\nvdoing 是基于 vuepress 基础上设计的一款知识管理主题，方便好用，可以帮助我们很好的管理知识，并能够快速地把遗忘的知识点找回来.\n\n一个好的知识管理可以帮助我们提高开发质量和开发效率\n\n\n\n----------------------------------------\n\n\n# 快速上手\n\n----------------------------------------\n\n 1. 安装与启动\n    \n    # clone the project\n    git clone https://github.com/xugaoyi/vuepress-theme-vdoing.git\n    \n    # enter the project directory\n    cd vuepress-theme-vdoing\n    \n    # install dependency\n    npm install # or yarn install\n    \n    # develop\n    npm run dev # or yarn dev\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n 2. 使用 vdoing 主题\n    \n    1. 安装最新主题包\n       \n       npm install vuepress-theme-vdoing -d\n       \n       \n       1\n       \n    \n    2. 在.vuepress/config.js中配置使用主题：\n       \n       // config.js\n       module.exports = {\n         theme: \'vdoing\'\n       }\n       \n       \n       1\n       2\n       3\n       4\n       \n\n提示\n\n 1. 不建议在原默认 vuepress 项目上单独安装使用本主题包，而是 clone 整个项目再替换你自己的内容即可。\n 2. 修改config.js配置后需要重新启动项目才会生效。\n 3. 更多关于项目上手的问题，请查阅 问答。\n\n\n# 版本升级\n\n你只需更新 npm 主题包即可：\n\nnpm update vuepress-theme-vdoing\n\n\n1\n\n\n注意\n\n 1. 如更新后没起作用或报错，尝试把node_modules文件夹删除再npm i重新安装。\n\n 2. 在.vuepress/config.js 中，设置theme: \'vdoing\'才是使用 npm 主题依赖包\n    \n    // config.js\n    module.exports = {\n      theme: \'vdoing\', // npm主题依赖包\n      // theme: require.resolve(\'../../theme-vdoing\'), // 使用本地主题包\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n\n# 目录结构\n\n----------------------------------------\n\n.\n├── .github   (可选，github actions所需文件)\n│   ├── workflows\n│   │   ├── baidupush.yml (可选，百度定时自动推送)\n│   │   └── ci.yml (可选，自动部署)\n├── docs (必须，不要修改文件夹名称)\n│   ├── .vuepress （同官方，查看：https://vuepress.vuejs.org/zh/guide/directory-structure.html#目录结构）\n│   ├── @pages (可选，自动生成的文件夹，存放分类页、标签页、归档页)\n│   ├── _posts (可选，专门存放碎片化博客文章的文件夹)\n│   ├── <结构化目录>\n│   └── index.md (首页)\n├── theme-vdoing (可选，本地的vdoing主题)\n├── utils  (可选，vdoing主题使用的node工具)\n│   ├── modules\n│   ├── config.yml (可选，批量操作front matter配置)\n│   ├── editfrontmatter.js (可选，批量操作front matter工具)\n├── baidupush.sh (可选，百度推送命令脚本)\n├── deploy.sh (可选，部署命令脚本)\n│\n└── package.json\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 约定\n\n----------------------------------------\n\n其遵循约定优于配置的原则\n\n// config.js\nmodule.exports = {\n  themeconfig: {\n     sidebar: \'structuring\' //  \'structuring\' | { mode: \'structuring\', collapsable: boolean} | \'auto\' | 自定义\n  }\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n在运行开发服务npm run dev或打包npm run build时主题内部将会按照目录约定自动生成一个结构化的侧边栏、目录页、面包屑等数据。\n\n在源目录（一般是docs）文件夹中，除了.vuepress、@pages、_posts、index.md 或 readme.md之外的文件夹将会为其生成对应的侧边栏。生成的顺序取自序号，标题取自文件（夹）名称\n\n\n# 命名约定\n\n * 无论是文件还是文件夹，请为其名称添加上正确的正整数序号和.，从00或01开始累计，如01.文件夹、02.文件.md，我们将会按照序号的顺序来决定其在侧边栏当中的顺序。\n\n * 同一级别目录别内即使只有一个文件或文件夹也要为其加上序号。\n\n * 文件或文件夹名称中间不能出现多余的点.，如01.我是.名称.md中间出现.将会导致解析错误。\n   \n   提示\n   \n   序号只是用于决定先后顺序，并不一定需要连着，如01、02、03...，实际工作中可能会在两个文章中间插入一篇新的文章，因此为了方便可以采用间隔序号10、20、30...，后面如果需要在10和20中间插入一篇新文章，可以给定序号15。\n\n\n# 级别\n\n源目录（一般是docs）底下的级别现在我们称之为一级目录，一级目录的下一级为二级目录，以此类推，最多到四级目录。\n\n * 一级目录不参与数据生成\n * 二三级目录可放文件夹或者文件\n * 四级目录只能放 md 文件\n\n所有级别内至少有一个文件或文件夹\n\n例：\n\n.\n├── docs\n│   │  (不参与数据生成)\n│   ├── .vuepress\n│   ├── @pages\n│   ├── _posts\n│   ├── index.md\n│   │\n│   │ (以下部分参与数据生成)\n│   ├── 《javascript教程》专栏 (一级目录)\n│   │   ├── 01.章节1 (二级目录)\n│   │   |   ├── 01.js1.md (三级目录-文件)\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.章节2 (二级目录)\n│   │   |   ├── 01.jsa.md\n│   │   |   ├── 02.小节 (三级目录)\n│   │   |   |   └── 01.jsxx.md (四级目录-文件)\n│   ├── 01.前端\n│   │   ├── 01.javascript\n│   │   |   ├── 01.js1.md\n│   │   |   ├── 02.js2.md\n│   │   |   └── 03.js3.md\n│   │   └── 02.vue\n│   │   |   ├── 01.vue1.md\n│   │   |   └── 02.vue2.md\n│   ├── 02.其他\n│   │   ├── 01.学习\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 02.学习笔记\n│   │   |   ├── 01.xxa.md\n│   │   |   └── 02.xxb.md\n│   │   ├── 03.文件x.md\n│   │   └── 04.文件xx.md\n│   └── 03.关于我\n│   │   └── 01.关于我.md\n.   .\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n# 侧边栏添加提示\n\n执行(npm run dev)\n\ntip: add sidebar data. 侧边栏数据添加成功。\n\nwarning: 该文件\'xxx\'序号出错，请填写正确的序号。 表示失败\n\n\n# 自动生成 front matter\n\n当你没有给.md文件的front matter (opens new window)指定标题(title)、时间(date)、永久链接(permalink)、分类(categories)、标签(tags)时，在运行开发服务npm run dev或打包npm run build时将自动为你生成这些数据，你也可以自己手动设置这些数据，当你手动设置之后，相应的数据就不会再自动生成。\n\n生成示例：\n\n---\ntitle: 《javascript教程》笔记\ndate: 2020-01-12 11:51:53\npermalink: /pages/d8cae9\ncategories:\n  - 前端\n  - javascript\ntags:\n  -\n---\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\npermalink\n\n * 类型: string\n\n * 默认值：/pages/+ 6 位字母加数字的随机码\n   \n   当前页面的永久链接\n   \n   > q：自动生成 front matter 为什么要包含永久链接？\n   > \n   > a：使用永久链接是出于以下几点考虑:\n   > \n   >  * 在 config.js 配置 nav 时使用永久链接，就不会因为文件的路径或名称的改变而改变。\n   >  * 对于博客而言，当别人收藏了你的文章，在未来的时间里都可以通过永久链接来访问到。\n   >  * 主题中的目录页需要通过永久链接来访问文章。\n\n\n# 容器：\n\n----------------------------------------\n\n::: tip\n这是一条提示\n:::\n\n::: warning\n这是一条注意\n:::\n\n::: danger\n这是一条警告\n:::\n\n::: note\n这是笔记容器，在 <badge text="v1.5.0 +" /> 版本才支持哦~\n:::\n\n::: details 折叠\n这是一个详情块\n```js\nconsole.log(\'这是一个详情块\')\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 布局容器\n\n----------------------------------------\n\n::: center\n  ### 我是居中的内容\n  （可用于标题、图片等的居中）\n:::\n\n::: right\n  [我是右浮动的内容](https://zh.wikipedia.org/wiki/%e7%89%9b%e9%a1%bf%e8%bf%90%e5%8a%a8%e5%ae%9a%e5%be%8b)\n:::\n\n::: details\n这是一个详情块，在 ie / edge 中不生效\n```js\nconsole.log(\'这是一个详情块\')\n```\n:::\n\n::: theorem 牛顿第一定律\n假若施加于某物体的外力为零，则该物体的运动速度不变。\n::: right\n来自 [维基百科](https://zh.wikipedia.org/wiki/%e7%89%9b%e9%a1%bf%e8%bf%90%e5%8a%a8%e5%ae%9a%e5%be%8b)\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 卡片列表\n\n用于友链或者收藏的网站\n\n语法：\n\n::: cardlist <每行显示数量>\n``` yaml\n- name: 名称\n  desc: 描述\n  avatar: https://xxx.jpg # 头像，可选\n  link: https://xxx/ # 链接，可选\n  bgcolor: \'#cbeafa\' # 背景色，可选，默认var(--bodybg)。颜色值有#号时请添加引号\n  textcolor: \'#6854a1\' # 文本色，可选，默认var(--textcolor)\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 图文卡片列表\n\n图文卡片列表容器，可用于项目展示、产品展示等。\n\n语法：\n\n::: cardimglist <每行显示数量>\n``` yaml\n- img: https://xxx.jpg # 图片地址\n  link: https://xxx.com # 链接地址\n  name: 标题\n  desc: 描述 # 可选\n  author: 作者名称 # 可选\n  avatar: https://xxx.jpg # 作者头像，可选\n```\n:::\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 导图&流程图\n\n----------------------------------------\n\n 1. 方法 1\n    \n    1. 使用markmap，生成导图 html 文件\n    \n    2. 将 html 文件放在docs/.vuepress/public/markmap/\n    \n    3. 通过<iframe>插入到 markdown\n    \n    4. <iframe :src="$withbase(\'/markmap/01.html\')" width="100%" height="400" frameborder="0" scrolling="no" leftmargin="0" topmargin="0"></iframe>\n       \n       \n       1\n       \n\n 2. 方法 2\n    \n    1. 通过<iframe>标签引入processon (opens new window)或其他在线作图工具生成的链接。\n    \n    2. <iframe src="https://www.processon.com/view/link/5e718942e4b015182028682c" width="100%" height="500" frameborder="0" scrolling="no" leftmargin="0" topmargin="0"></iframe>\n       \n       \n       1\n       \n\n 3. 方法 3\n    \n    1. 使用流程图插件：\n    2. [vuepress-plugin-flowchart(https://flowchart.vuepress.ulivz.com/)\n    3. vuepress-plugin-mermaidjs\n\n----------------------------------------\n\n\n# demo 演示框\n\n----------------------------------------\n\n 1. 方法一：\n    \n    1. 安装 vuepress-plugin-demo-block (opens new window)或其他同类插件，使用方法看插件文档\n    2. 在.vuepress/config.js配置插件\n    3. markdown 中使用\n    \n    > 同类插件：vuepress-plugin-demo-container\n\n 2. 方法 2：\n    \n    嵌入codepen\n    \n    <iframe height="400" style="width: 100%;" scrolling="no" title="【css：行为】使用:hover和attr()定制悬浮提示" src="https://codepen.io/xugaoyi/embed/vynknaq?height=400&theme-id=light&default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" loading="lazy">\n      see the pen <a href="https://codepen.io/xugaoyi/pen/vynknaq">【css：行为】使用:hover和attr()定制悬浮提示</a> by xugaoyi (<a href="https://codepen.io/xugaoyi">@xugaoyi</a>) on <a href="https://codepen.io">codepen</a>.\n    </iframe>\n    \n    \n    1\n    2\n    3\n    \n    \n    例：\n    \n    ----------------------------------------\n    \n    see the pen 【css：行为】使用:hover和attr()定制悬浮提示 by xugaoyi (@xugaoyi) on codepen.\n\n----------------------------------------\n\n提示\n\n<iframe>标签还可以嵌入其他任何外部网页如视频、地图等\n\n----------------------------------------\n\n\n# markdown 中使用组件\n\n主题的内置组件可以直接在markdown文件中以类似 html 标签的方式使用。\n\n#### 《沁园春·雪》 <badge text="摘"/>\n北国风光<badge text="注释" type="warning"/>，千里冰封，万里雪飘。\n\n> <badge text="译文" type="error" vertical="middle"/>: 北方的风光。\n\n\n1\n2\n3\n4\n\n\n效果：\n\n北国风光，千里冰封，万里雪飘。\n\n> : 北方的风光。\n\n\n# 代码块选项卡\n\n在<code-group>中嵌套<code-block>来配合使用。在<code-block>标签添加title来指定 tab 标题，active指定当前 tab：\n\n<code-group>\n  <code-block title="yarn" active>\n  ```bash\n  yarn add vuepress-theme-vdoing -d\n  ```\n  </code-block>\n\n  <code-block title="npm">\n  ```bash\n  npm install vuepress-theme-vdoing -d\n  ```\n  </code-block>\n</code-group>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n效果：\n\nyarn add vuepress-theme-vdoing -d\n\n\n1\n\n\nnpm install vuepress-theme-vdoing -d\n\n\n1\n\n\n提示\n\n * 请在<code-group>标签与 markdown 内容之间使用空行隔开，否则可能会解析不出来。\n * 该组件只适用于放置代码块，放其他内容在体验上并不友好。如您确实需要放置其他内容的选项卡，推荐使用vuepress-plugin-tabs (opens new window)插件。\n\n----------------------------------------\n\n摘要vdoing 主题文档',charsets:{cjk:!0}},{title:"springboot 笔记",frontmatter:{title:"springboot 笔记",date:"2021-08-28T00:00:00.000Z",tags:["springboot"],categories:["java"]},regularPath:"/view/docs/java/springboot.html",relativePath:"view/docs/java/springboot.md",key:"v-5c35c01c",path:"/view/docs/java/springboot.html",headers:[{level:2,title:"Springboot",slug:"springboot",normalizedTitle:"springboot",charIndex:2},{level:2,title:"思维导图：",slug:"思维导图",normalizedTitle:"思维导图：",charIndex:17},{level:3,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:69},{level:2,title:"配置：",slug:"配置",normalizedTitle:"配置：",charIndex:422},{level:3,title:"yarn:",slug:"yarn",normalizedTitle:"yarn:",charIndex:659},{level:2,title:"整合其他框架",slug:"整合其他框架",normalizedTitle:"整合其他框架",charIndex:1681},{level:2,title:"原理分析",slug:"原理分析",normalizedTitle:"原理分析",charIndex:235},{level:3,title:"自动配置",slug:"自动配置",normalizedTitle:"自动配置",charIndex:149},{level:3,title:"监听机制",slug:"监听机制",normalizedTitle:"监听机制",charIndex:3273},{level:3,title:"启动流程",slug:"启动流程",normalizedTitle:"启动流程",charIndex:3626},{level:2,title:"监控",slug:"监控",normalizedTitle:"监控",charIndex:3637},{level:2,title:"项目部署",slug:"项目部署",normalizedTitle:"项目部署",charIndex:4787}],lastUpdated:"2021/8/28 下午8:38:27",headersStr:"Springboot 思维导图： 概述 配置： yarn: 整合其他框架 原理分析 自动配置 监听机制 启动流程 监控 项目部署",content:"# Springboot\n\n\n# 思维导图：\n\n----------------------------------------\n\n\n# 概述\n\n> Spring的顶级项目之一https://spring.io\n> \n> 是一种快速使用Spring的方式，基于约定优于配置的思想\n\n功能：\n\n * 自动配置\n * 起步依赖:依赖传递\n * 辅助功能\n\n> Spring Boot 并不是对 Spring 功能上的增强，而是提供了一种快速使用 Spring 的方式\n\n依赖原理分析:\n\n * 在spring-boot-starter-parent中定义了各种技术的版本信息，组合了一套最优搭配的技术版本。\n * 在各种starter中，定义了完成该功能需要的坐标合集，其中大部分版本信息来自于父工程。\n * 我们的工程继承parent，引入starter后，通过依赖传递，就可以简单方便获得需要的jar包，并且不会存在 版本冲突等问题。\n\n\n# 配置：\n\n> SpringBoot是基于约定的，所以很多配置都有默认值，但如果想使用自己的配置替换默认配置的话，就可以使用 application.properties或者application.yml（application.yaml）进行配置。\n\n * pringBoot提供了2种配置文件类型：properteis和yml/yaml\n * 默认配置文件名称：application\n * 在同一级目录下优先级为：properties > yml > yaml\n\n\n# yarn:\n\n> YML文件是以数据为核心的，比传统的xml方式更加简洁。YAML文件的扩展名可以使用.yml或者.yaml。\n\n基本语法：\n\n * 大小写敏感\n\n * 数据值前边必须有空格，作为分隔符\n\n * 使用缩进表示层级关系\n\n * 缩进时不允许使用Tab键，只允许使用空格（各个系统 Tab对应的 空格数目可能不同，导致层次混乱）。\n\n * 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可\n\n * # 表示注释，从这个字符一直到行尾，都会被解析器忽略。\n\n数据格式：\n\n * 对象(map)：键值对的集合。\n * 数组：一组按次序排列的值\n * 纯量：单个的、不可再分的值\n\n参数引用：$(key)\n\n读取配置文件内容： @Value Environment @ConfigurationProperties profile：\n\nprofile是用来完成不同环境下，配置动态切换功能的。\n2） profile配置方式\n 多profile文件方式：提供多个配置文件，每个代表一种环境。\n\t• application-dev.properties/yml 开发环境\n\t• application-test.properties/yml 测试环境\n\t• application-pro.properties/yml 生产环境\n yml多文档方式：\n\t• 在yml中使用 --- 分隔不同配置\n3） profile激活方式\n 配置文件： 再配置文件中配置：spring.profiles.active=dev\n 虚拟机参数：在VM options 指定：-Dspring.profiles.active=dev\n 命令行参数：java –jar xxx.jar --spring.profiles.active=dev\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n内部配置加载顺序：\n\nSpringboot程序启动时，会从以下位置加载配置文件：\n1. file:./config/：当前项目下的/config目录下\n2. file:./ ：当前项目的根目录\n3. classpath:/config/：classpath的/config目录\n4. classpath:/ ：classpath的根目录\n加载顺序为上文的排列顺序，高优先级配置的属性会生效\n\n\n1\n2\n3\n4\n5\n6\n\n\n外部配置加载顺序：官网\n\n\n# 整合其他框架\n\nSpringBoot整合Junit：\n\n① 搭建SpringBoot工程\n② 引入starter-test起步依赖\n③ 编写测试类\n④ 添加测试相关注解\n• @RunWith(SpringRunner.class)\n• @SpringBootTest(classes = 启动类.class)\n⑤ 编写测试方法\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nSpringBoot整合Redis：\n\n① 搭建SpringBoot工程\n② 引入redis起步依赖\n③ 配置redis相关属性\n④ 注入RedisTemplate模板\n⑤ 编写测试方法，测试\n\n\n1\n2\n3\n4\n5\n\n\nSpringBoot整合MyBatis\n\n① 搭建SpringBoot工程\n② 引入mybatis起步依赖，添加mysql驱动\n③ 编写DataSource和MyBatis相关配置\n④ 定义表和实体类\n⑤ 编写dao和mapper文件/纯注解开发\n⑥ 测试\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 原理分析\n\n\n# 自动配置\n\nCondition:\n\n> Condition 是在Spring 4.0 增加的条件判断功能，通过这个可以功能可以实现选择性的创建 Bean 操作\n\n 自定义条件：\n① 定义条件类：自定义类实现Condition接口，重写 matches 方法，在 matches 方法中进行逻辑判断，返回\nboolean值 。 matches 方法两个参数：\n\t• context：上下文对象，可以获取属性值，获取类加载器，获取BeanFactory等。\n\t• metadata：元数据对象，用于获取注解属性。\n② 判断条件： 在初始化Bean时，使用 @Conditional(条件类.class)注解\n \n SpringBoot 提供的常用条件注解：\n\t• ConditionalOnProperty：判断配置文件中是否有对应属性和值才初始化Bean\n\t• ConditionalOnClass：判断环境中是否有对应字节码文件才初始化Bean\n\t• ConditionalOnMissingBean ： 判断环境中没有对应Bean才初始化Bean\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n切换内置web服务器\n\n> SpringBoot的web环境中默认使用tomcat作为内置服务器，其实SpringBoot提供了4中内置服务器供我们选择，我们可以很方便的进行切换。\n\n@Enable*注解\n\n> SpringBoot中提供了很多Enable开头的注解，这些注解都是用于动态启用某些功能的。而其底层原理是使用@Import注解导入一些配置类，实现Bean的动态加载\n\n@Import注解\n\n> @Enable*底层依赖于@Import注解导入一些类，使用@Import导入的类会被Spring加载到IOC容器中。而@Import提供4中用法： ① 导入Bean ② 导入配置类 ③ 导入 ImportSelector 实现类。一般用于加载配置文件中的类 ④ 导入 ImportBeanDefinitionRegistrar 实现类。\n\n@EnableAutoConfiguration 注解\n\n@EnableAutoConfiguration 注解内部使用 @Import(AutoConfigurationImportSelector.class)来加载配置类。\n配置文件位置：META-INF/spring.factories，该配置文件中定义了大量的配置类，当 SpringBoot 应用启动时，会自动加载   这些配置类，初始化Bean\n并不是所有的Bean都会被初始化，在配置类中使用Condition来加载满足条件的Bean\n\n\n1\n2\n3\n\n\n\n# 监听机制\n\n> SpringBoot 的监听机制，其实是对Java提供的事件监听机制的封装。 Java中的事件监听机制定义了以下几个角色： ① 事件：Event，继承 java.util.EventObject 类的对象 ② 事件源：Source ，任意对象Object ③ 监听器：Listener，实现 java.util.EventListener 接口 的对象\n\nSpringBoot 在项目启动时，会对几个监听器进行回调，我们可以实现这些监听器接口，在项目启动时完成\n一些操作。\nApplicationContextInitializer、SpringApplicationRunListener、CommandLineRunner、ApplicationRunner\n\n\n1\n2\n3\n\n\n\n# 启动流程\n\n\n\n\n# 监控\n\n> SpringBoot自带监控功能Actuator，可以帮助实现对程序内部运行情况监控，比如监控状况、Bean加载情况、配置属性、日志信息等。\n\n使用：\n\n① 导入依赖坐标<dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-actuator</artifactId></dependency>② 访问http://localhost:8080/acruator\n\n\n1\n\n\n路径                描述\n/beans            描述应用程序上下文里全部的Bean，以及它们的关系\n/env              获取全部环境属性\n/env/{name}       根据名称获取特定的环境属性值\n/health           报告应用程序的健康指标，这些值由HealthIndicator的实现类提供\n/info             获取应用程序的定制信息，这些信息由info打头的属性提供\n/mappings         描述全部的URI路径，以及它们和控制器(包含Actuator端点)的映射关系\n/metrics          报告各种应用程序度量信息，比如内存用量和HTTP请求计数\n/metrics/{name}   报告指定名称的应用程序度量值\n/trace            提供基本的HTTP请求跟踪信息(时间戳、HTTP头等)\n\nSpring Boot Admin：\n\n⚫ Spring Boot Admin是一个开源社区项目，用于管理和监控SpringBoot应用程序。 ⚫ Spring Boot Admin 有两个角色，客户端(Client)和服务端(Server)。 ⚫ 应用程序作为Spring Boot Admin Client向为Spring Boot Admin Server注册 ⚫ Spring Boot Admin Server 的UI界面将Spring Boot Admin Client的Actuator Endpoint上的一些监控信息\n\n使用：\n\nadmin-server：① 创建 admin-server 模块② 导入依赖坐标 admin-starter-server③ 在引导类上启用监控功能@EnableAdminServeradmin-client：① 创建 admin-client 模块② 导入依赖坐标 admin-starter-client③ 配置相关信息：server地址等④ 启动server和client服务，访问server\n\n\n1\n\n\n\n# 项目部署\n\n> SpringBoot 项目开发完毕后，支持两种方式部署到服务器： ① jar包(官方推荐) ② war包\n\n----------------------------------------",normalizedContent:"# springboot\n\n\n# 思维导图：\n\n----------------------------------------\n\n\n# 概述\n\n> spring的顶级项目之一https://spring.io\n> \n> 是一种快速使用spring的方式，基于约定优于配置的思想\n\n功能：\n\n * 自动配置\n * 起步依赖:依赖传递\n * 辅助功能\n\n> spring boot 并不是对 spring 功能上的增强，而是提供了一种快速使用 spring 的方式\n\n依赖原理分析:\n\n * 在spring-boot-starter-parent中定义了各种技术的版本信息，组合了一套最优搭配的技术版本。\n * 在各种starter中，定义了完成该功能需要的坐标合集，其中大部分版本信息来自于父工程。\n * 我们的工程继承parent，引入starter后，通过依赖传递，就可以简单方便获得需要的jar包，并且不会存在 版本冲突等问题。\n\n\n# 配置：\n\n> springboot是基于约定的，所以很多配置都有默认值，但如果想使用自己的配置替换默认配置的话，就可以使用 application.properties或者application.yml（application.yaml）进行配置。\n\n * pringboot提供了2种配置文件类型：properteis和yml/yaml\n * 默认配置文件名称：application\n * 在同一级目录下优先级为：properties > yml > yaml\n\n\n# yarn:\n\n> yml文件是以数据为核心的，比传统的xml方式更加简洁。yaml文件的扩展名可以使用.yml或者.yaml。\n\n基本语法：\n\n * 大小写敏感\n\n * 数据值前边必须有空格，作为分隔符\n\n * 使用缩进表示层级关系\n\n * 缩进时不允许使用tab键，只允许使用空格（各个系统 tab对应的 空格数目可能不同，导致层次混乱）。\n\n * 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可\n\n * # 表示注释，从这个字符一直到行尾，都会被解析器忽略。\n\n数据格式：\n\n * 对象(map)：键值对的集合。\n * 数组：一组按次序排列的值\n * 纯量：单个的、不可再分的值\n\n参数引用：$(key)\n\n读取配置文件内容： @value environment @configurationproperties profile：\n\nprofile是用来完成不同环境下，配置动态切换功能的。\n2） profile配置方式\n 多profile文件方式：提供多个配置文件，每个代表一种环境。\n\t• application-dev.properties/yml 开发环境\n\t• application-test.properties/yml 测试环境\n\t• application-pro.properties/yml 生产环境\n yml多文档方式：\n\t• 在yml中使用 --- 分隔不同配置\n3） profile激活方式\n 配置文件： 再配置文件中配置：spring.profiles.active=dev\n 虚拟机参数：在vm options 指定：-dspring.profiles.active=dev\n 命令行参数：java –jar xxx.jar --spring.profiles.active=dev\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n内部配置加载顺序：\n\nspringboot程序启动时，会从以下位置加载配置文件：\n1. file:./config/：当前项目下的/config目录下\n2. file:./ ：当前项目的根目录\n3. classpath:/config/：classpath的/config目录\n4. classpath:/ ：classpath的根目录\n加载顺序为上文的排列顺序，高优先级配置的属性会生效\n\n\n1\n2\n3\n4\n5\n6\n\n\n外部配置加载顺序：官网\n\n\n# 整合其他框架\n\nspringboot整合junit：\n\n① 搭建springboot工程\n② 引入starter-test起步依赖\n③ 编写测试类\n④ 添加测试相关注解\n• @runwith(springrunner.class)\n• @springboottest(classes = 启动类.class)\n⑤ 编写测试方法\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nspringboot整合redis：\n\n① 搭建springboot工程\n② 引入redis起步依赖\n③ 配置redis相关属性\n④ 注入redistemplate模板\n⑤ 编写测试方法，测试\n\n\n1\n2\n3\n4\n5\n\n\nspringboot整合mybatis\n\n① 搭建springboot工程\n② 引入mybatis起步依赖，添加mysql驱动\n③ 编写datasource和mybatis相关配置\n④ 定义表和实体类\n⑤ 编写dao和mapper文件/纯注解开发\n⑥ 测试\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 原理分析\n\n\n# 自动配置\n\ncondition:\n\n> condition 是在spring 4.0 增加的条件判断功能，通过这个可以功能可以实现选择性的创建 bean 操作\n\n 自定义条件：\n① 定义条件类：自定义类实现condition接口，重写 matches 方法，在 matches 方法中进行逻辑判断，返回\nboolean值 。 matches 方法两个参数：\n\t• context：上下文对象，可以获取属性值，获取类加载器，获取beanfactory等。\n\t• metadata：元数据对象，用于获取注解属性。\n② 判断条件： 在初始化bean时，使用 @conditional(条件类.class)注解\n \n springboot 提供的常用条件注解：\n\t• conditionalonproperty：判断配置文件中是否有对应属性和值才初始化bean\n\t• conditionalonclass：判断环境中是否有对应字节码文件才初始化bean\n\t• conditionalonmissingbean ： 判断环境中没有对应bean才初始化bean\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n切换内置web服务器\n\n> springboot的web环境中默认使用tomcat作为内置服务器，其实springboot提供了4中内置服务器供我们选择，我们可以很方便的进行切换。\n\n@enable*注解\n\n> springboot中提供了很多enable开头的注解，这些注解都是用于动态启用某些功能的。而其底层原理是使用@import注解导入一些配置类，实现bean的动态加载\n\n@import注解\n\n> @enable*底层依赖于@import注解导入一些类，使用@import导入的类会被spring加载到ioc容器中。而@import提供4中用法： ① 导入bean ② 导入配置类 ③ 导入 importselector 实现类。一般用于加载配置文件中的类 ④ 导入 importbeandefinitionregistrar 实现类。\n\n@enableautoconfiguration 注解\n\n@enableautoconfiguration 注解内部使用 @import(autoconfigurationimportselector.class)来加载配置类。\n配置文件位置：meta-inf/spring.factories，该配置文件中定义了大量的配置类，当 springboot 应用启动时，会自动加载   这些配置类，初始化bean\n并不是所有的bean都会被初始化，在配置类中使用condition来加载满足条件的bean\n\n\n1\n2\n3\n\n\n\n# 监听机制\n\n> springboot 的监听机制，其实是对java提供的事件监听机制的封装。 java中的事件监听机制定义了以下几个角色： ① 事件：event，继承 java.util.eventobject 类的对象 ② 事件源：source ，任意对象object ③ 监听器：listener，实现 java.util.eventlistener 接口 的对象\n\nspringboot 在项目启动时，会对几个监听器进行回调，我们可以实现这些监听器接口，在项目启动时完成\n一些操作。\napplicationcontextinitializer、springapplicationrunlistener、commandlinerunner、applicationrunner\n\n\n1\n2\n3\n\n\n\n# 启动流程\n\n\n\n\n# 监控\n\n> springboot自带监控功能actuator，可以帮助实现对程序内部运行情况监控，比如监控状况、bean加载情况、配置属性、日志信息等。\n\n使用：\n\n① 导入依赖坐标<dependency><groupid>org.springframework.boot</groupid><artifactid>spring-boot-starter-actuator</artifactid></dependency>② 访问http://localhost:8080/acruator\n\n\n1\n\n\n路径                描述\n/beans            描述应用程序上下文里全部的bean，以及它们的关系\n/env              获取全部环境属性\n/env/{name}       根据名称获取特定的环境属性值\n/health           报告应用程序的健康指标，这些值由healthindicator的实现类提供\n/info             获取应用程序的定制信息，这些信息由info打头的属性提供\n/mappings         描述全部的uri路径，以及它们和控制器(包含actuator端点)的映射关系\n/metrics          报告各种应用程序度量信息，比如内存用量和http请求计数\n/metrics/{name}   报告指定名称的应用程序度量值\n/trace            提供基本的http请求跟踪信息(时间戳、http头等)\n\nspring boot admin：\n\n⚫ spring boot admin是一个开源社区项目，用于管理和监控springboot应用程序。 ⚫ spring boot admin 有两个角色，客户端(client)和服务端(server)。 ⚫ 应用程序作为spring boot admin client向为spring boot admin server注册 ⚫ spring boot admin server 的ui界面将spring boot admin client的actuator endpoint上的一些监控信息\n\n使用：\n\nadmin-server：① 创建 admin-server 模块② 导入依赖坐标 admin-starter-server③ 在引导类上启用监控功能@enableadminserveradmin-client：① 创建 admin-client 模块② 导入依赖坐标 admin-starter-client③ 配置相关信息：server地址等④ 启动server和client服务，访问server\n\n\n1\n\n\n\n# 项目部署\n\n> springboot 项目开发完毕后，支持两种方式部署到服务器： ① jar包(官方推荐) ② war包\n\n----------------------------------------",charsets:{cjk:!0}},{title:"Es6入门",frontmatter:{title:"Es6入门",date:"2021-08-22T00:00:00.000Z",tags:["Es6"],categories:["前端"]},regularPath:"/view/docs/web/2021/082221.html",relativePath:"view/docs/web/2021/082221.md",key:"v-6fac1a4f",path:"/view/docs/web/2021/082221.html",headers:[{level:2,title:"Es6 模块化开发",slug:"es6-模块化开发",normalizedTitle:"es6 模块化开发",charIndex:2},{level:3,title:"ES6 模块化的基本语法",slug:"es6-模块化的基本语法",normalizedTitle:"es6 模块化的基本语法",charIndex:331},{level:2,title:"Promise",slug:"promise",normalizedTitle:"promise",charIndex:753},{level:2,title:"async/await",slug:"async-await",normalizedTitle:"async/await",charIndex:1530},{level:3,title:"EventLoop",slug:"eventloop",normalizedTitle:"eventloop",charIndex:1799},{level:2,title:"宏任务和微任务",slug:"宏任务和微任务",normalizedTitle:"宏任务和微任务",charIndex:2022}],lastUpdated:"2021/8/27 下午10:53:09",headersStr:"Es6 模块化开发 ES6 模块化的基本语法 Promise async/await EventLoop 宏任务和微任务",content:"# Es6 模块化开发\n\nEs6 入门可参考：https://es6.ruanyifeng.com/\n\n实现：\n\n * 导入其它模块使用 require() 方法\n * 模块对外共享成员使用 module.exports 对象\n\n好处：降低了沟通的成本，极大方便了各个模块之间的相互调用\n\n> ES6 模块化规范是浏览器端与服务器端通用的模块化开发规范\n\nES6 模块化规范中定义:\n\n * 每个 js 文件都是一个独立的模块\n * 导入其它模块成员使用 import 关键字\n * 向外共享模块成员使用 export 关键字\n\n> 可在 node.js 中进行练习 在 package.json 的根节点中添加 \"type\": \"module\" 节点\n\n\n# ES6 模块化的基本语法\n\n主要包含三种用法：\n\n * 默认导出与默认导入\n   \n   * 默认导出（ export default 默认导出的成员）注意：只允许使用唯一的一次 export default\n   \n   * 默认 导入（ import 接收名称 from '模块标识符'）注意：默认导入时的接收名称可以任意名称，合法的成员名称即可\n\n * 按需导出与按需导入\n   \n   * 导出 export 按需导出的成员\n   \n   * 导入 import { s1 } from '模块标识符'\n   \n   * 注意:\n     \n     * 可以使用多次按需导出,\n     * 按需导入的成员名称必须和按需导出的名称保持一致\n     * 按需导入时，可以使用 as 关键字进行重命名\n     * 按需导入可以和默认导入一起使用\n\n * 直接导入并执行模块中的代码\n   \n   * import 路径 即可\n\n\n# Promise\n\n> 多层回调函数的相互嵌套，就形成了回调地狱,而 Promise 是为了解决这个问题\n\n基本概念\n\n 1. Promise 是一个构造函数\n    * 创建 Promise 的实例 const p = new Promise()\n    * new 出来的 Promise 实例对象，代表一个异步操作\n 2. Promise.prototype 上包含一个 .then() 方法\n    * 每一次 new Promise() 构造函数得到的实例对象\n    * 都可以通过原型链的方式访问到 .then() 方法，例如 p.then()\n 3. .then() 方法用来预先指定成功和失败的回调函数\n    * p.then(成功的回调函数，失败的回调函数)\n    * p.then(result => { }, error => { })\n    * 调用 .then() 方法时，成功的回调函数是必选的、失败的回调函数是可选的\n\n> 基于 then-fs 读取文件内容 需要安装 then-fs 第三方包\n> \n> 提供的 readFile() 方法，可以异步地读取文件的内容，它的返回值是 Promise 的实例对象。因 此可以调用 .then() 方法为每个 Promise 异步操作指定成功和失败之后的回调函数。\n> \n> 其中 Promise 支持链式调用，catch 方法可进行捕获异常和处理\n> \n> Promise.all() 方法会发起并行的 Promise 异步操作，等所有的异步操作全部结束后才会执行下一步的 .then 操作（等待机制）\n> \n> Promise.race() 方法会发起并行的 Promise 异步操作，只要任何一个异步操作完成，就立即执行下一步的 .then 操作（赛跑机制）\n\n\n# async/await\n\n> async/await 是 ES8（ECMAScript 2017）引入的新语法，用来简化 Promise 异步操作.\n\nasync/await 的基本使用\n\n * 如果在 function 中使用了 await，则 function 必须被 async 修饰\n * 在 async 方法中，第一个 await 之前的代码会同步执行，await 之后的代码会异步执行\n\n例：\n\nasync function 方法名() {\n  const r1 = await 异步执行的方法\n}\n\n\n1\n2\n3\n\n\n\n# EventLoop\n\n> JavaScript 是单线程的语言,为了防止某个耗时任务导致程序假死的问题，JavaScript 把待执行的任务分为了两类\n> \n>  * 同步任务（synchronous）\n>  * 异步任务（asynchronous）\n> \n> JavaScript 主线程从“任务队列”中读取异步任务的回调函数，放到执行栈中依次执行。这个过程是循环不断的，所以整个的这种运行机制又称为 EventLoop（事件循环）。\n\n\n# 宏任务和微任务\n\n> JavaScript 把异步任务又做了进一步的划分，异步任务又分为两类:\n> \n>  * 宏任务（macrotask）\n>    * 异步 Ajax 请求\n>    * setTimeout、setInterval、\n>    * 文件操作\n>    * 其它宏任务\n>  * 微任务（microtask）\n>    * Promise.then、.catch 和 .finally\n>    * process.nextTick\n>    * 其它微任务\n\n宏任务和微任务的执行顺序:\n\n每一个宏任务执行完之后，都会检查是否存在待执行的微任务，如果有，则执行完所有微任务之后，再继续执行下一个宏任务。",normalizedContent:"# es6 模块化开发\n\nes6 入门可参考：https://es6.ruanyifeng.com/\n\n实现：\n\n * 导入其它模块使用 require() 方法\n * 模块对外共享成员使用 module.exports 对象\n\n好处：降低了沟通的成本，极大方便了各个模块之间的相互调用\n\n> es6 模块化规范是浏览器端与服务器端通用的模块化开发规范\n\nes6 模块化规范中定义:\n\n * 每个 js 文件都是一个独立的模块\n * 导入其它模块成员使用 import 关键字\n * 向外共享模块成员使用 export 关键字\n\n> 可在 node.js 中进行练习 在 package.json 的根节点中添加 \"type\": \"module\" 节点\n\n\n# es6 模块化的基本语法\n\n主要包含三种用法：\n\n * 默认导出与默认导入\n   \n   * 默认导出（ export default 默认导出的成员）注意：只允许使用唯一的一次 export default\n   \n   * 默认 导入（ import 接收名称 from '模块标识符'）注意：默认导入时的接收名称可以任意名称，合法的成员名称即可\n\n * 按需导出与按需导入\n   \n   * 导出 export 按需导出的成员\n   \n   * 导入 import { s1 } from '模块标识符'\n   \n   * 注意:\n     \n     * 可以使用多次按需导出,\n     * 按需导入的成员名称必须和按需导出的名称保持一致\n     * 按需导入时，可以使用 as 关键字进行重命名\n     * 按需导入可以和默认导入一起使用\n\n * 直接导入并执行模块中的代码\n   \n   * import 路径 即可\n\n\n# promise\n\n> 多层回调函数的相互嵌套，就形成了回调地狱,而 promise 是为了解决这个问题\n\n基本概念\n\n 1. promise 是一个构造函数\n    * 创建 promise 的实例 const p = new promise()\n    * new 出来的 promise 实例对象，代表一个异步操作\n 2. promise.prototype 上包含一个 .then() 方法\n    * 每一次 new promise() 构造函数得到的实例对象\n    * 都可以通过原型链的方式访问到 .then() 方法，例如 p.then()\n 3. .then() 方法用来预先指定成功和失败的回调函数\n    * p.then(成功的回调函数，失败的回调函数)\n    * p.then(result => { }, error => { })\n    * 调用 .then() 方法时，成功的回调函数是必选的、失败的回调函数是可选的\n\n> 基于 then-fs 读取文件内容 需要安装 then-fs 第三方包\n> \n> 提供的 readfile() 方法，可以异步地读取文件的内容，它的返回值是 promise 的实例对象。因 此可以调用 .then() 方法为每个 promise 异步操作指定成功和失败之后的回调函数。\n> \n> 其中 promise 支持链式调用，catch 方法可进行捕获异常和处理\n> \n> promise.all() 方法会发起并行的 promise 异步操作，等所有的异步操作全部结束后才会执行下一步的 .then 操作（等待机制）\n> \n> promise.race() 方法会发起并行的 promise 异步操作，只要任何一个异步操作完成，就立即执行下一步的 .then 操作（赛跑机制）\n\n\n# async/await\n\n> async/await 是 es8（ecmascript 2017）引入的新语法，用来简化 promise 异步操作.\n\nasync/await 的基本使用\n\n * 如果在 function 中使用了 await，则 function 必须被 async 修饰\n * 在 async 方法中，第一个 await 之前的代码会同步执行，await 之后的代码会异步执行\n\n例：\n\nasync function 方法名() {\n  const r1 = await 异步执行的方法\n}\n\n\n1\n2\n3\n\n\n\n# eventloop\n\n> javascript 是单线程的语言,为了防止某个耗时任务导致程序假死的问题，javascript 把待执行的任务分为了两类\n> \n>  * 同步任务（synchronous）\n>  * 异步任务（asynchronous）\n> \n> javascript 主线程从“任务队列”中读取异步任务的回调函数，放到执行栈中依次执行。这个过程是循环不断的，所以整个的这种运行机制又称为 eventloop（事件循环）。\n\n\n# 宏任务和微任务\n\n> javascript 把异步任务又做了进一步的划分，异步任务又分为两类:\n> \n>  * 宏任务（macrotask）\n>    * 异步 ajax 请求\n>    * settimeout、setinterval、\n>    * 文件操作\n>    * 其它宏任务\n>  * 微任务（microtask）\n>    * promise.then、.catch 和 .finally\n>    * process.nexttick\n>    * 其它微任务\n\n宏任务和微任务的执行顺序:\n\n每一个宏任务执行完之后，都会检查是否存在待执行的微任务，如果有，则执行完所有微任务之后，再继续执行下一个宏任务。",charsets:{cjk:!0}},{title:"vue入门",frontmatter:{title:"vue入门",date:"2021-08-22T00:00:00.000Z",tags:["vue"],categories:["前端"]},regularPath:"/view/docs/web/2021/0822.html",relativePath:"view/docs/web/2021/0822.md",key:"v-8a36e722",path:"/view/docs/web/2021/0822.html",headers:[{level:2,title:"Vue 基本使用",slug:"vue-基本使用",normalizedTitle:"vue 基本使用",charIndex:2},{level:2,title:"vue 简介",slug:"vue-简介",normalizedTitle:"vue 简介",charIndex:72},{level:3,title:"MVVM",slug:"mvvm",normalizedTitle:"mvvm",charIndex:627},{level:3,title:"vue3.x 和 vue2.x 版本的对比",slug:"vue3-x-和-vue2-x-版本的对比",normalizedTitle:"vue3.x 和 vue2.x 版本的对比",charIndex:1193},{level:2,title:"vue 指令",slug:"vue-指令",normalizedTitle:"vue 指令",charIndex:1463},{level:3,title:"1. 内容渲染指令",slug:"_1-内容渲染指令",normalizedTitle:"1. 内容渲染指令",charIndex:1474},{level:3,title:"2. 属性绑定指令",slug:"_2-属性绑定指令",normalizedTitle:"2. 属性绑定指令",charIndex:1612},{level:3,title:"3. 事件绑定",slug:"_3-事件绑定",normalizedTitle:"3. 事件绑定",charIndex:1841},{level:3,title:"4. v-model 指令",slug:"_4-v-model-指令",normalizedTitle:"4. v-model 指令",charIndex:2625},{level:3,title:"5. 条件渲染指令",slug:"_5-条件渲染指令",normalizedTitle:"5. 条件渲染指令",charIndex:2848},{level:3,title:"6.列表渲染指令",slug:"_6-列表渲染指令",normalizedTitle:"6.列表渲染指令",charIndex:3352},{level:2,title:"过滤器",slug:"过滤器",normalizedTitle:"过滤器",charIndex:1354},{level:3,title:"过滤器的注意点",slug:"过滤器的注意点",normalizedTitle:"过滤器的注意点",charIndex:3816},{level:2,title:"watch 侦听器",slug:"watch-侦听器",normalizedTitle:"watch 侦听器",charIndex:3962},{level:3,title:"侦听器的格式",slug:"侦听器的格式",normalizedTitle:"侦听器的格式",charIndex:4017},{level:2,title:"计算属性",slug:"计算属性",normalizedTitle:"计算属性",charIndex:4220},{level:2,title:"axios",slug:"axios",normalizedTitle:"axios",charIndex:4335},{level:3,title:"axios 的基本使用",slug:"axios-的基本使用",normalizedTitle:"axios 的基本使用",charIndex:4396},{level:3,title:"配置全局 axios",slug:"配置全局-axios",normalizedTitle:"配置全局 axios",charIndex:5292},{level:2,title:"vue-cli 的使用",slug:"vue-cli-的使用",normalizedTitle:"vue-cli 的使用",charIndex:5627},{level:2,title:"vue 组件",slug:"vue-组件",normalizedTitle:"vue 组件",charIndex:173},{level:3,title:"1.template",slug:"_1-template",normalizedTitle:"1.template",charIndex:6422},{level:3,title:"2.script",slug:"_2-script",normalizedTitle:"2.script",charIndex:6568},{level:3,title:"3.style",slug:"_3-style",normalizedTitle:"3.style",charIndex:6775},{level:3,title:"4.使用组件",slug:"_4-使用组件",normalizedTitle:"4.使用组件",charIndex:6989},{level:3,title:"5. props",slug:"_5-props",normalizedTitle:"5. props",charIndex:7461},{level:3,title:"6.样式冲突问题",slug:"_6-样式冲突问题",normalizedTitle:"6.样式冲突问题",charIndex:7761},{level:2,title:"组件的生命周期",slug:"组件的生命周期",normalizedTitle:"组件的生命周期",charIndex:8151},{level:2,title:"组件间共享数据",slug:"组件间共享数据",normalizedTitle:"组件间共享数据",charIndex:8334},{level:3,title:"父子共享数据：",slug:"父子共享数据",normalizedTitle:"父子共享数据：",charIndex:8368},{level:3,title:"兄弟数据共享：",slug:"兄弟数据共享",normalizedTitle:"兄弟数据共享：",charIndex:8644},{level:3,title:"后代数据共享：",slug:"后代数据共享",normalizedTitle:"后代数据共享：",charIndex:9560},{level:3,title:"vuex",slug:"vuex",normalizedTitle:"vuex",charIndex:155},{level:3,title:"ref:",slug:"ref",normalizedTitle:"ref:",charIndex:10163},{level:2,title:"动态组件",slug:"动态组件",normalizedTitle:"动态组件",charIndex:10734},{level:2,title:"卡槽",slug:"卡槽",normalizedTitle:"卡槽",charIndex:11284},{level:2,title:"自定义指令",slug:"自定义指令",normalizedTitle:"自定义指令",charIndex:12270},{level:2,title:"路由",slug:"路由",normalizedTitle:"路由",charIndex:144},{level:3,title:"vue-router",slug:"vue-router",normalizedTitle:"vue-router",charIndex:133},{level:3,title:"编程式导航：",slug:"编程式导航",normalizedTitle:"编程式导航：",charIndex:15182},{level:3,title:"守卫导航",slug:"守卫导航",normalizedTitle:"守卫导航",charIndex:15581},{level:3,title:"路由模式加404",slug:"路由模式加404",normalizedTitle:"路由模式加404",charIndex:16243},{level:3,title:"路由钩子",slug:"路由钩子",normalizedTitle:"路由钩子",charIndex:16424},{level:2,title:"数组方法：",slug:"数组方法",normalizedTitle:"数组方法：",charIndex:17550}],lastUpdated:"2021/8/27 下午10:53:09",headersStr:"Vue 基本使用 vue 简介 MVVM vue3.x 和 vue2.x 版本的对比 vue 指令 1. 内容渲染指令 2. 属性绑定指令 3. 事件绑定 4. v-model 指令 5. 条件渲染指令 6.列表渲染指令 过滤器 过滤器的注意点 watch 侦听器 侦听器的格式 计算属性 axios axios 的基本使用 配置全局 axios vue-cli 的使用 vue 组件 1.template 2.script 3.style 4.使用组件 5. props 6.样式冲突问题 组件的生命周期 组件间共享数据 父子共享数据： 兄弟数据共享： 后代数据共享： vuex ref: 动态组件 卡槽 自定义指令 路由 vue-router 编程式导航： 守卫导航 路由模式加404 路由钩子 数组方法：",content:"# Vue 基本使用\n\n为了方便开发可以在 vscode 中安装俩个小插件\n\n 1. Vue 3 Snippets\n 2. Vetur\n\n\n# vue 简介\n\n官方文档\n\nvue 是一套用于构建用户界面的前端框架 （全家桶）\n\n>  * vue（核心库）\n>  * vue-router（路由方案）\n>  * vuex（状态管理方案）\n>  * vue 组件库（快速搭建页面 UI 效果的方案）\n> \n> 以及辅助 vue 项目开发的一系列工具\n> \n>  * vue-cli（npm 全局包：一键生成工程化的 vue 项目 - 基 webpack、大而全）\n>  * vite（npm 全局包：一键生成工程化的 vue 项目 - 小而巧）\n>  * vue-devtools（浏览器插件：辅助调试的工具）\n>  * vetur（vscode 插件：提供语法高亮和智能提示）\n\n构建用户页面可分为：\n\n * 指令（渲染页面模板语法）\n * 数据驱动视图 (数据源变化重新渲染)\n * 事件绑定（处理用户和网页间的交换行为）\n\n可用来编写单页面应用程序\n\n> 单页面应用程序\n> \n> 指的是一个 Web 网站中只有唯一的一个 HTML 页面，所有的功能 与交互都在这唯一的一个页面内完成\n\n其特性有：\n\n * 数据驱动视图（视图根据数据自动渲染）\n * 双向数据绑定（from 表单采集数据，ajax 提交数据，此过程可以做到双向绑定）\n\n其底层原理是 MVVM（Mode 数据源、View 视图、ViewModel 就是 vue 的实例）\n\n\n\n\n# MVVM\n\nMVVM 是 vue 实现数据驱动视图和双向数据绑定的核心原理。它把每个 HTML 页面都拆分成了如下三个部分\n\n * View 表示当前页面所渲染的 DOM 结构\n * Model 表示当前页面渲染时所依赖的数据源\n * ViewModel 表示 vue 的实例，它是 MVVM 的核心\n\n调试工具\n\n----------------------------------------\n\nChrome 浏览器在线安装 vue-devtools\n\nvue 2.x 调试工具： https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd\n\nvue 3.x 调试工具： https://chrome.google.com/webstore/detail/vuejs-devtools/ljjemllljcmogpfapbkkighbhhppjdbg\n\n注意：vue2 和 vue3 的浏览器调试工具不能交叉使用！\n\n----------------------------------------\n\n\n# vue3.x 和 vue2.x 版本的对比\n\nvue2.x 中绝大多数的 API 与特性，在 vue3.x 中同样支持。同时，vue3.x 中还新增了 3.x 所特有的功能、并废弃了某些 2.x 中的旧功能\n\n新增的功能例如：\n\n组合式 API、多根节点组件、更好的 TypeScript 支持等\n\n废弃的旧功能如下：\n\n过滤器、不再支持 $on，$off 和 $once 实例方法等\n\n详细变更信息参照官方迁移指南：\n\nhttps://v3.vuejs.org/guide/migration/introduction.html\n\n\n# vue 指令\n\n\n# 1. 内容渲染指令\n\n 1. v-text 指令的缺点：会覆盖元素内部原有的内容！\n 2. {{ }} 插值表达式：在实际开发中用的最多，只是内容的占位符，不会覆盖原有的内容！\n 3. v-html 指令的作用：可以把带有标签的字符串，渲染成真正的 HTML 内容！\n\n\n# 2. 属性绑定指令\n\n> 注意：插值表达式只能用在元素的内容节点中，不能用在元素的属性节点中！\n\n * 在 vue 中，可以使用 v-bind: 指令，为元素的属性动态绑定值；\n\n * 简写是英文的 :\n\n * 在使用 v-bind 属性绑定期间，如果绑定内容需要进行动态拼接，则字符串的外面应该包裹单引号，例如：\n   \n   <div :title=\"'box' + index\">这是一个 div</div>\n   \n   \n   1\n   \n\n\n# 3. 事件绑定\n\n 1. v-on: 简写是 @\n\n 2. 语法格式为：\n    \n    <button @click=\"add\"></button>\n    //input keyup\n    methods: {\n       add() {\n    \t\t\t// 如果在方法中要修改 data 中的数据，可以通过 this 访问到\n    \t\t\tthis.count += 1\n       }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 3. $event 的应用场景：如果默认的事件对象 e 被覆盖了，则可以手动传递一个 $event。例如：\n    \n    <button @click=\"add(3, $event)\"></button>\n    \n    methods: {\n       add(n, e) {\n    \t\t\t// 如果在方法中要修改 data 中的数据，可以通过 this 访问到\n    \t\t\tthis.count += 1\n       }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 4. 事件修饰符：\n    \n    * .prevent(阻止默认行为)\n      \n      <a @click.prevent=\"xxx\">链接</a>\n      \n      \n      1\n      \n    \n    * .stop (阻止事件冒泡)\n      \n      <button @click.stop=\"xxx\">按钮</button>\n      \n      \n      1\n      \n\n\n# 4. v-model 指令\n\n 1. input 输入框\n    * type=\"radio\"\n    * type=\"checkbox\"\n    * type=\"xxxx\"\n 2. textarea\n 3. select\n 4. 修饰符\n    * .number () 自动将用户的输入值转为数值类型\n    * .trim() 自动过滤用户输入的首尾空白字符\n    * lazy() 在“change”时而非“input”时更新\n\n\n# 5. 条件渲染指令\n\n 1. v-show 的原理是：动态为元素添加或移除 display: none 样式，来实现元素的显示和隐藏\n    * 如果要频繁的切换元素的显示状态，用 v-show 性能会更好\n 2. v-if 的原理是：每次动态创建或移除元素，实现元素的显示和隐藏\n    * 如果刚进入页面的时候，某些元素默认不需要被展示，而且后期这个元素很可能也不需要被展示出来，此时 v-if 性能更好\n 3. v-else\n 4. v-else-if\n\n> 在实际开发中，绝大多数情况，不用考虑性能问题，直接使用 v-if 就好了！！！\n\nv-if 指令在使用的时候，有两种方式：\n\n 1. 直接给定一个布尔值 true 或 false\n    \n    <p v-if=\"true\">被 v-if 控制的元素</p>\n    \n    \n    1\n    \n\n 2. 给 v-if 提供一个判断条件，根据判断的结果是 true 或 false，来控制元素的显示和隐藏\n    \n    <p v-if=\"type === 'A'\">良好</p>\n    \n    \n    1\n    \n\n\n# 6.列表渲染指令\n\n> vue 提供了 v-for 指令，用来辅助开发者基于一个数组来循环渲染相似的 UI 结构\n\nv-for 指令需要使用 item in items 的特殊语法: 其中 index 是可选参数 (item, index) in items\n\n * items 是待循环的数组\n * item 是当前的循环项\n\n使用 key 维护列表的状态：为每项提供一个唯一的 key 属性\n\n<li v-for=\"item in list\" :key=\"item.id\"></li>\n\n\n1\n\n\n其中 key：\n\n * key 的值只能是字符串或数字类型\n * key 的值必须具有唯一性（即：key 的值不能重复）\n * 建议把数据项 id 属性的值作为 key 的值（因为 id 属性的值具有唯一性）\n * 使用 index 的值当作 key 的值没有任何意义（因为 index 的值不具有唯一性）\n * 建议使用 v-for 指令时一定要指定 key 的值（既提升性能、又防止列表状态紊乱）\n\n\n# 过滤器\n\n\n# 过滤器的注意点\n\n 1. 要定义到 filters 节点下，本质是一个函数\n 2. 在过滤器函数中，一定要有 return 值\n 3. 在过滤器的形参中，可以获取到“管道符”前面待处理的那个值\n 4. 如果全局过滤器和私有过滤器名字一致，此时按照“就近原则”，调用的是”私有过滤器“\n\n\n# watch 侦听器\n\n> watch 侦听器允许开发者监视数据的变化，从而针对数据的变化做特定的操作\n\n\n# 侦听器的格式\n\n 1. 方法格式的侦听器\n    * 缺点 1：无法在刚进入页面的时候，自动触发！！！\n    * 缺点 2：如果侦听的是一个对象，如果对象中的属性发生了变化，不会触发侦听器！！！\n 2. 对象格式的侦听器\n    * 好处 1：可以通过 immediate 选项，让侦听器自动触发！！！\n    * 好处 2：可以通过 deep 选项，让侦听器深度监听对象中每个属性的变化！！！\n\n\n# 计算属性\n\n特点：\n\n 1. 定义的时候，要被定义为“方法”\n 2. 在使用计算属性的时候，当普通的属性使用即可\n\n好处：\n\n 1. 实现了代码的复用\n 2. 只要计算属性中依赖的数据源变化了，则计算属性会自动重新求值！\n\n\n# axios\n\n> axios 是一个专注于网络请求的库！\n\naxios 会封装成 6 条返回的数据返回的数据\n\n\n\n\n# axios 的基本使用\n\n 1. 发起 GET 请求：\n    \n    axios({\n      // 请求方式\n      method: 'GET',\n      // 请求的地址\n      url: 'http://www.liulongbin.top:3006/api/getbooks',\n      // URL 中的查询参数\n      params: {\n        id: 1\n      }\n    }).then(function(result) {\n      console.log(result)\n    })\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    \n\n 2. 发起 POST 请求：\n    \n    document.querySelector('#btnPost').addEventListener('click', async function() {\n      // 如果调用某个方法的返回值是 Promise 实例，则前面可以添加 await！\n      // await 只能用在被 async “修饰”的方法中\n      const { data: res } = await axios({\n        method: 'POST',\n        url: 'http://www.liulongbin.top:3006/api/post',\n        data: {\n          name: 'zs',\n          age: 20\n        }\n      })\n    \n      console.log(res)\n    })\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n\n# 配置全局 axios\n\n在 main.js 入口文件中，通过 app.config.globalProperties 全局挂载 axios\n\n//配置在main.js中\nimport axios from 'axios'\naxios.defaults.baseURL='请求根路径' //全局配置的请求根路径\nvue.prototype.$http=axios  //自定义$http\n//使用\nasync 方法（）{\nconst{data：res}= await this.$http.get(\"/api/post\")\nor\nconst{data：res}= await this.$http.post()\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# vue-cli 的使用\n\n> vue-cli 是 Vue.js 开发的标准工具。它简化了程序员基于 webpack 创建工程化的 Vue 项目的过程。\n\n中文官网：https://cli.vuejs.org/zh/\n\n安装全局包\n\nnpm install -g @vue/cli\n\n\n1\n\n\n 1. 在终端下运行如下的命令，创建指定名称的项目：\n    \n    vue cerate 项目的名称\n    \n    \n    1\n    \n\n 2. vue 项目中 src 目录的构成：\n    \n    assets 文件夹：存放项目中用到的静态资源文件，例如：css 样式表、图片资源\n    components 文件夹：程序员封装的、可复用的组件，都要放到 components 目录下\n    main.js 是项目的入口文件。整个项目的运行，要先执行 main.js\n    App.vue 是项目的根组件。\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 3. 下载包依赖\n    \n    npm i\n    \n    \n    1\n    \n\n还可以基于 vue ui 创建项目\n\n> 在终端下运行 vue ui 命令，自动在浏览器中打开创建项目的可视化面板\n\n\n# vue 组件\n\n----------------------------------------\n\nvue 组件名以.vue 结尾，封装成可重复使用的 ui 组件\n\n由三部分组成\n\n * template -> 组件的模板结构\n * script -> 组件的 JavaScript 行为\n * style -> 组件的样式\n\n> 注意\n> \n> 其中，每个组件中必须包含 template 模板结构，而 script 行为和 style 样式是可选的组成部分\n\n\n# 1.template\n\n每个组件对应的模板结构，需要定义到 <template> 节点中\n\n> 其作用相当于一个容器，包裹其中元素。\n> \n> 只能包含唯一跟节点。（只能有一个大盒子）\n\n<template>\n  <div><div>\n</template>\n\n\n\n1\n2\n3\n4\n\n\n\n# 2.script\n\n> 封装 js、vue 业务逻辑\n> \n> 其中，data 必须是函数，不能直接指向一个数据对象\n> \n> name 节点为当前组件定义一个名称\n\n<script>\nexport default {\n    name：'m'\ndata() {\n        return {\n\n        }\n    },\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 3.style\n\n> 编写 css 代码\n> \n> 让 style 中支持 less 语法 要在标签加上 lang=\"less\"\n\n<style lang=\"less\">\ndiv {\n  color: red;\n  h1 {\n    font-size: 13px;\n  }\n}\n</style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n> 提示封装不存在父子关系，调用时存在父子关系和兄弟关系，因为组件间可用相互嵌套\n\n\n# 4.使用组件\n\n 1. 创建组件\n\n 2. 导包\n    \n    import Left from '@/components/Left.vue'\n    \n    \n    1\n    \n\n 3. 注册组件\n    \n    components:{\n            Left\n    \n        }\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 插入主键\n    \n     <div class=\"box\">           <left></left>       </div>\n    \n    \n    1\n    \n\n> 如果有插件的化直接写相同名字的标签即可\n\ncomponents 分为私有组件和全局组件\n\n全局组件注册： main.js 入口文件中，通过 Vue.component() 方法\n\nimport Left from \"@/components/Left.vue\"\nVue.component(\"MyCont\",Left)\n\n\n\n1\n2\n3\n\n\n\n# 5. props\n\n----------------------------------------\n\nprops 是组件的自定义属性，在封装通用组件的时候，合理地使用 props 可以极大的提高组件的复用性\n\n特点：只读不可修改，可用传值给 data\n\n其中可设置默认值 default 和 type 类型和必填值 required\n\nprops:{ init:{ default:0, //默认值 type:Number,//类型 require:true //必须 } }, data() { return { count:this.init //传值给count } },\n\n\n1\n\n\n\n# 6.样式冲突问题\n\n> 写在 .vue 组件中的样式会全局生效，因此很容易造成多个组件之间的样式冲突问题\n\n解决方式分俩种：\n\n 1. 可用分配唯一自定义属性，通过自定义属性修改样式控制作用域\n    \n    格式：（data-v-xxxx）\n\n 2. 通过 scoped 属性控制，给 style 节点提供了 scoped 属性\n\n> /deep/样式穿透可解决父元素控制子元素的问题，还可用来修改第三方组件样式等问题\n\n<style lang=\"less\" scoped>\ndiv {\n  color: red;\n  h1 {\n    font-size: 13px;\n  }\n}\n/deep/ div {\n  //样式穿透 控制子元素 和第三方组件样式\n  color: red;\n}\n</style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 组件的生命周期\n\n> 生命周期（Life Cycle）是指一个组件从创建-> 运行 -> 销毁的整个阶段，强调的是一个时间段。 生命周期函数：是由 vue 框架提供的内置函数，会伴随着组件的生命周期，自动按次序执行\n\n\n\n我们可用利用时间周期函数再相应的节点做一些事情，例如：在 created 阶段可用用来发送 ajax 请求渲染数据\n\n详细流程图：\n\n\n\n\n# 组件间共享数据\n\n组件之间常见关系有父子和兄弟，爷孙关系。\n\n\n# 父子共享数据：\n\n父传子：父组件向子组件共享数据需要使用自定义属性\n\n子传父：子组件向父组件共享数据使用自定义事件(可先用 emits 进行事件定义)\n\n//子组件 在方法中添加\nthis.$emit(\"自定义事件\",传输值)\n\n//父组件\n<子组件标签 @自定义事件=\"执行的函数\"> </子组件标签 >\nmothods:{\n 执行的函数(val){//val就是子传输过来的值\n \t接收传输值=val;\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n父子之间双向同步：使用 v-model 指令维护组件内外数据的双向同步\n\n\n\n\n# 兄弟数据共享：\n\n兄弟组件之间数据共享的方案是EventBus，可以借助于第三方的包 mitt 来创建 eventBus 对象，从而实现兄弟组件之间的数据共享\n\n\n\nnpm i mitt@2.1.0\n\n\n1\n\n\n步骤：\n\n 1. 创建 eventBus.js 模块，并向外共享一个 Vue 的实例对象\n    \n    import Vue from 'vue'//向外提供实例export default new Vue()//第二种方案 使用mittimport mitt from ’mitt'const bus = mitt()export default bus\n    \n    \n    1\n    \n\n 2. 在数据发送方，调用 bus.$emit('事件名称', 要发送的数据) 方法触发自定义事件\n    \n    import bus from './eventButs.js' export.default{ data(){ return{ msg:'发送数据' } } methods:{ sendmsg(){ bus.$emit('share',this.msg) } } }\n    \n    \n    1\n    \n\n 3. 在数据接收方，调用 bus.$on('事件名称', 事件处理函数) 方法注册一个自定义事件\n    \n    import bus from './eventButs.js'\n    export.default{\n    data(){\n      return{\n      msgfrom:'接收数据'\n      }\n    }\n    methods:{\n    sendmsg(){\n    bus.$on('share',val=>{\n    \tthis.msgfrom=val\n    })\n    }\n    }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    \n\n\n# 后代数据共享：\n\n> 指的是父节点的组件向其子孙组件共享数据,可以使用 provide 和 inject 实现后代关系组件之间的数据共享\n\n例如：\n\n父组件：通过 provide 方法，对其子孙组件共享数据：还可以结合 computed 函数向下共享响应式的数据\n\nexport default { name: 'App', data() { return { color: 'red' //共享数据 } }, provide() { //向子组件传递数据 return { // color: this.color color: computed(()=> this.color ) //包装为响应式共享数据 } } }\n\n\n1\n\n\n子孙节点通过：inject 接收数据 :父级节点共享的是响应式的数据，则子孙节点必须以 .value 的形式进行使用\n\n<template>\n  <div>\n    <h1>{{ color }}</h1>\n    <h1>响应式数据使用：{{ color.value }}</h1>\n  </div>\n</template>\n<script>\nexport default { inject: ['color'] }\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# vuex\n\n> vuex 是终极的组件之间的数据共享方案。全局数据共享\n\n\n# ref:\n\n----------------------------------------\n\n> ref 用来辅助开发者在不依赖于 jQuery 的情况下，获取 DOM 元素或组件的引用\n\n使用 dom 元素：\n\n//使用的标签\n<h1 ref='myh1'>使用ref</h1>\n//方法\n方法(){\nthis.$refs.myh1.style.color=\"red\"\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n使用组件实例：\n\n//组件标签\n<组件标签 ref='counterRef'></组件标签>\n//方法\n方法(){\n//这里是add是组件标签里面定义的方法\nthis.$refs.counterRef.add();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nthis.$nextTick(cb) 方法:\n\n> 组件的 $nextTick(cb) 方法，会把 cb 回调推迟到下一个 DOM 更新周期之后执行，简单来说就是更新完 dom 操作后让在页面生效,\n> \n> 也可用 updated 当数据改变后操作最新 Dom 结构\n\n<input ref='ipt'></input>\n方法(){\nthis.$nextTick(cb) =>{\n\tthis.$refs.ipt.focus()\n}\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 动态组件\n\n----------------------------------------\n\n> 动态组件指的是动态切换组件的显示与隐藏 vue 提供了一个内置的 <component> 组件，专门用来实现动态组件的渲染,\n> \n> 在默认情况下会当切换时无法保持组件的状态，vue 内置的 <keep-alive> 组件保持动态组件的状态。\n\n<keep-alive>\n<component :is=\"需要展示的组件名称\"></component>\n<keep-alive>\n\n\n1\n2\n3\n\n\nkeep-alive 的生命周期函数\n\n> 当组件被缓存时，会自动触发组件的 deactivated 生命周期函数。 当组件被激活时，会自动触发组件的 activated 生命周期函数\n\n其中有俩个属性：exclude（排除缓存） include(指定缓存) 【俩者二选一】\n\n<keep-alive include=\"组件1，组件2\" ><component :is=\"需要展示的组件名称\"></component><keep-alive>\n\n\n1\n\n\n注册名称{以标签形式使用，每个组件可用用 name 声明自己的名称，结合 keep-alive 实现组件缓存功能，和调试中可看到名称}\n\n\n# 卡槽\n\n> 插槽（Slot）是 vue 为组件的封装者提供的能力。允许开发者在封装组件时，把不确定的、希望由用户指定的 部分定义为插槽,可用来做预留占位符\n\n组件通过 <slot> 元素定义插槽，在组件标签里写的其他内容会被渲染到插槽位置当中。写在 <slot> 标签里面的内容即是后备内容\n\n如果没有定义插槽，在组件标签里写的其他内容会被覆盖或丢弃\n\n<slot> 插槽指定具体的 name 名称，被称为具名插槽，可根据名字指定插槽的位置提供内容\n\n填充内容在 <template> 标签中用 v-slot 或#指定具名插槽为其填充内容\n\n//在a组件中\n<template>\n<div>内容</div>\n<slot name='jie'>后备内容</slot>\n<slot name='da'>后备内容</slot>\n</template>\n\n//在其他组件中调用  先导包 注册组件为A\n<A>\n<template #jie>\n//内容 可用标签\n</template>\n<template v-slot:da>\n//内容 可用标签\n</template>\n</A>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n作用域插槽\n\n> 可以为预留的 <slot> 插槽绑定 props 数据，这种带有 props 数据的 <slot>叫做“作用域插槽”\n> \n> 可用来在插槽组件和填充内容的组件之间传输数据\n\n//设置props自定义属性\n<slot name=\"aa\" :user=\"自定义属性\"></<slot>\n\n//填充内容组件 接收自定义属性的值\n<template #default=\"scope\">\n//进行打印\n{{ scope }}\n</template>\n//也可接收对象\n<template #default={user}>\n//进行打印\n{{ user.name }},{{ user.id }}\n</template>\n//or 直接接收对象的值\n<template #default={ name,id }>\n//进行打印\n{{ name }},{{ id }}\n</template>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 自定义指令\n\nvue 中的自定义指令分为两类，分别是:\n\n * 私有自定义指令 （不常用）\n * 全局自定义指令\n\n私有自定义指令\n\n//在每个 vue 组件中，可以在 directives 节点下声明私有自定义指令\n\ndirectives:{\ndata(){\nreturn{\ncolor222:'red'\n}\n}\ncolor:{\n\t//固定写法   如果update和bind逻辑完全相同，则对象格式的自定义指令可以简写成函数格式\n\tbind(el,binding){//el是元素dom对象\n\t\t//el.style.color=\"red\"\n\t\tel.style.colo=binding.value\n\t}\n}\n}\n//使用  这里是data中的color222\n<h1 v-color=\"color222\" ></h1>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n全局自定义指令：\n\n全局共享的自定义指令需要通过“Vue.directive()”进行声明\n\nVue.directives('color',function(el,binding){\nel.style.color=binding.value\n})\n\n\n1\n2\n3\n\n\n\n# 路由\n\n在 SPA 项目中，不同功能之间的切换，要依赖于前端路由来完成,前端路由是指 Hash 地址与组件之间的对应关系\n\n分类：前端和后端\n\n模式：hash模式和路由模式\n\n前端路由的工作方式\n\n 1. 用户点击页面路由链接\n 2. 导致 url 地址栏 hash 值发生变化\n 3. 前端路由监听 hash 地址变化\n 4. 根据当前 hash 渲染到相应的页面当中\n\n\n\n\n# vue-router\n\n> vue-router 是 vue.js 官方给出的路由解决方案\n\n版本选择：\n\n> vue-router 3.x 只能结合 vue2 进行使用 vue-router 4.x 只能结合 vue3 进行使用\n> \n> 版本 3 和版本 4 的路由最主要的区别：创建路由模块的方式不同！\n\nvue-router 3.x 的官方文档地址：https://router.vuejs.org/zh/ vue-router 4.x 的官方文档地址：https://next.router.vuejs.org/\n\n使用步骤 3.x：\n\n 1. 安装 vue-router 包\n    \n    # 在vue 2.0中\n    npm i vue-router@3.5.2 -S\n    # 在vue 3.0中\n    npm install vue-router@next -S\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 2. 创建路由模块\n    \n    在src原代码目录下，新建 router/index.js 路由模块\n    1.导包\n    import Vue from ’Vue'\n    import VueRouter from 'Vue-router'\n    2.vue安装插件Vue.use函数是用来给vue安装插件的\n    Vue.use(VueRouter)\n    3.创建实例\n    const router=new VueRouter()\n    4.对外提供\n    export default router\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    \n\n 3. 导入并且挂载模块\n    \n    在 src/main.js 入口文件中，导入并挂载路由模块\n    1.导包\n    import router from '@/router' //这里会默认找到router目录的index.js文件\n    new Vue({\n    render: h => h(App)\n    //2 挂载\n    router:router\n    }).\\$mount('#app')\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 4. 声明路由链接和占位符\n    \n    \n    在 src/App.vue 组件中，使用 vue-router 提供的 <router-link> 和 <router-view> 声明路由链接和占位符\n    //在需要的地方\n    <router-link to=\"/home\">首页</router-link>\n    <router-link to=\"/about\">关于</router-link>\n    \n    //展示跳转的页面 占位符\n    <router-view> </router-view>\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 5. 声明路由的匹配规则\n    \n    \n    在 src/router/index.js 路由模块中，通过 routes 数组声明路由的匹配规则 1.导包 导入相关的路由组件 2.创建路由对象\n    new VueRouter({\n    routes:[\n    {path:\"/\",redirect:Home}, //访问/重定向到/home 链接下\n    {path:\"/home\",component:Home},\n    {path:\"/about\",component:About\n    children:[//子路由 访问路径为/about/tab1 or /about/tab2\n    {path:\"tab1\",component:tab1},\n    {path:\"tab2\",component:tab2},\n    {path:\"tab/:id\",component:tab2,props:true}, //一般是详情页 根据 id 展示不同的页面\n    ]\n    },\n    ]\n    })\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n在 children 中 path 为空的是默认子路由\n\n动态路由匹配：使用英文的冒号（:）\n\n$route.params 参数对象：动态路由渲染出来的组件中，可以使用 this.$route.params 对象访问到动态匹配的参数值\n\n使用 props 接收路由参数：vue-router 允许在路由规则中开启 props 传参\n\n声明式导航 & 编程式导航：\n\n * 点击链接为声明式导航（超链接，<router-link> 等）\n * 调用 API 方法实现导航的方式，叫做编程式导航（调用 location.href）\n\n\n# 编程式导航：\n\n * this.$router.push('hash 地址')\n * 跳转到指定 hash 地址，并增加一条历史记录\n * 可用直接跳转到其他路由 在方法中添加 this.$router.push('/home)\n * this.$router.replace('hash 地址')\n * 跳转到指定的 hash 地址，并替换掉当前的历史记录\n * this.$router.go(数值 n)\n * 实现导航历史前进、后退\n * 简化用法：\n * $router.back()（在历史记录中，后退到上一个页面）\n * $router.forward()（在历史记录中，前进到下一个页面）\n\n\n# 守卫导航\n\n----------------------------------------\n\n> 导航守卫可以控制路由的访问权限\n\n全局前置守卫\n\n每次发生路由的导航跳转时，都会触发全局前置守卫。因此，在全局前置守卫中，程序员可以对每个路由进行 访问权限的控制\n\n守卫方法的 3 个形参：next()放行，to 访问路由对象，from 来自路由信息对象\n\n\nconst router=new VueRouter({})//创建路由实例\nrouter.beforeEach(fn) //beforeEach 是前置守卫 当路由跳转可自动促发 fn 回调函数\n\n\n\n1\n2\n3\n4\n\n\n\n\n例如：\n\n\nconst router=new VueRouter({})//创建路由实例\nrouter.beforeEach((to,from,next)=>{\nif(to.path=== '/main'){//访问后台\nconst token=localStorage.getItem('token')//判断是否登录\nif(token){ //合法\nnext() //放行\n}else{\nnext('/login') //否则登录\n}\n}else{\nnext() //不访问后台直接放行\n}\n\n}) //beforeEach 是前置守卫 当路由跳转可自动促发 fn 回调函数\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n除此之外，还有全局 解析、后置、路由独享、组件内的等等守卫\n\n\n# 路由模式加404\n\n> 路由模式是不带#号以/寻找路径 ，需要在index.js路由对应关系中设置 mode：'history'\n> \n>  1. 配置404页面\n> \n>  2. 在index.js中导入模块\n> \n>  3. {path:'*',component:(NotFound) }\n>     \n>     \n>     1\n>     \n\n\n# 路由钩子\n\n路由勾子函数：：\n\n * beforeRouterEnter：在进入路由之前执行\n * beforeRoutereLeave : 在离开路由之前执行\n\n案例 勾子+axios：\n\n 1. 下载axios 在main.js中配置\n    \n    import axios from ‘axios'\n    Vue.prototype.axios=axios;\n    \n    \n    1\n    2\n    \n\n 2. 在使用的组件配置\n    \n     //需要渲染的组件加入\n     <script>\n     export default{\n     \tprops:['id'],\n     \tname:'MemberLeVel',\n     \tbeforeRouterEnter:(to,from,next)=>{\n     \t\tconsole:log('进入会员等级页面')\n     \t\tnext(vm=>{\n     \t\t\n     \t\t})\n     \t},\n     \tbeforeRoutereLeave:(to,from,next)={\n     \t\tconsole:log('离开会员等级页面')\n     \t\tnext()\n     \t},\n     \tmethods:{\n     \t\tgetData:function(){\n     \t\t\tthis.axios({\n     \t\t\tmethod:'get',\n     \t\t\t//这里的数据是放在tomcat上\n     \t\t\turl:'http://localhost:8080/data.json',\n     \t\t\t}).then(function(repos){\n     \t\t\tconsole.log(repos);\n     \t\t\t}\n     \t\t\t).catch(function(error){\n     \t\t\tconsole.log(error);\n     \t\t\t})\n     \t\t}\n     \t}\n     \t\n     }\n     <\/script>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    \n\n\n# 数组方法：\n\n在原有的基础上进行改变：\n\n * push()末尾添加\n * pop()末尾删除\n * shift() 首位删除\n * unshift() 首位添加\n * splice() 拼合\n * sort() 排序\n * reverse() 反转\n\n返回新数组：\n\n * filter()过滤\n * concat()合并\n * slice()提取\n\n遍历:\n\n * forEach（性能比较差,找到元素后不能被终止）\n\n * some （找到元素后 return true 可终止循环）\n\n * every （遍历数组判断某一项都是否为 true）Boolean\n\n * reduce （累加器，循环将其的价格累加起来）\n\n\n//一行代码可省略 return 和大括号\narr.filter(item=>item.state).reduce((累加结构，当前循环次数)=>{ return 表达式或赋值 },初始值)\n\n\n\n1\n2\n3\n4\n\n\n----------------------------------------",normalizedContent:"# vue 基本使用\n\n为了方便开发可以在 vscode 中安装俩个小插件\n\n 1. vue 3 snippets\n 2. vetur\n\n\n# vue 简介\n\n官方文档\n\nvue 是一套用于构建用户界面的前端框架 （全家桶）\n\n>  * vue（核心库）\n>  * vue-router（路由方案）\n>  * vuex（状态管理方案）\n>  * vue 组件库（快速搭建页面 ui 效果的方案）\n> \n> 以及辅助 vue 项目开发的一系列工具\n> \n>  * vue-cli（npm 全局包：一键生成工程化的 vue 项目 - 基 webpack、大而全）\n>  * vite（npm 全局包：一键生成工程化的 vue 项目 - 小而巧）\n>  * vue-devtools（浏览器插件：辅助调试的工具）\n>  * vetur（vscode 插件：提供语法高亮和智能提示）\n\n构建用户页面可分为：\n\n * 指令（渲染页面模板语法）\n * 数据驱动视图 (数据源变化重新渲染)\n * 事件绑定（处理用户和网页间的交换行为）\n\n可用来编写单页面应用程序\n\n> 单页面应用程序\n> \n> 指的是一个 web 网站中只有唯一的一个 html 页面，所有的功能 与交互都在这唯一的一个页面内完成\n\n其特性有：\n\n * 数据驱动视图（视图根据数据自动渲染）\n * 双向数据绑定（from 表单采集数据，ajax 提交数据，此过程可以做到双向绑定）\n\n其底层原理是 mvvm（mode 数据源、view 视图、viewmodel 就是 vue 的实例）\n\n\n\n\n# mvvm\n\nmvvm 是 vue 实现数据驱动视图和双向数据绑定的核心原理。它把每个 html 页面都拆分成了如下三个部分\n\n * view 表示当前页面所渲染的 dom 结构\n * model 表示当前页面渲染时所依赖的数据源\n * viewmodel 表示 vue 的实例，它是 mvvm 的核心\n\n调试工具\n\n----------------------------------------\n\nchrome 浏览器在线安装 vue-devtools\n\nvue 2.x 调试工具： https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd\n\nvue 3.x 调试工具： https://chrome.google.com/webstore/detail/vuejs-devtools/ljjemllljcmogpfapbkkighbhhppjdbg\n\n注意：vue2 和 vue3 的浏览器调试工具不能交叉使用！\n\n----------------------------------------\n\n\n# vue3.x 和 vue2.x 版本的对比\n\nvue2.x 中绝大多数的 api 与特性，在 vue3.x 中同样支持。同时，vue3.x 中还新增了 3.x 所特有的功能、并废弃了某些 2.x 中的旧功能\n\n新增的功能例如：\n\n组合式 api、多根节点组件、更好的 typescript 支持等\n\n废弃的旧功能如下：\n\n过滤器、不再支持 $on，$off 和 $once 实例方法等\n\n详细变更信息参照官方迁移指南：\n\nhttps://v3.vuejs.org/guide/migration/introduction.html\n\n\n# vue 指令\n\n\n# 1. 内容渲染指令\n\n 1. v-text 指令的缺点：会覆盖元素内部原有的内容！\n 2. {{ }} 插值表达式：在实际开发中用的最多，只是内容的占位符，不会覆盖原有的内容！\n 3. v-html 指令的作用：可以把带有标签的字符串，渲染成真正的 html 内容！\n\n\n# 2. 属性绑定指令\n\n> 注意：插值表达式只能用在元素的内容节点中，不能用在元素的属性节点中！\n\n * 在 vue 中，可以使用 v-bind: 指令，为元素的属性动态绑定值；\n\n * 简写是英文的 :\n\n * 在使用 v-bind 属性绑定期间，如果绑定内容需要进行动态拼接，则字符串的外面应该包裹单引号，例如：\n   \n   <div :title=\"'box' + index\">这是一个 div</div>\n   \n   \n   1\n   \n\n\n# 3. 事件绑定\n\n 1. v-on: 简写是 @\n\n 2. 语法格式为：\n    \n    <button @click=\"add\"></button>\n    //input keyup\n    methods: {\n       add() {\n    \t\t\t// 如果在方法中要修改 data 中的数据，可以通过 this 访问到\n    \t\t\tthis.count += 1\n       }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 3. $event 的应用场景：如果默认的事件对象 e 被覆盖了，则可以手动传递一个 $event。例如：\n    \n    <button @click=\"add(3, $event)\"></button>\n    \n    methods: {\n       add(n, e) {\n    \t\t\t// 如果在方法中要修改 data 中的数据，可以通过 this 访问到\n    \t\t\tthis.count += 1\n       }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 4. 事件修饰符：\n    \n    * .prevent(阻止默认行为)\n      \n      <a @click.prevent=\"xxx\">链接</a>\n      \n      \n      1\n      \n    \n    * .stop (阻止事件冒泡)\n      \n      <button @click.stop=\"xxx\">按钮</button>\n      \n      \n      1\n      \n\n\n# 4. v-model 指令\n\n 1. input 输入框\n    * type=\"radio\"\n    * type=\"checkbox\"\n    * type=\"xxxx\"\n 2. textarea\n 3. select\n 4. 修饰符\n    * .number () 自动将用户的输入值转为数值类型\n    * .trim() 自动过滤用户输入的首尾空白字符\n    * lazy() 在“change”时而非“input”时更新\n\n\n# 5. 条件渲染指令\n\n 1. v-show 的原理是：动态为元素添加或移除 display: none 样式，来实现元素的显示和隐藏\n    * 如果要频繁的切换元素的显示状态，用 v-show 性能会更好\n 2. v-if 的原理是：每次动态创建或移除元素，实现元素的显示和隐藏\n    * 如果刚进入页面的时候，某些元素默认不需要被展示，而且后期这个元素很可能也不需要被展示出来，此时 v-if 性能更好\n 3. v-else\n 4. v-else-if\n\n> 在实际开发中，绝大多数情况，不用考虑性能问题，直接使用 v-if 就好了！！！\n\nv-if 指令在使用的时候，有两种方式：\n\n 1. 直接给定一个布尔值 true 或 false\n    \n    <p v-if=\"true\">被 v-if 控制的元素</p>\n    \n    \n    1\n    \n\n 2. 给 v-if 提供一个判断条件，根据判断的结果是 true 或 false，来控制元素的显示和隐藏\n    \n    <p v-if=\"type === 'a'\">良好</p>\n    \n    \n    1\n    \n\n\n# 6.列表渲染指令\n\n> vue 提供了 v-for 指令，用来辅助开发者基于一个数组来循环渲染相似的 ui 结构\n\nv-for 指令需要使用 item in items 的特殊语法: 其中 index 是可选参数 (item, index) in items\n\n * items 是待循环的数组\n * item 是当前的循环项\n\n使用 key 维护列表的状态：为每项提供一个唯一的 key 属性\n\n<li v-for=\"item in list\" :key=\"item.id\"></li>\n\n\n1\n\n\n其中 key：\n\n * key 的值只能是字符串或数字类型\n * key 的值必须具有唯一性（即：key 的值不能重复）\n * 建议把数据项 id 属性的值作为 key 的值（因为 id 属性的值具有唯一性）\n * 使用 index 的值当作 key 的值没有任何意义（因为 index 的值不具有唯一性）\n * 建议使用 v-for 指令时一定要指定 key 的值（既提升性能、又防止列表状态紊乱）\n\n\n# 过滤器\n\n\n# 过滤器的注意点\n\n 1. 要定义到 filters 节点下，本质是一个函数\n 2. 在过滤器函数中，一定要有 return 值\n 3. 在过滤器的形参中，可以获取到“管道符”前面待处理的那个值\n 4. 如果全局过滤器和私有过滤器名字一致，此时按照“就近原则”，调用的是”私有过滤器“\n\n\n# watch 侦听器\n\n> watch 侦听器允许开发者监视数据的变化，从而针对数据的变化做特定的操作\n\n\n# 侦听器的格式\n\n 1. 方法格式的侦听器\n    * 缺点 1：无法在刚进入页面的时候，自动触发！！！\n    * 缺点 2：如果侦听的是一个对象，如果对象中的属性发生了变化，不会触发侦听器！！！\n 2. 对象格式的侦听器\n    * 好处 1：可以通过 immediate 选项，让侦听器自动触发！！！\n    * 好处 2：可以通过 deep 选项，让侦听器深度监听对象中每个属性的变化！！！\n\n\n# 计算属性\n\n特点：\n\n 1. 定义的时候，要被定义为“方法”\n 2. 在使用计算属性的时候，当普通的属性使用即可\n\n好处：\n\n 1. 实现了代码的复用\n 2. 只要计算属性中依赖的数据源变化了，则计算属性会自动重新求值！\n\n\n# axios\n\n> axios 是一个专注于网络请求的库！\n\naxios 会封装成 6 条返回的数据返回的数据\n\n\n\n\n# axios 的基本使用\n\n 1. 发起 get 请求：\n    \n    axios({\n      // 请求方式\n      method: 'get',\n      // 请求的地址\n      url: 'http://www.liulongbin.top:3006/api/getbooks',\n      // url 中的查询参数\n      params: {\n        id: 1\n      }\n    }).then(function(result) {\n      console.log(result)\n    })\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    \n\n 2. 发起 post 请求：\n    \n    document.queryselector('#btnpost').addeventlistener('click', async function() {\n      // 如果调用某个方法的返回值是 promise 实例，则前面可以添加 await！\n      // await 只能用在被 async “修饰”的方法中\n      const { data: res } = await axios({\n        method: 'post',\n        url: 'http://www.liulongbin.top:3006/api/post',\n        data: {\n          name: 'zs',\n          age: 20\n        }\n      })\n    \n      console.log(res)\n    })\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n\n# 配置全局 axios\n\n在 main.js 入口文件中，通过 app.config.globalproperties 全局挂载 axios\n\n//配置在main.js中\nimport axios from 'axios'\naxios.defaults.baseurl='请求根路径' //全局配置的请求根路径\nvue.prototype.$http=axios  //自定义$http\n//使用\nasync 方法（）{\nconst{data：res}= await this.$http.get(\"/api/post\")\nor\nconst{data：res}= await this.$http.post()\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# vue-cli 的使用\n\n> vue-cli 是 vue.js 开发的标准工具。它简化了程序员基于 webpack 创建工程化的 vue 项目的过程。\n\n中文官网：https://cli.vuejs.org/zh/\n\n安装全局包\n\nnpm install -g @vue/cli\n\n\n1\n\n\n 1. 在终端下运行如下的命令，创建指定名称的项目：\n    \n    vue cerate 项目的名称\n    \n    \n    1\n    \n\n 2. vue 项目中 src 目录的构成：\n    \n    assets 文件夹：存放项目中用到的静态资源文件，例如：css 样式表、图片资源\n    components 文件夹：程序员封装的、可复用的组件，都要放到 components 目录下\n    main.js 是项目的入口文件。整个项目的运行，要先执行 main.js\n    app.vue 是项目的根组件。\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 3. 下载包依赖\n    \n    npm i\n    \n    \n    1\n    \n\n还可以基于 vue ui 创建项目\n\n> 在终端下运行 vue ui 命令，自动在浏览器中打开创建项目的可视化面板\n\n\n# vue 组件\n\n----------------------------------------\n\nvue 组件名以.vue 结尾，封装成可重复使用的 ui 组件\n\n由三部分组成\n\n * template -> 组件的模板结构\n * script -> 组件的 javascript 行为\n * style -> 组件的样式\n\n> 注意\n> \n> 其中，每个组件中必须包含 template 模板结构，而 script 行为和 style 样式是可选的组成部分\n\n\n# 1.template\n\n每个组件对应的模板结构，需要定义到 <template> 节点中\n\n> 其作用相当于一个容器，包裹其中元素。\n> \n> 只能包含唯一跟节点。（只能有一个大盒子）\n\n<template>\n  <div><div>\n</template>\n\n\n\n1\n2\n3\n4\n\n\n\n# 2.script\n\n> 封装 js、vue 业务逻辑\n> \n> 其中，data 必须是函数，不能直接指向一个数据对象\n> \n> name 节点为当前组件定义一个名称\n\n<script>\nexport default {\n    name：'m'\ndata() {\n        return {\n\n        }\n    },\n}\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 3.style\n\n> 编写 css 代码\n> \n> 让 style 中支持 less 语法 要在标签加上 lang=\"less\"\n\n<style lang=\"less\">\ndiv {\n  color: red;\n  h1 {\n    font-size: 13px;\n  }\n}\n</style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n> 提示封装不存在父子关系，调用时存在父子关系和兄弟关系，因为组件间可用相互嵌套\n\n\n# 4.使用组件\n\n 1. 创建组件\n\n 2. 导包\n    \n    import left from '@/components/left.vue'\n    \n    \n    1\n    \n\n 3. 注册组件\n    \n    components:{\n            left\n    \n        }\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 插入主键\n    \n     <div class=\"box\">           <left></left>       </div>\n    \n    \n    1\n    \n\n> 如果有插件的化直接写相同名字的标签即可\n\ncomponents 分为私有组件和全局组件\n\n全局组件注册： main.js 入口文件中，通过 vue.component() 方法\n\nimport left from \"@/components/left.vue\"\nvue.component(\"mycont\",left)\n\n\n\n1\n2\n3\n\n\n\n# 5. props\n\n----------------------------------------\n\nprops 是组件的自定义属性，在封装通用组件的时候，合理地使用 props 可以极大的提高组件的复用性\n\n特点：只读不可修改，可用传值给 data\n\n其中可设置默认值 default 和 type 类型和必填值 required\n\nprops:{ init:{ default:0, //默认值 type:number,//类型 require:true //必须 } }, data() { return { count:this.init //传值给count } },\n\n\n1\n\n\n\n# 6.样式冲突问题\n\n> 写在 .vue 组件中的样式会全局生效，因此很容易造成多个组件之间的样式冲突问题\n\n解决方式分俩种：\n\n 1. 可用分配唯一自定义属性，通过自定义属性修改样式控制作用域\n    \n    格式：（data-v-xxxx）\n\n 2. 通过 scoped 属性控制，给 style 节点提供了 scoped 属性\n\n> /deep/样式穿透可解决父元素控制子元素的问题，还可用来修改第三方组件样式等问题\n\n<style lang=\"less\" scoped>\ndiv {\n  color: red;\n  h1 {\n    font-size: 13px;\n  }\n}\n/deep/ div {\n  //样式穿透 控制子元素 和第三方组件样式\n  color: red;\n}\n</style>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 组件的生命周期\n\n> 生命周期（life cycle）是指一个组件从创建-> 运行 -> 销毁的整个阶段，强调的是一个时间段。 生命周期函数：是由 vue 框架提供的内置函数，会伴随着组件的生命周期，自动按次序执行\n\n\n\n我们可用利用时间周期函数再相应的节点做一些事情，例如：在 created 阶段可用用来发送 ajax 请求渲染数据\n\n详细流程图：\n\n\n\n\n# 组件间共享数据\n\n组件之间常见关系有父子和兄弟，爷孙关系。\n\n\n# 父子共享数据：\n\n父传子：父组件向子组件共享数据需要使用自定义属性\n\n子传父：子组件向父组件共享数据使用自定义事件(可先用 emits 进行事件定义)\n\n//子组件 在方法中添加\nthis.$emit(\"自定义事件\",传输值)\n\n//父组件\n<子组件标签 @自定义事件=\"执行的函数\"> </子组件标签 >\nmothods:{\n 执行的函数(val){//val就是子传输过来的值\n \t接收传输值=val;\n }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n父子之间双向同步：使用 v-model 指令维护组件内外数据的双向同步\n\n\n\n\n# 兄弟数据共享：\n\n兄弟组件之间数据共享的方案是eventbus，可以借助于第三方的包 mitt 来创建 eventbus 对象，从而实现兄弟组件之间的数据共享\n\n\n\nnpm i mitt@2.1.0\n\n\n1\n\n\n步骤：\n\n 1. 创建 eventbus.js 模块，并向外共享一个 vue 的实例对象\n    \n    import vue from 'vue'//向外提供实例export default new vue()//第二种方案 使用mittimport mitt from ’mitt'const bus = mitt()export default bus\n    \n    \n    1\n    \n\n 2. 在数据发送方，调用 bus.$emit('事件名称', 要发送的数据) 方法触发自定义事件\n    \n    import bus from './eventbuts.js' export.default{ data(){ return{ msg:'发送数据' } } methods:{ sendmsg(){ bus.$emit('share',this.msg) } } }\n    \n    \n    1\n    \n\n 3. 在数据接收方，调用 bus.$on('事件名称', 事件处理函数) 方法注册一个自定义事件\n    \n    import bus from './eventbuts.js'\n    export.default{\n    data(){\n      return{\n      msgfrom:'接收数据'\n      }\n    }\n    methods:{\n    sendmsg(){\n    bus.$on('share',val=>{\n    \tthis.msgfrom=val\n    })\n    }\n    }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    \n\n\n# 后代数据共享：\n\n> 指的是父节点的组件向其子孙组件共享数据,可以使用 provide 和 inject 实现后代关系组件之间的数据共享\n\n例如：\n\n父组件：通过 provide 方法，对其子孙组件共享数据：还可以结合 computed 函数向下共享响应式的数据\n\nexport default { name: 'app', data() { return { color: 'red' //共享数据 } }, provide() { //向子组件传递数据 return { // color: this.color color: computed(()=> this.color ) //包装为响应式共享数据 } } }\n\n\n1\n\n\n子孙节点通过：inject 接收数据 :父级节点共享的是响应式的数据，则子孙节点必须以 .value 的形式进行使用\n\n<template>\n  <div>\n    <h1>{{ color }}</h1>\n    <h1>响应式数据使用：{{ color.value }}</h1>\n  </div>\n</template>\n<script>\nexport default { inject: ['color'] }\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# vuex\n\n> vuex 是终极的组件之间的数据共享方案。全局数据共享\n\n\n# ref:\n\n----------------------------------------\n\n> ref 用来辅助开发者在不依赖于 jquery 的情况下，获取 dom 元素或组件的引用\n\n使用 dom 元素：\n\n//使用的标签\n<h1 ref='myh1'>使用ref</h1>\n//方法\n方法(){\nthis.$refs.myh1.style.color=\"red\"\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n使用组件实例：\n\n//组件标签\n<组件标签 ref='counterref'></组件标签>\n//方法\n方法(){\n//这里是add是组件标签里面定义的方法\nthis.$refs.counterref.add();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nthis.$nexttick(cb) 方法:\n\n> 组件的 $nexttick(cb) 方法，会把 cb 回调推迟到下一个 dom 更新周期之后执行，简单来说就是更新完 dom 操作后让在页面生效,\n> \n> 也可用 updated 当数据改变后操作最新 dom 结构\n\n<input ref='ipt'></input>\n方法(){\nthis.$nexttick(cb) =>{\n\tthis.$refs.ipt.focus()\n}\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 动态组件\n\n----------------------------------------\n\n> 动态组件指的是动态切换组件的显示与隐藏 vue 提供了一个内置的 <component> 组件，专门用来实现动态组件的渲染,\n> \n> 在默认情况下会当切换时无法保持组件的状态，vue 内置的 <keep-alive> 组件保持动态组件的状态。\n\n<keep-alive>\n<component :is=\"需要展示的组件名称\"></component>\n<keep-alive>\n\n\n1\n2\n3\n\n\nkeep-alive 的生命周期函数\n\n> 当组件被缓存时，会自动触发组件的 deactivated 生命周期函数。 当组件被激活时，会自动触发组件的 activated 生命周期函数\n\n其中有俩个属性：exclude（排除缓存） include(指定缓存) 【俩者二选一】\n\n<keep-alive include=\"组件1，组件2\" ><component :is=\"需要展示的组件名称\"></component><keep-alive>\n\n\n1\n\n\n注册名称{以标签形式使用，每个组件可用用 name 声明自己的名称，结合 keep-alive 实现组件缓存功能，和调试中可看到名称}\n\n\n# 卡槽\n\n> 插槽（slot）是 vue 为组件的封装者提供的能力。允许开发者在封装组件时，把不确定的、希望由用户指定的 部分定义为插槽,可用来做预留占位符\n\n组件通过 <slot> 元素定义插槽，在组件标签里写的其他内容会被渲染到插槽位置当中。写在 <slot> 标签里面的内容即是后备内容\n\n如果没有定义插槽，在组件标签里写的其他内容会被覆盖或丢弃\n\n<slot> 插槽指定具体的 name 名称，被称为具名插槽，可根据名字指定插槽的位置提供内容\n\n填充内容在 <template> 标签中用 v-slot 或#指定具名插槽为其填充内容\n\n//在a组件中\n<template>\n<div>内容</div>\n<slot name='jie'>后备内容</slot>\n<slot name='da'>后备内容</slot>\n</template>\n\n//在其他组件中调用  先导包 注册组件为a\n<a>\n<template #jie>\n//内容 可用标签\n</template>\n<template v-slot:da>\n//内容 可用标签\n</template>\n</a>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n作用域插槽\n\n> 可以为预留的 <slot> 插槽绑定 props 数据，这种带有 props 数据的 <slot>叫做“作用域插槽”\n> \n> 可用来在插槽组件和填充内容的组件之间传输数据\n\n//设置props自定义属性\n<slot name=\"aa\" :user=\"自定义属性\"></<slot>\n\n//填充内容组件 接收自定义属性的值\n<template #default=\"scope\">\n//进行打印\n{{ scope }}\n</template>\n//也可接收对象\n<template #default={user}>\n//进行打印\n{{ user.name }},{{ user.id }}\n</template>\n//or 直接接收对象的值\n<template #default={ name,id }>\n//进行打印\n{{ name }},{{ id }}\n</template>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 自定义指令\n\nvue 中的自定义指令分为两类，分别是:\n\n * 私有自定义指令 （不常用）\n * 全局自定义指令\n\n私有自定义指令\n\n//在每个 vue 组件中，可以在 directives 节点下声明私有自定义指令\n\ndirectives:{\ndata(){\nreturn{\ncolor222:'red'\n}\n}\ncolor:{\n\t//固定写法   如果update和bind逻辑完全相同，则对象格式的自定义指令可以简写成函数格式\n\tbind(el,binding){//el是元素dom对象\n\t\t//el.style.color=\"red\"\n\t\tel.style.colo=binding.value\n\t}\n}\n}\n//使用  这里是data中的color222\n<h1 v-color=\"color222\" ></h1>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n全局自定义指令：\n\n全局共享的自定义指令需要通过“vue.directive()”进行声明\n\nvue.directives('color',function(el,binding){\nel.style.color=binding.value\n})\n\n\n1\n2\n3\n\n\n\n# 路由\n\n在 spa 项目中，不同功能之间的切换，要依赖于前端路由来完成,前端路由是指 hash 地址与组件之间的对应关系\n\n分类：前端和后端\n\n模式：hash模式和路由模式\n\n前端路由的工作方式\n\n 1. 用户点击页面路由链接\n 2. 导致 url 地址栏 hash 值发生变化\n 3. 前端路由监听 hash 地址变化\n 4. 根据当前 hash 渲染到相应的页面当中\n\n\n\n\n# vue-router\n\n> vue-router 是 vue.js 官方给出的路由解决方案\n\n版本选择：\n\n> vue-router 3.x 只能结合 vue2 进行使用 vue-router 4.x 只能结合 vue3 进行使用\n> \n> 版本 3 和版本 4 的路由最主要的区别：创建路由模块的方式不同！\n\nvue-router 3.x 的官方文档地址：https://router.vuejs.org/zh/ vue-router 4.x 的官方文档地址：https://next.router.vuejs.org/\n\n使用步骤 3.x：\n\n 1. 安装 vue-router 包\n    \n    # 在vue 2.0中\n    npm i vue-router@3.5.2 -s\n    # 在vue 3.0中\n    npm install vue-router@next -s\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 2. 创建路由模块\n    \n    在src原代码目录下，新建 router/index.js 路由模块\n    1.导包\n    import vue from ’vue'\n    import vuerouter from 'vue-router'\n    2.vue安装插件vue.use函数是用来给vue安装插件的\n    vue.use(vuerouter)\n    3.创建实例\n    const router=new vuerouter()\n    4.对外提供\n    export default router\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    \n\n 3. 导入并且挂载模块\n    \n    在 src/main.js 入口文件中，导入并挂载路由模块\n    1.导包\n    import router from '@/router' //这里会默认找到router目录的index.js文件\n    new vue({\n    render: h => h(app)\n    //2 挂载\n    router:router\n    }).\\$mount('#app')\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n\n 4. 声明路由链接和占位符\n    \n    \n    在 src/app.vue 组件中，使用 vue-router 提供的 <router-link> 和 <router-view> 声明路由链接和占位符\n    //在需要的地方\n    <router-link to=\"/home\">首页</router-link>\n    <router-link to=\"/about\">关于</router-link>\n    \n    //展示跳转的页面 占位符\n    <router-view> </router-view>\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 5. 声明路由的匹配规则\n    \n    \n    在 src/router/index.js 路由模块中，通过 routes 数组声明路由的匹配规则 1.导包 导入相关的路由组件 2.创建路由对象\n    new vuerouter({\n    routes:[\n    {path:\"/\",redirect:home}, //访问/重定向到/home 链接下\n    {path:\"/home\",component:home},\n    {path:\"/about\",component:about\n    children:[//子路由 访问路径为/about/tab1 or /about/tab2\n    {path:\"tab1\",component:tab1},\n    {path:\"tab2\",component:tab2},\n    {path:\"tab/:id\",component:tab2,props:true}, //一般是详情页 根据 id 展示不同的页面\n    ]\n    },\n    ]\n    })\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n在 children 中 path 为空的是默认子路由\n\n动态路由匹配：使用英文的冒号（:）\n\n$route.params 参数对象：动态路由渲染出来的组件中，可以使用 this.$route.params 对象访问到动态匹配的参数值\n\n使用 props 接收路由参数：vue-router 允许在路由规则中开启 props 传参\n\n声明式导航 & 编程式导航：\n\n * 点击链接为声明式导航（超链接，<router-link> 等）\n * 调用 api 方法实现导航的方式，叫做编程式导航（调用 location.href）\n\n\n# 编程式导航：\n\n * this.$router.push('hash 地址')\n * 跳转到指定 hash 地址，并增加一条历史记录\n * 可用直接跳转到其他路由 在方法中添加 this.$router.push('/home)\n * this.$router.replace('hash 地址')\n * 跳转到指定的 hash 地址，并替换掉当前的历史记录\n * this.$router.go(数值 n)\n * 实现导航历史前进、后退\n * 简化用法：\n * $router.back()（在历史记录中，后退到上一个页面）\n * $router.forward()（在历史记录中，前进到下一个页面）\n\n\n# 守卫导航\n\n----------------------------------------\n\n> 导航守卫可以控制路由的访问权限\n\n全局前置守卫\n\n每次发生路由的导航跳转时，都会触发全局前置守卫。因此，在全局前置守卫中，程序员可以对每个路由进行 访问权限的控制\n\n守卫方法的 3 个形参：next()放行，to 访问路由对象，from 来自路由信息对象\n\n\nconst router=new vuerouter({})//创建路由实例\nrouter.beforeeach(fn) //beforeeach 是前置守卫 当路由跳转可自动促发 fn 回调函数\n\n\n\n1\n2\n3\n4\n\n\n\n\n例如：\n\n\nconst router=new vuerouter({})//创建路由实例\nrouter.beforeeach((to,from,next)=>{\nif(to.path=== '/main'){//访问后台\nconst token=localstorage.getitem('token')//判断是否登录\nif(token){ //合法\nnext() //放行\n}else{\nnext('/login') //否则登录\n}\n}else{\nnext() //不访问后台直接放行\n}\n\n}) //beforeeach 是前置守卫 当路由跳转可自动促发 fn 回调函数\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n除此之外，还有全局 解析、后置、路由独享、组件内的等等守卫\n\n\n# 路由模式加404\n\n> 路由模式是不带#号以/寻找路径 ，需要在index.js路由对应关系中设置 mode：'history'\n> \n>  1. 配置404页面\n> \n>  2. 在index.js中导入模块\n> \n>  3. {path:'*',component:(notfound) }\n>     \n>     \n>     1\n>     \n\n\n# 路由钩子\n\n路由勾子函数：：\n\n * beforerouterenter：在进入路由之前执行\n * beforeroutereleave : 在离开路由之前执行\n\n案例 勾子+axios：\n\n 1. 下载axios 在main.js中配置\n    \n    import axios from ‘axios'\n    vue.prototype.axios=axios;\n    \n    \n    1\n    2\n    \n\n 2. 在使用的组件配置\n    \n     //需要渲染的组件加入\n     <script>\n     export default{\n     \tprops:['id'],\n     \tname:'memberlevel',\n     \tbeforerouterenter:(to,from,next)=>{\n     \t\tconsole:log('进入会员等级页面')\n     \t\tnext(vm=>{\n     \t\t\n     \t\t})\n     \t},\n     \tbeforeroutereleave:(to,from,next)={\n     \t\tconsole:log('离开会员等级页面')\n     \t\tnext()\n     \t},\n     \tmethods:{\n     \t\tgetdata:function(){\n     \t\t\tthis.axios({\n     \t\t\tmethod:'get',\n     \t\t\t//这里的数据是放在tomcat上\n     \t\t\turl:'http://localhost:8080/data.json',\n     \t\t\t}).then(function(repos){\n     \t\t\tconsole.log(repos);\n     \t\t\t}\n     \t\t\t).catch(function(error){\n     \t\t\tconsole.log(error);\n     \t\t\t})\n     \t\t}\n     \t}\n     \t\n     }\n     <\/script>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    \n\n\n# 数组方法：\n\n在原有的基础上进行改变：\n\n * push()末尾添加\n * pop()末尾删除\n * shift() 首位删除\n * unshift() 首位添加\n * splice() 拼合\n * sort() 排序\n * reverse() 反转\n\n返回新数组：\n\n * filter()过滤\n * concat()合并\n * slice()提取\n\n遍历:\n\n * foreach（性能比较差,找到元素后不能被终止）\n\n * some （找到元素后 return true 可终止循环）\n\n * every （遍历数组判断某一项都是否为 true）boolean\n\n * reduce （累加器，循环将其的价格累加起来）\n\n\n//一行代码可省略 return 和大括号\narr.filter(item=>item.state).reduce((累加结构，当前循环次数)=>{ return 表达式或赋值 },初始值)\n\n\n\n1\n2\n3\n4\n\n\n----------------------------------------",charsets:{cjk:!0}},{title:"vue补充",frontmatter:{title:"vue补充",date:"2021-08-25T00:00:00.000Z",tags:["vue"],categories:["前端"]},regularPath:"/view/docs/web/2021/0825.html",relativePath:"view/docs/web/2021/0825.md",key:"v-398a4a4f",path:"/view/docs/web/2021/0825.html",headers:[{level:2,title:"",slug:"boxx",normalizedTitle:"",charIndex:0},{level:2,title:"4.x router 版本路由",slug:"_4-x-router-版本路由",normalizedTitle:"4.x router 版本路由",charIndex:6},{level:2,title:"组件库",slug:"组件库",normalizedTitle:"组件库",charIndex:359},{level:2,title:"Element UI",slug:"element-ui",normalizedTitle:"element ui",charIndex:550},{level:2,title:"proxy 跨域代理",slug:"proxy-跨域代理",normalizedTitle:"proxy 跨域代理",charIndex:3143},{level:3,title:"配置代码格式化",slug:"配置代码格式化",normalizedTitle:"配置代码格式化",charIndex:3565}],lastUpdated:"2021/8/27 下午10:53:09",headersStr:" 4.x router 版本路由 组件库 Element UI proxy 跨域代理 配置代码格式化",content:"#\n\n\n# 4.x router 版本路由\n\nimport { createRouter,createWebHashHistory } from 'vue-router' //按需导入对应方法 import MyHome from '路径' import MyAbout from '路径' const router = createRouter({ //创建路由对象 history:createWebHashHistory(), //指定hash管理路由切换 routes:[ //对应关系 {path:'/home',component:myHome},\n{path:'/home',component:MyAbout} ] }) export default router //对外共享\n\n\n1\n2\n\n\n\n# 组件库\n\n> **vue 组件库****和** bootstrap 的区别\n> \n> 二者之间存在本质的区别：\n> \n>  * bootstrap 只提供了纯粹的原材料（ css 样式、HTML 结构以及 JS 特效），需要由开发者做进一步的组装和改造\n>  * vue 组件库是遵循 vue 语法、高度定制的现成组件，开箱即用\n\n最常用的 vue 组件库\n\nPC 端 :\n\n * Element UI（https://element.eleme.cn/#/zh-CN）\n * View UI（http://v1.iviewui.com/）\n\n移动端:\n\n * Mint UI（http://mint-ui.github.io/#!/zh-cn）\n * Vant（https://vant-contrib.gitee.io/vant/#/zh-CN/）\n\n\n# Element UI\n\n> Element UI 是饿了么前端团队开源的一套 PC 端 vue 组件库。支持在 vue2 和 vue3 的项目中使用：\n\n * vue2 的项目使用旧版的 Element UI（https://element.eleme.cn/#/zh-CN）\n * vue3 的项目使用新版的 Element Plus（https://element-plus.gitee.io/#/zh-CN）\n\n使用步骤：\n\n 1. vue2 的项目中安装 element-ui\n    \n    npm i element-ui -S\n    \n    \n    1\n    \n    \n    > 可以一次性完整引入所有的 element-ui 组件，或是根据需求，只按需引入用到的 element-ui 组件\n    > \n    > 完整引入：操作简单，但是会额外引入一些用不到的组件，导致项目体积过大\n    > \n    > 按需引入：操作相对复杂一些，但是只会引入用到的组件，能起到优化项目体积的目的\n\n 2. 引入 element-ui\n    \n    1. 完整引入\n       \n       import Vue from 'vue'\n       import App from './App.vue'\n       \n       // 导入完整的组件\n       import ElementUI from 'emement-ui'\n       \n       // 导入ui样式\n       import 'element-ui/lib/theme-chalk/index.css'\n       \n       //组成组件\n       Vue.use(ElementUI)\n       \n       Vue.config.productionTip = false\n       \n       new Vue({\n         render: h => h(App)\n       }).$mount('#app')\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       13\n       14\n       15\n       16\n       17\n       \n\n 2. 按需引入\n    \n    > 借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的\n    \n    1. 安装 babel-plugin-component\n       \n       npm install babel-plugin-component -D\n       \n       \n       1\n       \n    \n    2. 修改根目录下的 babel.config.js 配置文件，新增 plugins 节点如下\n       \n       module.exports={\n         presets:['@vue/cli-plugin-babel/preset'],\n         plugins:[\n           [\n             'component',\n             {\n               libraryName:'element-ui',\n               styleLibraryName:'theme-chalk'\n             }\n           ]\n         ]\n       }\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       \n    \n    3. 如果你只希望引入部分组件，比如 Button，那么需要在 main.js 中写入以下内容\n       \n       //按需引入\n       import { Button } from 'element-ui'\n       // 注册需要的组件\n       Vue.component(Button.name,Button)\n       //或者为\n       // Vue.use(Button)\n       \n       Vue.config.productionTip = false\n       \n       new Vue({\n         render: h => h(App)\n       }).$mount('#app')\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       \n\n 3. 把组件的导入和注册封装为独立的模块\n    \n    > 在 src 目录下新建 element-ui/index.js 模块\n    > \n    > 导入需要使用的 ui 组件模块\n    > \n    > 分别用 Vue.use 注册即可\n    > \n    > 然后到 main.js 中一次性导入即可\n\n\n# proxy 跨域代理\n\n步骤:\n\n 1. 在 main.js 入口文件中，把 axios 的请求根路径改造为当前 web 项目的根路径\n    \n    axios.defaults.baseURL='http://localhost:8080'\n    \n    \n    1\n    \n\n 2. 在项目根目录下创建 vue.config.js 的配置文件，并声明如下的配置\n    \n    module.exports={\n    devServer:{\n    \tproxy:'https://www.escook.cn'//api项目接口\n    }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n    1. devServer.proxy 提供的代理功能，仅在开发调试阶段生效\n    2. 项目上线发布时，依旧需要 API 接口服务器开启 CORS 跨域资源共享\n\n\n# 配置代码格式化\n\n在根目录下新建 .prettierrc文件 在里面配置\n\n{\n\t//去除分号\n  \"semi\": false,\n  \t//全部使用单引号\n  \"singleQuote\":true\n}\n\n\n1\n2\n3\n4\n5\n6\n",normalizedContent:"#\n\n\n# 4.x router 版本路由\n\nimport { createrouter,createwebhashhistory } from 'vue-router' //按需导入对应方法 import myhome from '路径' import myabout from '路径' const router = createrouter({ //创建路由对象 history:createwebhashhistory(), //指定hash管理路由切换 routes:[ //对应关系 {path:'/home',component:myhome},\n{path:'/home',component:myabout} ] }) export default router //对外共享\n\n\n1\n2\n\n\n\n# 组件库\n\n> **vue 组件库****和** bootstrap 的区别\n> \n> 二者之间存在本质的区别：\n> \n>  * bootstrap 只提供了纯粹的原材料（ css 样式、html 结构以及 js 特效），需要由开发者做进一步的组装和改造\n>  * vue 组件库是遵循 vue 语法、高度定制的现成组件，开箱即用\n\n最常用的 vue 组件库\n\npc 端 :\n\n * element ui（https://element.eleme.cn/#/zh-cn）\n * view ui（http://v1.iviewui.com/）\n\n移动端:\n\n * mint ui（http://mint-ui.github.io/#!/zh-cn）\n * vant（https://vant-contrib.gitee.io/vant/#/zh-cn/）\n\n\n# element ui\n\n> element ui 是饿了么前端团队开源的一套 pc 端 vue 组件库。支持在 vue2 和 vue3 的项目中使用：\n\n * vue2 的项目使用旧版的 element ui（https://element.eleme.cn/#/zh-cn）\n * vue3 的项目使用新版的 element plus（https://element-plus.gitee.io/#/zh-cn）\n\n使用步骤：\n\n 1. vue2 的项目中安装 element-ui\n    \n    npm i element-ui -s\n    \n    \n    1\n    \n    \n    > 可以一次性完整引入所有的 element-ui 组件，或是根据需求，只按需引入用到的 element-ui 组件\n    > \n    > 完整引入：操作简单，但是会额外引入一些用不到的组件，导致项目体积过大\n    > \n    > 按需引入：操作相对复杂一些，但是只会引入用到的组件，能起到优化项目体积的目的\n\n 2. 引入 element-ui\n    \n    1. 完整引入\n       \n       import vue from 'vue'\n       import app from './app.vue'\n       \n       // 导入完整的组件\n       import elementui from 'emement-ui'\n       \n       // 导入ui样式\n       import 'element-ui/lib/theme-chalk/index.css'\n       \n       //组成组件\n       vue.use(elementui)\n       \n       vue.config.productiontip = false\n       \n       new vue({\n         render: h => h(app)\n       }).$mount('#app')\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       13\n       14\n       15\n       16\n       17\n       \n\n 2. 按需引入\n    \n    > 借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的\n    \n    1. 安装 babel-plugin-component\n       \n       npm install babel-plugin-component -d\n       \n       \n       1\n       \n    \n    2. 修改根目录下的 babel.config.js 配置文件，新增 plugins 节点如下\n       \n       module.exports={\n         presets:['@vue/cli-plugin-babel/preset'],\n         plugins:[\n           [\n             'component',\n             {\n               libraryname:'element-ui',\n               stylelibraryname:'theme-chalk'\n             }\n           ]\n         ]\n       }\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       \n    \n    3. 如果你只希望引入部分组件，比如 button，那么需要在 main.js 中写入以下内容\n       \n       //按需引入\n       import { button } from 'element-ui'\n       // 注册需要的组件\n       vue.component(button.name,button)\n       //或者为\n       // vue.use(button)\n       \n       vue.config.productiontip = false\n       \n       new vue({\n         render: h => h(app)\n       }).$mount('#app')\n       \n       \n       1\n       2\n       3\n       4\n       5\n       6\n       7\n       8\n       9\n       10\n       11\n       12\n       \n\n 3. 把组件的导入和注册封装为独立的模块\n    \n    > 在 src 目录下新建 element-ui/index.js 模块\n    > \n    > 导入需要使用的 ui 组件模块\n    > \n    > 分别用 vue.use 注册即可\n    > \n    > 然后到 main.js 中一次性导入即可\n\n\n# proxy 跨域代理\n\n步骤:\n\n 1. 在 main.js 入口文件中，把 axios 的请求根路径改造为当前 web 项目的根路径\n    \n    axios.defaults.baseurl='http://localhost:8080'\n    \n    \n    1\n    \n\n 2. 在项目根目录下创建 vue.config.js 的配置文件，并声明如下的配置\n    \n    module.exports={\n    devserver:{\n    \tproxy:'https://www.escook.cn'//api项目接口\n    }\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n    1. devserver.proxy 提供的代理功能，仅在开发调试阶段生效\n    2. 项目上线发布时，依旧需要 api 接口服务器开启 cors 跨域资源共享\n\n\n# 配置代码格式化\n\n在根目录下新建 .prettierrc文件 在里面配置\n\n{\n\t//去除分号\n  \"semi\": false,\n  \t//全部使用单引号\n  \"singlequote\":true\n}\n\n\n1\n2\n3\n4\n5\n6\n",charsets:{cjk:!0}},{title:"🚗🐄收藏网站",frontmatter:{title:"🚗🐄收藏网站",date:"2021-08-12T00:00:00.000Z",cover:"https://gitee.com/axcmsm/tmp/raw/master/20210816003514.jpg",tags:["工具"],categories:["收藏"]},regularPath:"/view/docs/other/%E6%8A%80%E5%B7%A7/%E6%94%B6%E8%97%8F%E7%BD%91%E7%AB%99.html",relativePath:"view/docs/other/技巧/收藏网站.md",key:"v-f1875250",path:"/view/docs/other/%E6%8A%80%E5%B7%A7/%E6%94%B6%E8%97%8F%E7%BD%91%E7%AB%99.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:2},{level:2,title:"文档类",slug:"文档类",normalizedTitle:"文档类",charIndex:48},{level:2,title:"🤣",slug:"🤣",normalizedTitle:"🤣",charIndex:208},{level:2,title:"模板类",slug:"模板类",normalizedTitle:"模板类",charIndex:263},{level:2,title:"工具类",slug:"工具类",normalizedTitle:"工具类",charIndex:303},{level:2,title:"其他",slug:"其他",normalizedTitle:"其他",charIndex:682}],lastUpdated:"2021/9/9 下午6:51:06",headersStr:"概述 文档类 🤣 模板类 工具类 其他",content:"# 概述\n\n最近收藏夹优点满,把一些暂时不扎用的网站放在这里, 方便以后有用就来找..\n\n\n# 文档类\n\nday.js 中文网 https://dayjs.fenxianglu.cn/ 基础java教程 http://c.biancheng.net/java/ vue cl https://cli.vuejs.org/zh/ vue router https://router.vuejs.org/zh/\n\n\n# 🤣\n\n执教云 https://zjy2.icve.com.cn/portal/login.html\n\n\n# 模板类\n\n网页模板 https://www.ym4j.com/temp\n\n\n# 工具类\n\njson在线格式化 https://www.bejson.com/ 超级鹰 https://www.chaojiying.com/ 华为云镜像 https://mirrors.huaweicloud.com/home showdoc https://www.showdoc.com.cn/ 别人工具箱 http://bk.xiat123.cn/view/navigation/\n\n\n# 学习类\n\n慕课网 https://www.imooc.com/ 阿里云实验室 https://start.aliyun.com/ 小项目 https://juejin.cn/post/6844903823966732302#heading-13 狐狸 https://www.freeaihub.com/aboutus/study-route.html\n\n\n# 其他\n\n... https://zyj_yida.gitee.io/pic/ 镜像加数 https://juejin.cn/post/6844903966912823310",normalizedContent:"# 概述\n\n最近收藏夹优点满,把一些暂时不扎用的网站放在这里, 方便以后有用就来找..\n\n\n# 文档类\n\nday.js 中文网 https://dayjs.fenxianglu.cn/ 基础java教程 http://c.biancheng.net/java/ vue cl https://cli.vuejs.org/zh/ vue router https://router.vuejs.org/zh/\n\n\n# 🤣\n\n执教云 https://zjy2.icve.com.cn/portal/login.html\n\n\n# 模板类\n\n网页模板 https://www.ym4j.com/temp\n\n\n# 工具类\n\njson在线格式化 https://www.bejson.com/ 超级鹰 https://www.chaojiying.com/ 华为云镜像 https://mirrors.huaweicloud.com/home showdoc https://www.showdoc.com.cn/ 别人工具箱 http://bk.xiat123.cn/view/navigation/\n\n\n# 学习类\n\n慕课网 https://www.imooc.com/ 阿里云实验室 https://start.aliyun.com/ 小项目 https://juejin.cn/post/6844903823966732302#heading-13 狐狸 https://www.freeaihub.com/aboutus/study-route.html\n\n\n# 其他\n\n... https://zyj_yida.gitee.io/pic/ 镜像加数 https://juejin.cn/post/6844903966912823310",charsets:{cjk:!0}},{title:"vuex入门",frontmatter:{title:"vuex入门",date:"2021-08-23T00:00:00.000Z",cover:null,tags:["vue","vuex"],categories:["前端"]},regularPath:"/view/docs/web/2021/vuex.html",relativePath:"view/docs/web/2021/vuex.md",key:"v-2e5792a2",path:"/view/docs/web/2021/vuex.html",headers:[{level:2,title:"Vuex 概述",slug:"vuex-概述",normalizedTitle:"vuex 概述",charIndex:2},{level:2,title:"vuex 的基本使用",slug:"vuex-的基本使用",normalizedTitle:"vuex 的基本使用",charIndex:276},{level:2,title:"vuex 主要核心概念",slug:"vuex-主要核心概念",normalizedTitle:"vuex 主要核心概念",charIndex:803},{level:3,title:"State",slug:"state",normalizedTitle:"state",charIndex:819},{level:3,title:"Mutation",slug:"mutation",normalizedTitle:"mutation",charIndex:1314},{level:3,title:"Action",slug:"action",normalizedTitle:"action",charIndex:2517},{level:3,title:"Getter",slug:"getter",normalizedTitle:"getter",charIndex:3326}],lastUpdated:"2021/8/27 下午10:53:09",headersStr:"Vuex 概述 vuex 的基本使用 vuex 主要核心概念 State Mutation Action Getter",content:"# Vuex 概述\n\n回顾数据共享方式：\n\n * 父传子：v-bind : 属性绑定\n * 子传父：v-on : @ 事件绑定\n * 兄弟之间：EventBus\n   * $on 接收数据\n   * $emit 发送数据\n * 以上适用于小范围的共享数据\n\n> Vuex 是实现组件全局状态的一种管理机制，可用方便的实现组件之间数据的共享。\n\n\n\n好处：\n\n * 能够在 Vuex 中集中管理共享数据，易于开发和维护\n * 能够高效实现组件之间的数据共享，提高开发效率\n * 存储 Vuex 中的数据都是响应式的，更够实时保持数据与页面的同步\n\n\n# vuex 的基本使用\n\n 1. 安装 vuex 依赖包\n    \n    npm install vuex --save\n    \n    \n    1\n    \n\n 2. 导入 vuex 包\n    \n    import Vuex from 'vuex'\n    Vue.use(Vuex)\n    \n    \n    1\n    2\n    \n\n 3. 创建 store 对象\n    \n    const store = new Vuex.Store({\n    //state 中存放的是全局数据\n    \tstate:{ count:0 }\n    })\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 将 store 对象挂载到 vue 实例中\n    \n    new Vue({\n    \tel:'#app',\n    \trender:h=>h(app),\n    \trouter,\n    \t//所有组件都可用从store获取quan\n    \tstore\n    })\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n\n\n# vuex 主要核心概念\n\n\n# State\n\n> state 提供唯一的公共数据源，所有共享数据统一放到 store 的 state 中进行存储\n\n//创建store数据源，提供唯一公共数据\nconst store=new Vuex.Store({\n\tstate:{count:0}\n})\n\n\n1\n2\n3\n4\n\n\n访问 state 数据\n\n * 方法 1\n   \n   this.$store.state.全局数据名称\n   //在template中this可省略\n   \n   \n   1\n   2\n   \n\n * 方法 2\n   \n   1. 从 vuex 中按需导入 mapState 函数\n      \n      import { mapState } from ’vuex'\n      \n      \n      1\n      \n\n 2. 将全局数据映射为 当前组件的计算属性\n    \n    computed:{\n    \t...mapState(['count'])\n    \t//...是展开运算符\n    }\n    \n    \n    1\n    2\n    3\n    4\n    \n\n\n# Mutation\n\n> Mutation 用于变更 store 中的数据\n> \n> 只能通过 Mutation 口模型变更，不可直接操作 store 的数据，这样可以直接监控数据的变化\n\n * 方式 1\n   \n   1. 定义：\n      \n      export default new Vuex.Store({\n        state: {\n          count: 0\n        },\n        mutations: {\n      \t//step 是传递的参数\n          addN(state,step) {\n            // 变更状态\n      \t state.count+=step\n          }\n          add(state) {\n            // 变更状态\n            state.count++\n          }\n        },\n        actions: {},\n        modules: {}\n      })\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      \n   \n   2. 触发\n      \n       methods: {\n       \t//@方法\n          add1 () {\n            this.$store.commit('add')\n      \t\t//传递参数\n       \t  this.$store.commit('addN',3)\n          }\n        }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      \n\n * 方式 2\n   \n   1. vuex 中按需导入 mapmutations 函数\n      \n      import [ mapMutations ] from 'vuex'\n      \n      \n      1\n      \n   \n   2. 将需要的 mutations 函数，映射为当前组件的方法\n      \n      methods:{ ...mapMutations(['add','addN']) }\n      \n      \n      1\n      \n\n> 不要在 Mutation 函数中执行异步操作\n\n\n# Action\n\n> action 是用与处理异步任务的\n\n定义：\n\nexport default new Vuex.Store({\n  state: {\n    count: 0\n  },\n  mutations: {\n    add  (state) {\n      // 变更状态\n      state.count++\n    }\n    addN (state,step) {\n      // 变更状态\n      state.count+=step\n    }\n  },\n  actions: {\n    addAsync (context) {\n      // 延时器\n      setTimeout(() => {\n        context.commit('add')\n      }, 1000)\n    },\n    //携带参数\n     addAsyncN (context,step) {\n      // 延时器\n      setTimeout(() => {\n        context.commit('addN',step)\n      }, 1000)\n    }\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n触发：\n\nmethods: { add1 () { // 触发 this.$store.dispatch('addAsync') //携带参数 this.$store.dispatch('addAsyncN',5) } }\n\n\n1\n\n\n第二种方式：\n\n 1. 按需导入 mapActions\n 2. 映射为 methods 函数 ...mapActions(['addAsync','addAsyncN'])\n\n\n# Getter\n\n----------------------------------------\n\n> Getter 用于对 Store 中的数据进行加工处理形成新的数据\n> \n>  1. Getter 对已有的 Store 数据进行加工形成新的数据。\n>  2. Store 数据发生变化，Getter 的数据也会跟着变化。\n\n定义：\n\nexport default new Vuex.Store({ state: { count: 0 }, getters: { showNum: state => { return '当前1最新数量是【' + state.count + '】' } } }\n\n\n1\n\n\n使用：\n\n * 方式 1\n\n * this.$store.getters.名称\n   \n   \n   1\n   \n\n * 方式 2\n   \n   * 按需导入 mapGetters\n   * 进行映射 ...mapGetters(['showNum'])\n\n----------------------------------------",normalizedContent:"# vuex 概述\n\n回顾数据共享方式：\n\n * 父传子：v-bind : 属性绑定\n * 子传父：v-on : @ 事件绑定\n * 兄弟之间：eventbus\n   * $on 接收数据\n   * $emit 发送数据\n * 以上适用于小范围的共享数据\n\n> vuex 是实现组件全局状态的一种管理机制，可用方便的实现组件之间数据的共享。\n\n\n\n好处：\n\n * 能够在 vuex 中集中管理共享数据，易于开发和维护\n * 能够高效实现组件之间的数据共享，提高开发效率\n * 存储 vuex 中的数据都是响应式的，更够实时保持数据与页面的同步\n\n\n# vuex 的基本使用\n\n 1. 安装 vuex 依赖包\n    \n    npm install vuex --save\n    \n    \n    1\n    \n\n 2. 导入 vuex 包\n    \n    import vuex from 'vuex'\n    vue.use(vuex)\n    \n    \n    1\n    2\n    \n\n 3. 创建 store 对象\n    \n    const store = new vuex.store({\n    //state 中存放的是全局数据\n    \tstate:{ count:0 }\n    })\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 将 store 对象挂载到 vue 实例中\n    \n    new vue({\n    \tel:'#app',\n    \trender:h=>h(app),\n    \trouter,\n    \t//所有组件都可用从store获取quan\n    \tstore\n    })\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n\n\n# vuex 主要核心概念\n\n\n# state\n\n> state 提供唯一的公共数据源，所有共享数据统一放到 store 的 state 中进行存储\n\n//创建store数据源，提供唯一公共数据\nconst store=new vuex.store({\n\tstate:{count:0}\n})\n\n\n1\n2\n3\n4\n\n\n访问 state 数据\n\n * 方法 1\n   \n   this.$store.state.全局数据名称\n   //在template中this可省略\n   \n   \n   1\n   2\n   \n\n * 方法 2\n   \n   1. 从 vuex 中按需导入 mapstate 函数\n      \n      import { mapstate } from ’vuex'\n      \n      \n      1\n      \n\n 2. 将全局数据映射为 当前组件的计算属性\n    \n    computed:{\n    \t...mapstate(['count'])\n    \t//...是展开运算符\n    }\n    \n    \n    1\n    2\n    3\n    4\n    \n\n\n# mutation\n\n> mutation 用于变更 store 中的数据\n> \n> 只能通过 mutation 口模型变更，不可直接操作 store 的数据，这样可以直接监控数据的变化\n\n * 方式 1\n   \n   1. 定义：\n      \n      export default new vuex.store({\n        state: {\n          count: 0\n        },\n        mutations: {\n      \t//step 是传递的参数\n          addn(state,step) {\n            // 变更状态\n      \t state.count+=step\n          }\n          add(state) {\n            // 变更状态\n            state.count++\n          }\n        },\n        actions: {},\n        modules: {}\n      })\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      \n   \n   2. 触发\n      \n       methods: {\n       \t//@方法\n          add1 () {\n            this.$store.commit('add')\n      \t\t//传递参数\n       \t  this.$store.commit('addn',3)\n          }\n        }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      \n\n * 方式 2\n   \n   1. vuex 中按需导入 mapmutations 函数\n      \n      import [ mapmutations ] from 'vuex'\n      \n      \n      1\n      \n   \n   2. 将需要的 mutations 函数，映射为当前组件的方法\n      \n      methods:{ ...mapmutations(['add','addn']) }\n      \n      \n      1\n      \n\n> 不要在 mutation 函数中执行异步操作\n\n\n# action\n\n> action 是用与处理异步任务的\n\n定义：\n\nexport default new vuex.store({\n  state: {\n    count: 0\n  },\n  mutations: {\n    add  (state) {\n      // 变更状态\n      state.count++\n    }\n    addn (state,step) {\n      // 变更状态\n      state.count+=step\n    }\n  },\n  actions: {\n    addasync (context) {\n      // 延时器\n      settimeout(() => {\n        context.commit('add')\n      }, 1000)\n    },\n    //携带参数\n     addasyncn (context,step) {\n      // 延时器\n      settimeout(() => {\n        context.commit('addn',step)\n      }, 1000)\n    }\n  }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n触发：\n\nmethods: { add1 () { // 触发 this.$store.dispatch('addasync') //携带参数 this.$store.dispatch('addasyncn',5) } }\n\n\n1\n\n\n第二种方式：\n\n 1. 按需导入 mapactions\n 2. 映射为 methods 函数 ...mapactions(['addasync','addasyncn'])\n\n\n# getter\n\n----------------------------------------\n\n> getter 用于对 store 中的数据进行加工处理形成新的数据\n> \n>  1. getter 对已有的 store 数据进行加工形成新的数据。\n>  2. store 数据发生变化，getter 的数据也会跟着变化。\n\n定义：\n\nexport default new vuex.store({ state: { count: 0 }, getters: { shownum: state => { return '当前1最新数量是【' + state.count + '】' } } }\n\n\n1\n\n\n使用：\n\n * 方式 1\n\n * this.$store.getters.名称\n   \n   \n   1\n   \n\n * 方式 2\n   \n   * 按需导入 mapgetters\n   * 进行映射 ...mapgetters(['shownum'])\n\n----------------------------------------",charsets:{cjk:!0}},{title:"加油 ！",frontmatter:{},regularPath:"/view/docs/web/",relativePath:"view/docs/web/README.md",key:"v-5680aca3",path:"/view/docs/web/",headers:[{level:2,title:"加油 ！",slug:"加油",normalizedTitle:"加油 ！",charIndex:2}],lastUpdated:"2021/8/27 下午11:23:09",headersStr:"加油 ！",content:"# 加油 ！",normalizedContent:"# 加油 ！",charsets:{cjk:!0}},{title:"Echarts笔记",frontmatter:{title:"Echarts笔记",date:"2021-08-27T00:00:00.000Z",tags:["Echarts"],categories:["前端"]},regularPath:"/view/docs/web/2021/Echarts.html",relativePath:"view/docs/web/2021/Echarts.md",key:"v-7476a83e",path:"/view/docs/web/2021/Echarts.html",headers:[{level:2,title:"ECharts的基本使用",slug:"echarts的基本使用",normalizedTitle:"echarts的基本使用",charIndex:2},{level:2,title:"ECharts常用的图表",slug:"echarts常用的图表",normalizedTitle:"echarts常用的图表",charIndex:886},{level:2,title:"配置项小结",slug:"配置项小结",normalizedTitle:"配置项小结",charIndex:1119},{level:3,title:"通用配置：",slug:"通用配置",normalizedTitle:"通用配置：",charIndex:1129},{level:3,title:"直角坐标系配置：",slug:"直角坐标系配置",normalizedTitle:"直角坐标系配置：",charIndex:1514},{level:2,title:"高级配置",slug:"高级配置",normalizedTitle:"高级配置",charIndex:1879},{level:3,title:"显示相关",slug:"显示相关",normalizedTitle:"显示相关",charIndex:1888},{level:2,title:"动画",slug:"动画",normalizedTitle:"动画",charIndex:3407},{level:3,title:"加载动画",slug:"加载动画",normalizedTitle:"加载动画",charIndex:3458},{level:3,title:"增量动画",slug:"增量动画",normalizedTitle:"增量动画",charIndex:3679},{level:3,title:"动画的配置",slug:"动画的配置",normalizedTitle:"动画的配置",charIndex:3814},{level:2,title:"交互API",slug:"交互api",normalizedTitle:"交互api",charIndex:4076},{level:3,title:"全局echarts对象",slug:"全局echarts对象",normalizedTitle:"全局echarts对象",charIndex:4086},{level:3,title:"echartsInstance对象",slug:"echartsinstance对象",normalizedTitle:"echartsinstance对象",charIndex:6643}],lastUpdated:"2021/8/27 下午10:53:09",headersStr:"ECharts的基本使用 ECharts常用的图表 配置项小结 通用配置： 直角坐标系配置： 高级配置 显示相关 动画 加载动画 增量动画 动画的配置 交互API 全局echarts对象 echartsInstance对象",content:"# ECharts的基本使用\n\nECharts官网\n\n使用步骤：\n\n 1. 引入 echarts.js 文件\n    \n    <script src=\"js/echarts.min.js\"><\/script>\n    \n    \n    1\n    \n\n 2. 准备一个呈现图表的盒子\n    \n    <div id=\"main\" style=\"width: 600px;height:400px;\"></div>\t\n    \n    \n    1\n    \n\n 3. 初始化 echarts 实例对象\n    \n    var myChart =echarts.init(document.getElementById('main'))\n    \n    \n    1\n    \n\n 4. 准备配置项\n    \n    var option = {\n      xAxis: { // x轴\n        type: 'category',//类名\n        data: ['小明', '小红', '小王']\n     },\n      yAxis: {// y轴\n        type: 'value'//数组\n     },\n      series: [\n       {\n          name: '语文',\n          type: 'bar',//图标类型\n          data: [70, 92, 87],\n       }\n     ]\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n 5. 将配置项设置给 echarts 实例对象\n    \n    myChart.setOption(option)\n    \n    \n    1\n    \n\n> 除了配置项会发生改变之外,其他的代码 都是固定不变的\n\n\n# ECharts常用的图表\n\n * 柱状图bar（柱状图描述的是分类数据，呈现的是每一个分类中有多少）\n * 折线图 line （分析数据随时间的变化趋势）\n * 散点图 scatter （分析不同维度数据之间的相关性）\n * 饼图 pie （分析不同分类的数据的占比情况）\n * 地图 map （分析不同地理位置上数据的差异）\n * 雷达图 radar（分析多个维度的数据与标准数据的对比情况）\n * 仪表盘图 gauge（展现某个指标的进度或实际情况 ）\n\n\n# 配置项小结\n\n\n# 通用配置：\n\n * title 标题\n   \n   * > textStyle borderWidth borderColor borderRadius 文字样式 边框宽度 边框颜色 边框圆角\n     > \n     > left top right bottom 左边 顶部 右边 底部\n\n * tooltip 提示内容\n   \n   * > trigger triggerOn formatter 触发类型 触发时机 内容自定义\n\n * toolbox.feature\n   \n   * > saveAsImage dataView restore dataZoom magicType 保存图片 数据视图 重置 缩放 图表转换\n\n * legend 图例数据\n   \n   * > data 图例数据, 需要和series数组中某组数据的name值一致\n\n\n# 直角坐标系配置：\n\n> （bar，line，scatee）\n\n * grid\n   \n   SHOW   BORDERWIDTH   BORDERCOLOR   LEFT   TOP   RIGHT\n   是否可见   边框宽度          边框颜色          左边     顶部    右边\n   \n   > 还有宽高和底部等\n\n * axis\n   \n   TYPE   DATA   POSITON\n   轴类型    数据     显示位置\n\n * dataZoom\n   \n   TYPE    XAXISINDEX   YAXISINDEX   START   END\n   缩放块类型   x轴索引         y轴索引         开始      结束\n\n具体详情配置可参照官方手册\n\n\n# 高级配置\n\n\n# 显示相关\n\n----------------------------------------\n\n * 主题 (默认俩款，可自定义)\n   \n   var chart = echarts.init(dom, 'light')\n   var chart = echarts.init(dom, 'dark')\n   \n   \n   1\n   2\n   \n\n * 调色盘（局部全局、渐变色）\n\n * 样式\n\n * 自适应\n   \n   * 步骤1：监听窗口大小变化\n   \n   * 步骤2：在事件处理函数中调用 ECharts 实例对象的 resize 即可\n   \n   * <!DOCTYPE html>\n     <html lang=\"en\">\n     <head>\n       <script src=\"js/echarts.min.js\"><\/script>\n     </head>\n     <body>\n       <div style=\" height:400px;border:1px solid red\"></div>\n     <script>\n       var mCharts = echarts.init(document.querySelector(\"div\"))\n       var xDataArr = ['张三', '李四', '王五', '闰土', '小明', '茅台', '二妞', '大\n     强']\n       var yDataArr = [88, 92, 63, 77, 94, 80, 72, 86]\n       var option = {\n         xAxis: {\n           type: 'category',\n           data: xDataArr\n        },\n         yAxis: {\n           type: 'value'\n        },\n         series: [\n          {\n             type: 'bar',\n             data: yDataArr\n          }\n        ]\n      };\n      mCharts.setOption(option)\n       // 监听window大小变化的事件\n       window.onresize = function () {\n         // 调用echarts示例对象的resize方法\n         mCharts.resize()\n      }\n       // window.onresize = mCharts.resize\n     <\/script>\n     </body>\n     </html>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     \n\n\n# 动画\n\nECharts 已经内置好了加载数据的动画, 我们只需要在合适的时机显示或者隐藏即可\n\n\n# 加载动画\n\n * 显示加载动画\n   \n   * mCharts.showLoading()\n     一般, 我们会在获取图表数据之前 显示加载动画\n     \n     \n     1\n     2\n     \n\n * 隐藏加载动画\n   \n   * mCharts.hideLoading()\n     一般, 我们会在获取图表数据之后 隐藏加载动画, 显示图表\n     \n     \n     1\n     2\n     \n\n\n# 增量动画\n\n----------------------------------------\n\n所有数据的更新都通过 setOption 实现, 我们不用考虑数据到底产生了那些变化, ECharts 会找到两组 数据之间的差异然后通过合适的动画去表现数据的变化\n\n\n# 动画的配置\n\n----------------------------------------\n\n * 开启动画 animation: true\n\n * 动画时长 animationDuration: 5000\n\n * 缓动动画 animationEasing : 'bounceOut'\n   \n   > linear ,线性变化, 这样动画效果会很均匀 bounceOut ,这样动画效果会有一个回弹效果\n\n * 动画阈值 animationThreshold: 8 单种形式的元素数量大于这个阈值时会关闭动画\n\n\n# 交互API\n\n\n# 全局echarts对象\n\n全局 echarts 对象是引入 echarts.js 文件之后就可以直接使用的\n\n * echarts.init（初始化ECharts实例对象 使用主题）\n\n * echarts.registerTheme (注册主题 只有注册过的主题,才能在init方法中使用该主题)\n\n * echarts.registerMap\n   \n   注册地图数据\n   $.get('json/map/china.json', function (chinaJson) {\n         echarts.registerMap('china', chinaJson);\n   });\n   geo组件使用地图数据\n   var option = {\n     geo: {\n        type: 'map',\n        map: 'china',\n    },\n   })\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * echarts.connect\n   \n   * 一个页面中可以有多个独立的图表\n   \n   * 每一个图表对应一个 ECharts 实例对象\n   \n   * connect 可以实现多图关联，传入联动目标为 EChart 实例，支持数组\n     \n     <!DOCTYPE html>\n     <html lang=\"en\">\n     <head>\n       <script src=\"js/echarts.min.js\"><\/script>\n       <script src=\"js/jquery.min.js\"><\/script>\n     </head>\n     <body>\n       <div style=\"width: 600px;height:400px;border:1px solid red\"></div>\n       <div style=\"width: 600px;height:400px;border:1px solid green\" id=\"div1\">\n     </div>\n     <script>\n       var mCharts = echarts.init(document.querySelector(\"div\"), 'itcast')\n       var xDataArr = ['张三', '李四', '王五', '闰土', '小明', '茅台', '二妞', '大\n     强']\n       var yDataArr = [88, 92, 63, 77, 94, 80, 72, 86]\n       var option = {\n         xAxis: {\n           type: 'category',\n           data: xDataArr\n        },\n         toolbox: {\n           feature: {\n             saveAsImage: {}\n          }\n        },\n         yAxis: {\n           type: 'value'\n           },\n         series: [\n          {\n             type: 'bar',\n             data: yDataArr\n          }\n        ]\n      };\n       mCharts.setOption(option)\n       $.get('json/map/china.json', function (chinaJson) {\n         echarts.registerMap('china', chinaJson)\n         var mCharts2 = echarts.init(document.querySelector('#div1'));\n         var option2 = {\n           geo: {\n             type: 'map',\n             map: 'china'\n          }\n        }\n         mCharts2.setOption(option2)\n         echarts.connect([mCharts, mCharts2])\n      })\n     <\/script>\n     </body>\n     </html>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     46\n     47\n     48\n     49\n     50\n     51\n     \n     \n     > 这样, 由于我们打开了toolbox中的saveAsImage, 所以会出现下载图片的按钮. 而通过 echarts.connect([mCharts, mCharts2]) , 此时点击下载图片按钮, 保存下来的图片就是两个图 表的图片了.\n\n\n# echartsInstance对象\n\n----------------------------------------\n\neChartsInstance 对象是通过 echarts.init 方法调用之后得到的\n\n * echartsInstance.setOption (设置或修改图表实例的配置项以及数据 多次调用setOption方法 合并新的配置和旧的配置 增量动画)\n\n * echartsInstance.resize\n   \n   重新计算和绘制图表\n   一般和window对象的resize事件结合使用\n   window.onresize = function(){\n     myChart.resize();\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * echartsInstance.on echartsInstance.off(绑定或者解绑事件处理函数)\n   \n   * 鼠标事件\n     \n     常见事件: 'click'、'dblclick'、'mousedown'、'mousemove'、'mouseup' 等\n     事件参数 arg:  和事件相关的数据信息\n     mCharts.on('click', function (arg) {\n       // console.log(arg)\n       console.log('饼图被点击了')\n     })\n     解绑事件:\n     mCharts.off('click')\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n   \n   * ECharts 事件\n     \n     常见事件:\n     legendselectchanged、'datazoom'、'pieselectchanged'、'mapselectchanged'\n     等\n     事件参数 arg:  和事件相关的数据信息\n     mCharts.on('legendselectchanged', function (arg) {\n       console.log(arg)\n       console.log('图例选择发生了改变...')\n     })\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n\n * echartsInstance.dispatchAction (主动触发某些行为, 使用代码模拟用户的行为)\n   \n   // 触发高亮的行为\n   mCharts.dispatchAction({\n     type: \"highlight\",\n     seriesIndex: 0,\n     dataIndex: 1\n   })\n   // 触发显示提示框的行为\n   mCharts.dispatchAction({\n     type: \"showTip\",\n     seriesIndex: 0,\n     dataIndex: 3\n   })\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * echartsInstance.clear (清空当前实例，会移除实例中所有的组件和表清空之后可以再次 setOption)\n\n * echartsInstance.dispose(销毁实例销毁后实例无法再被使用)\n\n----------------------------------------",normalizedContent:"# echarts的基本使用\n\necharts官网\n\n使用步骤：\n\n 1. 引入 echarts.js 文件\n    \n    <script src=\"js/echarts.min.js\"><\/script>\n    \n    \n    1\n    \n\n 2. 准备一个呈现图表的盒子\n    \n    <div id=\"main\" style=\"width: 600px;height:400px;\"></div>\t\n    \n    \n    1\n    \n\n 3. 初始化 echarts 实例对象\n    \n    var mychart =echarts.init(document.getelementbyid('main'))\n    \n    \n    1\n    \n\n 4. 准备配置项\n    \n    var option = {\n      xaxis: { // x轴\n        type: 'category',//类名\n        data: ['小明', '小红', '小王']\n     },\n      yaxis: {// y轴\n        type: 'value'//数组\n     },\n      series: [\n       {\n          name: '语文',\n          type: 'bar',//图标类型\n          data: [70, 92, 87],\n       }\n     ]\n    }\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n 5. 将配置项设置给 echarts 实例对象\n    \n    mychart.setoption(option)\n    \n    \n    1\n    \n\n> 除了配置项会发生改变之外,其他的代码 都是固定不变的\n\n\n# echarts常用的图表\n\n * 柱状图bar（柱状图描述的是分类数据，呈现的是每一个分类中有多少）\n * 折线图 line （分析数据随时间的变化趋势）\n * 散点图 scatter （分析不同维度数据之间的相关性）\n * 饼图 pie （分析不同分类的数据的占比情况）\n * 地图 map （分析不同地理位置上数据的差异）\n * 雷达图 radar（分析多个维度的数据与标准数据的对比情况）\n * 仪表盘图 gauge（展现某个指标的进度或实际情况 ）\n\n\n# 配置项小结\n\n\n# 通用配置：\n\n * title 标题\n   \n   * > textstyle borderwidth bordercolor borderradius 文字样式 边框宽度 边框颜色 边框圆角\n     > \n     > left top right bottom 左边 顶部 右边 底部\n\n * tooltip 提示内容\n   \n   * > trigger triggeron formatter 触发类型 触发时机 内容自定义\n\n * toolbox.feature\n   \n   * > saveasimage dataview restore datazoom magictype 保存图片 数据视图 重置 缩放 图表转换\n\n * legend 图例数据\n   \n   * > data 图例数据, 需要和series数组中某组数据的name值一致\n\n\n# 直角坐标系配置：\n\n> （bar，line，scatee）\n\n * grid\n   \n   show   borderwidth   bordercolor   left   top   right\n   是否可见   边框宽度          边框颜色          左边     顶部    右边\n   \n   > 还有宽高和底部等\n\n * axis\n   \n   type   data   positon\n   轴类型    数据     显示位置\n\n * datazoom\n   \n   type    xaxisindex   yaxisindex   start   end\n   缩放块类型   x轴索引         y轴索引         开始      结束\n\n具体详情配置可参照官方手册\n\n\n# 高级配置\n\n\n# 显示相关\n\n----------------------------------------\n\n * 主题 (默认俩款，可自定义)\n   \n   var chart = echarts.init(dom, 'light')\n   var chart = echarts.init(dom, 'dark')\n   \n   \n   1\n   2\n   \n\n * 调色盘（局部全局、渐变色）\n\n * 样式\n\n * 自适应\n   \n   * 步骤1：监听窗口大小变化\n   \n   * 步骤2：在事件处理函数中调用 echarts 实例对象的 resize 即可\n   \n   * <!doctype html>\n     <html lang=\"en\">\n     <head>\n       <script src=\"js/echarts.min.js\"><\/script>\n     </head>\n     <body>\n       <div style=\" height:400px;border:1px solid red\"></div>\n     <script>\n       var mcharts = echarts.init(document.queryselector(\"div\"))\n       var xdataarr = ['张三', '李四', '王五', '闰土', '小明', '茅台', '二妞', '大\n     强']\n       var ydataarr = [88, 92, 63, 77, 94, 80, 72, 86]\n       var option = {\n         xaxis: {\n           type: 'category',\n           data: xdataarr\n        },\n         yaxis: {\n           type: 'value'\n        },\n         series: [\n          {\n             type: 'bar',\n             data: ydataarr\n          }\n        ]\n      };\n      mcharts.setoption(option)\n       // 监听window大小变化的事件\n       window.onresize = function () {\n         // 调用echarts示例对象的resize方法\n         mcharts.resize()\n      }\n       // window.onresize = mcharts.resize\n     <\/script>\n     </body>\n     </html>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     \n\n\n# 动画\n\necharts 已经内置好了加载数据的动画, 我们只需要在合适的时机显示或者隐藏即可\n\n\n# 加载动画\n\n * 显示加载动画\n   \n   * mcharts.showloading()\n     一般, 我们会在获取图表数据之前 显示加载动画\n     \n     \n     1\n     2\n     \n\n * 隐藏加载动画\n   \n   * mcharts.hideloading()\n     一般, 我们会在获取图表数据之后 隐藏加载动画, 显示图表\n     \n     \n     1\n     2\n     \n\n\n# 增量动画\n\n----------------------------------------\n\n所有数据的更新都通过 setoption 实现, 我们不用考虑数据到底产生了那些变化, echarts 会找到两组 数据之间的差异然后通过合适的动画去表现数据的变化\n\n\n# 动画的配置\n\n----------------------------------------\n\n * 开启动画 animation: true\n\n * 动画时长 animationduration: 5000\n\n * 缓动动画 animationeasing : 'bounceout'\n   \n   > linear ,线性变化, 这样动画效果会很均匀 bounceout ,这样动画效果会有一个回弹效果\n\n * 动画阈值 animationthreshold: 8 单种形式的元素数量大于这个阈值时会关闭动画\n\n\n# 交互api\n\n\n# 全局echarts对象\n\n全局 echarts 对象是引入 echarts.js 文件之后就可以直接使用的\n\n * echarts.init（初始化echarts实例对象 使用主题）\n\n * echarts.registertheme (注册主题 只有注册过的主题,才能在init方法中使用该主题)\n\n * echarts.registermap\n   \n   注册地图数据\n   $.get('json/map/china.json', function (chinajson) {\n         echarts.registermap('china', chinajson);\n   });\n   geo组件使用地图数据\n   var option = {\n     geo: {\n        type: 'map',\n        map: 'china',\n    },\n   })\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * echarts.connect\n   \n   * 一个页面中可以有多个独立的图表\n   \n   * 每一个图表对应一个 echarts 实例对象\n   \n   * connect 可以实现多图关联，传入联动目标为 echart 实例，支持数组\n     \n     <!doctype html>\n     <html lang=\"en\">\n     <head>\n       <script src=\"js/echarts.min.js\"><\/script>\n       <script src=\"js/jquery.min.js\"><\/script>\n     </head>\n     <body>\n       <div style=\"width: 600px;height:400px;border:1px solid red\"></div>\n       <div style=\"width: 600px;height:400px;border:1px solid green\" id=\"div1\">\n     </div>\n     <script>\n       var mcharts = echarts.init(document.queryselector(\"div\"), 'itcast')\n       var xdataarr = ['张三', '李四', '王五', '闰土', '小明', '茅台', '二妞', '大\n     强']\n       var ydataarr = [88, 92, 63, 77, 94, 80, 72, 86]\n       var option = {\n         xaxis: {\n           type: 'category',\n           data: xdataarr\n        },\n         toolbox: {\n           feature: {\n             saveasimage: {}\n          }\n        },\n         yaxis: {\n           type: 'value'\n           },\n         series: [\n          {\n             type: 'bar',\n             data: ydataarr\n          }\n        ]\n      };\n       mcharts.setoption(option)\n       $.get('json/map/china.json', function (chinajson) {\n         echarts.registermap('china', chinajson)\n         var mcharts2 = echarts.init(document.queryselector('#div1'));\n         var option2 = {\n           geo: {\n             type: 'map',\n             map: 'china'\n          }\n        }\n         mcharts2.setoption(option2)\n         echarts.connect([mcharts, mcharts2])\n      })\n     <\/script>\n     </body>\n     </html>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     46\n     47\n     48\n     49\n     50\n     51\n     \n     \n     > 这样, 由于我们打开了toolbox中的saveasimage, 所以会出现下载图片的按钮. 而通过 echarts.connect([mcharts, mcharts2]) , 此时点击下载图片按钮, 保存下来的图片就是两个图 表的图片了.\n\n\n# echartsinstance对象\n\n----------------------------------------\n\nechartsinstance 对象是通过 echarts.init 方法调用之后得到的\n\n * echartsinstance.setoption (设置或修改图表实例的配置项以及数据 多次调用setoption方法 合并新的配置和旧的配置 增量动画)\n\n * echartsinstance.resize\n   \n   重新计算和绘制图表\n   一般和window对象的resize事件结合使用\n   window.onresize = function(){\n     mychart.resize();\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * echartsinstance.on echartsinstance.off(绑定或者解绑事件处理函数)\n   \n   * 鼠标事件\n     \n     常见事件: 'click'、'dblclick'、'mousedown'、'mousemove'、'mouseup' 等\n     事件参数 arg:  和事件相关的数据信息\n     mcharts.on('click', function (arg) {\n       // console.log(arg)\n       console.log('饼图被点击了')\n     })\n     解绑事件:\n     mcharts.off('click')\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n   \n   * echarts 事件\n     \n     常见事件:\n     legendselectchanged、'datazoom'、'pieselectchanged'、'mapselectchanged'\n     等\n     事件参数 arg:  和事件相关的数据信息\n     mcharts.on('legendselectchanged', function (arg) {\n       console.log(arg)\n       console.log('图例选择发生了改变...')\n     })\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n\n * echartsinstance.dispatchaction (主动触发某些行为, 使用代码模拟用户的行为)\n   \n   // 触发高亮的行为\n   mcharts.dispatchaction({\n     type: \"highlight\",\n     seriesindex: 0,\n     dataindex: 1\n   })\n   // 触发显示提示框的行为\n   mcharts.dispatchaction({\n     type: \"showtip\",\n     seriesindex: 0,\n     dataindex: 3\n   })\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * echartsinstance.clear (清空当前实例，会移除实例中所有的组件和表清空之后可以再次 setoption)\n\n * echartsinstance.dispose(销毁实例销毁后实例无法再被使用)\n\n----------------------------------------",charsets:{cjk:!0}},{title:"spark环境搭建",frontmatter:{title:"spark环境搭建",date:"2022-01-23T00:00:00.000Z",tags:["安装"],categories:["安装"]},regularPath:"/view/docs/%E5%AE%89%E8%A3%85/spark%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html",relativePath:"view/docs/安装/spark环境搭建.md",key:"v-7e771070",path:"/view/docs/%E5%AE%89%E8%A3%85/spark%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html",headers:[{level:2,title:"spark环境搭建",slug:"spark环境搭建",normalizedTitle:"spark环境搭建",charIndex:2},{level:2,title:"本地模式",slug:"本地模式",normalizedTitle:"本地模式",charIndex:16},{level:2,title:"yarn模式",slug:"yarn模式",normalizedTitle:"yarn模式",charIndex:264},{level:2,title:"HA模式",slug:"ha模式",normalizedTitle:"ha模式",charIndex:2743},{level:2,title:"集群模式",slug:"集群模式",normalizedTitle:"集群模式",charIndex:3287}],lastUpdated:"2022/1/23 下午8:42:24",headersStr:"spark环境搭建 本地模式 yarn模式 HA模式 集群模式",content:'# spark环境搭建\n\n\n# 本地模式\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/spark-3.0.0-bin-hadoop3.2.tgz -C /opt/module/\nmv /opt/module/spark-3.0.0-bin-hadoop3.2/ /opt/module/spark\n2. 直接启动\n/opt/module/spark/bin/spark-shell\n\nUI 访问端口 http://虚拟机地址:4040\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# yarn模式\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/spark-3.0.0-bin-hadoop3.2.tgz -C /opt/module/\nmv /opt/module/spark-3.0.0-bin-hadoop3.2/ /opt/module/spark\n\n2.修改hadoop中的yarn-site.xml配置文件 记得分发\n\tvim /opt/module/hadoop/etc/hadoop/yarn-site.xml\n\t\n\t#xsync /opt/module/hadoop/etc/hadoop/yarn-site.xml  #分发\n\n3.修改spark中的spark-env.sh  添加java环境变量 添加yarn的环境变量\n\t mv /opt/module/spark/conf/spark-env.sh.template /opt/module/spark/conf/spark-env.sh\n\t vim /opt/module/spark/conf/spark-env.sh \n\t \n4. 启动hdfs 和yarn  创建日志存放目录\n\tstart-dfs.sh\n\tstart-yarn.sh\n\tmr-jobhistory-daemon.sh start historyserver\n\t\n\t\n\thadoop fs -mkdir /yarn-spark-log\n\n5. 配置历史服务器 （如果是hdf是ha的话要指定对应 集群名称 否则找不到具体的namenode）\nmv /opt/module/spark/conf/spark-defaults.conf.template /opt/module/spark/conf/spark-defaults.conf\nvim /opt/module/spark/conf/spark-defaults.conf\n\n5. 修改日志级别\nmv /opt/module/spark/conf/log4j.properties.template /opt/module/spark/conf/log4j.properties\nvim/opt/module/spark/conf/log4j.properties\n#修改\nlog4j.rootCategory=ERROR, console\n\n\t\n7. 启动启动历史服务 \n\t/opt/module/spark/sbin/start-history-server.sh\n\t\n8. 验证 or 提交程序 （3选1）\n1. spark-shell --master yarn\n2. spark-shell --master yarn --deploy-mode client\n3. \nbin/spark-submit \\\n--class org.apache.spark.examples.SparkPi \\\n--master yarn \\\n--deploy-mode cluster \\\n./examples/jars/spark-examples_2.12-3.0.0.jar \\\n10\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n * yarn-site.xml\n   \n   \x3c!--是否启动一个线程检查每个任务正使用的物理内存量，如果任务超出分配值，则直接将其杀掉，默认是 true --\x3e\n   \t<property>\n    \t\t<name>yarn.nodemanager.pmem-check-enabled</name>\n   \t\t <value>false</value>\n   \t</property>\n   \x3c!--是否启动一个线程检查每个任务正使用的虚拟内存量，如果任务超出分配值，则直接将其杀掉，默认是 true --\x3e\n   \t<property>\n   \t\t <name>yarn.nodemanager.vmem-check-enabled</name>\n    \t\t\t<value>false</value>\n   \t</property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * spark-env.sh\n   \n   export JAVA_HOME=/opt/module/jdk1.8.0_212\n   \tYARN_CONF_DIR=/opt/module/hadoop/etc/hadoop\n   \n   #日志\n   export SPARK_HISTORY_OPTS="\n   -Dspark.history.ui.port=18080 \n   -Dspark.history.fs.logDirectory=hdfs://master:8020/directory \n   -Dspark.history.retainedApplications=30"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * spark-defaults\n   \n   spark.eventLog.enabled true\n   spark.eventLog.dir hdfs://master:8020/directory #目录需要提前创建\n   spark.yarn.historyServer.address=master:18080\n   spark.history.ui.port=18080\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# HA模式\n\n1. 停止集群\n2. 启动zk集群\n3. 修改 spark-env.sh 文件\n\t#注释\n\t#SPARK_MASTER_HOST=master\n\t#SPARK_MASTER_PORT=7077\n\t添加如下内容:\n\t#Master 监控页面默认访问端口为 8080，但是可能会和 Zookeeper 冲突，\n\t#所以改成 8989，也可以自定义，访问 UI 监控页面时请注意\n\tSPARK_MASTER_WEBUI_PORT=8989\n\texport SPARK_DAEMON_JAVA_OPTS="\n\t-Dspark.deploy.recoveryMode=ZOOKEEPER \n\t-Dspark.deploy.zookeeper.url=master,slave1,slave2\n\t-Dspark.deploy.zookeeper.dir=/spark"\n4. 分发配置文件\n\txsync conf/\n5. 启动集群\n\tsbin/start-all.sh\n6. 启动备用master (部署master的机器上)\n\tsbin/start-master.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 集群模式\n\n1. 解压文件到指定目录\n2. 修改节点配置文件\n\tcd conf\n\tmv slaves.template slaves  #将模板文件修改成自己的\n\t#添加修改主机节点\n    master\n    slave1\n    slave2\n    \n3. 修改执行配置文件\n\tmv spark-env.sh.template spark-env.sh #将模板文件改名\n\t#添加 JAVA_HOME 环境变量和集群对应的 master 节点\n\texport JAVA_HOME=/opt/module/jdk1.8.0_144\n\tSPARK_MASTER_HOST=hadoop111\n\tSPARK_MASTER_PORT=7077 #内部通信端口类似8020\n4. 分发修改好的压缩目录\t\n\txsync spark-standalone\n5. 启动or关闭\n\t/opt/module/spark/sbin/start-all.sh  #启动\nUI访问端口：Web UI 界面: http://master:8080\t\n\n6. 配置历史服务\n\tmv spark-defaults.conf.template spark-defaults.conf \n\t#配置日志存储路径\n\tspark.eventLog.enabled true #开启\n\tspark.eventLog.dir hdfs://master:8020/directory #此目录需要在hdfs上提前创建\n\t#修改 spark-env.sh 文件, 添加日志配置\n    export SPARK_HISTORY_OPTS="\n\t-Dspark.history.ui.port=18080 #日志的WEB UI访问端口\n\t-Dspark.history.fs.logDirectory=hdfs://master:8020/directory #存储路径\n\t-Dspark.history.retainedApplications=30" #保存的历史个数\n\t#分发配置文件\n\txsync conf\n\t#重启集群和历史服务\n\tsbin/start-all.sh\n\tsbin/start-history-server.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n',normalizedContent:'# spark环境搭建\n\n\n# 本地模式\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/spark-3.0.0-bin-hadoop3.2.tgz -c /opt/module/\nmv /opt/module/spark-3.0.0-bin-hadoop3.2/ /opt/module/spark\n2. 直接启动\n/opt/module/spark/bin/spark-shell\n\nui 访问端口 http://虚拟机地址:4040\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# yarn模式\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/spark-3.0.0-bin-hadoop3.2.tgz -c /opt/module/\nmv /opt/module/spark-3.0.0-bin-hadoop3.2/ /opt/module/spark\n\n2.修改hadoop中的yarn-site.xml配置文件 记得分发\n\tvim /opt/module/hadoop/etc/hadoop/yarn-site.xml\n\t\n\t#xsync /opt/module/hadoop/etc/hadoop/yarn-site.xml  #分发\n\n3.修改spark中的spark-env.sh  添加java环境变量 添加yarn的环境变量\n\t mv /opt/module/spark/conf/spark-env.sh.template /opt/module/spark/conf/spark-env.sh\n\t vim /opt/module/spark/conf/spark-env.sh \n\t \n4. 启动hdfs 和yarn  创建日志存放目录\n\tstart-dfs.sh\n\tstart-yarn.sh\n\tmr-jobhistory-daemon.sh start historyserver\n\t\n\t\n\thadoop fs -mkdir /yarn-spark-log\n\n5. 配置历史服务器 （如果是hdf是ha的话要指定对应 集群名称 否则找不到具体的namenode）\nmv /opt/module/spark/conf/spark-defaults.conf.template /opt/module/spark/conf/spark-defaults.conf\nvim /opt/module/spark/conf/spark-defaults.conf\n\n5. 修改日志级别\nmv /opt/module/spark/conf/log4j.properties.template /opt/module/spark/conf/log4j.properties\nvim/opt/module/spark/conf/log4j.properties\n#修改\nlog4j.rootcategory=error, console\n\n\t\n7. 启动启动历史服务 \n\t/opt/module/spark/sbin/start-history-server.sh\n\t\n8. 验证 or 提交程序 （3选1）\n1. spark-shell --master yarn\n2. spark-shell --master yarn --deploy-mode client\n3. \nbin/spark-submit \\\n--class org.apache.spark.examples.sparkpi \\\n--master yarn \\\n--deploy-mode cluster \\\n./examples/jars/spark-examples_2.12-3.0.0.jar \\\n10\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n\n\n * yarn-site.xml\n   \n   \x3c!--是否启动一个线程检查每个任务正使用的物理内存量，如果任务超出分配值，则直接将其杀掉，默认是 true --\x3e\n   \t<property>\n    \t\t<name>yarn.nodemanager.pmem-check-enabled</name>\n   \t\t <value>false</value>\n   \t</property>\n   \x3c!--是否启动一个线程检查每个任务正使用的虚拟内存量，如果任务超出分配值，则直接将其杀掉，默认是 true --\x3e\n   \t<property>\n   \t\t <name>yarn.nodemanager.vmem-check-enabled</name>\n    \t\t\t<value>false</value>\n   \t</property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * spark-env.sh\n   \n   export java_home=/opt/module/jdk1.8.0_212\n   \tyarn_conf_dir=/opt/module/hadoop/etc/hadoop\n   \n   #日志\n   export spark_history_opts="\n   -dspark.history.ui.port=18080 \n   -dspark.history.fs.logdirectory=hdfs://master:8020/directory \n   -dspark.history.retainedapplications=30"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * spark-defaults\n   \n   spark.eventlog.enabled true\n   spark.eventlog.dir hdfs://master:8020/directory #目录需要提前创建\n   spark.yarn.historyserver.address=master:18080\n   spark.history.ui.port=18080\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# ha模式\n\n1. 停止集群\n2. 启动zk集群\n3. 修改 spark-env.sh 文件\n\t#注释\n\t#spark_master_host=master\n\t#spark_master_port=7077\n\t添加如下内容:\n\t#master 监控页面默认访问端口为 8080，但是可能会和 zookeeper 冲突，\n\t#所以改成 8989，也可以自定义，访问 ui 监控页面时请注意\n\tspark_master_webui_port=8989\n\texport spark_daemon_java_opts="\n\t-dspark.deploy.recoverymode=zookeeper \n\t-dspark.deploy.zookeeper.url=master,slave1,slave2\n\t-dspark.deploy.zookeeper.dir=/spark"\n4. 分发配置文件\n\txsync conf/\n5. 启动集群\n\tsbin/start-all.sh\n6. 启动备用master (部署master的机器上)\n\tsbin/start-master.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 集群模式\n\n1. 解压文件到指定目录\n2. 修改节点配置文件\n\tcd conf\n\tmv slaves.template slaves  #将模板文件修改成自己的\n\t#添加修改主机节点\n    master\n    slave1\n    slave2\n    \n3. 修改执行配置文件\n\tmv spark-env.sh.template spark-env.sh #将模板文件改名\n\t#添加 java_home 环境变量和集群对应的 master 节点\n\texport java_home=/opt/module/jdk1.8.0_144\n\tspark_master_host=hadoop111\n\tspark_master_port=7077 #内部通信端口类似8020\n4. 分发修改好的压缩目录\t\n\txsync spark-standalone\n5. 启动or关闭\n\t/opt/module/spark/sbin/start-all.sh  #启动\nui访问端口：web ui 界面: http://master:8080\t\n\n6. 配置历史服务\n\tmv spark-defaults.conf.template spark-defaults.conf \n\t#配置日志存储路径\n\tspark.eventlog.enabled true #开启\n\tspark.eventlog.dir hdfs://master:8020/directory #此目录需要在hdfs上提前创建\n\t#修改 spark-env.sh 文件, 添加日志配置\n    export spark_history_opts="\n\t-dspark.history.ui.port=18080 #日志的web ui访问端口\n\t-dspark.history.fs.logdirectory=hdfs://master:8020/directory #存储路径\n\t-dspark.history.retainedapplications=30" #保存的历史个数\n\t#分发配置文件\n\txsync conf\n\t#重启集群和历史服务\n\tsbin/start-all.sh\n\tsbin/start-history-server.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n',charsets:{cjk:!0}},{title:"虚拟机搭建",frontmatter:{title:"虚拟机搭建",date:"2021-04-03T00:00:00.000Z",tags:["安装"],categories:["安装"]},regularPath:"/view/docs/%E5%AE%89%E8%A3%85/win%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA.html",relativePath:"view/docs/安装/win大数据搭建.md",key:"v-132be533",path:"/view/docs/%E5%AE%89%E8%A3%85/win%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%90%AD%E5%BB%BA.html",headers:[{level:2,title:"虚拟机搭建教程",slug:"虚拟机搭建教程",normalizedTitle:"虚拟机搭建教程",charIndex:2},{level:2,title:"linux版本简介",slug:"linux版本简介",normalizedTitle:"linux版本简介",charIndex:65},{level:2,title:"三台linux服务器的安装",slug:"三台linux服务器的安装",normalizedTitle:"三台linux服务器的安装",charIndex:353},{level:3,title:"1. 安装VMware",slug:"_1-安装vmware",normalizedTitle:"1. 安装vmware",charIndex:371},{level:3,title:"2. 通过Vmware安装第一台linux机器",slug:"_2-通过vmware安装第一台linux机器",normalizedTitle:"2. 通过vmware安装第一台linux机器",charIndex:631},{level:3,title:"3. 为我们创建的linux虚拟机挂载操作系统",slug:"_3-为我们创建的linux虚拟机挂载操作系统",normalizedTitle:"3. 为我们创建的linux虚拟机挂载操作系统",charIndex:946},{level:3,title:"4. 为我们的linux虚拟机设置网络配置",slug:"_4-为我们的linux虚拟机设置网络配置",normalizedTitle:"4. 为我们的linux虚拟机设置网络配置",charIndex:1294},{level:3,title:"5. 克隆第一台机器",slug:"_5-克隆第一台机器",normalizedTitle:"5. 克隆第一台机器",charIndex:2e3},{level:3,title:"6. 更改克隆机器的IP地址",slug:"_6-更改克隆机器的ip地址",normalizedTitle:"6. 更改克隆机器的ip地址",charIndex:2146},{level:2,title:"了解内容",slug:"了解内容",normalizedTitle:"了解内容",charIndex:2708}],lastUpdated:"2021/10/13 下午7:47:22",headersStr:"虚拟机搭建教程 linux版本简介 三台linux服务器的安装 1. 安装VMware 2. 通过Vmware安装第一台linux机器 3. 为我们创建的linux虚拟机挂载操作系统 4. 为我们的linux虚拟机设置网络配置 5. 克隆第一台机器 6. 更改克隆机器的IP地址 了解内容",content:"# 虚拟机搭建教程\n\n针对大数据学习的虚拟机安装教程\n\n> 准备一台内存最少8G（建议16G）、cpu i7 4核的电脑\n\n\n# linux版本简介\n\n>  * linux统一使用centos7.6 64位版本\n>  * 种子文件下载地址：http://mirrors.aliyun.com/centos/7.6.1810/isos/x86_64/CentOS-7-x86_64-DVD-1810.torrent\n> \n> 目前我用的7 未来应该是8的主流\n\n提示\n\n关于内存分配\n\n我的电脑是16g,基于后面要搭建hadoop集群,所以我分配了2核2G,50G内存、三台都一样\n\n因为50G内存不是立刻开分、也基于后面增加内存比较麻烦\n\n另外,最好是同一放在一个空盘符方便管理、千万不要放在C盘\n\n\n# 三台linux服务器的安装\n\n\n# 1. 安装VMware\n\n * VMware虚拟机软件是一个“虚拟PC”软件，它使你可以在一台机器上同时运行二个或更多Windows、DOS、LINUX系统。与“多启动”系统相比，VMWare采用了完全不同的概念。\n * 我们可以通过VMware来安装我们的linux虚拟机，然后通过linux虚拟机来进行集群的安装，VMware的安装双击之后，一路下一步即可，尽量不要装在操作系统盘里面了，VMware的安装步骤省略\n\n🐄\n\n----------------------------------------\n\n\n# 2. 通过Vmware安装第一台linux机器\n\n先安装薄板机然后进行克隆操作。\n\n1：双击Vmware打开之后，点击创建新的虚拟机\n\n2：选择自定义安装配置\n\n3：选择稍后安装操作系统\n\n4：选择稍后安装操作系统\n\n5：选择安装路径，==尽量不要放在C盘，并且所在盘符的剩余空间尽量大些==\n\n6：CPU核数，默认即可 2\n\n7：虚拟机内存根据自身windows电脑进行调整 2g\n\n8：网络配置一定要选择==NAT==\n\n9：磁盘大小尽量给50GB\n\n> 注意：千万==不要==勾选“立即分配所有磁盘空间”\n\n10：完成\n\n🐄🐄\n\n----------------------------------------\n\n\n# 3. 为我们创建的linux虚拟机挂载操作系统\n\n1：通过设置来挂载操作系统 (在设置里面选择挂载我们种子文件)\n\n2：直接回车开始安装 (然后开启虚拟机)\n\n> 用键盘的方向键，选中“Install CentOS 7”,然后按回车，开始安装 再按回车键\n\n3：设置键盘为英文键盘\n\n4：接下来配置这三项 (我选择的默认最小安装)\n\n（1）设置①时区为Asia/Shanghai\n\n（2）设置②INSTALATION DESTINATION\n\n（3）设置③NETWORK & HOST NAME\n\n5：设置root用户密码\n\n6：安装完成之后重启reboot即可\n\n此过程稍长，耐心等待\n\n🐄🐄🐄\n\n----------------------------------------\n\n\n# 4. 为我们的linux虚拟机设置网络配置\n\n1：设置虚拟机的网段 右键虚拟机左上角编辑旋转虚拟网络编译器\n\n2：查看==NAT模式==的网关，子网IP以及子网掩码\n\n3：设置window当中的VMNet8网络地址 控制面板->网络和internet->网络连接 ipv4 设置\n\n * ip地址 和虚拟机同一网段。\n * 子网掩码\n * 默认网关 和虚拟机网关一样\n * DNS 0.0.0.0\n\n4：设置linux当中的网络\n\n * 我们已经配置好了Vmware当中的网络、windows当中的网络；\n\n * 剩下就是配置linux虚拟机当中的网络，配置好了linux当中的网络，我们的linux就可以联网使用了\n\n * 登录linux\n\n编辑配置文件\n\nvi /etc/sysconfig/network-scripts/ifcfg-ens33\n\n\n1\n\n\n添加联网四要素\n\nIPADDR=192.168.51.100 #你linux主机的ip\nNETMASK=255.255.255.0 # 子网掩码\nGATEWAY=192.168.51.1 # 网关\nDNS1=8.8.8.8 \n\n\n1\n2\n3\n4\n\n\n设置为静态ip: static\n\n更改完成配置，重启网络服务\n\nsystemctl restart network\n\n\n1\n\n\n安装一些常用的软件\n\nyum -y install vim\nyum -y install net-tools\n\n\n1\n2\n\n\n关机\n\ninit 0\n\n\n1\n\n\n🐄🐄🐄🐄\n\n----------------------------------------\n\n\n# 5. 克隆第一台机器\n\n * 现在我们已经有了种子机器了，我们可以通过种子机器进行复制或者克隆出三台机器\n\n * 关闭linux种子机器，然后准备进行克隆\n\n选择创建完整克隆\n\n🐄🐄🐄🐄🐄\n\n----------------------------------------\n\n\n# 6. 更改克隆机器的IP地址\n\n * 三台机器的ip地址分别是192.168.51.100、192.168.51.110、192.168.51.120\n\n * 克隆出来的机器IP地址与种子的ip地址一样，我们将第二台机器的IP地址更改为192.168.51.110即可\n\n * 启动虚拟机，并通过root用户，密码123456来进行登录，然后来更改linux机器的IP地址\n\nvi /etc/sysconfig/network-scripts/ifcfg-ens33\n\n\n1\n\n\n# 更改ip地址IPADDR\nIPADDR=192.168.51.110\nNETMASK=255.255.255.0\nGATEWAY=192.168.51.1\nDNS1=8.8.8.8\n\n\n1\n2\n3\n4\n5\n\n\n * 依照上面步骤，接着克隆第三台机器，并将第三台机器的IP地址设置为\n   \n   192.168.51.120\n   \n   ==注意：根据自己的实际情况，修改ip地址==\n\n🐄🐄🐄🐄🐄🐄 完🐄成！\n\n----------------------------------------\n\n提示\n\n此时你以及安装配置好linux环境了 如果想搭建hadoop环境请查看我另外一篇文章\n\n搭建hadoop环境\n\n下面是了解内容\n\n上传rz sz\n\n\n# 了解内容\n\n三台机器时钟同步（如果设置了开机自动联网，下面的就不用配置，在我另一篇文章有写）\n\n第一种同步方式：通过网络进行时钟同步\n\n通过网络连接外网进行时钟同步,必须保证虚拟机连上外网\n\n三台机器都安装ntpdate\n\nyum -y install ntpdate\n\n\n1\n\n\n阿里云时钟同步服务器\n\nntpdate ntp4.aliyun.com\n\n\n1\n\n\n三台机器定时任务\n\ncrontab -e\n\n\n1\n\n\n添加如下内容\n\n*/1 * * * * /usr/sbin/ntpdate ntp4.aliyun.com;\n\n\n1\n\n\n第二种同步方式：内网某机器作为时钟同步服务器\n\n以下操作都在root用户下面执行，通过su root切换到root用户\n\n以192.168.51.100这台服务器的时间为准进行时钟同步\n\n第一步:三台机器确定是否安装了ntpd的服务\n\n三台机器确认是否安装ntpdate时钟同步工具\n\nrpm -qa | grep ntpdate\n\n\n1\n\n\n如果没有安装,三台机器执行以下命令可以进行在线安装\n\nyum -y install ntpdate\n\n\n1\n\n\nnode01安装ntp\n\nyum -y install ntp\n\n\n1\n\n\n三台机器，执行以下命令，设置时区为中国上海时区\n\ntimedatectl set-timezone Asia/Shanghai\n\n\n1\n\n\n第二步：node01启动ntpd服务\n\n我们需要启动node01的ntpd服务，作为服务端，对外提供同步时间的服务\n\n启动ntpd的服务\n\n#启动ntpd服务\nsystemctl start ntpd\n\n#设置ntpd服务开机启动\nsystemctl enable ntpd\n\n\n1\n2\n3\n4\n5\n\n\n第三步：修改node01服务器配置\n\n修改node01这台服务器的时钟同步配置，允许对外提供服务\n\nvim /etc/ntp.conf\n\n\n1\n\n\n添加以下两行内容\n\n# 同意192.168.51.0网段（修改成自己的网段）的所有机器与node01同步时间\nrestrict 192.168.51.0 mask 255.255.255.0 nomodify notrap\nserver 127.127.1.0\n\n\n1\n2\n3\n\n\n注释掉以下这四行内容\n\n#server 0.centos.pool.ntp.org iburst\n#server 1.centos.pool.ntp.org iburst\n#server 2.centos.pool.ntp.org iburst\n#server 3.centos.pool.ntp.org iburst\n\n\n1\n2\n3\n4\n\n\n修改完成之后，重启node01的ntpd服务\n\nsystemctl restart ntpd\n\n\n1\n\n\n至此，ntpd的服务端已经安装配置完成，接下来配置客户端与服务端进行同步\n\n第四步：配置node02与node03同步node01的时间\n\n客户端node02与node03设置时区与node01保持一致Asia/Shanghai\n\nnode02与node03修改配置文件，保证每次时间写入硬件时钟\n\nvim /etc/sysconfig/ntpdate\n\n\n1\n\n\nSYNC_HWCLOCK=yes\n\n\n1\n\n\nnode02与node03修改定时任务，定时与node01同步时间\n\n[root@node03 hadoop]# crontab -e\n\n\n1\n\n\n增加如下内容\n\n*/1 * * * * /usr/sbin/ntpdate node01\n\n\n1\n\n\n----------------------------------------",normalizedContent:"# 虚拟机搭建教程\n\n针对大数据学习的虚拟机安装教程\n\n> 准备一台内存最少8g（建议16g）、cpu i7 4核的电脑\n\n\n# linux版本简介\n\n>  * linux统一使用centos7.6 64位版本\n>  * 种子文件下载地址：http://mirrors.aliyun.com/centos/7.6.1810/isos/x86_64/centos-7-x86_64-dvd-1810.torrent\n> \n> 目前我用的7 未来应该是8的主流\n\n提示\n\n关于内存分配\n\n我的电脑是16g,基于后面要搭建hadoop集群,所以我分配了2核2g,50g内存、三台都一样\n\n因为50g内存不是立刻开分、也基于后面增加内存比较麻烦\n\n另外,最好是同一放在一个空盘符方便管理、千万不要放在c盘\n\n\n# 三台linux服务器的安装\n\n\n# 1. 安装vmware\n\n * vmware虚拟机软件是一个“虚拟pc”软件，它使你可以在一台机器上同时运行二个或更多windows、dos、linux系统。与“多启动”系统相比，vmware采用了完全不同的概念。\n * 我们可以通过vmware来安装我们的linux虚拟机，然后通过linux虚拟机来进行集群的安装，vmware的安装双击之后，一路下一步即可，尽量不要装在操作系统盘里面了，vmware的安装步骤省略\n\n🐄\n\n----------------------------------------\n\n\n# 2. 通过vmware安装第一台linux机器\n\n先安装薄板机然后进行克隆操作。\n\n1：双击vmware打开之后，点击创建新的虚拟机\n\n2：选择自定义安装配置\n\n3：选择稍后安装操作系统\n\n4：选择稍后安装操作系统\n\n5：选择安装路径，==尽量不要放在c盘，并且所在盘符的剩余空间尽量大些==\n\n6：cpu核数，默认即可 2\n\n7：虚拟机内存根据自身windows电脑进行调整 2g\n\n8：网络配置一定要选择==nat==\n\n9：磁盘大小尽量给50gb\n\n> 注意：千万==不要==勾选“立即分配所有磁盘空间”\n\n10：完成\n\n🐄🐄\n\n----------------------------------------\n\n\n# 3. 为我们创建的linux虚拟机挂载操作系统\n\n1：通过设置来挂载操作系统 (在设置里面选择挂载我们种子文件)\n\n2：直接回车开始安装 (然后开启虚拟机)\n\n> 用键盘的方向键，选中“install centos 7”,然后按回车，开始安装 再按回车键\n\n3：设置键盘为英文键盘\n\n4：接下来配置这三项 (我选择的默认最小安装)\n\n（1）设置①时区为asia/shanghai\n\n（2）设置②instalation destination\n\n（3）设置③network & host name\n\n5：设置root用户密码\n\n6：安装完成之后重启reboot即可\n\n此过程稍长，耐心等待\n\n🐄🐄🐄\n\n----------------------------------------\n\n\n# 4. 为我们的linux虚拟机设置网络配置\n\n1：设置虚拟机的网段 右键虚拟机左上角编辑旋转虚拟网络编译器\n\n2：查看==nat模式==的网关，子网ip以及子网掩码\n\n3：设置window当中的vmnet8网络地址 控制面板->网络和internet->网络连接 ipv4 设置\n\n * ip地址 和虚拟机同一网段。\n * 子网掩码\n * 默认网关 和虚拟机网关一样\n * dns 0.0.0.0\n\n4：设置linux当中的网络\n\n * 我们已经配置好了vmware当中的网络、windows当中的网络；\n\n * 剩下就是配置linux虚拟机当中的网络，配置好了linux当中的网络，我们的linux就可以联网使用了\n\n * 登录linux\n\n编辑配置文件\n\nvi /etc/sysconfig/network-scripts/ifcfg-ens33\n\n\n1\n\n\n添加联网四要素\n\nipaddr=192.168.51.100 #你linux主机的ip\nnetmask=255.255.255.0 # 子网掩码\ngateway=192.168.51.1 # 网关\ndns1=8.8.8.8 \n\n\n1\n2\n3\n4\n\n\n设置为静态ip: static\n\n更改完成配置，重启网络服务\n\nsystemctl restart network\n\n\n1\n\n\n安装一些常用的软件\n\nyum -y install vim\nyum -y install net-tools\n\n\n1\n2\n\n\n关机\n\ninit 0\n\n\n1\n\n\n🐄🐄🐄🐄\n\n----------------------------------------\n\n\n# 5. 克隆第一台机器\n\n * 现在我们已经有了种子机器了，我们可以通过种子机器进行复制或者克隆出三台机器\n\n * 关闭linux种子机器，然后准备进行克隆\n\n选择创建完整克隆\n\n🐄🐄🐄🐄🐄\n\n----------------------------------------\n\n\n# 6. 更改克隆机器的ip地址\n\n * 三台机器的ip地址分别是192.168.51.100、192.168.51.110、192.168.51.120\n\n * 克隆出来的机器ip地址与种子的ip地址一样，我们将第二台机器的ip地址更改为192.168.51.110即可\n\n * 启动虚拟机，并通过root用户，密码123456来进行登录，然后来更改linux机器的ip地址\n\nvi /etc/sysconfig/network-scripts/ifcfg-ens33\n\n\n1\n\n\n# 更改ip地址ipaddr\nipaddr=192.168.51.110\nnetmask=255.255.255.0\ngateway=192.168.51.1\ndns1=8.8.8.8\n\n\n1\n2\n3\n4\n5\n\n\n * 依照上面步骤，接着克隆第三台机器，并将第三台机器的ip地址设置为\n   \n   192.168.51.120\n   \n   ==注意：根据自己的实际情况，修改ip地址==\n\n🐄🐄🐄🐄🐄🐄 完🐄成！\n\n----------------------------------------\n\n提示\n\n此时你以及安装配置好linux环境了 如果想搭建hadoop环境请查看我另外一篇文章\n\n搭建hadoop环境\n\n下面是了解内容\n\n上传rz sz\n\n\n# 了解内容\n\n三台机器时钟同步（如果设置了开机自动联网，下面的就不用配置，在我另一篇文章有写）\n\n第一种同步方式：通过网络进行时钟同步\n\n通过网络连接外网进行时钟同步,必须保证虚拟机连上外网\n\n三台机器都安装ntpdate\n\nyum -y install ntpdate\n\n\n1\n\n\n阿里云时钟同步服务器\n\nntpdate ntp4.aliyun.com\n\n\n1\n\n\n三台机器定时任务\n\ncrontab -e\n\n\n1\n\n\n添加如下内容\n\n*/1 * * * * /usr/sbin/ntpdate ntp4.aliyun.com;\n\n\n1\n\n\n第二种同步方式：内网某机器作为时钟同步服务器\n\n以下操作都在root用户下面执行，通过su root切换到root用户\n\n以192.168.51.100这台服务器的时间为准进行时钟同步\n\n第一步:三台机器确定是否安装了ntpd的服务\n\n三台机器确认是否安装ntpdate时钟同步工具\n\nrpm -qa | grep ntpdate\n\n\n1\n\n\n如果没有安装,三台机器执行以下命令可以进行在线安装\n\nyum -y install ntpdate\n\n\n1\n\n\nnode01安装ntp\n\nyum -y install ntp\n\n\n1\n\n\n三台机器，执行以下命令，设置时区为中国上海时区\n\ntimedatectl set-timezone asia/shanghai\n\n\n1\n\n\n第二步：node01启动ntpd服务\n\n我们需要启动node01的ntpd服务，作为服务端，对外提供同步时间的服务\n\n启动ntpd的服务\n\n#启动ntpd服务\nsystemctl start ntpd\n\n#设置ntpd服务开机启动\nsystemctl enable ntpd\n\n\n1\n2\n3\n4\n5\n\n\n第三步：修改node01服务器配置\n\n修改node01这台服务器的时钟同步配置，允许对外提供服务\n\nvim /etc/ntp.conf\n\n\n1\n\n\n添加以下两行内容\n\n# 同意192.168.51.0网段（修改成自己的网段）的所有机器与node01同步时间\nrestrict 192.168.51.0 mask 255.255.255.0 nomodify notrap\nserver 127.127.1.0\n\n\n1\n2\n3\n\n\n注释掉以下这四行内容\n\n#server 0.centos.pool.ntp.org iburst\n#server 1.centos.pool.ntp.org iburst\n#server 2.centos.pool.ntp.org iburst\n#server 3.centos.pool.ntp.org iburst\n\n\n1\n2\n3\n4\n\n\n修改完成之后，重启node01的ntpd服务\n\nsystemctl restart ntpd\n\n\n1\n\n\n至此，ntpd的服务端已经安装配置完成，接下来配置客户端与服务端进行同步\n\n第四步：配置node02与node03同步node01的时间\n\n客户端node02与node03设置时区与node01保持一致asia/shanghai\n\nnode02与node03修改配置文件，保证每次时间写入硬件时钟\n\nvim /etc/sysconfig/ntpdate\n\n\n1\n\n\nsync_hwclock=yes\n\n\n1\n\n\nnode02与node03修改定时任务，定时与node01同步时间\n\n[root@node03 hadoop]# crontab -e\n\n\n1\n\n\n增加如下内容\n\n*/1 * * * * /usr/sbin/ntpdate node01\n\n\n1\n\n\n----------------------------------------",charsets:{cjk:!0}},{title:"hadoop分布式运行环境",frontmatter:{title:"hadoop分布式运行环境",date:"2021-10-25T00:00:00.000Z",tags:["安装"],categories:["安装"]},regularPath:"/view/docs/%E5%AE%89%E8%A3%85/hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83.html",relativePath:"view/docs/安装/hadoop分布式运行环境.md",key:"v-3ce254cc",path:"/view/docs/%E5%AE%89%E8%A3%85/hadoop%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83.html",headers:[{level:2,title:"hadoop分布式运行环境",slug:"hadoop分布式运行环境",normalizedTitle:"hadoop分布式运行环境",charIndex:2}],lastUpdated:"2021/10/30 下午5:52:10",headersStr:"hadoop分布式运行环境",content:'# hadoop分布式运行环境\n\n步骤：\n\n1）准备3台客户机（关闭防火墙、静态IP、主机名称,免密登录）\n2）安装JDK\n3）配置环境变量\n4）安装Hadoop\n5）配置环境变量\n6）配置集群\n7）单点启动\n8）配置ssh\n9）群起并测试集群\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n 1. 准备虚拟机\n    \n    # 先联网 安装常用软件 已经联网了\n    #先下载软件\n    \n    yum -y install vim\n    yum -y install net-tools\n    yum -y install lrzsz\n    yum -y install rsync\n    yum install -y epel-release\n    yum -y install ntpdate\n    \n    #可以了 就继续往下\n    # 先用xshell 连接 好改一点\n    #1. 修改网络静态ip\n    sudo vi /etc/sysconfig/network-scripts/ifcfg-ens33\n    #修改 static 且添加\n    \n    IPADDR=192.168.67.100 #你linux主机的ip\n    NETMASK=255.255.255.0 # 子网掩码\n    GATEWAY=192.168.67.2 # 网关\n    DNS1=8.8.8.8 \n    \n    这里要对应你自己的\n    发现没上网 配置出问题了\n    \n    #重启网络服务\n    systemctl restart network\n    \n    #2. 修改主机名称 和映射\n    vim /etc/hostname\n    vim /etc/hosts\n    \n    记住你的设置映射端口 150 160\n    重启 reboot 配置第三台 步骤也一样\n    \n    在里面是 主机之间映射关键 ip要对应\n    192.168.67.140 node1\n    192.168.67.150 node2\n    192.168.67.160 node3\n    \n    #3. 关闭防火墙 关闭开启自启\n     systemctl stop firewalld\n     systemctl disable firewalld.service\n    #4. 创建用户\n     useradd axcmsm\n     passwd axcmsm axcmsm\n    #5. 修改这个用户的权限\n    vim /etc/sudoers\n    ## 放在 %wheel ALL=(ALL) ALL 下面 这个命令设置允许下面的令牌生效\n    axcmsm       ALL=(ALL)       NOPASSWD:ALL\n    \n    #3. 克隆\n    1. 修改主机名和ip\n    用xshell登录\n    axcmsm 用 你创建好的这个用户登录\n    要先开启\n    \n    2. 设置免密登录\n    三台机器都要 所以\n    \t#三个回车\n    \tssh-keygen -t rsa  \n    \t#分发私钥\n    \tssh-copy-id node1\n    \tssh-copy-id node2\n     \tssh-copy-id node3\n     \t\n    3. 设置时间同步\n    ntpdate ntp4.aliyun.com\n    crontab -e\n     #添加\n    */1 * * * * /usr/sbin/ntpdate ntp4.aliyun.com;\n    \n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    63\n    64\n    65\n    66\n    67\n    68\n    69\n    70\n    71\n    72\n    \n\n*集群部署规划*\n\n       NODE1              NODE2                        NODE3\nHDFS   NameNodeDataNode   DataNode                     SecondaryNameNodeDataNode\nYARN   NodeManager        ResourceManagerNodeManager   NodeManager\n\n步骤：\n\n 1. 创建放置目录\n    \n    sudo mkdir /opt/module\n    sudo mkdir /opt/software\n    \n    #修改权限\n    sudo chown axcmsm:axcmsm /opt/module \n    sudo chown axcmsm:axcmsm /opt/software \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 2. 上传解压 改名\n\n 3. 添加环境变量 要用root权限修改\n    \n    卸载现有JDK\n    sudo rpm -qa | grep -i java | xargs -n1 sudo rpm -e --nodeps\n    \n    \n    1\n    2\n    \n    \n    sudo /home/axcmsm/bin/xsync /etc/profile.d/my_env.sh\n    \n    \n    1\n    \n    \n    #JAVA_HOME\n    export JAVA_HOME=/opt/module/jdk1.8.0_212\n    export PATH=$PATH:$JAVA_HOME/bin\n    ##HADOOP_HOME\n    export HADOOP_HOME=/opt/module/hadoop-3.1.3\n    export PATH=$PATH:$HADOOP_HOME/bin\n    export PATH=$PATH:$HADOOP_HOME/sbin\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n    \n    刷新\n    \n    source /etc/profile.d/my_env.sh\n    \n    \n    1\n    \n    \n    验证\n    \n    java -version\n    \n    \n    1\n    \n\n 4. 修改核心配置文件\n    \n    * core-site.xml #修改那个用户访问\n      \n      <?xml version="1.0" encoding="UTF-8"?>\n      <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n      \n      <configuration>\n          <property>\n              <name>fs.defaultFS</name>\n              <value>hdfs://node1:8020</value>\n      </property>\n          <property>\n              <name>hadoop.tmp.dir</name>\n              <value>/opt/module/hadoop-3.1.3/data</value>\n      </property>\n          <property>\n              <name>hadoop.http.staticuser.user</name>\n              <value>root</value>\n      </property>\n          <property>\n              <name>hadoop.proxyuser.root.hosts</name>\n              <value>*</value>\n      </property>\n          <property>\n              <name>hadoop.proxyuser.root.groups</name>\n              <value>*</value>\n      </property>\n          <property>\n              <name>hadoop.proxyuser.root.users</name>\n              <value>*</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      \n    \n    * hdfs-site.xml\n      \n      <?xml version="1.0" encoding="UTF-8"?>\n      <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n      \n      <configuration>\n      \t\x3c!-- nn web端访问地址--\x3e\n      \t<property>\n              <name>dfs.namenode.http-address</name>\n              <value>node1:9870</value>\n          </property>\n          \n      \t\x3c!-- 2nn web端访问地址--\x3e\n          <property>\n              <name>dfs.namenode.secondary.http-address</name>\n              <value>node3:9868</value>\n          </property>\n          \n          \x3c!-- 测试环境指定HDFS副本的数量1 --\x3e\n          <property>\n              <name>dfs.replication</name>\n              <value>3</value>\n          </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      \n    \n    * yarn-site.xml ;注意： HADOOP_MAPRED_HOME\n      \n      <?xml version="1.0" encoding="UTF-8"?>\n      <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n      \n      <configuration>\n      \t\x3c!-- 指定MR走shuffle --\x3e\n          <property>\n              <name>yarn.nodemanager.aux-services</name>\n              <value>mapreduce_shuffle</value>\n          </property>\n          \n          \x3c!-- 指定ResourceManager的地址--\x3e\n          <property>\n              <name>yarn.resourcemanager.hostname</name>\n              <value>node2</value>\n          </property>\n          \n          \x3c!-- 环境变量的继承 --\x3e\n          <property>\n              <name>yarn.nodemanager.env-whitelist</name>\n              <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value>\n          </property>\n          \n          \x3c!-- yarn容器允许分配的最大最小内存 --\x3e\n          <property>\n              <name>yarn.scheduler.minimum-allocation-mb</name>\n              <value>512</value>\n          </property>\n          <property>\n              <name>yarn.scheduler.maximum-allocation-mb</name>\n              <value>4096</value>\n          </property>\n          \x3c!-- yarn容器允许管理的物理内存大小 --\x3e\n          <property>\n              <name>yarn.nodemanager.resource.memory-mb</name>\n              <value>4096</value>\n          </property>\n          \n          \x3c!-- 关闭yarn对虚拟内存的限制检查 --\x3e\n          <property>\n              <name>yarn.nodemanager.vmem-check-enabled</name>\n              <value>false</value>\n          </property>\n          \x3c!-- 开启日志聚集功能 --\x3e\n      <property>\n          <name>yarn.log-aggregation-enable</name>\n          <value>true</value>\n      </property>\n      \n      \x3c!-- 设置日志聚集服务器地址 --\x3e\n      <property>  \n          <name>yarn.log.server.url</name>  \n          <value>http://node1:19888/jobhistory/logs</value>\n      </property>\n      \n      \x3c!-- 设置日志保留时间为7天 --\x3e\n      <property>\n          <name>yarn.log-aggregation.retain-seconds</name>\n          <value>604800</value>\n      </property>\n          \n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      60\n      61\n      \n    \n    * mapred-site.xml\n      \n      <?xml version="1.0" encoding="UTF-8"?>\n      <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n      \n      <configuration>\n      \t\x3c!-- 指定MapReduce程序运行在Yarn上 --\x3e\n          <property>\n              <name>mapreduce.framework.name</name>\n              <value>yarn</value>\n          </property>\n          \x3c!-- 历史服务器端地址 --\x3e\n      <property>\n          <name>mapreduce.jobhistory.address</name>\n          <value>node1:10020</value>\n      </property>\n      \n      \x3c!-- 历史服务器web端地址 --\x3e\n      <property>\n           <name>mapreduce.jobhistory.webapp.address</name>\n          <value>node1:19888</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      \n    \n    * workers 这个文件不能有空格和空行 注意\n      \n      node1\n      node2\n      node3\n      \n      \n      1\n      2\n      3\n      \n\n 5. 分发hadoop 和环境变量 可以了 刚刚是用户权限问题 要root才能传\n\n 6. 编写脚本 复制漏了 分发脚本or文件 到其他机器节点上\n    \n    * 同步脚本\n    \n    #!/bin/bash\n    #1. 判断参数个数\n    if [ $# -lt 1 ]\n    then\n      echo Not Enough Arguement!\n      exit;\n    fi\n    #2. 遍历集群所有机器\n    for host in node1 node2 node3\n    do\n      echo ====================  $host  ====================\n      #3. 遍历所有目录，挨个发送\n      for file in $@\n      do\n        #4 判断文件是否存在\n        if [ -e $file ]\n        then\n          #5. 获取父目录\n          pdir=$(cd -P $(dirname $file); pwd)\n          #6. 获取当前文件的名称\n          fname=$(basename $file)\n          ssh $host "mkdir -p $pdir"\n          rsync -av $pdir/$fname $host:$pdir\n        else\n          echo $file does not exists!\n        fi\n      done\n     done\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    \n\n 7. 启动：\n    \n    * 格式化 （第一次）\n      \n      bin/hdfs namenode -format\n      \n      \n      1\n      \n    \n    * 启动 ：hdfs\n      \n      sbin/start-dfs.sh\n      \n      \n      1\n      \n    \n    * 在node3 启动yarn\n      \n      sbin/start-yarn.sh\n      \n      \n      1\n      \n    \n    > jps查看进程\n    > \n    > 都启动可以了\n    > \n    > namenode 是老大 指挥\n    > \n    > datanode是小弟 干活\n    > \n    > SecondaryNameNode是秘书辅组\n\n 8. 修改win10映射\n    \n    C:\\WINDOWS\\system32\\drivers\\etc\n    \n    \n    1\n    \n    \n    要管理原权限修改 完之后就可以访问了\n    \n    hadoop3.x 的namenode是9870端口\n    \n    如果你没有配置映射关系可以通过ip+端口号访问\n    \n    配置了映射可以直接 node1+端口号也能访问\n\n 9. 编写启动脚本。 测试一下 可能是里面配置有点小错误\n    \n    问题不大 可以正常关闭了 再开启看看\n    \n    #!/bin/bash\n    if [ $# -lt 1 ]\n    then\n     echo "No Args Input..."\n     exit ;\n    fi\n    case $1 in\n    "start")\n     echo " =================== 启动 hadoop 集群 ==================="\n     echo " --------------- 启动 hdfs ---------------"\n     ssh node1 "/opt/module/hadoop-3.1.3/sbin/start-dfs.sh"\n     echo " --------------- 启动 yarn ---------------"\n    ssh node2 "/opt/module/hadoop-3.1.3/sbin/start-yarn.sh"\n     echo " --------------- 启动 historyserver ---------------"\n     ssh node1 "/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver"\n    ;;\n    "stop")\n     echo " =================== 关闭 hadoop 集群 ==================="\n     echo " --------------- 关闭 historyserver ---------------"\n     ssh node1 "/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver"\n     echo " --------------- 关闭 yarn ---------------"\n     ssh node2 "/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh"\n     echo " --------------- 关闭 hdfs ---------------"\n     ssh node1 "/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh"\n    ;;\n    *)\n     echo "Input Args Error..."\n    ;;\n    esac\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    \n    \n    都可以正常启动了\n    \n    历史服务没起来 换行问题\n\n测试一下上传程序和\n\n * put 上传文件\n\nwordcount 统计 看看\n\n hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input /out\n\n\n1\n\n\n * http://node2:8088/ 查看yarn任务进程\n   \n   到此结束了 测试没问题',normalizedContent:'# hadoop分布式运行环境\n\n步骤：\n\n1）准备3台客户机（关闭防火墙、静态ip、主机名称,免密登录）\n2）安装jdk\n3）配置环境变量\n4）安装hadoop\n5）配置环境变量\n6）配置集群\n7）单点启动\n8）配置ssh\n9）群起并测试集群\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n 1. 准备虚拟机\n    \n    # 先联网 安装常用软件 已经联网了\n    #先下载软件\n    \n    yum -y install vim\n    yum -y install net-tools\n    yum -y install lrzsz\n    yum -y install rsync\n    yum install -y epel-release\n    yum -y install ntpdate\n    \n    #可以了 就继续往下\n    # 先用xshell 连接 好改一点\n    #1. 修改网络静态ip\n    sudo vi /etc/sysconfig/network-scripts/ifcfg-ens33\n    #修改 static 且添加\n    \n    ipaddr=192.168.67.100 #你linux主机的ip\n    netmask=255.255.255.0 # 子网掩码\n    gateway=192.168.67.2 # 网关\n    dns1=8.8.8.8 \n    \n    这里要对应你自己的\n    发现没上网 配置出问题了\n    \n    #重启网络服务\n    systemctl restart network\n    \n    #2. 修改主机名称 和映射\n    vim /etc/hostname\n    vim /etc/hosts\n    \n    记住你的设置映射端口 150 160\n    重启 reboot 配置第三台 步骤也一样\n    \n    在里面是 主机之间映射关键 ip要对应\n    192.168.67.140 node1\n    192.168.67.150 node2\n    192.168.67.160 node3\n    \n    #3. 关闭防火墙 关闭开启自启\n     systemctl stop firewalld\n     systemctl disable firewalld.service\n    #4. 创建用户\n     useradd axcmsm\n     passwd axcmsm axcmsm\n    #5. 修改这个用户的权限\n    vim /etc/sudoers\n    ## 放在 %wheel all=(all) all 下面 这个命令设置允许下面的令牌生效\n    axcmsm       all=(all)       nopasswd:all\n    \n    #3. 克隆\n    1. 修改主机名和ip\n    用xshell登录\n    axcmsm 用 你创建好的这个用户登录\n    要先开启\n    \n    2. 设置免密登录\n    三台机器都要 所以\n    \t#三个回车\n    \tssh-keygen -t rsa  \n    \t#分发私钥\n    \tssh-copy-id node1\n    \tssh-copy-id node2\n     \tssh-copy-id node3\n     \t\n    3. 设置时间同步\n    ntpdate ntp4.aliyun.com\n    crontab -e\n     #添加\n    */1 * * * * /usr/sbin/ntpdate ntp4.aliyun.com;\n    \n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49\n    50\n    51\n    52\n    53\n    54\n    55\n    56\n    57\n    58\n    59\n    60\n    61\n    62\n    63\n    64\n    65\n    66\n    67\n    68\n    69\n    70\n    71\n    72\n    \n\n*集群部署规划*\n\n       node1              node2                        node3\nhdfs   namenodedatanode   datanode                     secondarynamenodedatanode\nyarn   nodemanager        resourcemanagernodemanager   nodemanager\n\n步骤：\n\n 1. 创建放置目录\n    \n    sudo mkdir /opt/module\n    sudo mkdir /opt/software\n    \n    #修改权限\n    sudo chown axcmsm:axcmsm /opt/module \n    sudo chown axcmsm:axcmsm /opt/software \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 2. 上传解压 改名\n\n 3. 添加环境变量 要用root权限修改\n    \n    卸载现有jdk\n    sudo rpm -qa | grep -i java | xargs -n1 sudo rpm -e --nodeps\n    \n    \n    1\n    2\n    \n    \n    sudo /home/axcmsm/bin/xsync /etc/profile.d/my_env.sh\n    \n    \n    1\n    \n    \n    #java_home\n    export java_home=/opt/module/jdk1.8.0_212\n    export path=$path:$java_home/bin\n    ##hadoop_home\n    export hadoop_home=/opt/module/hadoop-3.1.3\n    export path=$path:$hadoop_home/bin\n    export path=$path:$hadoop_home/sbin\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n    \n    刷新\n    \n    source /etc/profile.d/my_env.sh\n    \n    \n    1\n    \n    \n    验证\n    \n    java -version\n    \n    \n    1\n    \n\n 4. 修改核心配置文件\n    \n    * core-site.xml #修改那个用户访问\n      \n      <?xml version="1.0" encoding="utf-8"?>\n      <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n      \n      <configuration>\n          <property>\n              <name>fs.defaultfs</name>\n              <value>hdfs://node1:8020</value>\n      </property>\n          <property>\n              <name>hadoop.tmp.dir</name>\n              <value>/opt/module/hadoop-3.1.3/data</value>\n      </property>\n          <property>\n              <name>hadoop.http.staticuser.user</name>\n              <value>root</value>\n      </property>\n          <property>\n              <name>hadoop.proxyuser.root.hosts</name>\n              <value>*</value>\n      </property>\n          <property>\n              <name>hadoop.proxyuser.root.groups</name>\n              <value>*</value>\n      </property>\n          <property>\n              <name>hadoop.proxyuser.root.users</name>\n              <value>*</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      \n    \n    * hdfs-site.xml\n      \n      <?xml version="1.0" encoding="utf-8"?>\n      <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n      \n      <configuration>\n      \t\x3c!-- nn web端访问地址--\x3e\n      \t<property>\n              <name>dfs.namenode.http-address</name>\n              <value>node1:9870</value>\n          </property>\n          \n      \t\x3c!-- 2nn web端访问地址--\x3e\n          <property>\n              <name>dfs.namenode.secondary.http-address</name>\n              <value>node3:9868</value>\n          </property>\n          \n          \x3c!-- 测试环境指定hdfs副本的数量1 --\x3e\n          <property>\n              <name>dfs.replication</name>\n              <value>3</value>\n          </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      \n    \n    * yarn-site.xml ;注意： hadoop_mapred_home\n      \n      <?xml version="1.0" encoding="utf-8"?>\n      <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n      \n      <configuration>\n      \t\x3c!-- 指定mr走shuffle --\x3e\n          <property>\n              <name>yarn.nodemanager.aux-services</name>\n              <value>mapreduce_shuffle</value>\n          </property>\n          \n          \x3c!-- 指定resourcemanager的地址--\x3e\n          <property>\n              <name>yarn.resourcemanager.hostname</name>\n              <value>node2</value>\n          </property>\n          \n          \x3c!-- 环境变量的继承 --\x3e\n          <property>\n              <name>yarn.nodemanager.env-whitelist</name>\n              <value>java_home,hadoop_common_home,hadoop_hdfs_home,hadoop_conf_dir,classpath_prepend_distcache,hadoop_yarn_home,hadoop_mapred_home</value>\n          </property>\n          \n          \x3c!-- yarn容器允许分配的最大最小内存 --\x3e\n          <property>\n              <name>yarn.scheduler.minimum-allocation-mb</name>\n              <value>512</value>\n          </property>\n          <property>\n              <name>yarn.scheduler.maximum-allocation-mb</name>\n              <value>4096</value>\n          </property>\n          \x3c!-- yarn容器允许管理的物理内存大小 --\x3e\n          <property>\n              <name>yarn.nodemanager.resource.memory-mb</name>\n              <value>4096</value>\n          </property>\n          \n          \x3c!-- 关闭yarn对虚拟内存的限制检查 --\x3e\n          <property>\n              <name>yarn.nodemanager.vmem-check-enabled</name>\n              <value>false</value>\n          </property>\n          \x3c!-- 开启日志聚集功能 --\x3e\n      <property>\n          <name>yarn.log-aggregation-enable</name>\n          <value>true</value>\n      </property>\n      \n      \x3c!-- 设置日志聚集服务器地址 --\x3e\n      <property>  \n          <name>yarn.log.server.url</name>  \n          <value>http://node1:19888/jobhistory/logs</value>\n      </property>\n      \n      \x3c!-- 设置日志保留时间为7天 --\x3e\n      <property>\n          <name>yarn.log-aggregation.retain-seconds</name>\n          <value>604800</value>\n      </property>\n          \n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      60\n      61\n      \n    \n    * mapred-site.xml\n      \n      <?xml version="1.0" encoding="utf-8"?>\n      <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>\n      \n      <configuration>\n      \t\x3c!-- 指定mapreduce程序运行在yarn上 --\x3e\n          <property>\n              <name>mapreduce.framework.name</name>\n              <value>yarn</value>\n          </property>\n          \x3c!-- 历史服务器端地址 --\x3e\n      <property>\n          <name>mapreduce.jobhistory.address</name>\n          <value>node1:10020</value>\n      </property>\n      \n      \x3c!-- 历史服务器web端地址 --\x3e\n      <property>\n           <name>mapreduce.jobhistory.webapp.address</name>\n          <value>node1:19888</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      \n    \n    * workers 这个文件不能有空格和空行 注意\n      \n      node1\n      node2\n      node3\n      \n      \n      1\n      2\n      3\n      \n\n 5. 分发hadoop 和环境变量 可以了 刚刚是用户权限问题 要root才能传\n\n 6. 编写脚本 复制漏了 分发脚本or文件 到其他机器节点上\n    \n    * 同步脚本\n    \n    #!/bin/bash\n    #1. 判断参数个数\n    if [ $# -lt 1 ]\n    then\n      echo not enough arguement!\n      exit;\n    fi\n    #2. 遍历集群所有机器\n    for host in node1 node2 node3\n    do\n      echo ====================  $host  ====================\n      #3. 遍历所有目录，挨个发送\n      for file in $@\n      do\n        #4 判断文件是否存在\n        if [ -e $file ]\n        then\n          #5. 获取父目录\n          pdir=$(cd -p $(dirname $file); pwd)\n          #6. 获取当前文件的名称\n          fname=$(basename $file)\n          ssh $host "mkdir -p $pdir"\n          rsync -av $pdir/$fname $host:$pdir\n        else\n          echo $file does not exists!\n        fi\n      done\n     done\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    \n\n 7. 启动：\n    \n    * 格式化 （第一次）\n      \n      bin/hdfs namenode -format\n      \n      \n      1\n      \n    \n    * 启动 ：hdfs\n      \n      sbin/start-dfs.sh\n      \n      \n      1\n      \n    \n    * 在node3 启动yarn\n      \n      sbin/start-yarn.sh\n      \n      \n      1\n      \n    \n    > jps查看进程\n    > \n    > 都启动可以了\n    > \n    > namenode 是老大 指挥\n    > \n    > datanode是小弟 干活\n    > \n    > secondarynamenode是秘书辅组\n\n 8. 修改win10映射\n    \n    c:\\windows\\system32\\drivers\\etc\n    \n    \n    1\n    \n    \n    要管理原权限修改 完之后就可以访问了\n    \n    hadoop3.x 的namenode是9870端口\n    \n    如果你没有配置映射关系可以通过ip+端口号访问\n    \n    配置了映射可以直接 node1+端口号也能访问\n\n 9. 编写启动脚本。 测试一下 可能是里面配置有点小错误\n    \n    问题不大 可以正常关闭了 再开启看看\n    \n    #!/bin/bash\n    if [ $# -lt 1 ]\n    then\n     echo "no args input..."\n     exit ;\n    fi\n    case $1 in\n    "start")\n     echo " =================== 启动 hadoop 集群 ==================="\n     echo " --------------- 启动 hdfs ---------------"\n     ssh node1 "/opt/module/hadoop-3.1.3/sbin/start-dfs.sh"\n     echo " --------------- 启动 yarn ---------------"\n    ssh node2 "/opt/module/hadoop-3.1.3/sbin/start-yarn.sh"\n     echo " --------------- 启动 historyserver ---------------"\n     ssh node1 "/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver"\n    ;;\n    "stop")\n     echo " =================== 关闭 hadoop 集群 ==================="\n     echo " --------------- 关闭 historyserver ---------------"\n     ssh node1 "/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver"\n     echo " --------------- 关闭 yarn ---------------"\n     ssh node2 "/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh"\n     echo " --------------- 关闭 hdfs ---------------"\n     ssh node1 "/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh"\n    ;;\n    *)\n     echo "input args error..."\n    ;;\n    esac\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    \n    \n    都可以正常启动了\n    \n    历史服务没起来 换行问题\n\n测试一下上传程序和\n\n * put 上传文件\n\nwordcount 统计 看看\n\n hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input /out\n\n\n1\n\n\n * http://node2:8088/ 查看yarn任务进程\n   \n   到此结束了 测试没问题',charsets:{cjk:!0}},{title:"搭建sqoop和Flume",frontmatter:{title:"搭建sqoop和Flume",date:"2022-01-23T00:00:00.000Z",tags:["安装"],categories:["安装"]},regularPath:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAsqoop%E5%92%8CFlume.html",relativePath:"view/docs/安装/搭建sqoop和Flume.md",key:"v-d63eacf6",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAsqoop%E5%92%8CFlume.html",headers:[{level:3,title:"sqoop",slug:"sqoop",normalizedTitle:"sqoop",charIndex:2},{level:3,title:"Flume",slug:"flume",normalizedTitle:"flume",charIndex:893}],lastUpdated:"2022/1/23 下午8:42:24",headersStr:"sqoop Flume",content:'# sqoop\n\n1. 上传安装包解压 改名\ntar -zxvf sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz -C /opt/module/\nmv sqoop-1.4.6.bin__hadoop-2.0.4-alpha/ sqoop\n\n2.修改配置文件名称 和修改配置文件内容\nmv /opt/module/sqoop/conf/sqoop-env-template.sh /opt/module/sqoop/conf/sqoop-env.sh\nvim /opt/module/sqoop/conf/sqoop-env.sh  \n#添加\nexport HADOOP_COMMON_HOME=/opt/module/hadoop\nexport HADOOP_MAPRED_HOME=/opt/module/hadoop\nexport HIVE_HOME=/opt/module/hive\nexport ZOOKEEPER_HOME=/opt/module/zookeeper\nexport ZOOCFGDIR=/opt/module/zookeeper\n#export HBASE_HOME=/opt/module/hbase\n\n3. 拷贝jdbc驱动到lib目录下\ncp /opt/sortware/mysql/mysql-connector-java-5.1.27-bin.jar /opt/module/sqoop/lib/mysql-connector-java-5.1.27-bin.jar\n\n4. 验证\n/opt/module/sqoop/bin/ help\n\n5. 测试\n/opt/module/sqoop/bin/sqoop list-databases --connect jdbc:mysql://master:3306  --username root --password hadoop\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# Flume\n\n1. 上传解压安装包 改名\ntar -zxvf apache-flume-1.9.0-bin.tar.gz -C /opt/module/\nmv /opt/module/apache-flume-1.9.0-bin/ /opt/module/flume\n\n2. 修改flume和hadoop的兼容性问题\nrm -rf /opt/module/flume/lib/guava-11.0.2.jar\n如果配置了hadoop环境变量 就可以不需要将hadoop的guava包拷贝到该lib目录下,否则需要\n\n3. 修改配置文件 (环境变量)\nmv /opt/module/flume/conf/flume-env.sh.template /opt/module/flume/conf/flume-env.sh\nvim /opt/module/flume/conf/flume-env.sh\nexport JAVA_HOME=/opt/module/jdk1.8.0_212\n\n\n5. 编写配置文件\nmkdir /opt/module/config #创建目录存放配置文件\nvim /opt/module/config/test.conf\n\n6. 验证\n 先启动hdfs\n start-dfs.sh\n 启动flume 监控文件\n /opt/module/flume/bin/flume-ng agent -c /home/axcmsm/test.log  -f /opt/module/config/test.conf -n a1\n 对监控的文件添加内容\n echo "张三" >> /home/axcmsm/test.log\t\n \n 到hdfs查看\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n * /opt/module/config/test.conf\n   \n   # agent \n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   \n   #source\n   a1.sources.r1.type = exec\n   a1.sources.r1.command = tail -F /home/axcmsm/test.log a1.sources.r1.channels = c1\n   \n   # sink\n   a1.sinks.k1.type = hdfs\n   a1.sinks.k1.hdfs.path = /flume/tailout/%y-%m-%d/%H%M/\n   #上传文件的前缀\n   a1.sinks.k1.hdfs.filePrefix = events-\n   #是否按照时间滚动文件夹\n   a1.sinks.k1.hdfs.round = true\n   #多少时间单位创建一个新的文件夹\n   a1.sinks.k1.hdfs.roundValue = 10\n   #重新定义时间单位\n   a1.sinks.k1.hdfs.roundUnit = minute\n   #多久生成一个新的文件\n   a1.sinks.k1.hdfs.rollInterval = 3\n   #设置每个文件的滚动大小\n   a1.sinks.k1.hdfs.rollSize = 20\n   #如果为0文件的滚动与 Event 数量无关\n   a1.sinks.k1.hdfs.rollCount = 5\n   #积攒多少个 Event 才 flush 到 HDFS 一次\n   a1.sinks.k1.hdfs.batchSize = 1\n   #是否使用本地时间戳\n   a1.sinks.k1.hdfs.useLocalTimeStamp = true\n   #生成的文件类型，默认是Sequencefile，可用DataStream，为普通文本\n   #设置文件类型，可支持压缩\n   a1.sinks.k1.hdfs.fileType = DataStream\n   \n   # channel \n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 1000\n   a1.channels.c1.transactionCapacity = 100\n   \n   # 绑定bind sources+sinks到channels\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   ',normalizedContent:'# sqoop\n\n1. 上传安装包解压 改名\ntar -zxvf sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz -c /opt/module/\nmv sqoop-1.4.6.bin__hadoop-2.0.4-alpha/ sqoop\n\n2.修改配置文件名称 和修改配置文件内容\nmv /opt/module/sqoop/conf/sqoop-env-template.sh /opt/module/sqoop/conf/sqoop-env.sh\nvim /opt/module/sqoop/conf/sqoop-env.sh  \n#添加\nexport hadoop_common_home=/opt/module/hadoop\nexport hadoop_mapred_home=/opt/module/hadoop\nexport hive_home=/opt/module/hive\nexport zookeeper_home=/opt/module/zookeeper\nexport zoocfgdir=/opt/module/zookeeper\n#export hbase_home=/opt/module/hbase\n\n3. 拷贝jdbc驱动到lib目录下\ncp /opt/sortware/mysql/mysql-connector-java-5.1.27-bin.jar /opt/module/sqoop/lib/mysql-connector-java-5.1.27-bin.jar\n\n4. 验证\n/opt/module/sqoop/bin/ help\n\n5. 测试\n/opt/module/sqoop/bin/sqoop list-databases --connect jdbc:mysql://master:3306  --username root --password hadoop\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n\n# flume\n\n1. 上传解压安装包 改名\ntar -zxvf apache-flume-1.9.0-bin.tar.gz -c /opt/module/\nmv /opt/module/apache-flume-1.9.0-bin/ /opt/module/flume\n\n2. 修改flume和hadoop的兼容性问题\nrm -rf /opt/module/flume/lib/guava-11.0.2.jar\n如果配置了hadoop环境变量 就可以不需要将hadoop的guava包拷贝到该lib目录下,否则需要\n\n3. 修改配置文件 (环境变量)\nmv /opt/module/flume/conf/flume-env.sh.template /opt/module/flume/conf/flume-env.sh\nvim /opt/module/flume/conf/flume-env.sh\nexport java_home=/opt/module/jdk1.8.0_212\n\n\n5. 编写配置文件\nmkdir /opt/module/config #创建目录存放配置文件\nvim /opt/module/config/test.conf\n\n6. 验证\n 先启动hdfs\n start-dfs.sh\n 启动flume 监控文件\n /opt/module/flume/bin/flume-ng agent -c /home/axcmsm/test.log  -f /opt/module/config/test.conf -n a1\n 对监控的文件添加内容\n echo "张三" >> /home/axcmsm/test.log\t\n \n 到hdfs查看\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n * /opt/module/config/test.conf\n   \n   # agent \n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   \n   #source\n   a1.sources.r1.type = exec\n   a1.sources.r1.command = tail -f /home/axcmsm/test.log a1.sources.r1.channels = c1\n   \n   # sink\n   a1.sinks.k1.type = hdfs\n   a1.sinks.k1.hdfs.path = /flume/tailout/%y-%m-%d/%h%m/\n   #上传文件的前缀\n   a1.sinks.k1.hdfs.fileprefix = events-\n   #是否按照时间滚动文件夹\n   a1.sinks.k1.hdfs.round = true\n   #多少时间单位创建一个新的文件夹\n   a1.sinks.k1.hdfs.roundvalue = 10\n   #重新定义时间单位\n   a1.sinks.k1.hdfs.roundunit = minute\n   #多久生成一个新的文件\n   a1.sinks.k1.hdfs.rollinterval = 3\n   #设置每个文件的滚动大小\n   a1.sinks.k1.hdfs.rollsize = 20\n   #如果为0文件的滚动与 event 数量无关\n   a1.sinks.k1.hdfs.rollcount = 5\n   #积攒多少个 event 才 flush 到 hdfs 一次\n   a1.sinks.k1.hdfs.batchsize = 1\n   #是否使用本地时间戳\n   a1.sinks.k1.hdfs.uselocaltimestamp = true\n   #生成的文件类型，默认是sequencefile，可用datastream，为普通文本\n   #设置文件类型，可支持压缩\n   a1.sinks.k1.hdfs.filetype = datastream\n   \n   # channel \n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 1000\n   a1.channels.c1.transactioncapacity = 100\n   \n   # 绑定bind sources+sinks到channels\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   ',charsets:{cjk:!0}},{title:"搭建hadoop HA",frontmatter:{title:"搭建hadoop HA",date:"2022-01-21T00:00:00.000Z",tags:["安装"],categories:["安装"]},regularPath:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAhadoop%20HA.html",relativePath:"view/docs/安装/搭建hadoop HA.md",key:"v-4c624479",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAhadoop%20HA.html",headers:[{level:2,title:"搭建hadoop HA",slug:"搭建hadoop-ha",normalizedTitle:"搭建hadoop ha",charIndex:2},{level:2,title:"手动模式",slug:"手动模式",normalizedTitle:"手动模式",charIndex:500},{level:3,title:"启动集群",slug:"启动集群",normalizedTitle:"启动集群",charIndex:2800},{level:2,title:"自动模式 ⭕",slug:"自动模式-⭕",normalizedTitle:"自动模式 ⭕",charIndex:3887},{level:3,title:"启动集群",slug:"启动集群-2",normalizedTitle:"启动集群",charIndex:2800},{level:2,title:"Yarn高可用",slug:"yarn高可用",normalizedTitle:"yarn高可用",charIndex:5079},{level:3,title:"启动",slug:"启动",normalizedTitle:"启动",charIndex:2800},{level:2,title:"快速搭建模板😁",slug:"快速搭建模板😁",normalizedTitle:"快速搭建模板😁",charIndex:7565},{level:3,title:"启动",slug:"启动-2",normalizedTitle:"启动",charIndex:2800}],lastUpdated:"2022/1/23 下午8:42:24",headersStr:"搭建hadoop HA 手动模式 启动集群 自动模式 ⭕ 启动集群 Yarn高可用 启动 快速搭建模板😁 启动",content:'# 搭建hadoop HA\n\n 1. 前置知识以及搭建 hadoop zookeeper\n 2. 规划节点 2个还是3个namenode 或更多 （2.6.0版本只能规划俩台节点，否则namenode报传参异常)\n\n核心问题：如何保证数据一致性\n\n * namenode 数据一致\n   \n   - Fsimage 让一台nn生成数据,其他机器的nn同步。  文件\n   - Edits：需要引进新的模块 JournalNode 来保证edtis文件的数据一致性。  文件\n   \n   \n   1\n   2\n   \n\n * 只有一台工作(active)其他待备份(standby)\n   \n   - 手动分配\n   - 自动分配 *\n   \n   \n   1\n   2\n   \n\n * 2nn 在ha架构中并不存在\n   \n   定期合并fsimage,edtis的活由standby的nn来干\n   \n   \n   1\n   \n\n * nn\'发生了问题如何切换上位\n   \n   - 手动故障转移\n   - 自动故障转移  zookeeper\n   \n   \n   1\n   2\n   \n\n\n# 手动模式\n\n前置环境:\n\n 1. 修改ip\n    \n    vim /etc/host\n    \n    \n    1\n    \n\n 2. 修改主机名和ip地址的映射\n\n 3. 关闭防火墙\n\n 4. ssh免密登录\n\n 5. 安装jdk,配置环境变量\n\n规划:\n\n3个namenode, JournalNode,datanode\n\n> 注意目录的权限\n\n修改配置文件:\n\n * core-site.xml\n   \n   1. 把多个namenode的地址组合成一个集群 mycluster 是集群的名称\n   \tfs.defaultFs => hdfs://mycluster\n   2. 指定hadoop运行时产生文件的存储目录\n   \thadoop.tmp.dir => /opt/ha/hadoop-2.6.0/data\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * hdfs-site.xml\n   \n   1. namenode 数据的存储目录  ${引用上面定义的变量}\n   \tdfs.namenode.name.dir => file://${hadoop.tmp.dir}/name\n   2. datanode 数据存储目录\n   \tdfs.datanode.data.dir => file://${hadoop.tmp.dir}/data\n   3. journalNode数据存储目录\n   \tdfs.journalnode.edit.dir => ${hadoop.tmp.dir}/jn\n   4. 完全分布式集群名称\n   \tdfs.nameservices => mycluster \n   5. 集群中的namenode的节点   \n   \tdfs.ha.namenodes.mycluster => nn1,nn2,nn3\n   \t\n   6. 配置rpc通信地址\n   6.1. namenode的RPC通信地址 nn1\n   \tdfs.namenode.rpc-address.mycluster.nn1 => hadoop102:8020\n   6.2. namenode的RPC通信地址 nn2\n   \tdfs.namenode.rpc-address.mycluster.nn2 => hadoop103:8020\n   6.3. namenode的RPC通信地址 nn3\n   \tdfs.namenode.rpc-address.mycluster.nn3 => hadoop104:8020\n   \n   7. 配置http通信地址\n   7.1. 指定namenode的http通信地址nn1\n   \tdfs.namenode.http-address.mycluster.nn1 => hadoop102:9870\n   7.2. 指定namenode的http通信地址nn2\n   \tdfs.namenode.http-address.mycluster.nn2 => hadoop103:9870\n   7.3. 指定namenode的http通信地址nn3\n   \tdfs.namenode.http-address.mycluster.nn3 => hadoop104:9870\n   \n   8. 指定nameNode元数据在JournalNode上存放位置\n   \tdfs.namenode.shared.edits.dir => qjournal://hadoop102:8485;hadoop103:8485;hadoop104:8485/mycluster\n   \n   9. 访问代理类 => client 用于确定那个namenode 为Active\n   \tdfs.client.failover.proxy.provider.mycluster => org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider\n   \n   10. 配置隔离机制 同时只一台服务器对外响应\n   \tdfs.ha.fencing.methods => sshfence\n   \n   11. 使用隔离级别需要ssh密钥登录  => 自动故障转移中使用到\n   \tdfs.ha.fencing.ssh.private-key-files => /home/acmsm/.ssh/id_rsa\n   \t\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   \n\n分发节点\n\n为了方便配置一下hadoop-ha的环境变量 3台\n\nexport HADOOP_HOME=路径\nexport PATH=$PATH:$HADOOP_HOME/bin\nexport PATH=$PATH:$HADOOP_HOME/sbin\n\n刷新 source  环境变量路径\n\n\n1\n2\n3\n4\n5\n\n\n\n# 启动集群\n\n 1. 在各个JournalNode节点,启动journalnode服务 3台\n    \n    hdfs --daemon start journalnode\n    hdfs --daemon start journalnode\n    hdfs --daemon start journalnode\n    \n    版本低\n    hadoop-daemon.sh start journalnode\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 2. 在nn1 上对其进行格式化 并启动\n    \n    hdfs namenode -format  格式化\n    hdfs --daemon start namenode 启动\n    \n    \n    1\n    2\n    \n\n 3. 在nn2,nn3上同步nn1的元数据信息\n    \n    hdfs namenode -bootstrapStandby\n    hdfs namenode -bootstrapStandby\n    \n    \n    1\n    2\n    \n\n 4. 启动nn2,nn3\n    \n    hdfs --daemon start namenode 启动\n    hdfs --daemon start namenode 启动\n    \n    \n    1\n    2\n    \n\n 5. 分别在3台节点都启动 datanode\n    \n    hdfs --daemon start datanode\n    hdfs --daemon start datanode\n    hdfs --daemon start datanode\n    \n    \n    1\n    2\n    3\n    \n\n 6. 将nn1 切换为Active (需要三台机子都能正常起来才能切换)\n    \n    hdfs haadmin -transitionToActive nn1\n    \n    \n    1\n    \n\n 7. 查看actiive\n    \n    hdfs haadmin -getServiceState nn1\n    \n    \n    1\n    \n\n> 因为隔离机制,如果一台节点和其余几台联系不上时,无法切换成active,因为无法保证所有的节点是standby,到时可能会出现多个active(脑裂)\n> \n> 如何确保另外的节点不是active?\n\n\n# 自动模式 ⭕\n\n最核心的解决上个模式遗留下来的最后一个问题.\n\n添加的新组件:\n\n * Zookeeper(存储少量数据)和ZKFailoverController (ZKFC)(监控)\n\n\n\n故障转移机制\n\n 1. active出现假死状态\n 2. ZKFC 检测到该状态 通知另一台NameNode 的ZKFC\n 3. 另外一台的namde强行杀死假死的active防止脑裂 (ssh kil l- 9 进程号) 补刀失败 再调用用户自定义脚本再次补刀..(proweroff.sh),获取命令结果\n 4. 激活namenode 为Active\n\n集群规划: 3台Namenode,journalNode,datanode,zookeeper,ZKFC\n\n配置文件:\n\n * hdfs-site.xml 添加\n   \n   1. 启动nn 故障自动转移\n   \tdfs.ha.automatic-failover.enabled => true\n   \n   \n   1\n   2\n   \n\n * core-site.xml 添加\n   \n   1. 指定zkfc 连接到zkService 地址\n   \tha.zookeeper.quorum => hadoop102:2181,hadoop103:2181,hadoop104:2181\n   \n   \n   1\n   2\n   \n\n分发配置文件\n\n\n# 启动集群\n\n> 如果集群以开启,先关闭再开\n\n 1. 启动zookeeper\n\n 2. 初始化ZKFC (初始化ha在zookeeper中的状态)\n    \n    hdfs zkfc -formatZK\n    \n    \n    1\n    \n\n 3. 启动hdfs\n    \n    start-dfs.sh\n    \n    \n    1\n    \n\n 4. 验证 去zkcli.sh客户端查看Namenode选举锁节点\n    \n    get -s /hadoop-ha/mycluster/ActiveStandByElectorLock \n    \n    \n    1\n    \n\n> 上传文件可能会表一些错误,但是会重新连接到可用的active\n> \n> 因为standby是不可读的,不可操作的\n\n注意：\n\n如果zk状态已切换而hadoop状态仍未被切换\n因为没有 fuster 程序，导致无法进行 fence\n<property>\n    <name>dfs.ha.fencing.methods</name>\n    <value>sshfence</value>\n</property>\n\n请安装有fuster程序的软件包psmisc  （3台）\nyum -y install psmisc\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# Yarn高可用\n\n工作机制:\n\n1.启动多个ResourceManager 最先启动的节点会到zookeeper中注册临时节点 active  (临时节点 进程挂掉节点自动删除)\n2. 后启动页会尝试该操作(如果已由节点注册信息) standby\n3. 所有的standby都需要维护一个长轮询,查看节点信息是否存在,一旦节点信息不存在,就立即注册.提升为Active\n\n\n1\n2\n3\n\n\n规划:\n\n3台ResourceManager,NodeManager,zookeeper\n\n核心问题:\n\n * active rm挂了 其他standby rm 如何上位 =>利用zk的临时节点\n * standby如何接手程序=> rm会将所有计算程序状态存储到zk中,其他rm上位后会去读取,接着跑\n\n配置文件:\n\n * yarn-site.xml\n   \n   1. 读取数据的方式 shuffle\n   \tyarn.nodemanager.aux-services => mapreduce_shuffle\n   2.  启用resourceManager ha\n   \tyarn.resourcemanager.ha.enabled => true\n   3. 声明俩台resourcemanager 地址 集群名称\n   \tyarn.resourcemanager.cluster-id => cluster-yarn1\n   4. 指定resourcemanager 逻辑列表\n   \tyarn.resourcemanager.ha.rm-ids => rm1,rm2,rm3\n   \n   5.配置具体地址\n   \tyarn.resourcemanager.hostname.rm1 => hadoop102\n   \tyarn.resourcemanager.hostname.rm2 => hadoop103\n   \tyarn.resourcemanager.hostname.rm3 => hadoop104\n   6. 配置web端地址 rm1\n   \tyarn.resourcemanager.webapp.address.rm1 => hadoop102: 8088\n   \tyarn.resourcemanager.webapp.address.rm2 => hadoop103: 8088\n   \tyarn.resourcemanager.webapp.address.rm3 => hadoop104: 8088\n   7.配置内部通信地址 rm1\n   \tyarn.resourcemanager.address.rm1=hadoop102:8032\n   \tyarn.resourcemanager.address.rm2=hadoop103:8032\n   \tyarn.resourcemanager.address.rm3=hadoop104:8032\n   8. 配置Am向rm1申请支援的地址\n   \tyarn.resourcemanager.scheduler.address.rm1 => hadoop102:8030\n   \tyarn.resourcemanager.scheduler.address.rm2 => hadoop103:8030\n   \tyarn.resourcemanager.scheduler.address.rm3 => hadoop104:8030\n   9. 提供NM联系的地址\n   \tyarn.resourcemanager.resource-tracker.address.rm1 => hadoop102:8031\n   \tyarn.resourcemanager.resource-tracker.address.rm2 => hadoop103:8031\n   \tyarn.resourcemanager.resource-tracker.address.rm3 => hadoop104:8031\n   10. 指定zk\n   \tyarn.resourcemanager.zk-address => hadoop102:2181,hadoop103:2181,hadoop104:2181\n   \n   11. 启动自动恢复\n   \tyarn.resourcemanager.recovery.enabled => true\n   \n   12. resourcemanager 状态信息存储到zk集群\n   \tyarn.resourcemanager.store.class => org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore\n   \t\n   13. 环境变量继承\n   \tyarn.nodemanager.env-whitelist => JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   \n\n分发\n\n\n# 启动\n\nstart-yarn.sh\n\n访问会8088端口会自动切换到active的节点\n\n\n# 快速搭建模板😁\n\n下载需要小软件，可跳过 （建议使用版本hadoop3.x）\n\nyum -y install vim\nyum -y install net-tools  \nsudo yum -y install lrzsz \nsudo yum -y install rsync  \nyum install -y epel-release\nyum -y install ntpdate\nyum -y install psmisc  必须\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n 1. 修改主机名 ip 映射 关闭防火墙\n    \n    vim /etc/hostname #主机名\n    sudo vi /etc/sysconfig/network-scripts/ifcfg-ens33  设置静态ip\n    vim /etc/hosts  #主机名 和ip的映射\n    \n    systemctl stop firewalld  #关闭防火墙\n    systemctl disable firewalld.service #开机自动关闭\n    3台节点\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n\n 2. 创建用户 让这个用户去操作集群 (选做)\n    \n    1. 创建用户\n     useradd axcmsm\n     passwd axcmsm => axcmsm\n    2. 设置用户权限\n        vim /etc/sudoers\n        ## 放在 %wheel ALL=(ALL) ALL 下面 这个命令设置允许下面的令牌生效\n        axcmsm       ALL=(ALL)       NOPASSWD:ALL\n    \n    3台节点 注意文件的权限问题\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 3. 切换用户配置免密登录 用户就是该用户进行操作集群了\n    \n    ssh-keygen -t rsa  生成密钥 3个回车\n    ssh-copy-id master(slave1,slave2) 分发密钥\n    3台节点都要操作\n    分发环境变量需要root权限 可以话root也分发一下密钥\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 设置时间同步**(选做)** 前提下载好 ntpdate\n    \n    3. 设置时间同步\n    ntpdate ntp4.aliyun.com\n    crontab -e\n     #添加\n    */1 * * * * /usr/sbin/ntpdate ntp4.aliyun.com;\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 5. 安装Jdk 3台\n    \n    tar -zxvf /opt/sortware/jdk-8u212-linux-x64.tar.gz -C /opt/module/\n    \n    \n    1\n    \n\n 6. 安装zookeeper\n    \n    tar -zxvf /opt/sortware/hadoop2/zookeeper-3.4.5.tar.gz -C /opt/module/\n    mv zookeeper-3.4.5 zookeeper\n    mkdir /opt/module/zookeeper/zkData\n    vim /opt/module/zookeeper/zkData/myid  => （3台节点分别） 1，2，3   不能有空格或空行\n    mv /opt/module/zookeeper/conf/zoo_sample.cfg zoo.cfg \n    vim /opt/module/zookeeper/conf/zoo.cfg \n        #修改\n        dataDir=/opt/module/zookeeper/zkData\n        #添加\n        #######################cluster##########################\n        server.1=master:2888:3888\n        server.2=slave1:2888:3888\n        server.3=slave2:2888:3888\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    \n\n 7. 安装hadoop\n    \n    tar -zxvf /opt/sortware/hadoop2/hadoop-2.6.0.tar.gz -C /opt/module/\n    mv hadoop-2.6.0/ hadoop\n    \n    \n    1\n    2\n    \n    \n    * core-site.xml\n      \n      <configuration>\n      \x3c!-- HA集群名称，该值要和hdfs-site.xml中的配置保持一致 --\x3e\n      <property>\n      <name>fs.defaultFS</name>\n      <value>hdfs://mycluster</value>\n      </property>\n      \x3c!-- hadoop本地磁盘存放数据的公共目录 --\x3e\n      <property>\n      <name>hadoop.tmp.dir</name>\n      <value>/opt/module/hadoop/data</value>\n      </property>\n      \x3c!-- ZooKeeper集群的地址和端口--\x3e\n      <property>\n      <name>ha.zookeeper.quorum</name>\n      <value>master:2181,slave1:2181,slave2:2181</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      \n    \n    * hdfs-site.xml\n      \n      <configuration>\n      \x3c!--指定hdfs的nameservice为mycluster，需要和core-site.xml中的保持一致 --\x3e\n      <property>\n      <name>dfs.nameservices</name>\n      <value>mycluster</value>\n      </property>\n      \x3c!-- mycluster下面有两个NameNode，分别是nn1，nn2 --\x3e\n      <property>\n      <name>dfs.ha.namenodes.mycluster</name>\n      <value>nn1,nn2,nn3</value>\n      </property>\n      \x3c!-- nn1的RPC通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.rpc-address.mycluster.nn1</name>\n      <value>master:8020</value>\n      </property>\n      \x3c!-- nn1的http通信地址 --\x3e\n      \n      <property>\n      <name>dfs.namenode.http-address.mycluster.nn1</name>\n      <value>master:9870</value>\n      </property>\n      \x3c!-- nn2的RPC通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.rpc-address.mycluster.nn2</name>\n      <value>slave1:8020</value>\n      </property>\n      \x3c!-- nn2的http通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.http-address.mycluster.nn2</name>\n      <value>slave1:9870</value>\n      </property>\n      \n      \x3c!-- nn3的RPC通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.rpc-address.mycluster.nn3</name>\n      <value>slave2:8020</value>\n      </property>\n      \x3c!-- nn2的http通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.http-address.mycluster.nn3</name>\n      <value>slave2:9870</value>\n      </property>\n      \n      \x3c!-- 指定NameNode的edits元数据在JournalNode上的存放位置 --\x3e\n      <property>\n          <name>dfs.namenode.shared.edits.dir</name>\n       <value>qjournal://master:8485;slave1:8485;slave2:8485/mycluster</value>\n      </property>\n              \x3c!-- 指定JournalNode在本地磁盘存放数据的位置 --\x3e\n      <property>\n      <name>dfs.journalnode.edits.dir</name>\n      <value>/opt/module/hadoop/data/jn</value>\n      </property>\n              \x3c!-- 开启NameNode失败自动切换 --\x3e\n      <property>\n      <name>dfs.ha.automatic-failover.enabled</name>\n      <value>true</value>\n      </property>\n              \x3c!-- 指定该集群出故障时，哪个实现类负责执行故障切换 --\x3e\n      <property>\n      <name>dfs.client.failover.proxy.provider.mycluster</name>\n      <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>\n      </property>\n             \x3c!-- 配置隔离机制方法--\x3e\n      <property>\n      <name>dfs.ha.fencing.methods</name>\n      <value>sshfence</value>\n      </property>\n      \x3c!-- 使用sshfence隔离机制时需要ssh免登陆 --\x3e\n      <property>\n      <name> dfs.ha.fencing.ssh.private-key-files</name>\n          <value>/home/axcmsm/.ssh/id_rsa</value>\n      </property>\n      \x3c!-- 配置sshfence隔离机制超时时间 --\x3e\n      <property>\n      <name>dfs.ha.fencing.ssh.connect-timeout</name>\n      <value>30000</value>\n      </property>\n      \n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      60\n      61\n      62\n      63\n      64\n      65\n      66\n      67\n      68\n      69\n      70\n      71\n      72\n      73\n      74\n      75\n      76\n      77\n      78\n      79\n      80\n      81\n      \n    \n    * yarn-site.xml\n      \n      <configuration>\n            \x3c!--开启ha --\x3e\n      <property>\n         <name>yarn.resourcemanager.ha.enabled</name>\n         <value>true</value>\n       </property>\n            \x3c!--开启自动故障转移 --\x3e\n      <property>\n         <name>yarn.resourcemanager.recovery.enabled</name>\n         <value>true</value>\n       </property>\n            \x3c!--集群名以及 具体别名 --\x3e\n       <property>\n         <name>yarn.resourcemanager.cluster-id</name>\n         <value>cluster-yarn1</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.ha.rm-ids</name>\n         <value>rm1,rm2,rm3</value>\n       </property>\n            \x3c!--访问主机 --\x3e\n       <property>\n         <name>yarn.resourcemanager.hostname.rm1</name>\n         <value>master</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.hostname.rm2</name>\n         <value>slave1</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.hostname.rm3</name>\n         <value>slave2</value>\n       </property>\n               \x3c!--提供外部访问地址 --\x3e\n       <property>\n         <name>yarn.resourcemanager.webapp.address.rm1</name>\n         <value>master:8088</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.webapp.address.rm2</name>\n         <value>slave1:8088</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.webapp.address.rm3</name>\n         <value>slave2:8088</value>\n       </property>\n       \x3c!--配置Am向rm1申请支援的地址 --\x3e\n       <property>\n         <name>yarn.resourcemanager.address.rm1</name>\n         <value>master:8039</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.address.rm2</name>\n         <value>slave1:8039</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.address.rm3</name>\n         <value>slave2:8039</value>\n       </property>\n           \x3c!--提供NM联系的地址 --\x3e\n       <property>\n         <name>yarn.resourcemanager.resource-tracker.address.rm1</name>\n         <value>master:8031</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.resource-tracker.address.rm2</name>\n         <value>slave1:8031</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.resource-tracker.address.rm3</name>\n         <value>slave2:8031</value>\n       </property>\n          \x3c!--指定zk --\x3e\n       <property>\n         <name>yarn.resourcemanager.zk-address</name>\n        <value>master:2181,slave1:2181,slave2:2181</value>\n       </property>\n          \x3c!--执行shuffle --\x3e\n      <property>\n          <name>yarn.nodemanager.aux-services</name>\n          <value>mapreduce_shuffle</value>\n      </property>\n      \x3c!--状态信息存储到zk集群 --\x3e\n      <property>\n          <name>yarn.resourcemanager.store.class</name>\n          <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>\n      </property>\n      \x3c!-- 环境变量继承--\x3e\n      <property>\n          <name>yarn.nodemanager.env-whitelist</name>   <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      60\n      61\n      62\n      63\n      64\n      65\n      66\n      67\n      68\n      69\n      70\n      71\n      72\n      73\n      74\n      75\n      76\n      77\n      78\n      79\n      80\n      81\n      82\n      83\n      84\n      85\n      86\n      87\n      88\n      89\n      90\n      91\n      92\n      \n    \n    * mapper-site.xml\n      \n      <configuration>\n          \x3c!-- 指定yarn 模式运行程序 --\x3e\n      <property>\n         <name>mapreduce.framework.name</name>\n         <value>yarn</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      \n    \n    * workers 、slaves\n      \n      master\n      slave1\n      slave2\n      \n      \n      1\n      2\n      3\n      \n\n 8. 统一配置环境变量\n    \n    vim /etc/profile.d/my_env.sh\n    \n    #JAVA_HOME\n    export JAVA_HOME=/opt/module/jdk1.8.0_212\n    export PATH=$PATH:$JAVA_HOME/bin\n    \n    #ZK\n    export ZOOKEEPER_HOME=/opt/module/zookeeper\n    export PATH=$PATH:$ZOOKEEPER_HOME/bin\n    \n    #HADOOP_HOME\n    export HADOOP_HOME=/opt/module/hadoop\n    export PATH=$PATH:$HADOOP_HOME/bin\n    export PATH=$PATH:$HADOOP_HOME/sbin\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n 9. 分发 修改个别地方 刷新 启动\n    \n    * 分发脚本：vim /home/axcmsm/bin/xsync\n      \n      #!/bin/bash\n      #1. 判断参数个数\n      if [ $# -lt 1 ]\n      then\n        echo Not Enough Arguement!\n        exit;\n      fi\n      #2. 遍历集群所有机器\n      for host in master slave1 slave2\n      do\n        echo ====================  $host  ====================\n        #3. 遍历所有目录，挨个发送\n        for file in $@\n        do\n          #4 判断文件是否存在\n          if [ -e $file ]\n          then\n            #5. 获取父目录\n            pdir=$(cd -P $(dirname $file); pwd)\n            #6. 获取当前文件的名称\n            fname=$(basename $file)\n            ssh $host "mkdir -p $pdir"\n            rsync -av $pdir/$fname $host:$pdir\n          else\n            echo $file does not exists!\n          fi\n        done\n       done\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      \n      \n      > chmod +x /home/axcmsm/bin/xsync\n    \n    * zk群启脚本:vim zk.sh\n      \n      #!/bin/bash\n      case $1 in\n      "start"){\n      for i in master slave1 slave2\n      do\n       echo ---------- zookeeper $i 启动 ------------\n      ssh $i "/opt/module/zookeeper-3.4.5/bin/zkServer.sh start"\n      done\n      };;\n      "stop"){\n      for i in master slave1 slave2\n      do\n       echo ---------- zookeeper $i 停止 ------------ \n      ssh $i "/opt/module/zookeeper-3.4.5/bin/zkServer.sh stop"\n      done\n      };;\n      "status"){\n      for i in master slave1 slave2\n      do\n       echo ---------- zookeeper $i 状态 ------------ \n      ssh $i "/opt/module/zookeeper-3.4.5/bin/zkServer.sh status"\n      done\n      };;\n      esac\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      \n      \n      > chmod +x /home/axcmsm/bin/zk.sh\n    \n    * 查看进程脚本 2选1\n      \n      循环遍历jps命令\n      \n      #!/bin/bash\n      for host in master slave1 slave2\n      do\n       echo =============== $host ===============\n       ssh $host jps\n      done\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      \n      \n      循环输入的命令\n      \n      #!/bin/bash\n      if [ $# -lt 1 ]\n      then\n      \techo Not Enough Arguement;\n      \texit;\n      fi\n      \n      for host in master slave1 slave2\n      do\n       echo =============== $host ===============\n       ssh $host $@\n      done\n      \n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      \n    \n    分发：前提是已经安装了rsync软件\n    \n    分发安装的软件\n    xsync /opt/module/jdk1.8.0_212\n    xsync /opt/module/hadoop\n    xsync /opt/module/zookeeper/\n    \n    分发配置文件  （需要root权限） \n    xsync /etc/profile.d/my_env.sh\n    并全部刷新 source /etc/profile.d/my_env.sh\n    \n    修改每个节点zookeeper myid  0,1,2\n    vim /opt/module/zookeeper/zkData/myid\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n\n# 启动\n\n 1. 启动journalnode 3台\n    \n    hdfs --daemon start journalnode\n    低版本\n    hadoop-daemon.sh start journalnode \n    或群起\n    hadoop-daemons.sh start journalnode \n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 2. 启动zookeeper\n    \n    zk.sh start\n    \n    \n    1\n    \n\n 3. 格式化hdfs\n\nhdfs namenode -format  格式化namenode\n\n\n1\n\n\n 4. 启动hdfs 备份hdfs\n    \n    hdfs --daemon start namenode 第一台\n    低版本\n    hadoop-daemon.sh start namenode \n    \n    hdfs namenode -bootstrapStandby 同步数据\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 5. 格式化zkfs 生成节点\n    \n    hdfs zkfc -formatZK  注册信息到zk\n    \n    \n    1\n    \n\n 6. 重启集群\n    \n    stop-all.sh\n    start-all.sh\n    \n    \n    1\n    2\n    \n\nhadoop2.6.0出现的问题 只能设置俩台namenode,yarn的配置也不相同 建议用hadoop3.x\n\nExpected exactly 2 NameNodes in namespace \'mycluster\'. Instead, got only 3 (NN ids were \'nn1\',\'nn2\',\'nn3\'\n\n\n1\n\n\n修改hdfs-site.xml 配置文件\n将nn3去掉\n\n\n1\n2\n',normalizedContent:'# 搭建hadoop ha\n\n 1. 前置知识以及搭建 hadoop zookeeper\n 2. 规划节点 2个还是3个namenode 或更多 （2.6.0版本只能规划俩台节点，否则namenode报传参异常)\n\n核心问题：如何保证数据一致性\n\n * namenode 数据一致\n   \n   - fsimage 让一台nn生成数据,其他机器的nn同步。  文件\n   - edits：需要引进新的模块 journalnode 来保证edtis文件的数据一致性。  文件\n   \n   \n   1\n   2\n   \n\n * 只有一台工作(active)其他待备份(standby)\n   \n   - 手动分配\n   - 自动分配 *\n   \n   \n   1\n   2\n   \n\n * 2nn 在ha架构中并不存在\n   \n   定期合并fsimage,edtis的活由standby的nn来干\n   \n   \n   1\n   \n\n * nn\'发生了问题如何切换上位\n   \n   - 手动故障转移\n   - 自动故障转移  zookeeper\n   \n   \n   1\n   2\n   \n\n\n# 手动模式\n\n前置环境:\n\n 1. 修改ip\n    \n    vim /etc/host\n    \n    \n    1\n    \n\n 2. 修改主机名和ip地址的映射\n\n 3. 关闭防火墙\n\n 4. ssh免密登录\n\n 5. 安装jdk,配置环境变量\n\n规划:\n\n3个namenode, journalnode,datanode\n\n> 注意目录的权限\n\n修改配置文件:\n\n * core-site.xml\n   \n   1. 把多个namenode的地址组合成一个集群 mycluster 是集群的名称\n   \tfs.defaultfs => hdfs://mycluster\n   2. 指定hadoop运行时产生文件的存储目录\n   \thadoop.tmp.dir => /opt/ha/hadoop-2.6.0/data\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * hdfs-site.xml\n   \n   1. namenode 数据的存储目录  ${引用上面定义的变量}\n   \tdfs.namenode.name.dir => file://${hadoop.tmp.dir}/name\n   2. datanode 数据存储目录\n   \tdfs.datanode.data.dir => file://${hadoop.tmp.dir}/data\n   3. journalnode数据存储目录\n   \tdfs.journalnode.edit.dir => ${hadoop.tmp.dir}/jn\n   4. 完全分布式集群名称\n   \tdfs.nameservices => mycluster \n   5. 集群中的namenode的节点   \n   \tdfs.ha.namenodes.mycluster => nn1,nn2,nn3\n   \t\n   6. 配置rpc通信地址\n   6.1. namenode的rpc通信地址 nn1\n   \tdfs.namenode.rpc-address.mycluster.nn1 => hadoop102:8020\n   6.2. namenode的rpc通信地址 nn2\n   \tdfs.namenode.rpc-address.mycluster.nn2 => hadoop103:8020\n   6.3. namenode的rpc通信地址 nn3\n   \tdfs.namenode.rpc-address.mycluster.nn3 => hadoop104:8020\n   \n   7. 配置http通信地址\n   7.1. 指定namenode的http通信地址nn1\n   \tdfs.namenode.http-address.mycluster.nn1 => hadoop102:9870\n   7.2. 指定namenode的http通信地址nn2\n   \tdfs.namenode.http-address.mycluster.nn2 => hadoop103:9870\n   7.3. 指定namenode的http通信地址nn3\n   \tdfs.namenode.http-address.mycluster.nn3 => hadoop104:9870\n   \n   8. 指定namenode元数据在journalnode上存放位置\n   \tdfs.namenode.shared.edits.dir => qjournal://hadoop102:8485;hadoop103:8485;hadoop104:8485/mycluster\n   \n   9. 访问代理类 => client 用于确定那个namenode 为active\n   \tdfs.client.failover.proxy.provider.mycluster => org.apache.hadoop.hdfs.server.namenode.ha.configuredfailoverproxyprovider\n   \n   10. 配置隔离机制 同时只一台服务器对外响应\n   \tdfs.ha.fencing.methods => sshfence\n   \n   11. 使用隔离级别需要ssh密钥登录  => 自动故障转移中使用到\n   \tdfs.ha.fencing.ssh.private-key-files => /home/acmsm/.ssh/id_rsa\n   \t\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   \n\n分发节点\n\n为了方便配置一下hadoop-ha的环境变量 3台\n\nexport hadoop_home=路径\nexport path=$path:$hadoop_home/bin\nexport path=$path:$hadoop_home/sbin\n\n刷新 source  环境变量路径\n\n\n1\n2\n3\n4\n5\n\n\n\n# 启动集群\n\n 1. 在各个journalnode节点,启动journalnode服务 3台\n    \n    hdfs --daemon start journalnode\n    hdfs --daemon start journalnode\n    hdfs --daemon start journalnode\n    \n    版本低\n    hadoop-daemon.sh start journalnode\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 2. 在nn1 上对其进行格式化 并启动\n    \n    hdfs namenode -format  格式化\n    hdfs --daemon start namenode 启动\n    \n    \n    1\n    2\n    \n\n 3. 在nn2,nn3上同步nn1的元数据信息\n    \n    hdfs namenode -bootstrapstandby\n    hdfs namenode -bootstrapstandby\n    \n    \n    1\n    2\n    \n\n 4. 启动nn2,nn3\n    \n    hdfs --daemon start namenode 启动\n    hdfs --daemon start namenode 启动\n    \n    \n    1\n    2\n    \n\n 5. 分别在3台节点都启动 datanode\n    \n    hdfs --daemon start datanode\n    hdfs --daemon start datanode\n    hdfs --daemon start datanode\n    \n    \n    1\n    2\n    3\n    \n\n 6. 将nn1 切换为active (需要三台机子都能正常起来才能切换)\n    \n    hdfs haadmin -transitiontoactive nn1\n    \n    \n    1\n    \n\n 7. 查看actiive\n    \n    hdfs haadmin -getservicestate nn1\n    \n    \n    1\n    \n\n> 因为隔离机制,如果一台节点和其余几台联系不上时,无法切换成active,因为无法保证所有的节点是standby,到时可能会出现多个active(脑裂)\n> \n> 如何确保另外的节点不是active?\n\n\n# 自动模式 ⭕\n\n最核心的解决上个模式遗留下来的最后一个问题.\n\n添加的新组件:\n\n * zookeeper(存储少量数据)和zkfailovercontroller (zkfc)(监控)\n\n\n\n故障转移机制\n\n 1. active出现假死状态\n 2. zkfc 检测到该状态 通知另一台namenode 的zkfc\n 3. 另外一台的namde强行杀死假死的active防止脑裂 (ssh kil l- 9 进程号) 补刀失败 再调用用户自定义脚本再次补刀..(proweroff.sh),获取命令结果\n 4. 激活namenode 为active\n\n集群规划: 3台namenode,journalnode,datanode,zookeeper,zkfc\n\n配置文件:\n\n * hdfs-site.xml 添加\n   \n   1. 启动nn 故障自动转移\n   \tdfs.ha.automatic-failover.enabled => true\n   \n   \n   1\n   2\n   \n\n * core-site.xml 添加\n   \n   1. 指定zkfc 连接到zkservice 地址\n   \tha.zookeeper.quorum => hadoop102:2181,hadoop103:2181,hadoop104:2181\n   \n   \n   1\n   2\n   \n\n分发配置文件\n\n\n# 启动集群\n\n> 如果集群以开启,先关闭再开\n\n 1. 启动zookeeper\n\n 2. 初始化zkfc (初始化ha在zookeeper中的状态)\n    \n    hdfs zkfc -formatzk\n    \n    \n    1\n    \n\n 3. 启动hdfs\n    \n    start-dfs.sh\n    \n    \n    1\n    \n\n 4. 验证 去zkcli.sh客户端查看namenode选举锁节点\n    \n    get -s /hadoop-ha/mycluster/activestandbyelectorlock \n    \n    \n    1\n    \n\n> 上传文件可能会表一些错误,但是会重新连接到可用的active\n> \n> 因为standby是不可读的,不可操作的\n\n注意：\n\n如果zk状态已切换而hadoop状态仍未被切换\n因为没有 fuster 程序，导致无法进行 fence\n<property>\n    <name>dfs.ha.fencing.methods</name>\n    <value>sshfence</value>\n</property>\n\n请安装有fuster程序的软件包psmisc  （3台）\nyum -y install psmisc\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# yarn高可用\n\n工作机制:\n\n1.启动多个resourcemanager 最先启动的节点会到zookeeper中注册临时节点 active  (临时节点 进程挂掉节点自动删除)\n2. 后启动页会尝试该操作(如果已由节点注册信息) standby\n3. 所有的standby都需要维护一个长轮询,查看节点信息是否存在,一旦节点信息不存在,就立即注册.提升为active\n\n\n1\n2\n3\n\n\n规划:\n\n3台resourcemanager,nodemanager,zookeeper\n\n核心问题:\n\n * active rm挂了 其他standby rm 如何上位 =>利用zk的临时节点\n * standby如何接手程序=> rm会将所有计算程序状态存储到zk中,其他rm上位后会去读取,接着跑\n\n配置文件:\n\n * yarn-site.xml\n   \n   1. 读取数据的方式 shuffle\n   \tyarn.nodemanager.aux-services => mapreduce_shuffle\n   2.  启用resourcemanager ha\n   \tyarn.resourcemanager.ha.enabled => true\n   3. 声明俩台resourcemanager 地址 集群名称\n   \tyarn.resourcemanager.cluster-id => cluster-yarn1\n   4. 指定resourcemanager 逻辑列表\n   \tyarn.resourcemanager.ha.rm-ids => rm1,rm2,rm3\n   \n   5.配置具体地址\n   \tyarn.resourcemanager.hostname.rm1 => hadoop102\n   \tyarn.resourcemanager.hostname.rm2 => hadoop103\n   \tyarn.resourcemanager.hostname.rm3 => hadoop104\n   6. 配置web端地址 rm1\n   \tyarn.resourcemanager.webapp.address.rm1 => hadoop102: 8088\n   \tyarn.resourcemanager.webapp.address.rm2 => hadoop103: 8088\n   \tyarn.resourcemanager.webapp.address.rm3 => hadoop104: 8088\n   7.配置内部通信地址 rm1\n   \tyarn.resourcemanager.address.rm1=hadoop102:8032\n   \tyarn.resourcemanager.address.rm2=hadoop103:8032\n   \tyarn.resourcemanager.address.rm3=hadoop104:8032\n   8. 配置am向rm1申请支援的地址\n   \tyarn.resourcemanager.scheduler.address.rm1 => hadoop102:8030\n   \tyarn.resourcemanager.scheduler.address.rm2 => hadoop103:8030\n   \tyarn.resourcemanager.scheduler.address.rm3 => hadoop104:8030\n   9. 提供nm联系的地址\n   \tyarn.resourcemanager.resource-tracker.address.rm1 => hadoop102:8031\n   \tyarn.resourcemanager.resource-tracker.address.rm2 => hadoop103:8031\n   \tyarn.resourcemanager.resource-tracker.address.rm3 => hadoop104:8031\n   10. 指定zk\n   \tyarn.resourcemanager.zk-address => hadoop102:2181,hadoop103:2181,hadoop104:2181\n   \n   11. 启动自动恢复\n   \tyarn.resourcemanager.recovery.enabled => true\n   \n   12. resourcemanager 状态信息存储到zk集群\n   \tyarn.resourcemanager.store.class => org.apache.hadoop.yarn.server.resourcemanager.recovery.zkrmstatestore\n   \t\n   13. 环境变量继承\n   \tyarn.nodemanager.env-whitelist => java_home,hadoop_common_home,hadoop_hdfs_home,hadoop_conf_dir,classpath_prepend_distcache,hadoop_yarn_home,hadoop_mapred_home\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   \n\n分发\n\n\n# 启动\n\nstart-yarn.sh\n\n访问会8088端口会自动切换到active的节点\n\n\n# 快速搭建模板😁\n\n下载需要小软件，可跳过 （建议使用版本hadoop3.x）\n\nyum -y install vim\nyum -y install net-tools  \nsudo yum -y install lrzsz \nsudo yum -y install rsync  \nyum install -y epel-release\nyum -y install ntpdate\nyum -y install psmisc  必须\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n 1. 修改主机名 ip 映射 关闭防火墙\n    \n    vim /etc/hostname #主机名\n    sudo vi /etc/sysconfig/network-scripts/ifcfg-ens33  设置静态ip\n    vim /etc/hosts  #主机名 和ip的映射\n    \n    systemctl stop firewalld  #关闭防火墙\n    systemctl disable firewalld.service #开机自动关闭\n    3台节点\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n\n 2. 创建用户 让这个用户去操作集群 (选做)\n    \n    1. 创建用户\n     useradd axcmsm\n     passwd axcmsm => axcmsm\n    2. 设置用户权限\n        vim /etc/sudoers\n        ## 放在 %wheel all=(all) all 下面 这个命令设置允许下面的令牌生效\n        axcmsm       all=(all)       nopasswd:all\n    \n    3台节点 注意文件的权限问题\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    \n\n 3. 切换用户配置免密登录 用户就是该用户进行操作集群了\n    \n    ssh-keygen -t rsa  生成密钥 3个回车\n    ssh-copy-id master(slave1,slave2) 分发密钥\n    3台节点都要操作\n    分发环境变量需要root权限 可以话root也分发一下密钥\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 设置时间同步**(选做)** 前提下载好 ntpdate\n    \n    3. 设置时间同步\n    ntpdate ntp4.aliyun.com\n    crontab -e\n     #添加\n    */1 * * * * /usr/sbin/ntpdate ntp4.aliyun.com;\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 5. 安装jdk 3台\n    \n    tar -zxvf /opt/sortware/jdk-8u212-linux-x64.tar.gz -c /opt/module/\n    \n    \n    1\n    \n\n 6. 安装zookeeper\n    \n    tar -zxvf /opt/sortware/hadoop2/zookeeper-3.4.5.tar.gz -c /opt/module/\n    mv zookeeper-3.4.5 zookeeper\n    mkdir /opt/module/zookeeper/zkdata\n    vim /opt/module/zookeeper/zkdata/myid  => （3台节点分别） 1，2，3   不能有空格或空行\n    mv /opt/module/zookeeper/conf/zoo_sample.cfg zoo.cfg \n    vim /opt/module/zookeeper/conf/zoo.cfg \n        #修改\n        datadir=/opt/module/zookeeper/zkdata\n        #添加\n        #######################cluster##########################\n        server.1=master:2888:3888\n        server.2=slave1:2888:3888\n        server.3=slave2:2888:3888\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    \n\n 7. 安装hadoop\n    \n    tar -zxvf /opt/sortware/hadoop2/hadoop-2.6.0.tar.gz -c /opt/module/\n    mv hadoop-2.6.0/ hadoop\n    \n    \n    1\n    2\n    \n    \n    * core-site.xml\n      \n      <configuration>\n      \x3c!-- ha集群名称，该值要和hdfs-site.xml中的配置保持一致 --\x3e\n      <property>\n      <name>fs.defaultfs</name>\n      <value>hdfs://mycluster</value>\n      </property>\n      \x3c!-- hadoop本地磁盘存放数据的公共目录 --\x3e\n      <property>\n      <name>hadoop.tmp.dir</name>\n      <value>/opt/module/hadoop/data</value>\n      </property>\n      \x3c!-- zookeeper集群的地址和端口--\x3e\n      <property>\n      <name>ha.zookeeper.quorum</name>\n      <value>master:2181,slave1:2181,slave2:2181</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      \n    \n    * hdfs-site.xml\n      \n      <configuration>\n      \x3c!--指定hdfs的nameservice为mycluster，需要和core-site.xml中的保持一致 --\x3e\n      <property>\n      <name>dfs.nameservices</name>\n      <value>mycluster</value>\n      </property>\n      \x3c!-- mycluster下面有两个namenode，分别是nn1，nn2 --\x3e\n      <property>\n      <name>dfs.ha.namenodes.mycluster</name>\n      <value>nn1,nn2,nn3</value>\n      </property>\n      \x3c!-- nn1的rpc通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.rpc-address.mycluster.nn1</name>\n      <value>master:8020</value>\n      </property>\n      \x3c!-- nn1的http通信地址 --\x3e\n      \n      <property>\n      <name>dfs.namenode.http-address.mycluster.nn1</name>\n      <value>master:9870</value>\n      </property>\n      \x3c!-- nn2的rpc通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.rpc-address.mycluster.nn2</name>\n      <value>slave1:8020</value>\n      </property>\n      \x3c!-- nn2的http通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.http-address.mycluster.nn2</name>\n      <value>slave1:9870</value>\n      </property>\n      \n      \x3c!-- nn3的rpc通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.rpc-address.mycluster.nn3</name>\n      <value>slave2:8020</value>\n      </property>\n      \x3c!-- nn2的http通信地址 --\x3e\n      <property>\n      <name>dfs.namenode.http-address.mycluster.nn3</name>\n      <value>slave2:9870</value>\n      </property>\n      \n      \x3c!-- 指定namenode的edits元数据在journalnode上的存放位置 --\x3e\n      <property>\n          <name>dfs.namenode.shared.edits.dir</name>\n       <value>qjournal://master:8485;slave1:8485;slave2:8485/mycluster</value>\n      </property>\n              \x3c!-- 指定journalnode在本地磁盘存放数据的位置 --\x3e\n      <property>\n      <name>dfs.journalnode.edits.dir</name>\n      <value>/opt/module/hadoop/data/jn</value>\n      </property>\n              \x3c!-- 开启namenode失败自动切换 --\x3e\n      <property>\n      <name>dfs.ha.automatic-failover.enabled</name>\n      <value>true</value>\n      </property>\n              \x3c!-- 指定该集群出故障时，哪个实现类负责执行故障切换 --\x3e\n      <property>\n      <name>dfs.client.failover.proxy.provider.mycluster</name>\n      <value>org.apache.hadoop.hdfs.server.namenode.ha.configuredfailoverproxyprovider</value>\n      </property>\n             \x3c!-- 配置隔离机制方法--\x3e\n      <property>\n      <name>dfs.ha.fencing.methods</name>\n      <value>sshfence</value>\n      </property>\n      \x3c!-- 使用sshfence隔离机制时需要ssh免登陆 --\x3e\n      <property>\n      <name> dfs.ha.fencing.ssh.private-key-files</name>\n          <value>/home/axcmsm/.ssh/id_rsa</value>\n      </property>\n      \x3c!-- 配置sshfence隔离机制超时时间 --\x3e\n      <property>\n      <name>dfs.ha.fencing.ssh.connect-timeout</name>\n      <value>30000</value>\n      </property>\n      \n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      60\n      61\n      62\n      63\n      64\n      65\n      66\n      67\n      68\n      69\n      70\n      71\n      72\n      73\n      74\n      75\n      76\n      77\n      78\n      79\n      80\n      81\n      \n    \n    * yarn-site.xml\n      \n      <configuration>\n            \x3c!--开启ha --\x3e\n      <property>\n         <name>yarn.resourcemanager.ha.enabled</name>\n         <value>true</value>\n       </property>\n            \x3c!--开启自动故障转移 --\x3e\n      <property>\n         <name>yarn.resourcemanager.recovery.enabled</name>\n         <value>true</value>\n       </property>\n            \x3c!--集群名以及 具体别名 --\x3e\n       <property>\n         <name>yarn.resourcemanager.cluster-id</name>\n         <value>cluster-yarn1</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.ha.rm-ids</name>\n         <value>rm1,rm2,rm3</value>\n       </property>\n            \x3c!--访问主机 --\x3e\n       <property>\n         <name>yarn.resourcemanager.hostname.rm1</name>\n         <value>master</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.hostname.rm2</name>\n         <value>slave1</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.hostname.rm3</name>\n         <value>slave2</value>\n       </property>\n               \x3c!--提供外部访问地址 --\x3e\n       <property>\n         <name>yarn.resourcemanager.webapp.address.rm1</name>\n         <value>master:8088</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.webapp.address.rm2</name>\n         <value>slave1:8088</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.webapp.address.rm3</name>\n         <value>slave2:8088</value>\n       </property>\n       \x3c!--配置am向rm1申请支援的地址 --\x3e\n       <property>\n         <name>yarn.resourcemanager.address.rm1</name>\n         <value>master:8039</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.address.rm2</name>\n         <value>slave1:8039</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.address.rm3</name>\n         <value>slave2:8039</value>\n       </property>\n           \x3c!--提供nm联系的地址 --\x3e\n       <property>\n         <name>yarn.resourcemanager.resource-tracker.address.rm1</name>\n         <value>master:8031</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.resource-tracker.address.rm2</name>\n         <value>slave1:8031</value>\n       </property>\n       <property>\n         <name>yarn.resourcemanager.resource-tracker.address.rm3</name>\n         <value>slave2:8031</value>\n       </property>\n          \x3c!--指定zk --\x3e\n       <property>\n         <name>yarn.resourcemanager.zk-address</name>\n        <value>master:2181,slave1:2181,slave2:2181</value>\n       </property>\n          \x3c!--执行shuffle --\x3e\n      <property>\n          <name>yarn.nodemanager.aux-services</name>\n          <value>mapreduce_shuffle</value>\n      </property>\n      \x3c!--状态信息存储到zk集群 --\x3e\n      <property>\n          <name>yarn.resourcemanager.store.class</name>\n          <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.zkrmstatestore</value>\n      </property>\n      \x3c!-- 环境变量继承--\x3e\n      <property>\n          <name>yarn.nodemanager.env-whitelist</name>   <value>java_home,hadoop_common_home,hadoop_hdfs_home,hadoop_conf_dir,classpath_prepend_distcache,hadoop_yarn_home,hadoop_mapred_home</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      54\n      55\n      56\n      57\n      58\n      59\n      60\n      61\n      62\n      63\n      64\n      65\n      66\n      67\n      68\n      69\n      70\n      71\n      72\n      73\n      74\n      75\n      76\n      77\n      78\n      79\n      80\n      81\n      82\n      83\n      84\n      85\n      86\n      87\n      88\n      89\n      90\n      91\n      92\n      \n    \n    * mapper-site.xml\n      \n      <configuration>\n          \x3c!-- 指定yarn 模式运行程序 --\x3e\n      <property>\n         <name>mapreduce.framework.name</name>\n         <value>yarn</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      \n    \n    * workers 、slaves\n      \n      master\n      slave1\n      slave2\n      \n      \n      1\n      2\n      3\n      \n\n 8. 统一配置环境变量\n    \n    vim /etc/profile.d/my_env.sh\n    \n    #java_home\n    export java_home=/opt/module/jdk1.8.0_212\n    export path=$path:$java_home/bin\n    \n    #zk\n    export zookeeper_home=/opt/module/zookeeper\n    export path=$path:$zookeeper_home/bin\n    \n    #hadoop_home\n    export hadoop_home=/opt/module/hadoop\n    export path=$path:$hadoop_home/bin\n    export path=$path:$hadoop_home/sbin\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n 9. 分发 修改个别地方 刷新 启动\n    \n    * 分发脚本：vim /home/axcmsm/bin/xsync\n      \n      #!/bin/bash\n      #1. 判断参数个数\n      if [ $# -lt 1 ]\n      then\n        echo not enough arguement!\n        exit;\n      fi\n      #2. 遍历集群所有机器\n      for host in master slave1 slave2\n      do\n        echo ====================  $host  ====================\n        #3. 遍历所有目录，挨个发送\n        for file in $@\n        do\n          #4 判断文件是否存在\n          if [ -e $file ]\n          then\n            #5. 获取父目录\n            pdir=$(cd -p $(dirname $file); pwd)\n            #6. 获取当前文件的名称\n            fname=$(basename $file)\n            ssh $host "mkdir -p $pdir"\n            rsync -av $pdir/$fname $host:$pdir\n          else\n            echo $file does not exists!\n          fi\n        done\n       done\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      \n      \n      > chmod +x /home/axcmsm/bin/xsync\n    \n    * zk群启脚本:vim zk.sh\n      \n      #!/bin/bash\n      case $1 in\n      "start"){\n      for i in master slave1 slave2\n      do\n       echo ---------- zookeeper $i 启动 ------------\n      ssh $i "/opt/module/zookeeper-3.4.5/bin/zkserver.sh start"\n      done\n      };;\n      "stop"){\n      for i in master slave1 slave2\n      do\n       echo ---------- zookeeper $i 停止 ------------ \n      ssh $i "/opt/module/zookeeper-3.4.5/bin/zkserver.sh stop"\n      done\n      };;\n      "status"){\n      for i in master slave1 slave2\n      do\n       echo ---------- zookeeper $i 状态 ------------ \n      ssh $i "/opt/module/zookeeper-3.4.5/bin/zkserver.sh status"\n      done\n      };;\n      esac\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      \n      \n      > chmod +x /home/axcmsm/bin/zk.sh\n    \n    * 查看进程脚本 2选1\n      \n      循环遍历jps命令\n      \n      #!/bin/bash\n      for host in master slave1 slave2\n      do\n       echo =============== $host ===============\n       ssh $host jps\n      done\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      \n      \n      循环输入的命令\n      \n      #!/bin/bash\n      if [ $# -lt 1 ]\n      then\n      \techo not enough arguement;\n      \texit;\n      fi\n      \n      for host in master slave1 slave2\n      do\n       echo =============== $host ===============\n       ssh $host $@\n      done\n      \n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      \n    \n    分发：前提是已经安装了rsync软件\n    \n    分发安装的软件\n    xsync /opt/module/jdk1.8.0_212\n    xsync /opt/module/hadoop\n    xsync /opt/module/zookeeper/\n    \n    分发配置文件  （需要root权限） \n    xsync /etc/profile.d/my_env.sh\n    并全部刷新 source /etc/profile.d/my_env.sh\n    \n    修改每个节点zookeeper myid  0,1,2\n    vim /opt/module/zookeeper/zkdata/myid\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    \n\n\n# 启动\n\n 1. 启动journalnode 3台\n    \n    hdfs --daemon start journalnode\n    低版本\n    hadoop-daemon.sh start journalnode \n    或群起\n    hadoop-daemons.sh start journalnode \n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 2. 启动zookeeper\n    \n    zk.sh start\n    \n    \n    1\n    \n\n 3. 格式化hdfs\n\nhdfs namenode -format  格式化namenode\n\n\n1\n\n\n 4. 启动hdfs 备份hdfs\n    \n    hdfs --daemon start namenode 第一台\n    低版本\n    hadoop-daemon.sh start namenode \n    \n    hdfs namenode -bootstrapstandby 同步数据\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n\n 5. 格式化zkfs 生成节点\n    \n    hdfs zkfc -formatzk  注册信息到zk\n    \n    \n    1\n    \n\n 6. 重启集群\n    \n    stop-all.sh\n    start-all.sh\n    \n    \n    1\n    2\n    \n\nhadoop2.6.0出现的问题 只能设置俩台namenode,yarn的配置也不相同 建议用hadoop3.x\n\nexpected exactly 2 namenodes in namespace \'mycluster\'. instead, got only 3 (nn ids were \'nn1\',\'nn2\',\'nn3\'\n\n\n1\n\n\n修改hdfs-site.xml 配置文件\n将nn3去掉\n\n\n1\n2\n',charsets:{cjk:!0}},{title:"搭建HIVE",frontmatter:{title:"搭建HIVE",date:"2022-01-23T00:00:00.000Z",tags:["安装"],categories:["安装"]},regularPath:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAHIVE.html",relativePath:"view/docs/安装/搭建HIVE.md",key:"v-7851ce0c",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAHIVE.html",headers:[{level:2,title:"搭建HIVE",slug:"搭建hive",normalizedTitle:"搭建hive",charIndex:2},{level:2,title:"mysql的安装",slug:"mysql的安装",normalizedTitle:"mysql的安装",charIndex:397},{level:2,title:"内嵌模式",slug:"内嵌模式",normalizedTitle:"内嵌模式",charIndex:2115},{level:2,title:"本地模式",slug:"本地模式",normalizedTitle:"本地模式",charIndex:2915},{level:2,title:"远程模式😁",slug:"远程模式😁",normalizedTitle:"远程模式😁",charIndex:5264}],lastUpdated:"2022/1/23 下午8:46:13",headersStr:"搭建HIVE mysql的安装 内嵌模式 本地模式 远程模式😁",content:"# 搭建HIVE\n\n前置知识：hadoop基础、mysql\n\nhadoop的配置文件添加\n\n * core-site.xml 添加代理用户，远程连携时需要代理用户的\n   \n   > 远程访问所有东西自动代理成axcmsm用户 axcmsm组\n   \n   \x3c!-- 整合hive --\x3e\n   <property>\n   <name>hadoop.proxyuser.axcmsm.hosts</name>\n   <value>*</value>\n   </property>\n   <property>\n   <name>hadoop.proxyuser.axcmsm.groups</name>\n   <value>*</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n\n# mysql的安装\n\n> 这里是离线安装。\n\n上传安装包\n-rw-r--r--. 1 axcmsm axcmsm    277604 6月  28 2021 01_mysql-community-common-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm   2237116 6月  28 2021 02_mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm   2112700 6月  28 2021 03_mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm  25034716 6月  28 2021 04_mysql-community-client-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm 159295840 6月  28 2021 05_mysql-community-server-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm    872303 6月  28 2021 mysql-connector-java-5.1.27-bin.jar\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n1. 解压上传的安装包\n\t#卸载Centos7自带mariadb\n\trpm -qa|grep mariadb #查看\n\tmariadb-libs-5.5.60-1.el7_5.x86_64\n\tsudo rpm -e mariadb-libs-5.5.60-1.el7_5.x86_64 --nodeps\n\t\n\t#下载libaio\n\tsudo yum -y install libaio\n\t解压上传mysql包\n\t\nsudo rpm -ivh 01_mysql-community-common-5.7.16-1.el7.x86_64.rpm\nsudo rpm -ivh 02_mysql-community-libs-5.7.16-1.el7.x86_64.rpm \nsudo rpm -ivh 03_mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm \nsudo rpm -ivh 04_mysql-community-client-5.7.16-1.el7.x86_64.rpm\nsudo rpm -ivh 05_mysql-community-server-5.7.16-1.el7.x86_64.rpm\n\n2. 初始化mysql\n\tsudo mysqld --initialize\n\tsudo chown mysql:mysql /var/lib/mysql -R\n\n3. 启动mysql\n\tsystemctl start mysqld.service\n4、查看mysql密码\n\tsudo cat  /var/log/mysqld.log |grep root@\n\t\n5. 登录mysql\n \tmysql -uroot -p\n \t输入密码\n6. 更新root密码\n\talter user user() identified by \"hadoop\"; #更新密码\n7. 授权\n\tuse mysql;\n\tGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'hadoop' WITH GRANT OPTION;\n\tFLUSH PRIVILEGES;\n\t\n8. 开机自启mysql\n\tsystemctl enable  mysqld\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n\n# 内嵌模式\n\n内置的Derby数据库（默认）（不需要安装mysql）\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/apache-hive-3.1.2-bin.tar.gz -C /opt/module/\nmv apache-hive-3.1.2-bin/ hive\n2. 解决hadoop、hive之间的guava版本差异\nrm -rf /opt/module/hive/lib/guava-25.0-jre.jar\ncp /opt/module/hadoop/share/hadoop/common/lib/guava-27.0-jre.jar /opt/module/hive/lib/guava-27.0-jre.jar\n3. 修改hive环境变量文件 添加Hadoop_HOME\n\tmv /opt/module/hive/conf/hive-env.sh.template /opt/module/hive/conf/hive-env.sh\n\tvim /opt/module/hive/conf/hive-env.sh\n\t#添加\n\texport HADOOP_HOME=/opt/module/hadoop\n    export HIVE_CONF_DIR=/opt/module/hive/conf\n    export HIVE_AUX_JARS_PATH=/opt/module/hive/lib\n4. 初始化数据库\n\t#初始化metadata\n\t/opt/module/hive/bin/schematool -dbType derby -initSchema\n#启动hive\n\t/opt/module/hive/bin/hive\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 本地模式\n\nMetastore服务与主HiveServer进程在同一进程中运行(需要安装mysql)\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/apache-hive-3.1.2-bin.tar.gz -C /opt/module/\nmv apache-hive-3.1.2-bin/ hive\n2. 解决hadoop、hive之间的guava版本差异\nrm -rf /opt/module/hive/lib/guava-25.0-jre.jar\ncp /opt/module/hadoop/share/hadoop/common/lib/guava-27.0-jre.jar /opt/module/hive/lib/guava-27.0-jre.jar\n\n3. 修改hive环境变量文件 添加Hadoop_HOME\n\tmv /opt/module/hive/conf/hive-env.sh.template /opt/module/hive/conf/hive-env.sh\n\tvim /opt/module/hive/conf/hive-env.sh\n\t#添加\nexport HADOOP_HOME=/opt/module/hadoop\nexport HIVE_CONF_DIR=/opt/module/hive/conf\nexport HIVE_AUX_JARS_PATH=/opt/module/hive/lib\n    \n4. 添加mysql jdbc驱动到hive安装包lib/文件下\ncp /opt/sortware/mysql/mysql-connector-java-5.1.27-bin.jar /opt/module/hive/lib/mysql-connector-java-5.1.27-bin.jar\n\n5. 添加对mysql的配置\nvim /opt/module/hive/conf/hive-site.xml\n\n6. #初始化metadata 完成后会在数据初始化74张表\n/opt/module/hive/bin/schematool -initSchema -dbType mysql -verbos\n\n\t\n#启动hive服务\nbin/hive\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n * hive-site.xml\n   \n   <configuration>\n       \x3c!-- 存储元数据mysql相关配置 --\x3e\n       <property>\n           <name>javax.jdo.option.ConnectionURL</name>\n           <value> jdbc:mysql://master:3306/hive?createDatabaseIfNotExist=true&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.ConnectionDriverName</name>\n           <value>com.mysql.jdbc.Driver</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.ConnectionUserName</name>\n           <value>root</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.ConnectionPassword</name>\n           <value>hadoop</value>\n       </property>\n   \n       \x3c!-- 关闭元数据存储授权  --\x3e\n       <property>\n           <name>hive.metastore.event.db.notification.api.auth</name>\n           <value>false</value>\n       </property>\n   \n       \x3c!-- 关闭元数据存储版本的验证 --\x3e\n       <property>\n           <name>hive.metastore.schema.verification</name>\n           <value>false</value>\n       </property>\n   </configuration>\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   \n\n\n# 远程模式😁\n\nMetastore服务在其自己的单独JVM上运行，需要配置hive.metastore.uris 参数来指定metastore服务运行的机器ip和端口，并且需要单独手动启动metastore服务。（mysql存储）\n\n架构图\n\n\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/apache-hive-3.1.2-bin.tar.gz -C /opt/module/\nmv apache-hive-3.1.2-bin/ hive\n2. 解决hadoop、hive之间的guava版本差异\nrm -rf /opt/module/hive/lib/guava-25.0-jre.jar\ncp /opt/module/hadoop/share/hadoop/common/lib/guava-27.0-jre.jar /opt/module/hive/lib/guava-27.0-jre.jar\n\n3. 修改hive环境变量文件 添加Hadoop_HOME\n\tmv /opt/module/hive/conf/hive-env.sh.template /opt/module/hive/conf/hive-env.sh\n\tvim /opt/module/hive/conf/hive-env.sh\n\t#添加\nexport HADOOP_HOME=/opt/module/hadoop\nexport HIVE_CONF_DIR=/opt/module/hive/conf\nexport HIVE_AUX_JARS_PATH=/opt/module/hive/lib\n    \n4. 添加mysql jdbc驱动到hive安装包lib/文件下\ncp /opt/sortware/mysql/mysql-connector-java-5.1.27-bin.jar /opt/module/hive/lib/mysql-connector-java-5.1.27-bin.jar\n\n5. 添加对mysql的配置\nvim /opt/module/hive/conf/hive-site.xml\n\n6. #初始化metadata 完成后会在数据初始化74张表\n/opt/module/hive/bin/schematool -initSchema -dbType mysql -verbos\n\n\t\n#启动hive服务 前台启动\n/opt/module/hive/bin/hive --service metastore #启动metastore jvm进程提供服务\n/opt/module/hive/bin/hive  #客户端 老客户端\n\n/opt/module/hive/bin/hive --service hiveserver2 #新jvm进程提供服务 支持jdbc连接\n启动beelin客户端 提供了更加友好的表格展示...\n/opt/module/hive/bin/beeline #新客户端\nbeeline> !connect jdbc:hive2://master:10000 #连接到服务进程\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n * hive-site.xml\n   \n   <configuration>\n       \x3c!-- 存储元数据mysql相关配置 --\x3e\n       <property>\n           <name>javax.jdo.option.ConnectionURL</name>\n           <value> jdbc:mysql://master:3306/hive1?createDatabaseIfNotExist=true&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8</value>\n       </property>\n       \n       <property>\n           <name>javax.jdo.option.ConnectionDriverName</name>\n           <value>com.mysql.jdbc.Driver</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.ConnectionUserName</name>\n           <value>root</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.ConnectionPassword</name>\n           <value>hadoop</value>\n       </property>\n   \x3c!-- 指定 hiveserver2 连接的端口号 --\x3e\n    <property>\n    <name>hive.server2.thrift.port</name>\n    <value>10000</value>\n    </property>\n       \x3c!-- H2S运行绑定host --\x3e\n       <property>\n           <name>hive.server2.thrift.bind.host</name>\n           <value>master</value>\n       </property>\n       \n       \n       \x3c!-- 远程模式部署metastore 服务地址 --\x3e\n       <property>\n           <name>hive.metastore.uris</name>\n           <value>thrift://master:9083</value>\n       </property>\n       \n       \n       \n   \n       \x3c!-- 关闭元数据存储授权  --\x3e\n       <property>\n           <name>hive.metastore.event.db.notification.api.auth</name>\n           <value>false</value>\n       </property>\n   \n       \x3c!-- 关闭元数据存储版本的验证 --\x3e\n       <property>\n           <name>hive.metastore.schema.verification</name>\n           <value>false</value>\n       </property>\n   </configuration>\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   ",normalizedContent:"# 搭建hive\n\n前置知识：hadoop基础、mysql\n\nhadoop的配置文件添加\n\n * core-site.xml 添加代理用户，远程连携时需要代理用户的\n   \n   > 远程访问所有东西自动代理成axcmsm用户 axcmsm组\n   \n   \x3c!-- 整合hive --\x3e\n   <property>\n   <name>hadoop.proxyuser.axcmsm.hosts</name>\n   <value>*</value>\n   </property>\n   <property>\n   <name>hadoop.proxyuser.axcmsm.groups</name>\n   <value>*</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n\n# mysql的安装\n\n> 这里是离线安装。\n\n上传安装包\n-rw-r--r--. 1 axcmsm axcmsm    277604 6月  28 2021 01_mysql-community-common-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm   2237116 6月  28 2021 02_mysql-community-libs-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm   2112700 6月  28 2021 03_mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm  25034716 6月  28 2021 04_mysql-community-client-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm 159295840 6月  28 2021 05_mysql-community-server-5.7.16-1.el7.x86_64.rpm\n-rw-r--r--. 1 axcmsm axcmsm    872303 6月  28 2021 mysql-connector-java-5.1.27-bin.jar\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n1. 解压上传的安装包\n\t#卸载centos7自带mariadb\n\trpm -qa|grep mariadb #查看\n\tmariadb-libs-5.5.60-1.el7_5.x86_64\n\tsudo rpm -e mariadb-libs-5.5.60-1.el7_5.x86_64 --nodeps\n\t\n\t#下载libaio\n\tsudo yum -y install libaio\n\t解压上传mysql包\n\t\nsudo rpm -ivh 01_mysql-community-common-5.7.16-1.el7.x86_64.rpm\nsudo rpm -ivh 02_mysql-community-libs-5.7.16-1.el7.x86_64.rpm \nsudo rpm -ivh 03_mysql-community-libs-compat-5.7.16-1.el7.x86_64.rpm \nsudo rpm -ivh 04_mysql-community-client-5.7.16-1.el7.x86_64.rpm\nsudo rpm -ivh 05_mysql-community-server-5.7.16-1.el7.x86_64.rpm\n\n2. 初始化mysql\n\tsudo mysqld --initialize\n\tsudo chown mysql:mysql /var/lib/mysql -r\n\n3. 启动mysql\n\tsystemctl start mysqld.service\n4、查看mysql密码\n\tsudo cat  /var/log/mysqld.log |grep root@\n\t\n5. 登录mysql\n \tmysql -uroot -p\n \t输入密码\n6. 更新root密码\n\talter user user() identified by \"hadoop\"; #更新密码\n7. 授权\n\tuse mysql;\n\tgrant all privileges on *.* to 'root'@'%' identified by 'hadoop' with grant option;\n\tflush privileges;\n\t\n8. 开机自启mysql\n\tsystemctl enable  mysqld\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n\n# 内嵌模式\n\n内置的derby数据库（默认）（不需要安装mysql）\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/apache-hive-3.1.2-bin.tar.gz -c /opt/module/\nmv apache-hive-3.1.2-bin/ hive\n2. 解决hadoop、hive之间的guava版本差异\nrm -rf /opt/module/hive/lib/guava-25.0-jre.jar\ncp /opt/module/hadoop/share/hadoop/common/lib/guava-27.0-jre.jar /opt/module/hive/lib/guava-27.0-jre.jar\n3. 修改hive环境变量文件 添加hadoop_home\n\tmv /opt/module/hive/conf/hive-env.sh.template /opt/module/hive/conf/hive-env.sh\n\tvim /opt/module/hive/conf/hive-env.sh\n\t#添加\n\texport hadoop_home=/opt/module/hadoop\n    export hive_conf_dir=/opt/module/hive/conf\n    export hive_aux_jars_path=/opt/module/hive/lib\n4. 初始化数据库\n\t#初始化metadata\n\t/opt/module/hive/bin/schematool -dbtype derby -initschema\n#启动hive\n\t/opt/module/hive/bin/hive\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 本地模式\n\nmetastore服务与主hiveserver进程在同一进程中运行(需要安装mysql)\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/apache-hive-3.1.2-bin.tar.gz -c /opt/module/\nmv apache-hive-3.1.2-bin/ hive\n2. 解决hadoop、hive之间的guava版本差异\nrm -rf /opt/module/hive/lib/guava-25.0-jre.jar\ncp /opt/module/hadoop/share/hadoop/common/lib/guava-27.0-jre.jar /opt/module/hive/lib/guava-27.0-jre.jar\n\n3. 修改hive环境变量文件 添加hadoop_home\n\tmv /opt/module/hive/conf/hive-env.sh.template /opt/module/hive/conf/hive-env.sh\n\tvim /opt/module/hive/conf/hive-env.sh\n\t#添加\nexport hadoop_home=/opt/module/hadoop\nexport hive_conf_dir=/opt/module/hive/conf\nexport hive_aux_jars_path=/opt/module/hive/lib\n    \n4. 添加mysql jdbc驱动到hive安装包lib/文件下\ncp /opt/sortware/mysql/mysql-connector-java-5.1.27-bin.jar /opt/module/hive/lib/mysql-connector-java-5.1.27-bin.jar\n\n5. 添加对mysql的配置\nvim /opt/module/hive/conf/hive-site.xml\n\n6. #初始化metadata 完成后会在数据初始化74张表\n/opt/module/hive/bin/schematool -initschema -dbtype mysql -verbos\n\n\t\n#启动hive服务\nbin/hive\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n * hive-site.xml\n   \n   <configuration>\n       \x3c!-- 存储元数据mysql相关配置 --\x3e\n       <property>\n           <name>javax.jdo.option.connectionurl</name>\n           <value> jdbc:mysql://master:3306/hive?createdatabaseifnotexist=true&amp;usessl=false&amp;useunicode=true&amp;characterencoding=utf-8</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.connectiondrivername</name>\n           <value>com.mysql.jdbc.driver</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.connectionusername</name>\n           <value>root</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.connectionpassword</name>\n           <value>hadoop</value>\n       </property>\n   \n       \x3c!-- 关闭元数据存储授权  --\x3e\n       <property>\n           <name>hive.metastore.event.db.notification.api.auth</name>\n           <value>false</value>\n       </property>\n   \n       \x3c!-- 关闭元数据存储版本的验证 --\x3e\n       <property>\n           <name>hive.metastore.schema.verification</name>\n           <value>false</value>\n       </property>\n   </configuration>\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   \n\n\n# 远程模式😁\n\nmetastore服务在其自己的单独jvm上运行，需要配置hive.metastore.uris 参数来指定metastore服务运行的机器ip和端口，并且需要单独手动启动metastore服务。（mysql存储）\n\n架构图\n\n\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/apache-hive-3.1.2-bin.tar.gz -c /opt/module/\nmv apache-hive-3.1.2-bin/ hive\n2. 解决hadoop、hive之间的guava版本差异\nrm -rf /opt/module/hive/lib/guava-25.0-jre.jar\ncp /opt/module/hadoop/share/hadoop/common/lib/guava-27.0-jre.jar /opt/module/hive/lib/guava-27.0-jre.jar\n\n3. 修改hive环境变量文件 添加hadoop_home\n\tmv /opt/module/hive/conf/hive-env.sh.template /opt/module/hive/conf/hive-env.sh\n\tvim /opt/module/hive/conf/hive-env.sh\n\t#添加\nexport hadoop_home=/opt/module/hadoop\nexport hive_conf_dir=/opt/module/hive/conf\nexport hive_aux_jars_path=/opt/module/hive/lib\n    \n4. 添加mysql jdbc驱动到hive安装包lib/文件下\ncp /opt/sortware/mysql/mysql-connector-java-5.1.27-bin.jar /opt/module/hive/lib/mysql-connector-java-5.1.27-bin.jar\n\n5. 添加对mysql的配置\nvim /opt/module/hive/conf/hive-site.xml\n\n6. #初始化metadata 完成后会在数据初始化74张表\n/opt/module/hive/bin/schematool -initschema -dbtype mysql -verbos\n\n\t\n#启动hive服务 前台启动\n/opt/module/hive/bin/hive --service metastore #启动metastore jvm进程提供服务\n/opt/module/hive/bin/hive  #客户端 老客户端\n\n/opt/module/hive/bin/hive --service hiveserver2 #新jvm进程提供服务 支持jdbc连接\n启动beelin客户端 提供了更加友好的表格展示...\n/opt/module/hive/bin/beeline #新客户端\nbeeline> !connect jdbc:hive2://master:10000 #连接到服务进程\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n * hive-site.xml\n   \n   <configuration>\n       \x3c!-- 存储元数据mysql相关配置 --\x3e\n       <property>\n           <name>javax.jdo.option.connectionurl</name>\n           <value> jdbc:mysql://master:3306/hive1?createdatabaseifnotexist=true&amp;usessl=false&amp;useunicode=true&amp;characterencoding=utf-8</value>\n       </property>\n       \n       <property>\n           <name>javax.jdo.option.connectiondrivername</name>\n           <value>com.mysql.jdbc.driver</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.connectionusername</name>\n           <value>root</value>\n       </property>\n   \n       <property>\n           <name>javax.jdo.option.connectionpassword</name>\n           <value>hadoop</value>\n       </property>\n   \x3c!-- 指定 hiveserver2 连接的端口号 --\x3e\n    <property>\n    <name>hive.server2.thrift.port</name>\n    <value>10000</value>\n    </property>\n       \x3c!-- h2s运行绑定host --\x3e\n       <property>\n           <name>hive.server2.thrift.bind.host</name>\n           <value>master</value>\n       </property>\n       \n       \n       \x3c!-- 远程模式部署metastore 服务地址 --\x3e\n       <property>\n           <name>hive.metastore.uris</name>\n           <value>thrift://master:9083</value>\n       </property>\n       \n       \n       \n   \n       \x3c!-- 关闭元数据存储授权  --\x3e\n       <property>\n           <name>hive.metastore.event.db.notification.api.auth</name>\n           <value>false</value>\n       </property>\n   \n       \x3c!-- 关闭元数据存储版本的验证 --\x3e\n       <property>\n           <name>hive.metastore.schema.verification</name>\n           <value>false</value>\n       </property>\n   </configuration>\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   ",charsets:{cjk:!0}},{title:"搭建kafka",frontmatter:{title:"搭建kafka",date:"2022-01-23T00:00:00.000Z",tags:["安装"],categories:["安装"]},regularPath:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAkafka.html",relativePath:"view/docs/安装/搭建kafka.md",key:"v-76aea4b8",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BAkafka.html",headers:[{level:2,title:"搭建kafka",slug:"搭建kafka",normalizedTitle:"搭建kafka",charIndex:2},{level:2,title:"启动kafka",slug:"启动kafka",normalizedTitle:"启动kafka",charIndex:1520}],lastUpdated:"2022/1/23 下午8:42:24",headersStr:"搭建kafka 启动kafka",content:'# 搭建kafka\n\n前置知识：zookeeper\n\n环境搭建：\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/kafka_2.11-2.4.1.tgz -C /opt/module/\nmv /opt/module/kafka_2.11-2.4.1/ /opt/module/kafka\n2. 创建日志文件\nmkdir /opt/module/kafka/logs\n3. 修改配置文件\nvim /opt/module/kafka/config/server.properties\n\n4. 配置环境变量 （记得source 刷新）\nsudo vim /etc/profile.d/my_env.sh\n#KaFka 3台\nexport KAFKA_HOME=/opt/module/kafka\nexport PATH=$PATH:$KAFKA_HOME/bin\n\n\n5. 分发kafka （配置3台集群)  \n xsync /opt/module/kafka/  #分发kafka\n\n6. (分发完注意修改broker.id) server.properties文件  0，1，2 即可 id要唯一\nvim /opt/module/kafka/config/server.properties\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n * /opt/module/kafka/config/server.properties\n   \n   修改\n   #broker 的全局唯一编号，不能重复\n   broker.id=0\n   #删除 topic 功能使能\n   delete.topic.enable=true\n   \n   #处理网络请求的线程数量\n   num.network.threads=3\n   #用来处理磁盘 IO 的现成数量\n   num.io.threads=8\n   #发送套接字的缓冲区大小\n   socket.send.buffer.bytes=102400\n   #接收套接字的缓冲区大小\n   socket.receive.buffer.bytes=102400\n   #请求套接字的缓冲区大小\n   socket.request.max.bytes=104857600\n   \n   #kafka 运行日志存放的路径\n   log.dirs=/opt/module/kafka/logs\n   \n   #topic 在当前 broker 上的分区个数\n   num.partitions=1\n   #用来恢复和清理 data 下数据的线程数量\n   num.recovery.threads.per.data.dir=1\n   #segment 文件保留的最长时间，超时将被删除\n   log.retention.hours=168\n   \n   #配置连接 Zookeeper 集群地址\n   zookeeper.connect=hadoop112:2181,hadoop111:2181,hadoop113:2181\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   \n\n\n# 启动kafka\n\n> 先启动zk再启动kafka，先关闭kafka再关闭zk 否则kafka就关不上了\n\n启动脚本\n\n#!/bin/bash\ncase $1 in\n\t"start" ){\n\tfor i in master slave1 slave2; \n\tdo\n\t\techo "-------$i start kafka-------"\n\t\t# 启动命令\n\t\tssh $i "/opt/module/kafka/bin/kafka-server-start.sh -daemon /opt/module/kafka/config/server.properties"\n\tdone\n\t}\n\t\t;;\n\t"stop" )\n\t{\n\tfor i in master slave1 slave2; \n\tdo\n\t\techo "-------$i stop kafka-------"\n\t\t# 关闭命令\n\t\tssh $i "/opt/module/kafka/bin/kafka-server-stop.sh"\n\tdone\n\t}\n\t\t;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n验证\n\nkafka-topics.sh --create --zookeeper master:2181 --topic first --partitions 2 --replication-factor 2 #增\nkafka-topics.sh --list --zookeeper master:2181 #查\nkafka-topics.sh --describe --topic first --zookeeper master:2181 #查看结构详情消息\nkafka-topics.sh --zookeeper master:2181 --alter --topic first --partitions 3 #修改分区数 分区数不能小于切片数\n\n#开启生产者\nkafka-console-producer.sh --topic first --broker-list master:9092\n\n#开启消费者\nkafka-console-consumer.sh --topic first --bootstrap-server  master:9092\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',normalizedContent:'# 搭建kafka\n\n前置知识：zookeeper\n\n环境搭建：\n\n1. 上传解压安装包 改名\ntar -zxvf /opt/sortware/hadoop3/kafka_2.11-2.4.1.tgz -c /opt/module/\nmv /opt/module/kafka_2.11-2.4.1/ /opt/module/kafka\n2. 创建日志文件\nmkdir /opt/module/kafka/logs\n3. 修改配置文件\nvim /opt/module/kafka/config/server.properties\n\n4. 配置环境变量 （记得source 刷新）\nsudo vim /etc/profile.d/my_env.sh\n#kafka 3台\nexport kafka_home=/opt/module/kafka\nexport path=$path:$kafka_home/bin\n\n\n5. 分发kafka （配置3台集群)  \n xsync /opt/module/kafka/  #分发kafka\n\n6. (分发完注意修改broker.id) server.properties文件  0，1，2 即可 id要唯一\nvim /opt/module/kafka/config/server.properties\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n * /opt/module/kafka/config/server.properties\n   \n   修改\n   #broker 的全局唯一编号，不能重复\n   broker.id=0\n   #删除 topic 功能使能\n   delete.topic.enable=true\n   \n   #处理网络请求的线程数量\n   num.network.threads=3\n   #用来处理磁盘 io 的现成数量\n   num.io.threads=8\n   #发送套接字的缓冲区大小\n   socket.send.buffer.bytes=102400\n   #接收套接字的缓冲区大小\n   socket.receive.buffer.bytes=102400\n   #请求套接字的缓冲区大小\n   socket.request.max.bytes=104857600\n   \n   #kafka 运行日志存放的路径\n   log.dirs=/opt/module/kafka/logs\n   \n   #topic 在当前 broker 上的分区个数\n   num.partitions=1\n   #用来恢复和清理 data 下数据的线程数量\n   num.recovery.threads.per.data.dir=1\n   #segment 文件保留的最长时间，超时将被删除\n   log.retention.hours=168\n   \n   #配置连接 zookeeper 集群地址\n   zookeeper.connect=hadoop112:2181,hadoop111:2181,hadoop113:2181\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   \n\n\n# 启动kafka\n\n> 先启动zk再启动kafka，先关闭kafka再关闭zk 否则kafka就关不上了\n\n启动脚本\n\n#!/bin/bash\ncase $1 in\n\t"start" ){\n\tfor i in master slave1 slave2; \n\tdo\n\t\techo "-------$i start kafka-------"\n\t\t# 启动命令\n\t\tssh $i "/opt/module/kafka/bin/kafka-server-start.sh -daemon /opt/module/kafka/config/server.properties"\n\tdone\n\t}\n\t\t;;\n\t"stop" )\n\t{\n\tfor i in master slave1 slave2; \n\tdo\n\t\techo "-------$i stop kafka-------"\n\t\t# 关闭命令\n\t\tssh $i "/opt/module/kafka/bin/kafka-server-stop.sh"\n\tdone\n\t}\n\t\t;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n验证\n\nkafka-topics.sh --create --zookeeper master:2181 --topic first --partitions 2 --replication-factor 2 #增\nkafka-topics.sh --list --zookeeper master:2181 #查\nkafka-topics.sh --describe --topic first --zookeeper master:2181 #查看结构详情消息\nkafka-topics.sh --zookeeper master:2181 --alter --topic first --partitions 3 #修改分区数 分区数不能小于切片数\n\n#开启生产者\nkafka-console-producer.sh --topic first --broker-list master:9092\n\n#开启消费者\nkafka-console-consumer.sh --topic first --bootstrap-server  master:9092\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',charsets:{cjk:!0}},{title:"websorcket简介",frontmatter:{title:"websorcket简介",date:"2021-08-25T00:00:00.000Z",cover:null,tags:["websorcket"],categories:["前端"]},regularPath:"/view/docs/web/2021/websorcket.html",relativePath:"view/docs/web/2021/websorcket.md",key:"v-0089f5e2",path:"/view/docs/web/2021/websorcket.html",headers:[{level:2,title:"websorcket",slug:"websorcket",normalizedTitle:"websorcket",charIndex:45},{level:2,title:"websorcket 协议",slug:"websorcket-协议",normalizedTitle:"websorcket 协议",charIndex:170},{level:2,title:"客户端实现",slug:"客户端实现",normalizedTitle:"客户端实现",charIndex:1036},{level:2,title:"服务端实现",slug:"服务端实现",normalizedTitle:"服务端实现",charIndex:1481}],lastUpdated:"2021/8/27 下午10:53:09",headersStr:"websorcket websorcket 协议 客户端实现 服务端实现",content:"----------------------------------------\n\n\n# websorcket\n\nwebsorcket 是一种网络通信协议，是 HTML5 开始提供的一种单个 tcp 连 接上进行全双工通讯的协议\n\nhttp 是单向的应用层协议。只能通过频繁的异步请求实现长轮询，效率低，耗资源。\n\nhttp 协议：\n\n\n\nwebsorcket 协议：\n\n\n\n\n# websorcket 协议\n\n本协议分为俩部分：握手和数据传输\n\n握手是基于 http 协议的\n\n来自客户端的的握手如下：\n\nGET ws://localhost/chat HTTP/1.1\nHost: localhost\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw==\nSec-WebSocket-Extensions: permessage-deflate\nSec-WebSocket-Version: 13\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n来自服务端的握手:\n\nHTTP/1.1 101 Switching Protocols\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Accept: HSmrc0sMlYUkAGmm5OPpG2HaGWk=\nSec-WebSocket-Extensions: permessage-deflate\n\n\n1\n2\n3\n4\n5\n\n\n字段说明：\n\n头名称                         说明\nConnection：Upgrade          标识该 Http 请求是协议升级请求\nUpgrade: websocket          协议升级为 Websocket 协议\nSec-WebSocket-Version: 13   客户端支持 websorcket 的版本\nSec-WebSocket-Key           客户端采用 base64 编码的 24 位随机字符序列，服务器接受客户端 http\n                            协议升级的证明，要求服务器响应一个对应的 Sec-WebSocket-Accept 头消息作为应答\nSec-WebSocket-Extensions    协议扩展类型\n\n\n# 客户端实现\n\n 1. websocket 对象\n    \n    var ws=new webSocket(url);\n    \n    \n    1\n    \n    \n    > 参数 url：ws://ip 地址:端口号/资源名称\n\n 2. websocket 事件\n    \n    事件        事件处理程序                   描述\n    open      websocket 对象.onopen      建立连接时 触发\n    message   websocket 对象.onmessage   客户端接收服务器数据时触发\n    error     websocket 对象.onerror     通信发生错时触发\n    close     websocket 对象.onclose     连接关闭时触发\n\n 3. websocket 方法\n    \n    方法       描述\n    send（）   使用拦截发送数据\n\n\n# 服务端实现\n\nTomcat 的 7.0.5 版本开始支持 websocket，并且实现了 Java WebSocket 规范\n\nJava WebSocket 是由一些列 webSocketEndpoint 组成，Endpoint 是一个 java 对象，代表 websocket 连接一端，对于服务端，我们可以视为处理具体的 websocket 消息接口，就像 servlet 与 http 请求一样。\n\n定义：\n\n * 第一种是编程式：继承 javax.websocket.Endpoint 并实现其方法\n * 第二种是注解式：定义 POJO，并添加 @ServerEndpoint 相关注解\n\nEndpoint 实例在 websoccket 握手时创建。并在客户端和服务端连接过程中有效，连接关闭时结束。\n\nEndpoint 接口与生命周期相关方法\n\n方法        描述                                   注解\nonClose   当会话关闭时调用                             @onClose\nonOpen    当开启一个新的会话时调用，该方法是客户端与服务端握手成功后调用的方法   @onOpen\nonError   当连接过程中异常时调用                          @onError\n\n服务端获取数据：\n\n服务端通过 Session 添加 MessageHandler 消息处理器来接收消息，采用注解方式话，可通过@onMessage 指定接收消息的方法\n\n服务端发送数据：\n\n由 RemoteEndpoint 完成，实例由 Session 维护，可通过 Session.getBasicRemote 获取同步消息发送实例，然后调用其 sendxxx 方法就可发送消息，可通过 Session。getAsyncRemote 获取异步消息发送实例",normalizedContent:"----------------------------------------\n\n\n# websorcket\n\nwebsorcket 是一种网络通信协议，是 html5 开始提供的一种单个 tcp 连 接上进行全双工通讯的协议\n\nhttp 是单向的应用层协议。只能通过频繁的异步请求实现长轮询，效率低，耗资源。\n\nhttp 协议：\n\n\n\nwebsorcket 协议：\n\n\n\n\n# websorcket 协议\n\n本协议分为俩部分：握手和数据传输\n\n握手是基于 http 协议的\n\n来自客户端的的握手如下：\n\nget ws://localhost/chat http/1.1\nhost: localhost\nupgrade: websocket\nconnection: upgrade\nsec-websocket-key: x3jjhmbdl1ezlkh9gbhxdw==\nsec-websocket-extensions: permessage-deflate\nsec-websocket-version: 13\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n来自服务端的握手:\n\nhttp/1.1 101 switching protocols\nupgrade: websocket\nconnection: upgrade\nsec-websocket-accept: hsmrc0smlyukagmm5oppg2hagwk=\nsec-websocket-extensions: permessage-deflate\n\n\n1\n2\n3\n4\n5\n\n\n字段说明：\n\n头名称                         说明\nconnection：upgrade          标识该 http 请求是协议升级请求\nupgrade: websocket          协议升级为 websocket 协议\nsec-websocket-version: 13   客户端支持 websorcket 的版本\nsec-websocket-key           客户端采用 base64 编码的 24 位随机字符序列，服务器接受客户端 http\n                            协议升级的证明，要求服务器响应一个对应的 sec-websocket-accept 头消息作为应答\nsec-websocket-extensions    协议扩展类型\n\n\n# 客户端实现\n\n 1. websocket 对象\n    \n    var ws=new websocket(url);\n    \n    \n    1\n    \n    \n    > 参数 url：ws://ip 地址:端口号/资源名称\n\n 2. websocket 事件\n    \n    事件        事件处理程序                   描述\n    open      websocket 对象.onopen      建立连接时 触发\n    message   websocket 对象.onmessage   客户端接收服务器数据时触发\n    error     websocket 对象.onerror     通信发生错时触发\n    close     websocket 对象.onclose     连接关闭时触发\n\n 3. websocket 方法\n    \n    方法       描述\n    send（）   使用拦截发送数据\n\n\n# 服务端实现\n\ntomcat 的 7.0.5 版本开始支持 websocket，并且实现了 java websocket 规范\n\njava websocket 是由一些列 websocketendpoint 组成，endpoint 是一个 java 对象，代表 websocket 连接一端，对于服务端，我们可以视为处理具体的 websocket 消息接口，就像 servlet 与 http 请求一样。\n\n定义：\n\n * 第一种是编程式：继承 javax.websocket.endpoint 并实现其方法\n * 第二种是注解式：定义 pojo，并添加 @serverendpoint 相关注解\n\nendpoint 实例在 websoccket 握手时创建。并在客户端和服务端连接过程中有效，连接关闭时结束。\n\nendpoint 接口与生命周期相关方法\n\n方法        描述                                   注解\nonclose   当会话关闭时调用                             @onclose\nonopen    当开启一个新的会话时调用，该方法是客户端与服务端握手成功后调用的方法   @onopen\nonerror   当连接过程中异常时调用                          @onerror\n\n服务端获取数据：\n\n服务端通过 session 添加 messagehandler 消息处理器来接收消息，采用注解方式话，可通过@onmessage 指定接收消息的方法\n\n服务端发送数据：\n\n由 remoteendpoint 完成，实例由 session 维护，可通过 session.getbasicremote 获取同步消息发送实例，然后调用其 sendxxx 方法就可发送消息，可通过 session。getasyncremote 获取异步消息发送实例",charsets:{cjk:!0}},{title:"搭建hadoop环境",frontmatter:{title:"搭建hadoop环境",date:"2021-09-09T00:00:00.000Z",tags:["安装"],categories:["安装"]},regularPath:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BA%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4.html",relativePath:"view/docs/安装/搭建分布式集群.md",key:"v-3a771900",path:"/view/docs/%E5%AE%89%E8%A3%85/%E6%90%AD%E5%BB%BA%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4.html",headers:[{level:2,title:"集群规划",slug:"集群规划",normalizedTitle:"集群规划",charIndex:2},{level:2,title:"一、服务器基础环境",slug:"一、服务器基础环境",normalizedTitle:"一、服务器基础环境",charIndex:162},{level:2,title:"二、编辑配置文件",slug:"二、编辑配置文件",normalizedTitle:"二、编辑配置文件",charIndex:1230},{level:2,title:"三、分发同步",slug:"三、分发同步",normalizedTitle:"三、分发同步",charIndex:4758},{level:2,title:"四、集群启动",slug:"四、集群启动",normalizedTitle:"四、集群启动",charIndex:5379},{level:2,title:"五、编写脚本",slug:"五、编写脚本",normalizedTitle:"五、编写脚本",charIndex:6510},{level:2,title:"六、基准测试",slug:"六、基准测试",normalizedTitle:"六、基准测试",charIndex:8885}],lastUpdated:"2021/10/30 下午5:52:10",headersStr:"集群规划 一、服务器基础环境 二、编辑配置文件 三、分发同步 四、集群启动 五、编写脚本 六、基准测试",content:'# 集群规划\n\n三台服务器\n\n服务器     运行角色\nnode1   namenode datanode resourcemanager nodemanager\nnode2   secondarynamenode datanode nodemanager\nnode3   datanode nodemanager\n\n\n# 一、服务器基础环境\n\n * 设置主机名 （3台）\n   \n   vim /etc/hostname\n   \n   \n   1\n   \n\n * Hosts映射 （3台）\n   \n   vim /etc/hosts\n   \n   \n   1\n   \n\n * 防火墙关闭（3台机器）\n   \n   systemctl stop firewalld.service  \n   #关闭防火墙\n   systemctl disable firewalld.service\n   #禁止防火墙开启自启\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * ssh免密登录（node1执行->node1|node2|node3）\n   \n   ssh-keygen   （3台机器）\n   #4个回车 生成公钥、私钥\n   ssh-copy-id node1\n   ssh-copy-id node2\n   ssh-copy-id node3 \n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 集群时间同步（3台机器）\n   \n   yum -y install ntpdate\n   ntpdate ntp4.aliyun.com\n   \n   \n   1\n   2\n   \n\n * JDK 1.8安装（3台机器）\n   \n   #解压配置环境变量 \n   /etc/profile.d/my_env.sh\n   export JAVA_HOME=/export/server/jdk1.8.0_141\n   export PATH=$PATH:$JAVA_HOME/bin\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 建统一工作目录（3台机器）\n   \n   mkdir -p /export/server/    #软件安装路径\n   mkdir -p /export/data/      #数据存储路径\n   mkdir -p /export/software/  #安装包存放路径\n   \n   \n   1\n   2\n   3\n   \n\n * 上传、解压安装包（node1）\n   \n   hadoop-3.1.4-bin-snappy-CentOS7.tar.gz\n   tar zxvf hadoop-3.1.4-bin-snappy-CentOS7.tar.gz -C /export/server/\n   \n   \n   1\n   2\n   \n\n\n# 二、编辑配置文件\n\n * hadoop-env.sh\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim hadoop-env.sh\n   \n   \n   1\n   2\n   \n   \n   #配置JAVA_HOME\n   export JAVA_HOME=/export/server/jdk1.8.0_65\n   #设置用户以执行对应角色shell命令\n   export HDFS_NAMENODE_USER=root\n   export HDFS_DATANODE_USER=root\n   export HDFS_SECONDARYNAMENODE_USER=root\n   export YARN_RESOURCEMANAGER_USER=root\n   export YARN_NODEMANAGER_USER=root \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * core-site.xml\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim core-site.xml\n   \n   \n   1\n   2\n   \n   \n   <configuration>\n   \x3c!-- 默认文件系统的名称。通过URI中schema区分不同文件系统。--\x3e\n   \x3c!-- file:///本地文件系统 hdfs:// hadoop分布式文件系统 gfs://。--\x3e\n       \x3c!-- hdfs文件系统访问地址：http://nn_host:8020。--\x3e\n       <property>\n       <name>fs.defaultFS</name>\n       <value>hdfs://node1:8020</value>\n       </property>\n       \x3c!-- hadoop本地数据存储目录 format时自动生成 --\x3e\n       <property>\n       <name>hadoop.tmp.dir</name>\n       <value>/export/data/hadoop-3.1.4</value>\n       </property>\n        \x3c!-- 在Web UI访问HDFS使用的用户名。--\x3e\n       <property>\n       <name>hadoop.http.staticuser.user</name>\n       <value>root</value>\n       </property>\n   </configuration>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   \n\n * hdfs-site.xml\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim hdfs-site.xml\n   \n   \n   1\n   2\n   \n   \n   \x3c!-- 设定SNN运行主机和端口。--\x3e\n   <property>\n   <name>dfs.namenode.secondary.http-address</name>\n   <value>node2:9868</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * mapred-site.xml\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim mapred-site.xml\n   \n   \n   1\n   2\n   \n   \n   \x3c!-- mr程序默认运行方式。yarn集群模式 local本地模式--\x3e\n   <property>\n   <name>mapreduce.framework.name</name>\n   <value>yarn</value>\n   </property>\n   \x3c!-- MR App Master环境变量。--\x3e\n   <property>\n   <name>yarn.app.mapreduce.am.env</name>\n   <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>\n   </property>\n   \x3c!-- MR MapTask环境变量。--\x3e\n   <property>\n   <name>mapreduce.map.env</name>\n   <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>\n   </property>\n   \x3c!-- MR ReduceTask环境变量。--\x3e\n   <property>\n   <name>mapreduce.reduce.env</name>\n   <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n\n * yarn-site.xml\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim yarn-site.xml\n   \n   \n   1\n   2\n   \n   \n   \x3c!-- yarn集群主角色RM运行机器。--\x3e\n   <property>\n   <name>yarn.resourcemanager.hostname</name>\n   <value>node1</value>\n   </property>\n   \x3c!-- NodeManager上运行的附属服务。需配置成mapreduce_shuffle,才可运行MR程序。--\x3e\n   <property>\n   <name>yarn.nodemanager.aux-services</name>\n   <value>mapreduce_shuffle</value>\n   </property>\n   \x3c!-- 每个容器请求的最小内存资源（以MB为单位）。--\x3e\n   <property>\n   <name>yarn.scheduler.minimum-allocation-mb</name>\n   <value>512</value>\n   </property>\n   \x3c!-- 每个容器请求的最大内存资源（以MB为单位）。--\x3e\n   <property>\n   <name>yarn.scheduler.maximum-allocation-mb</name>\v    <value>2048</value>\n   </property>\n   \x3c!-- 容器虚拟内存与物理内存之间的比率。--\x3e\n   <property>\n   <name>yarn.nodemanager.vmem-pmem-ratio</name>\n   <value>4</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   \n\n * workers\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim workers\n   \n   \n   1\n   2\n   \n   \n   node1\n   node2\n   node3\n   \n   \n   1\n   2\n   3\n   \n\n\n# 三、分发同步\n\n * 在node1机器上将Hadoop安装包scp同步到其他机器\n   \n   cd /export/server/\n   scp -r hadoop-3.1.4 root@node2:/export/server/\n   scp -r hadoop-3.1.4 root@node3:/export/server/\n   \n   \n   1\n   2\n   3\n   \n\n * 配置Hadoop环境变量 （在node1上配置Hadoop环境变量）\n   \n   vim /etc/profile.d/my_env.sh\n   \n   export HADOOP_HOME=/export/server/hadoop-3.1.4\n   export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 同步环境变量\n   \n   scp /etc/profile.d/my_env.sh root@node2:/etc/\n   scp /etc/profile.d/my_env.sh root@node3:/etc/\n   \n   \n   1\n   2\n   \n   \n   source /etc/profile\n   hadoop #验证环境变量是否生效\n   \n   \n   1\n   2\n   \n\n\n# 四、集群启动\n\n * NameNode format（格式化操作）\n   \n   首次启动HDFS时，必须对其进行格式化操作。清理和准备工作\n   \n   hdfs namenode -format\n   \n   \n   1\n   \n   \n   注意\n   \n   format只能进行一次 后续不再需要 如果多次format除了造成数据丢失外 还会导致hdfs集群主从角色之间互不识别 通过删除所有机器hadoop.tmp.dir目录重新forma解决\n\n * 启动集群\n   \n   * HDFS集群\n     \n     hdfs --daemon start namenode|datanode|secondarynamenode\n     hdfs --daemon stop  namenode|datanode|secondarynamenode\n     \n     \n     1\n     2\n     \n   \n   * YARN集群\n     \n     yarn --daemon start resourcemanager|nodemanager\n     yarn --daemon stop  resourcemanager|nodemanager\n     \n     \n     1\n     2\n     \n   \n   * 或者使用脚本启动（配置好机器之间的SSH免密登录和workers文件）\n     \n     HDFS集群\n     \tstart-dfs.sh \n     \tstop-dfs.sh \n     YARN集群\n     \tstart-yarn.sh\n     \tstop-yarn.sh\n     Hadoop集群\n     \tstart-all.sh\n     \tstop-all.sh    \n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     \n\n * 查看\n   \n   # 查看进程\n   jps \n   \n   \n   1\n   2\n   \n   \n   # 启动日志路径\n   /export/server/hadoop-3.1.4/logs/\n   \n   \n   1\n   2\n   \n   \n   # Hadoop Web UI页面-HDFS集群 \n   http://主机ip或映射:9870\n   #Hadoop Web UI页面-YARN集群\n   http://主机ip或映射:8088\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# 五、编写脚本\n\n * 启动停止脚本\n   \n   #!/bin/bash\n   if [ $# -lt 1 ]\n   then\n    echo "No Args Input..."\n    exit ;\n   fi\n   case $1 in\n   "start")\n    echo " =================== 启动 hadoop 集群 ==================="\n    echo " --------------- 启动 hdfs ---------------"\n    ssh node1 "/export/server/hadoop-3.1.3/sbin/start-dfs.sh"\n    echo " --------------- 启动 yarn ---------------"\n   ssh node1 "/export/server/hadoop-3.1.3/sbin/start-yarn.sh"\n    echo " --------------- 启动 historyserver ---------------"\n   # ssh node1 "/export/server/hadoop-3.1.3/bin/mapred --daemon start \n   #historyserver"\n   # 看看有没有配置历史服务 选择配置\n   ;;\n   "stop")\n    echo " =================== 关闭 hadoop 集群 ==================="\n    echo " --------------- 关闭 historyserver ---------------"\n    #ssh node1 "/export/server/hadoop-3.1.3/bin/mapred --daemon stop \n   #historyserver"\n    echo " --------------- 关闭 yarn ---------------"\n    ssh node1 "/export/server/hadoop-3.1.3/sbin/stop-yarn.sh"\n    echo " --------------- 关闭 hdfs ---------------"\n    ssh node1 "/export/server/hadoop-3.1.3/sbin/stop-dfs.sh"\n   ;;\n   *)\n    echo "Input Args Error..."\n   ;;\n   esac\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   \n\n * 查看进程脚本jpsall\n   \n   #!/bin/bash\n   for host in node1 node2 node3\n   do\n    echo =============== $host ===============\n    ssh $host jps \n   done\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 同步分发脚本xsync\n   \n   #/bin/bash\n   if [ $# -lt 1 ]\n   then\n   \techo Not Enough Arguement!\n   \texit;\n   fi\n   \n   #2. 遍历集群所有机器\n   for host in node1 node2 node3\n   do\n   \techo ==================== $host ====================\n   \t#3. 遍历所有目录，挨个发送\n   \tfor file in $@\n   \tdo\n   \t\t#4. 判断文件是否存在\n   \t\tif [ -e $file ]\n   \t\tthen\n   \t\t\t#5. 获取父目录\n   \t\t\tpdir=$(cd -P $(dirname $file); pwd)\n   \t\t\t#6. 获取当前文件的名称\n   \t\t\tfname=$(basename $file)\n   \t\t\tssh $host "mkdir -p $pdir"\n   \t\t\trsync -av $pdir/$fname $host:$pdir\n   \t\t\telse\n   \t\t\techo $file does not exists!\n   \t\tfi\n   \tdone\n   done\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   \n\n> 添加执行权限\n\n最后把他们放入系统变量即可\n\n查看系统变量：echo $PATH\n\n我这里会扫描到我的用户的bin目录下、直接把脚本移到那里就可以全局使用了\n\n如果没有的话，就放到可以找到且扫到的位置即可。\n\n最后使用：xsync 分发脚本即可\n\n\n# 六、基准测试\n\n * 测试写入速度\n   \n   hadoop jar /export/server/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4-tests.jar TestDFSIO -write -nrFiles 10  -fileSize 10MB\n   \n   \n   1\n   \n   \n   解释：\n   \n   向HDFS文件系统中写入数据,10个文件,每个文件10MB,文件存放到/benchmarks/TestDFSIO中\n   Throughput：吞吐量、Average IO rate：平均IO率、IO rate std deviation：IO率标准偏差\n   \n   \n   1\n   2\n   \n\n * 测试读取速度\n   \n   hadoop jar /export/server/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4-tests.jar TestDFSIO -read -nrFiles 10 -fileSize 10MB\n   \n   \n   1\n   \n   \n   解释：\n   \n   在HDFS文件系统中读入10个文件,每个文件10M\n   Throughput：吞吐量、Average IO rate：平均IO率、IO rate std deviation：IO率标准偏差\n   \n   \n   1\n   2\n   \n\n * 清除测试数据\n   \n   hadoop jar /export/server/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4-tests.jar TestDFSIO -clean\n   \n   \n   1\n   \n   \n   > 说明：测试期间，会在HDFS集群上创建 /benchmarks目录，测试完毕后，我们可以清理该目录。',normalizedContent:'# 集群规划\n\n三台服务器\n\n服务器     运行角色\nnode1   namenode datanode resourcemanager nodemanager\nnode2   secondarynamenode datanode nodemanager\nnode3   datanode nodemanager\n\n\n# 一、服务器基础环境\n\n * 设置主机名 （3台）\n   \n   vim /etc/hostname\n   \n   \n   1\n   \n\n * hosts映射 （3台）\n   \n   vim /etc/hosts\n   \n   \n   1\n   \n\n * 防火墙关闭（3台机器）\n   \n   systemctl stop firewalld.service  \n   #关闭防火墙\n   systemctl disable firewalld.service\n   #禁止防火墙开启自启\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * ssh免密登录（node1执行->node1|node2|node3）\n   \n   ssh-keygen   （3台机器）\n   #4个回车 生成公钥、私钥\n   ssh-copy-id node1\n   ssh-copy-id node2\n   ssh-copy-id node3 \n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 集群时间同步（3台机器）\n   \n   yum -y install ntpdate\n   ntpdate ntp4.aliyun.com\n   \n   \n   1\n   2\n   \n\n * jdk 1.8安装（3台机器）\n   \n   #解压配置环境变量 \n   /etc/profile.d/my_env.sh\n   export java_home=/export/server/jdk1.8.0_141\n   export path=$path:$java_home/bin\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 建统一工作目录（3台机器）\n   \n   mkdir -p /export/server/    #软件安装路径\n   mkdir -p /export/data/      #数据存储路径\n   mkdir -p /export/software/  #安装包存放路径\n   \n   \n   1\n   2\n   3\n   \n\n * 上传、解压安装包（node1）\n   \n   hadoop-3.1.4-bin-snappy-centos7.tar.gz\n   tar zxvf hadoop-3.1.4-bin-snappy-centos7.tar.gz -c /export/server/\n   \n   \n   1\n   2\n   \n\n\n# 二、编辑配置文件\n\n * hadoop-env.sh\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim hadoop-env.sh\n   \n   \n   1\n   2\n   \n   \n   #配置java_home\n   export java_home=/export/server/jdk1.8.0_65\n   #设置用户以执行对应角色shell命令\n   export hdfs_namenode_user=root\n   export hdfs_datanode_user=root\n   export hdfs_secondarynamenode_user=root\n   export yarn_resourcemanager_user=root\n   export yarn_nodemanager_user=root \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * core-site.xml\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim core-site.xml\n   \n   \n   1\n   2\n   \n   \n   <configuration>\n   \x3c!-- 默认文件系统的名称。通过uri中schema区分不同文件系统。--\x3e\n   \x3c!-- file:///本地文件系统 hdfs:// hadoop分布式文件系统 gfs://。--\x3e\n       \x3c!-- hdfs文件系统访问地址：http://nn_host:8020。--\x3e\n       <property>\n       <name>fs.defaultfs</name>\n       <value>hdfs://node1:8020</value>\n       </property>\n       \x3c!-- hadoop本地数据存储目录 format时自动生成 --\x3e\n       <property>\n       <name>hadoop.tmp.dir</name>\n       <value>/export/data/hadoop-3.1.4</value>\n       </property>\n        \x3c!-- 在web ui访问hdfs使用的用户名。--\x3e\n       <property>\n       <name>hadoop.http.staticuser.user</name>\n       <value>root</value>\n       </property>\n   </configuration>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   \n\n * hdfs-site.xml\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim hdfs-site.xml\n   \n   \n   1\n   2\n   \n   \n   \x3c!-- 设定snn运行主机和端口。--\x3e\n   <property>\n   <name>dfs.namenode.secondary.http-address</name>\n   <value>node2:9868</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * mapred-site.xml\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim mapred-site.xml\n   \n   \n   1\n   2\n   \n   \n   \x3c!-- mr程序默认运行方式。yarn集群模式 local本地模式--\x3e\n   <property>\n   <name>mapreduce.framework.name</name>\n   <value>yarn</value>\n   </property>\n   \x3c!-- mr app master环境变量。--\x3e\n   <property>\n   <name>yarn.app.mapreduce.am.env</name>\n   <value>hadoop_mapred_home=${hadoop_home}</value>\n   </property>\n   \x3c!-- mr maptask环境变量。--\x3e\n   <property>\n   <name>mapreduce.map.env</name>\n   <value>hadoop_mapred_home=${hadoop_home}</value>\n   </property>\n   \x3c!-- mr reducetask环境变量。--\x3e\n   <property>\n   <name>mapreduce.reduce.env</name>\n   <value>hadoop_mapred_home=${hadoop_home}</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n\n * yarn-site.xml\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim yarn-site.xml\n   \n   \n   1\n   2\n   \n   \n   \x3c!-- yarn集群主角色rm运行机器。--\x3e\n   <property>\n   <name>yarn.resourcemanager.hostname</name>\n   <value>node1</value>\n   </property>\n   \x3c!-- nodemanager上运行的附属服务。需配置成mapreduce_shuffle,才可运行mr程序。--\x3e\n   <property>\n   <name>yarn.nodemanager.aux-services</name>\n   <value>mapreduce_shuffle</value>\n   </property>\n   \x3c!-- 每个容器请求的最小内存资源（以mb为单位）。--\x3e\n   <property>\n   <name>yarn.scheduler.minimum-allocation-mb</name>\n   <value>512</value>\n   </property>\n   \x3c!-- 每个容器请求的最大内存资源（以mb为单位）。--\x3e\n   <property>\n   <name>yarn.scheduler.maximum-allocation-mb</name>\v    <value>2048</value>\n   </property>\n   \x3c!-- 容器虚拟内存与物理内存之间的比率。--\x3e\n   <property>\n   <name>yarn.nodemanager.vmem-pmem-ratio</name>\n   <value>4</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   \n\n * workers\n   \n   cd /export/server/hadoop-3.1.4/etc/hadoop/\n   vim workers\n   \n   \n   1\n   2\n   \n   \n   node1\n   node2\n   node3\n   \n   \n   1\n   2\n   3\n   \n\n\n# 三、分发同步\n\n * 在node1机器上将hadoop安装包scp同步到其他机器\n   \n   cd /export/server/\n   scp -r hadoop-3.1.4 root@node2:/export/server/\n   scp -r hadoop-3.1.4 root@node3:/export/server/\n   \n   \n   1\n   2\n   3\n   \n\n * 配置hadoop环境变量 （在node1上配置hadoop环境变量）\n   \n   vim /etc/profile.d/my_env.sh\n   \n   export hadoop_home=/export/server/hadoop-3.1.4\n   export path=$path:$hadoop_home/bin:$hadoop_home/sbin\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 同步环境变量\n   \n   scp /etc/profile.d/my_env.sh root@node2:/etc/\n   scp /etc/profile.d/my_env.sh root@node3:/etc/\n   \n   \n   1\n   2\n   \n   \n   source /etc/profile\n   hadoop #验证环境变量是否生效\n   \n   \n   1\n   2\n   \n\n\n# 四、集群启动\n\n * namenode format（格式化操作）\n   \n   首次启动hdfs时，必须对其进行格式化操作。清理和准备工作\n   \n   hdfs namenode -format\n   \n   \n   1\n   \n   \n   注意\n   \n   format只能进行一次 后续不再需要 如果多次format除了造成数据丢失外 还会导致hdfs集群主从角色之间互不识别 通过删除所有机器hadoop.tmp.dir目录重新forma解决\n\n * 启动集群\n   \n   * hdfs集群\n     \n     hdfs --daemon start namenode|datanode|secondarynamenode\n     hdfs --daemon stop  namenode|datanode|secondarynamenode\n     \n     \n     1\n     2\n     \n   \n   * yarn集群\n     \n     yarn --daemon start resourcemanager|nodemanager\n     yarn --daemon stop  resourcemanager|nodemanager\n     \n     \n     1\n     2\n     \n   \n   * 或者使用脚本启动（配置好机器之间的ssh免密登录和workers文件）\n     \n     hdfs集群\n     \tstart-dfs.sh \n     \tstop-dfs.sh \n     yarn集群\n     \tstart-yarn.sh\n     \tstop-yarn.sh\n     hadoop集群\n     \tstart-all.sh\n     \tstop-all.sh    \n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     \n\n * 查看\n   \n   # 查看进程\n   jps \n   \n   \n   1\n   2\n   \n   \n   # 启动日志路径\n   /export/server/hadoop-3.1.4/logs/\n   \n   \n   1\n   2\n   \n   \n   # hadoop web ui页面-hdfs集群 \n   http://主机ip或映射:9870\n   #hadoop web ui页面-yarn集群\n   http://主机ip或映射:8088\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# 五、编写脚本\n\n * 启动停止脚本\n   \n   #!/bin/bash\n   if [ $# -lt 1 ]\n   then\n    echo "no args input..."\n    exit ;\n   fi\n   case $1 in\n   "start")\n    echo " =================== 启动 hadoop 集群 ==================="\n    echo " --------------- 启动 hdfs ---------------"\n    ssh node1 "/export/server/hadoop-3.1.3/sbin/start-dfs.sh"\n    echo " --------------- 启动 yarn ---------------"\n   ssh node1 "/export/server/hadoop-3.1.3/sbin/start-yarn.sh"\n    echo " --------------- 启动 historyserver ---------------"\n   # ssh node1 "/export/server/hadoop-3.1.3/bin/mapred --daemon start \n   #historyserver"\n   # 看看有没有配置历史服务 选择配置\n   ;;\n   "stop")\n    echo " =================== 关闭 hadoop 集群 ==================="\n    echo " --------------- 关闭 historyserver ---------------"\n    #ssh node1 "/export/server/hadoop-3.1.3/bin/mapred --daemon stop \n   #historyserver"\n    echo " --------------- 关闭 yarn ---------------"\n    ssh node1 "/export/server/hadoop-3.1.3/sbin/stop-yarn.sh"\n    echo " --------------- 关闭 hdfs ---------------"\n    ssh node1 "/export/server/hadoop-3.1.3/sbin/stop-dfs.sh"\n   ;;\n   *)\n    echo "input args error..."\n   ;;\n   esac\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   \n\n * 查看进程脚本jpsall\n   \n   #!/bin/bash\n   for host in node1 node2 node3\n   do\n    echo =============== $host ===============\n    ssh $host jps \n   done\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 同步分发脚本xsync\n   \n   #/bin/bash\n   if [ $# -lt 1 ]\n   then\n   \techo not enough arguement!\n   \texit;\n   fi\n   \n   #2. 遍历集群所有机器\n   for host in node1 node2 node3\n   do\n   \techo ==================== $host ====================\n   \t#3. 遍历所有目录，挨个发送\n   \tfor file in $@\n   \tdo\n   \t\t#4. 判断文件是否存在\n   \t\tif [ -e $file ]\n   \t\tthen\n   \t\t\t#5. 获取父目录\n   \t\t\tpdir=$(cd -p $(dirname $file); pwd)\n   \t\t\t#6. 获取当前文件的名称\n   \t\t\tfname=$(basename $file)\n   \t\t\tssh $host "mkdir -p $pdir"\n   \t\t\trsync -av $pdir/$fname $host:$pdir\n   \t\t\telse\n   \t\t\techo $file does not exists!\n   \t\tfi\n   \tdone\n   done\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   \n\n> 添加执行权限\n\n最后把他们放入系统变量即可\n\n查看系统变量：echo $path\n\n我这里会扫描到我的用户的bin目录下、直接把脚本移到那里就可以全局使用了\n\n如果没有的话，就放到可以找到且扫到的位置即可。\n\n最后使用：xsync 分发脚本即可\n\n\n# 六、基准测试\n\n * 测试写入速度\n   \n   hadoop jar /export/server/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4-tests.jar testdfsio -write -nrfiles 10  -filesize 10mb\n   \n   \n   1\n   \n   \n   解释：\n   \n   向hdfs文件系统中写入数据,10个文件,每个文件10mb,文件存放到/benchmarks/testdfsio中\n   throughput：吞吐量、average io rate：平均io率、io rate std deviation：io率标准偏差\n   \n   \n   1\n   2\n   \n\n * 测试读取速度\n   \n   hadoop jar /export/server/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4-tests.jar testdfsio -read -nrfiles 10 -filesize 10mb\n   \n   \n   1\n   \n   \n   解释：\n   \n   在hdfs文件系统中读入10个文件,每个文件10m\n   throughput：吞吐量、average io rate：平均io率、io rate std deviation：io率标准偏差\n   \n   \n   1\n   2\n   \n\n * 清除测试数据\n   \n   hadoop jar /export/server/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4-tests.jar testdfsio -clean\n   \n   \n   1\n   \n   \n   > 说明：测试期间，会在hdfs集群上创建 /benchmarks目录，测试完毕后，我们可以清理该目录。',charsets:{cjk:!0}},{title:"sqoop笔记",frontmatter:{title:"sqoop笔记",date:"2021-09-16T00:00:00.000Z",tags:["sqoop"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/12.sqoop.html",relativePath:"view/docs/笔记/12.sqoop.md",key:"v-7743345c",path:"/view/docs/%E7%AC%94%E8%AE%B0/12.sqoop.html",headers:[{level:2,title:"sqoop",slug:"sqoop",normalizedTitle:"sqoop",charIndex:2},{level:2,title:"原理",slug:"原理",normalizedTitle:"原理",charIndex:76},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:137},{level:2,title:"使用案例",slug:"使用案例",normalizedTitle:"使用案例",charIndex:804},{level:3,title:"导入数据",slug:"导入数据",normalizedTitle:"导入数据",charIndex:813},{level:3,title:"导出数据",slug:"导出数据",normalizedTitle:"导出数据",charIndex:3114},{level:2,title:"脚本打包",slug:"脚本打包",normalizedTitle:"脚本打包",charIndex:3460},{level:2,title:"增量",slug:"增量",normalizedTitle:"增量",charIndex:3949}],lastUpdated:"2021/9/21 下午11:14:17",headersStr:"sqoop 原理 安装 使用案例 导入数据 导出数据 脚本打包 增量",content:'# sqoop\n\nsql+to+hadoop\n\n将关系型数据库与hdfs相互导入导出\n\n官网https://sqoop.apache.org/\n\n\n# 原理\n\n将导入导出命令翻译成mr程序运行，主要的是对inputformat和outputformat进行定制\n\n\n\n\n# 安装\n\n * 下载安装包上传\n\n * 解压到指定目录\n\n * 修改配置文件 sqoop-env.sh\n   \n   export HADOOP_COMMON_HOME=/opt/module/hadoop-3.1.4\n   export HADOOP_MAPRED_HOME=/opt/module/hadoop-3.1.4\n   export HIVE_HOME=/opt/module/hive312\n   export ZOOKEEPER_HOME=/opt/module/zookeeper-3.6.3\n   export ZOOCFGDIR=/opt/module/zookeeper-3.6.3\n   export HBASE_HOME=/opt/module/hbase\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 拷贝jdbc驱动\n   \n   cp /opt/software/mysql-connector-java-5.1.32.jar ./lib/\n   \n   \n   1\n   \n\n * 验证\n   \n   bin/sqoop help\n   \n   \n   1\n   \n\n * 测试\n   \n    bin/sqoop list-databases --connect jdbc:mysql://hadoop102:3306/ \n   --username root --password 000000\n   \n   \n   1\n   2\n   \n\n\n# 使用案例\n\n\n# 导入数据\n\nimport 关键字\n\nRdbms到hdfs：(参数位置可以调换顺序)\n\n * 全部导入\n   \n     bin/sqoop import \\\n   --connect jdbc:mysql://hadoop111:3306/company \\\n   --username root \\\n   --password 密码 \\\n   --table 表名 \\\n   --target-dir 导入hdfs路径 \\\n   --delete-target-dir \\\n   --num-mappers 1 \\\n   --fields-terminated-by "\\t"\n   \n   # target-dir 判断目录是否存在没有就创建 \n   # delete-target-dir 有就删除\n   # num-mappers  mapper的个数\n   # fields-terminated-by 文件分隔符\n   # 需要指定表名\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 查询导入\n   \n    bin/sqoop import \\\n   --connect jdbc:mysql://hadoop111:3306/company \\\n   --username root \\\n   --password 密码 \\\n   --target-dir /user/company \\\n   --delete-target-dir \\\n   --num-mappers 1 \\\n   --fields-terminated-by "\\t" \\\n   --query \'select name,sex from staff where id <=1 and $CONDITIONS;\'\n   \n   #query 指定查询语句  and $CONDITIONS; 是必须选项\n   #不需要指定表名,返回查询结果即可 \n   # / 表示换行的意思\n   # 使用双引号要用\\对$CONDITIONS对其进行转义\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n * 导入指定列 以及关键字\n   \n    bin/sqoop import \\\n   --connect jdbc:mysql://hadoop111:3306/company \\\n   --username root \\\n   --password 密码 \\\n   --columns id,列名 \\\n   --table 表名 \\\n   --target-dir /user/company \\\n   --delete-target-dir \\\n   --num-mappers 1 \\\n   --fields-terminated-by "\\t" \n   # -- where "id=1"\n   \n   # 关键字\n   # table 指定表名\n   # columns 指定列名\n   # where 指定条件\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\nRDBMS 到 Hive：\n\n bin/sqoop import \\\n--connect jdbc:mysql://hadoop111:3306/company \\\n--username root \\\n--password 密码 \\\n--table 表名 \\\n--num-mappers 1 \\\n--hive-import \\\n--fields-terminated-by "\\t" \\\n--hive-overwrite \\\n--hive-table (hive表名)\n\n# 分成俩部分,一开始先导入hdfs中,然后在迁移到hive中\n# 临时目录：/user/用户名/表名\n# hive表名没有会自动创建\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\nRDBMS 到 Hbase：\n\n bin/sqoop import \\\n--connect jdbc:mysql://hadoop102:3306/company \\\n--username root \\\n--password 密码 \\\n--table 表名 \\\n--columns "id,name,字段" \\\n--column-family "info列族" \\\n--hbase-create-table \\\n--hbase-row-key "id列名" \\\n--hbase-table "hbase_company表名" \\\n--num-mappers 1 \\\n# --split-by id\n\n#需要手动创建hbase表\n#  create \'hbase_company,\'info\'\n#  split-by 切分单元\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n> sqoop1.4.6 只支持 HBase1.0.1 之前的版本的自动创建 HBase 表的功能\n\n\n# 导出数据\n\n从hadoop集群导出: export 关键字\n\nHIVE/HDFS 到 RDBMS:\n\nbin/sqoop export \\\n--connect jdbc:mysql://hadoop111:3306/company \\\n--username root \\\n--password 密码 \\\n--table 表名 \\\n--num-mappers 1 \\\n--export-dir /user/hive/warehouse/staff_hive \\\n--input-fields-terminated-by "\\t"\n\n#export-dir 数据的路径\n#input-fields-terminated-by 分隔符\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 脚本打包\n\n使用opt格式的文件打包成sqoop命令、然后执行 (给定时任务用的)\n\n步骤：\n\n * 创建一个脚本目录\n\n * 编写脚本 .opt结尾\n   \n   例：\n   export\n   --connect\n   jdbc:mysql://hadoop111:3306/company\n   --username\n   root\n   --password\n   密码\n   --table\n   表名\n   --num-mappers\n   1\n   --export-dir\n   /user/hive/warehouse/staff_hive\n   --input-fields-terminated-by\n   "\\t"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\n * 执行\n   \n    bin/sqoop --options-file 脚本文件.opt\n   \n   \n   1\n   \n\n\n# 增量\n\n导入\n\n参数：\n\nappend：主键\n\n--check-colunm(col) :指定列 例id(主键)\n--incremental(mode) :指定追加模式 append\n--last-value(value) :id的值后往下的导入\n\n\n1\n2\n3\n\n\nlastmodified：修改时间\n\n--check-colunm(col) :指定字段 例last——mod(时间戳)\n--incremental(mode) :指定追加模式 lastmodified  #根据修改时间\n--last-value(value) :指定时间戳值（大于等于)\n--append :追加模式 #产生新文件\n# --merge-key : 指定字段例如id   #合并成一个新文件\n\n\n1\n2\n3\n4\n5\n\n\n导出\n\n参数\n\nupdateonly:只更新模式\n\n#对修改的数据进行更新\n--update-key :更新标识例如id\n--updatemod  :指定updateonly只更新模式 (默认,只会更新已经存在(id字段)的记录)\n\n\n1\n2\n3\n\n\nallowinsert:更新+插入\n\n#对修改的数据进行更新\n--update-key :更新标识例如id\n--updatemod  :指定allowinsert模式,更新存在且会插入新记录\n\n\n1\n2\n3\n\n\n创建job任务：就可以指定job然后运行相应的任务类型脚本',normalizedContent:'# sqoop\n\nsql+to+hadoop\n\n将关系型数据库与hdfs相互导入导出\n\n官网https://sqoop.apache.org/\n\n\n# 原理\n\n将导入导出命令翻译成mr程序运行，主要的是对inputformat和outputformat进行定制\n\n\n\n\n# 安装\n\n * 下载安装包上传\n\n * 解压到指定目录\n\n * 修改配置文件 sqoop-env.sh\n   \n   export hadoop_common_home=/opt/module/hadoop-3.1.4\n   export hadoop_mapred_home=/opt/module/hadoop-3.1.4\n   export hive_home=/opt/module/hive312\n   export zookeeper_home=/opt/module/zookeeper-3.6.3\n   export zoocfgdir=/opt/module/zookeeper-3.6.3\n   export hbase_home=/opt/module/hbase\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 拷贝jdbc驱动\n   \n   cp /opt/software/mysql-connector-java-5.1.32.jar ./lib/\n   \n   \n   1\n   \n\n * 验证\n   \n   bin/sqoop help\n   \n   \n   1\n   \n\n * 测试\n   \n    bin/sqoop list-databases --connect jdbc:mysql://hadoop102:3306/ \n   --username root --password 000000\n   \n   \n   1\n   2\n   \n\n\n# 使用案例\n\n\n# 导入数据\n\nimport 关键字\n\nrdbms到hdfs：(参数位置可以调换顺序)\n\n * 全部导入\n   \n     bin/sqoop import \\\n   --connect jdbc:mysql://hadoop111:3306/company \\\n   --username root \\\n   --password 密码 \\\n   --table 表名 \\\n   --target-dir 导入hdfs路径 \\\n   --delete-target-dir \\\n   --num-mappers 1 \\\n   --fields-terminated-by "\\t"\n   \n   # target-dir 判断目录是否存在没有就创建 \n   # delete-target-dir 有就删除\n   # num-mappers  mapper的个数\n   # fields-terminated-by 文件分隔符\n   # 需要指定表名\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 查询导入\n   \n    bin/sqoop import \\\n   --connect jdbc:mysql://hadoop111:3306/company \\\n   --username root \\\n   --password 密码 \\\n   --target-dir /user/company \\\n   --delete-target-dir \\\n   --num-mappers 1 \\\n   --fields-terminated-by "\\t" \\\n   --query \'select name,sex from staff where id <=1 and $conditions;\'\n   \n   #query 指定查询语句  and $conditions; 是必须选项\n   #不需要指定表名,返回查询结果即可 \n   # / 表示换行的意思\n   # 使用双引号要用\\对$conditions对其进行转义\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n * 导入指定列 以及关键字\n   \n    bin/sqoop import \\\n   --connect jdbc:mysql://hadoop111:3306/company \\\n   --username root \\\n   --password 密码 \\\n   --columns id,列名 \\\n   --table 表名 \\\n   --target-dir /user/company \\\n   --delete-target-dir \\\n   --num-mappers 1 \\\n   --fields-terminated-by "\\t" \n   # -- where "id=1"\n   \n   # 关键字\n   # table 指定表名\n   # columns 指定列名\n   # where 指定条件\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\nrdbms 到 hive：\n\n bin/sqoop import \\\n--connect jdbc:mysql://hadoop111:3306/company \\\n--username root \\\n--password 密码 \\\n--table 表名 \\\n--num-mappers 1 \\\n--hive-import \\\n--fields-terminated-by "\\t" \\\n--hive-overwrite \\\n--hive-table (hive表名)\n\n# 分成俩部分,一开始先导入hdfs中,然后在迁移到hive中\n# 临时目录：/user/用户名/表名\n# hive表名没有会自动创建\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\nrdbms 到 hbase：\n\n bin/sqoop import \\\n--connect jdbc:mysql://hadoop102:3306/company \\\n--username root \\\n--password 密码 \\\n--table 表名 \\\n--columns "id,name,字段" \\\n--column-family "info列族" \\\n--hbase-create-table \\\n--hbase-row-key "id列名" \\\n--hbase-table "hbase_company表名" \\\n--num-mappers 1 \\\n# --split-by id\n\n#需要手动创建hbase表\n#  create \'hbase_company,\'info\'\n#  split-by 切分单元\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n> sqoop1.4.6 只支持 hbase1.0.1 之前的版本的自动创建 hbase 表的功能\n\n\n# 导出数据\n\n从hadoop集群导出: export 关键字\n\nhive/hdfs 到 rdbms:\n\nbin/sqoop export \\\n--connect jdbc:mysql://hadoop111:3306/company \\\n--username root \\\n--password 密码 \\\n--table 表名 \\\n--num-mappers 1 \\\n--export-dir /user/hive/warehouse/staff_hive \\\n--input-fields-terminated-by "\\t"\n\n#export-dir 数据的路径\n#input-fields-terminated-by 分隔符\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 脚本打包\n\n使用opt格式的文件打包成sqoop命令、然后执行 (给定时任务用的)\n\n步骤：\n\n * 创建一个脚本目录\n\n * 编写脚本 .opt结尾\n   \n   例：\n   export\n   --connect\n   jdbc:mysql://hadoop111:3306/company\n   --username\n   root\n   --password\n   密码\n   --table\n   表名\n   --num-mappers\n   1\n   --export-dir\n   /user/hive/warehouse/staff_hive\n   --input-fields-terminated-by\n   "\\t"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\n * 执行\n   \n    bin/sqoop --options-file 脚本文件.opt\n   \n   \n   1\n   \n\n\n# 增量\n\n导入\n\n参数：\n\nappend：主键\n\n--check-colunm(col) :指定列 例id(主键)\n--incremental(mode) :指定追加模式 append\n--last-value(value) :id的值后往下的导入\n\n\n1\n2\n3\n\n\nlastmodified：修改时间\n\n--check-colunm(col) :指定字段 例last——mod(时间戳)\n--incremental(mode) :指定追加模式 lastmodified  #根据修改时间\n--last-value(value) :指定时间戳值（大于等于)\n--append :追加模式 #产生新文件\n# --merge-key : 指定字段例如id   #合并成一个新文件\n\n\n1\n2\n3\n4\n5\n\n\n导出\n\n参数\n\nupdateonly:只更新模式\n\n#对修改的数据进行更新\n--update-key :更新标识例如id\n--updatemod  :指定updateonly只更新模式 (默认,只会更新已经存在(id字段)的记录)\n\n\n1\n2\n3\n\n\nallowinsert:更新+插入\n\n#对修改的数据进行更新\n--update-key :更新标识例如id\n--updatemod  :指定allowinsert模式,更新存在且会插入新记录\n\n\n1\n2\n3\n\n\n创建job任务：就可以指定job然后运行相应的任务类型脚本',charsets:{cjk:!0}},{title:"kafka笔记",frontmatter:{title:"kafka笔记",date:"2021-09-14T00:00:00.000Z",tags:["kafka"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/10.kafka.html",relativePath:"view/docs/笔记/10.kafka.md",key:"v-23ba8d92",path:"/view/docs/%E7%AC%94%E8%AE%B0/10.kafka.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:2},{level:2,title:"入门",slug:"入门",normalizedTitle:"入门",charIndex:32},{level:2,title:"架构💨💨",slug:"架构💨💨",normalizedTitle:"架构💨💨",charIndex:103},{level:2,title:"安装部署",slug:"安装部署",normalizedTitle:"安装部署",charIndex:406},{level:2,title:"API⭕⭕",slug:"api⭕⭕",normalizedTitle:"api⭕⭕",charIndex:4008},{level:2,title:"对接Flume",slug:"对接flume",normalizedTitle:"对接flume",charIndex:4163}],lastUpdated:"2021/9/19 下午9:57:24",headersStr:"概述 入门 架构💨💨 安装部署 API⭕⭕ 对接Flume",content:"# 概述\n\nkafka是分布式基于的消息队列，实时处理\n\n\n# 入门\n\n * 特点\n * 发布订阅模式\n   * 消费者拉取（比较费支援，维护长时轮询）\n   * 管道主动推送 (消费者处理不即)\n\n\n# 架构💨💨\n\n\n\n * 生产者消息\n * kakfa集群管理消息（borker主机，主题，分类，分区(提高鬓发度),小弟用来备份副本树算上老大 ）\n * 消费者消费信息（消费者组，消费者(某个分区只能由同组其中一个消费)\n * zookeeper(管理注册信息)\n\n> 在0.9之前offset(消息偏移量)存储在zk中\n> \n> 0.9之后存储在本地kafka(系统的)\n> \n> 主要是记录消费位置，防止挂掉\n> \n> 消费者是以拉取获取模式(速度快,要跟zk打交道,所以太过频繁了，高并发)\n> \n> 所以存储到kafka本地里面，kafka默认存消息在磁盘(默认保留7天(168小时))\n\n\n# 安装部署\n\n集群规划：3台zk 3台kafka\n\n修改:service配置文件 把borck.id改成为唯一 然后分发集群\n\n启动 -daemon表示以守护进程来启动\n\n/opt/module/kafka/bin/kafka-server-start.sh -daemon /opt/module/kafka/config/server.properties\n\n\n1\n\n\n命令行操作：topic（CRUD）\n\n * --list 查看\n\n./bin/kafka-topics.sh --list --zookeeper hadoop111:2181\n\n\n1\n\n\n * 往zk里创建数据 --create 需要指定topic主题 partitions分区个数 副本个数replication-factor\n   \n   ./bin/kafka-topics.sh --create --zookeeper hadoop111:2181 --topic first --partitions 2 --replication-factor 2\n   \n   \n   1\n   \n   \n   > 然后查看在你配置的logs目录里 就可以查看到创建的目录了 所以是放在磁盘的\n   > \n   > 而且存放目录名 由主题+分区构成,启动日志到server.log查看\n   > \n   > 默认是50个分区 一个副本\n\n * -detele删除\n   \n    ./bin/kafka-topics.sh --delete --zookeeper hadoop111:2181 --topic first\n   \n   \n   1\n   \n   \n   > 如果设置了delete.topic.enable 为true 才能真正删除\n\n * describe 查看结构详细信息\n   \n   ./bin/kafka-topics.sh --describe --topic first --zookeeper hadoop111:2181\n   #\n   Topic:first\tPartitionCount:2\tReplicationFactor:2\tConfigs:\n   \tTopic: first\tPartition: 0\tLeader: 2\tReplicas: 2,1\tIsr: 2,1\n   \tTopic: first\tPartition: 1\tLeader: 3\tReplicas: 3,2\tIsr: 3,2\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n生产者消费者：console-producer.sh生产者 ``console-consumer.sh消费者\n\n #生产者9092端口 主题topic 区域broker\n ./bin/kafka-console-producer.sh --topic first --broker-list hadoop111:9092\n #消费者\n 老版本是连接到zk,0.9版本后是存储到本地\n./bin/kafka-console-consumer.sh --topic first --zookeeper  hadoop111:2181 #老版本\n./bin/kafka-console-consumer.sh --topic first --zookeeper  hadoop111:2181 --from-beginning 表示从开头的管道开始获取\n\n#新版启动 消息存储本地kafka,而kafka存储到logs中的主题offset偏移量\n./bin/kafka-console-consumer.sh --topic first --bootstrap-server  hadoop111:9092\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n删除数据除了删除kafka存储信息的目录还要删除zk中存储的位置信息zookeeper是默认目录\n\n重装zk数据(慎重)\n\n[hadoop101@axcmsm111 zkData]$ ll\n总用量 8\n-rw-rw-r--. 1 hadoop101 hadoop101   2 9月   4 17:36 myid #\ndrwxrwxr-x. 2 hadoop101 hadoop101 162 9月  15 12:04 version-2 #数据信息\n-rw-rw-r--. 1 hadoop101 hadoop101   4 9月  15 12:04 zookeeper_server.pid #进程\n[hadoop101@axcmsm112 zkData]$ rm -rf version-2/  #删除所有数据\n#重启查看\n[zk: localhost:2181(CONNECTED) 0] ls /\n[zookeeper]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n工作流程：\n\n生产者生成数据，发送到kafka机器,机器中的每台机器，都有一个leader主题,里面由分区，消费者消费时存储的offset偏移量默认从0开始,还有对应的副本,且副本小弟一般跨机器放置,不然没意义。然后再到消费者组对其相应的机器主题来拉取数据。(都是面向主题的topic逻辑概念) 因为实际存储文件是主题+分区号的文件\n\n\n\n不能保证全局有序，只能保证区内有序\n\n存储数据的文件: 采用分片和索引的处理机制 (虽然存储到磁盘当中,但利用索引二分查找还是挺快的)\n\n[hadoop101@axcmsm111 first-0]$ ll\n总用量 0\n-rw-rw-r--. 1 hadoop101 hadoop101 10485760 9月  15 21:04 00000000000000000000.index\n-rw-rw-r--. 1 hadoop101 hadoop101        0 9月  15 21:04 00000000000000000000.log\n-rw-rw-r--. 1 hadoop101 hadoop101 10485756 9月  15 21:04 00000000000000000000.timeindex\n-rw-rw-r--. 1 hadoop101 hadoop101        0 9月  15 21:04 leader-epoch-checkpoint\n#默认log默认设置的大小是1G 超过就会创建一个新文件\nxxx.log 只存数据  \nxxx.index 记录log索引便新建文件时继续输入\n前面的xxx是记录当前文件的最小偏移量\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n分区策略:\n\n数据封装成prodgeerRecord对象发送\n\n可指定分区号、主题、头信息等,如果输入kv的话k作为hash%%主题的分区个数得到分区值，什么都不指定，就进行轮询\n\n数据可靠性:ISR(同步队列)\n\n通过规定完成相应的机器队列（时间），就可以发送数据,如果leater挂了 直接在队列里选leater\n\n队列选举移除了条数选项,isr占内存,而且是批次的,所以老队员会被踢出来，再选举再进入,频繁操作isr,zk耗费资源\n\nack应答机制:提供了三种级别 根据可靠性和演出进行权衡\n\n * acks: 0不等待 1等待leater all(-1) 等待leater和isr里面的(当isr同步完数据还每发ack时leader挂了会重新选举，重新发送数据，造成数据重复)\n * 一致性：HW（高匹配 消费一致性）leo（最后一个offset 存储一致性）:hw之前才对消费者可见,不然的用offset的话会报错\n\nEXACTLYonce 精准一次性消费（不重复，不丢失）\n\n * 最少一次+幂等性=精准一次性\n * 开启幂等性 默认ack为-1, 用pid,分区,切片位置进行缓存\n * 只能解决单个会话，单次分区的数据重复问题(重启不行 )\n\n消费者\n\nconsumer采用pull到broker中读取数据\n\n分区分配策略：可同时消费一个,多个主题，不能同时消费一个分区\n\n * 轮询 RoundRobin (把消费者祖里面的所有主题当作一个主题，进行轮询) 按照组划分\n   \n   > 所以需要前提条件保证当前消费者组里的消费者订阅的主题的一样的\n\n * 范围 Range（默认） 按照单个主题划分的\n\n当消费者组里面数量发送变化就会触发重新分配\n\noffset维护\n\n保存到zk 组 主题 分区\n\n事务：(生产者)结合幂等性 解决精准一次写入kafka集群,加上事务能保证跨分区\n\n\n# API⭕⭕\n\n生产者:异步发送 俩个线程 main和sender线程、共享变量线程RecordAccomalator\n\n * 同步get\n * 回调函数new Callback()\n * 自定义拦截器\n\n消费者：\n\n * 自动提取offset\n * 手动提交offset\n * 自定义存储offset\n\n\n# 对接Flume\n\n步骤：\n\n * 配置flume配置文件\n   \n   # define\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   # source\n   a1.sources.r1.type = exec\n   a1.sources.r1.command = tail -F -c +0 /opt/module/data/flume.log\n   a1.sources.r1.shell = /bin/bash -c\n   # sink\n   a1.sinks.k1.type = org.apache.flume.sink.kafka.KafkaSink\n   a1.sinks.k1.kafka.bootstrap.servers = \n   hadoop102:9092,hadoop103:9092,hadoop104:9092\n   a1.sinks.k1.kafka.topic = first\n   a1.sinks.k1.kafka.flumeBatchSize = 20\n   a1.sinks.k1.kafka.producer.acks = 1\n   a1.sinks.k1.kafka.producer.linger.ms = 1\n   # channel\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 1000\n   a1.channels.c1.transactionCapacity = 100\n   # bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   \n\n * 启动 kafkaIDEA 消费者\n\n * 进入 flume 根目录下，启动 flume\n   \n    bin/flume-ng agent -c conf/ -n a1 -f jobs/flume-kafka.conf\n   \n   \n   1\n   \n\n * 向 /opt/module/data/flume.log 里追加数据，查看 kafka 消费者消费情况\n   \n    echo hello >> /opt/module/data/flume.log\n   \n   \n   1\n   ",normalizedContent:"# 概述\n\nkafka是分布式基于的消息队列，实时处理\n\n\n# 入门\n\n * 特点\n * 发布订阅模式\n   * 消费者拉取（比较费支援，维护长时轮询）\n   * 管道主动推送 (消费者处理不即)\n\n\n# 架构💨💨\n\n\n\n * 生产者消息\n * kakfa集群管理消息（borker主机，主题，分类，分区(提高鬓发度),小弟用来备份副本树算上老大 ）\n * 消费者消费信息（消费者组，消费者(某个分区只能由同组其中一个消费)\n * zookeeper(管理注册信息)\n\n> 在0.9之前offset(消息偏移量)存储在zk中\n> \n> 0.9之后存储在本地kafka(系统的)\n> \n> 主要是记录消费位置，防止挂掉\n> \n> 消费者是以拉取获取模式(速度快,要跟zk打交道,所以太过频繁了，高并发)\n> \n> 所以存储到kafka本地里面，kafka默认存消息在磁盘(默认保留7天(168小时))\n\n\n# 安装部署\n\n集群规划：3台zk 3台kafka\n\n修改:service配置文件 把borck.id改成为唯一 然后分发集群\n\n启动 -daemon表示以守护进程来启动\n\n/opt/module/kafka/bin/kafka-server-start.sh -daemon /opt/module/kafka/config/server.properties\n\n\n1\n\n\n命令行操作：topic（crud）\n\n * --list 查看\n\n./bin/kafka-topics.sh --list --zookeeper hadoop111:2181\n\n\n1\n\n\n * 往zk里创建数据 --create 需要指定topic主题 partitions分区个数 副本个数replication-factor\n   \n   ./bin/kafka-topics.sh --create --zookeeper hadoop111:2181 --topic first --partitions 2 --replication-factor 2\n   \n   \n   1\n   \n   \n   > 然后查看在你配置的logs目录里 就可以查看到创建的目录了 所以是放在磁盘的\n   > \n   > 而且存放目录名 由主题+分区构成,启动日志到server.log查看\n   > \n   > 默认是50个分区 一个副本\n\n * -detele删除\n   \n    ./bin/kafka-topics.sh --delete --zookeeper hadoop111:2181 --topic first\n   \n   \n   1\n   \n   \n   > 如果设置了delete.topic.enable 为true 才能真正删除\n\n * describe 查看结构详细信息\n   \n   ./bin/kafka-topics.sh --describe --topic first --zookeeper hadoop111:2181\n   #\n   topic:first\tpartitioncount:2\treplicationfactor:2\tconfigs:\n   \ttopic: first\tpartition: 0\tleader: 2\treplicas: 2,1\tisr: 2,1\n   \ttopic: first\tpartition: 1\tleader: 3\treplicas: 3,2\tisr: 3,2\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n生产者消费者：console-producer.sh生产者 ``console-consumer.sh消费者\n\n #生产者9092端口 主题topic 区域broker\n ./bin/kafka-console-producer.sh --topic first --broker-list hadoop111:9092\n #消费者\n 老版本是连接到zk,0.9版本后是存储到本地\n./bin/kafka-console-consumer.sh --topic first --zookeeper  hadoop111:2181 #老版本\n./bin/kafka-console-consumer.sh --topic first --zookeeper  hadoop111:2181 --from-beginning 表示从开头的管道开始获取\n\n#新版启动 消息存储本地kafka,而kafka存储到logs中的主题offset偏移量\n./bin/kafka-console-consumer.sh --topic first --bootstrap-server  hadoop111:9092\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n删除数据除了删除kafka存储信息的目录还要删除zk中存储的位置信息zookeeper是默认目录\n\n重装zk数据(慎重)\n\n[hadoop101@axcmsm111 zkdata]$ ll\n总用量 8\n-rw-rw-r--. 1 hadoop101 hadoop101   2 9月   4 17:36 myid #\ndrwxrwxr-x. 2 hadoop101 hadoop101 162 9月  15 12:04 version-2 #数据信息\n-rw-rw-r--. 1 hadoop101 hadoop101   4 9月  15 12:04 zookeeper_server.pid #进程\n[hadoop101@axcmsm112 zkdata]$ rm -rf version-2/  #删除所有数据\n#重启查看\n[zk: localhost:2181(connected) 0] ls /\n[zookeeper]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n工作流程：\n\n生产者生成数据，发送到kafka机器,机器中的每台机器，都有一个leader主题,里面由分区，消费者消费时存储的offset偏移量默认从0开始,还有对应的副本,且副本小弟一般跨机器放置,不然没意义。然后再到消费者组对其相应的机器主题来拉取数据。(都是面向主题的topic逻辑概念) 因为实际存储文件是主题+分区号的文件\n\n\n\n不能保证全局有序，只能保证区内有序\n\n存储数据的文件: 采用分片和索引的处理机制 (虽然存储到磁盘当中,但利用索引二分查找还是挺快的)\n\n[hadoop101@axcmsm111 first-0]$ ll\n总用量 0\n-rw-rw-r--. 1 hadoop101 hadoop101 10485760 9月  15 21:04 00000000000000000000.index\n-rw-rw-r--. 1 hadoop101 hadoop101        0 9月  15 21:04 00000000000000000000.log\n-rw-rw-r--. 1 hadoop101 hadoop101 10485756 9月  15 21:04 00000000000000000000.timeindex\n-rw-rw-r--. 1 hadoop101 hadoop101        0 9月  15 21:04 leader-epoch-checkpoint\n#默认log默认设置的大小是1g 超过就会创建一个新文件\nxxx.log 只存数据  \nxxx.index 记录log索引便新建文件时继续输入\n前面的xxx是记录当前文件的最小偏移量\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n分区策略:\n\n数据封装成prodgeerrecord对象发送\n\n可指定分区号、主题、头信息等,如果输入kv的话k作为hash%%主题的分区个数得到分区值，什么都不指定，就进行轮询\n\n数据可靠性:isr(同步队列)\n\n通过规定完成相应的机器队列（时间），就可以发送数据,如果leater挂了 直接在队列里选leater\n\n队列选举移除了条数选项,isr占内存,而且是批次的,所以老队员会被踢出来，再选举再进入,频繁操作isr,zk耗费资源\n\nack应答机制:提供了三种级别 根据可靠性和演出进行权衡\n\n * acks: 0不等待 1等待leater all(-1) 等待leater和isr里面的(当isr同步完数据还每发ack时leader挂了会重新选举，重新发送数据，造成数据重复)\n * 一致性：hw（高匹配 消费一致性）leo（最后一个offset 存储一致性）:hw之前才对消费者可见,不然的用offset的话会报错\n\nexactlyonce 精准一次性消费（不重复，不丢失）\n\n * 最少一次+幂等性=精准一次性\n * 开启幂等性 默认ack为-1, 用pid,分区,切片位置进行缓存\n * 只能解决单个会话，单次分区的数据重复问题(重启不行 )\n\n消费者\n\nconsumer采用pull到broker中读取数据\n\n分区分配策略：可同时消费一个,多个主题，不能同时消费一个分区\n\n * 轮询 roundrobin (把消费者祖里面的所有主题当作一个主题，进行轮询) 按照组划分\n   \n   > 所以需要前提条件保证当前消费者组里的消费者订阅的主题的一样的\n\n * 范围 range（默认） 按照单个主题划分的\n\n当消费者组里面数量发送变化就会触发重新分配\n\noffset维护\n\n保存到zk 组 主题 分区\n\n事务：(生产者)结合幂等性 解决精准一次写入kafka集群,加上事务能保证跨分区\n\n\n# api⭕⭕\n\n生产者:异步发送 俩个线程 main和sender线程、共享变量线程recordaccomalator\n\n * 同步get\n * 回调函数new callback()\n * 自定义拦截器\n\n消费者：\n\n * 自动提取offset\n * 手动提交offset\n * 自定义存储offset\n\n\n# 对接flume\n\n步骤：\n\n * 配置flume配置文件\n   \n   # define\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   # source\n   a1.sources.r1.type = exec\n   a1.sources.r1.command = tail -f -c +0 /opt/module/data/flume.log\n   a1.sources.r1.shell = /bin/bash -c\n   # sink\n   a1.sinks.k1.type = org.apache.flume.sink.kafka.kafkasink\n   a1.sinks.k1.kafka.bootstrap.servers = \n   hadoop102:9092,hadoop103:9092,hadoop104:9092\n   a1.sinks.k1.kafka.topic = first\n   a1.sinks.k1.kafka.flumebatchsize = 20\n   a1.sinks.k1.kafka.producer.acks = 1\n   a1.sinks.k1.kafka.producer.linger.ms = 1\n   # channel\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 1000\n   a1.channels.c1.transactioncapacity = 100\n   # bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   \n\n * 启动 kafkaidea 消费者\n\n * 进入 flume 根目录下，启动 flume\n   \n    bin/flume-ng agent -c conf/ -n a1 -f jobs/flume-kafka.conf\n   \n   \n   1\n   \n\n * 向 /opt/module/data/flume.log 里追加数据，查看 kafka 消费者消费情况\n   \n    echo hello >> /opt/module/data/flume.log\n   \n   \n   1\n   ",charsets:{cjk:!0}},{title:"Oozie笔记",frontmatter:{title:"Oozie笔记",date:"2021-09-18T00:00:00.000Z",tags:["Oozie"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/14.Oozie.html",relativePath:"view/docs/笔记/14.Oozie.md",key:"v-7a3989dc",path:"/view/docs/%E7%AC%94%E8%AE%B0/14.Oozie.html",headers:[{level:2,title:"Oozie简介",slug:"oozie简介",normalizedTitle:"oozie简介",charIndex:2},{level:2,title:"部署",slug:"部署",normalizedTitle:"部署",charIndex:32},{level:2,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:450}],lastUpdated:"2021/9/21 下午11:14:17",headersStr:"Oozie简介 部署 基本使用",content:"# Oozie简介\n\nOozie驯象人,工作流调度软件,需要自己部署,xml配置\n\n官网:https://oozie.apache.org/\n\n模块：三个配置文件\n\n * workflow:顺序流程节点、支持fork(分开)、join(合并) (核心)\n * coordinator:定时触发workflow\n * Bundle job: 绑定多个coordinator\n\nworkflow常用节点:\n\n * control node 控制流节点：start、end、kill、fork、join、decision等\n\n * action node 动作节点 具体任务类型：mr spark shell java hive shell等\n\n> 结合起来描绘出一个工作流 DAG图\n\n\n# 部署\n\n * 配置httos服务\n * 配置jobhistory服务\n * 重启hadoop相关服务\n * 解压oozie安装包\n * 分发\n\n因为版本不兼容问题,可以用cdh版本进行安装，此处不做介绍\n\n\n# 基本使用\n\n解压官方指定的oozie-example.tar.gz包\n\n进入examples里面的apps有很多配置模板(需要用到修改即可)\n\n * 调用shell脚本\n   \n   1.进入`examples`里面的`apps`目录包shell目录拷贝到你指定的配置目录\n   2.里面有俩个文件:job.properties和workflow.xml\n    job.properties 配置nd、yn、放置脚本的目录\n    workflow.xml 配置任务相关信息 俩个文件之间可以用${}调用定义的变量\n    执行文件也需要用${调用}\n   3.把这三个文件一同上传到你指定的目录下\n   4.执行任务\n   bin/oozie job -oozie 发布任务地址 -config job.properties路径  -run\n   5.web页面查看任务\n   6.杀死任务\n   bin/oozie job -oozie 发布任务地址 -kill 任务id\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * 指定多个job\n   \n   1.解压官方案例模板\n   2.编写脚本\n   3.修改配置文件properties和xml文件\n   \tproperties文件中添加\n   \t \tExEC1=脚本\n   \t \tExEC2=脚本2\n   \txml文件中修改\n   \t\t<exect>${ExEC1}<exect>\n   \t\t<file>放置脚本的路径/${ExEC1}#${ExEC1}<file>\n   \t\t\n   4.上传到指定目录\n   5.运行任务\n   bin/oozie job -oozie 发布任务地址 -config job.properties路径  -run\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n * 调度MR任务\n   \n   1.编写mr任务打成jar包\n   2.拷贝官方的mr模板到指定目录进行配置文件的修改\n   3.测试mr任务是否能正常运行\n   4.配置文件 把jar包放在lib下\n   \tproperties 修改基本配置dn、yarn\n   \t\toutputDir=map-reduce #可以定多个mr任务\n   \txml\n   \t\t类名、输入、输出、调用新api\n   5.上传到指定目录\n   6.启动\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * 调度定时任务\n   \n   配置好时间统一\n   1.拷贝定时任务模板cron到指定目录进行修改\n   2.修改配置文件\n   \tproperties 修改基本配置dn、yarn\n   \t\t#生效时间\n   \t\tstart=定时任务开始时间 (未来时间)\n   \t\tend=定时任务结束时间  \n   \tworrkflow.xml 修改执行\n   \tcoordihator.xml 修改定时规则\n   \t\tfrequency配置规则\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n> 配置请参照官方文档",normalizedContent:"# oozie简介\n\noozie驯象人,工作流调度软件,需要自己部署,xml配置\n\n官网:https://oozie.apache.org/\n\n模块：三个配置文件\n\n * workflow:顺序流程节点、支持fork(分开)、join(合并) (核心)\n * coordinator:定时触发workflow\n * bundle job: 绑定多个coordinator\n\nworkflow常用节点:\n\n * control node 控制流节点：start、end、kill、fork、join、decision等\n\n * action node 动作节点 具体任务类型：mr spark shell java hive shell等\n\n> 结合起来描绘出一个工作流 dag图\n\n\n# 部署\n\n * 配置httos服务\n * 配置jobhistory服务\n * 重启hadoop相关服务\n * 解压oozie安装包\n * 分发\n\n因为版本不兼容问题,可以用cdh版本进行安装，此处不做介绍\n\n\n# 基本使用\n\n解压官方指定的oozie-example.tar.gz包\n\n进入examples里面的apps有很多配置模板(需要用到修改即可)\n\n * 调用shell脚本\n   \n   1.进入`examples`里面的`apps`目录包shell目录拷贝到你指定的配置目录\n   2.里面有俩个文件:job.properties和workflow.xml\n    job.properties 配置nd、yn、放置脚本的目录\n    workflow.xml 配置任务相关信息 俩个文件之间可以用${}调用定义的变量\n    执行文件也需要用${调用}\n   3.把这三个文件一同上传到你指定的目录下\n   4.执行任务\n   bin/oozie job -oozie 发布任务地址 -config job.properties路径  -run\n   5.web页面查看任务\n   6.杀死任务\n   bin/oozie job -oozie 发布任务地址 -kill 任务id\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * 指定多个job\n   \n   1.解压官方案例模板\n   2.编写脚本\n   3.修改配置文件properties和xml文件\n   \tproperties文件中添加\n   \t \texec1=脚本\n   \t \texec2=脚本2\n   \txml文件中修改\n   \t\t<exect>${exec1}<exect>\n   \t\t<file>放置脚本的路径/${exec1}#${exec1}<file>\n   \t\t\n   4.上传到指定目录\n   5.运行任务\n   bin/oozie job -oozie 发布任务地址 -config job.properties路径  -run\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n * 调度mr任务\n   \n   1.编写mr任务打成jar包\n   2.拷贝官方的mr模板到指定目录进行配置文件的修改\n   3.测试mr任务是否能正常运行\n   4.配置文件 把jar包放在lib下\n   \tproperties 修改基本配置dn、yarn\n   \t\toutputdir=map-reduce #可以定多个mr任务\n   \txml\n   \t\t类名、输入、输出、调用新api\n   5.上传到指定目录\n   6.启动\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * 调度定时任务\n   \n   配置好时间统一\n   1.拷贝定时任务模板cron到指定目录进行修改\n   2.修改配置文件\n   \tproperties 修改基本配置dn、yarn\n   \t\t#生效时间\n   \t\tstart=定时任务开始时间 (未来时间)\n   \t\tend=定时任务结束时间  \n   \tworrkflow.xml 修改执行\n   \tcoordihator.xml 修改定时规则\n   \t\tfrequency配置规则\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n> 配置请参照官方文档",charsets:{cjk:!0}},{title:"azkaban笔记",frontmatter:{title:"azkaban笔记",date:"2021-09-17T00:00:00.000Z",tags:["azkaban"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/13.azkaban.html",relativePath:"view/docs/笔记/13.azkaban.md",key:"v-56fded9c",path:"/view/docs/%E7%AC%94%E8%AE%B0/13.azkaban.html",headers:[{level:2,title:"azkaban",slug:"azkaban",normalizedTitle:"azkaban",charIndex:2},{level:2,title:"部署",slug:"部署",normalizedTitle:"部署",charIndex:318},{level:2,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:4758},{level:3,title:"条件工作流",slug:"条件工作流",normalizedTitle:"条件工作流",charIndex:6064},{level:3,title:"邮件工作流",slug:"邮件工作流",normalizedTitle:"邮件工作流",charIndex:6804},{level:3,title:"电话服务报警",slug:"电话服务报警",normalizedTitle:"电话服务报警",charIndex:7244},{level:2,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:7584}],lastUpdated:"2021/9/21 下午11:14:17",headersStr:"azkaban 部署 基本使用 条件工作流 邮件工作流 电话服务报警 注意事项",content:'# azkaban\n\n官网https://azkaban.github.io/\n\n用作调度hadoop的工作流程\n\n常见工作流调度系统：Crontab(简单任务)、Ooize、azkaban、airflow、dolphinscheduler等\n\noozie：oozie使用xml配置,在cdh中也可以使用hue组件进行可视化操作\nazkaban：yaml配置\nairflow：python脚本\ndolphinscheduler:可视化\n\n\n1\n2\n3\n4\n\n\n使用步骤：描述工作流程、配置定时规则\n\nOozie和azkaban对比：\n\noozie是一个重量级任务调度系统、功能全面、配置复杂\n\nazkaban是一个轻量级调度器\n\n\n# 部署\n\n架构:web server(调度、用户、权限管理等)+Executor server(具体任务执行)+mysql(定时规则、任务状态等)\n\n部署：单机、集群\n\n集群规划\n\nhadoop111  hadoop112   hadoop113\n  web       Executor    Executor \n\n\n1\n2\n\n\n步骤：\n\n * 上传解压安装包\n   \n   azkaban-db-3.84.4.tar.gz   #mysql建表语句\n   azkaban-exec-server-3.84.4.tar.gz  #Executor 服务\n   azkaban-web-server-3.84.4.tar.gz  #web 服务\n   \n   \n   1\n   2\n   3\n   \n\n * 改名(可选)\n\n * 配置mysql\n   \n   #登录msql\n   #创建数据库 \n    create database azkaban;\n   #创建 azkaban 用户并赋予权限  设置密码有效长度 4 位及以上(方便操作 可选)\n    set global validate_password_length=4;\n   #设置密码策略最低级别(方便操作 可选)\n    set global validate_password_policy=0;\n   # 任何主机都可以访问 Azkaban，密码是 000000\n    CREATE USER \'azkaban\'@\'%\' IDENTIFIED BY \'000000\';\n   # 赋予 Azkaban 用户增删改查权限\n    GRANT SELECT,INSERT,UPDATE,DELETE ON azkaban.* to \n   \'azkaban\'@\'%\' WITH GRANT OPTION;\n   # 创建 Azkaban 表，完成后退出 MySQL\n    use azkaban;\n    source /opt/module/azkaban/azkaban-db-3.84.4/create-allsql-3.84.4.sql\n   # 更改 MySQL 包大小；防止 Azkaban 连接 MySQL 阻塞\n     sudo vim /etc/my.cnf\n   # 在[mysqld]下面加一行 max_allowed_packet=1024M\n     [mysqld]\n     max_allowed_packet=1024M\n   #重启 MySQL\n     sudo systemctl restart mysqld\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   \n\n * 配置exec\n   \n   # azkaban.properties\n   vim /opt/module/azkaban/azkaban-exec/conf/azkaban.properties\n   #配置\n   default.timezone.id=Asia/Shanghai\n   azkaban.webserver.url=http://hadoop111:8081\n   executor.port=12321 #需要添加\n   mysql.host=hadoop111\n   mysql.password=000000\n   \n   #同步分发节点\n   xsync /opt/module/azkaban/azkaban-exce/\n   #启动 进入到/opt/module/azkaban/azkaban-exec 路径 (因为配置文件是相对路径)\n   bin/start-exec.sh #三台\n   #激活 executor 分别在三台集群上 #发送get请求\n   curl -G "hadoop111:12321/executor?action=activate" && echo\n   curl -G "hadoop112:12321/executor?action=activate" && echo\n   curl -G "hadoop113:12321/executor?action=activate" && echo\n   # {"status":"success"} 标识激活成功\n   #停止\n   bin/shutdown-exec.sh \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n   \n   > 在executors表中可以查看主机连接信息\n\n * 配置web\n   \n   # 在hadoop111编辑 azkaban.properties\n   #修改\n   default.timezone.id=Asia/Shanghai\n   mysql.host=hadoop111\n   mysql.password=000000\n   azkaban.executorselector.filters=StaticRemainingFlowSize,CpuStatus\n   #StaticRemainingFlowSize：正在排队的任务数\n   #CpuStatus：CPU 占用情况\n   ##MinimumFreeMemory：内存占用情况。测试环境，必须将 MinimumFreeMemory 删除掉，否则它会认为集群资源不够，不执行。\n   #修改 azkaban-users.xml 文件 #添加hadoop101用户\n   vim /opt/module/azkaban/azkaban-web/conf/azkaban-users.xml\n   <azkaban-users>\n    <user groups="azkaban" password="azkaban" roles="admin" \n   username="azkaban"/>\n    <user password="metrics" roles="metrics" username="metrics"/>\n    #添加用户\n    <user password="hadoop101" roles="admin" username="hadoop101"/>\n    #admin的权限\n    <role name="admin" permissions="ADMIN"/>\n    <role name="metrics" permissions="METRICS"/>\n   </azkaban-users>\n   # 启动 web server  也是要进入这个路径\n   bin/start-web.sh #启动\n   # http://hadoop111:8081 登录即可\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   \n\n> 启动时要注意 要在 web server路径下不能多也不能少\n\n群启群关脚本\n\n> # 补充到的脚本知识\n> ssh 主机 "cd /home ; ls"\n> 1. 双引号，必须有。如果不加双引号，第二个ls命令在本地执行\n> 2. 分号，两个命令之间用分号隔开\n> \n> \n> 1\n> 2\n> 3\n> 4\n\n具体: 俩个脚本\n\n#!/bin/bash\n# 启动exec集群脚本 里面设置了web关闭 没有设置web开启因为web开启之前需要激活\ncase $1 in\n"start")\n\t\tfor host in hadoop111 hadoop112 hadoop113;\n\t\tdo\n\t\t\techo "-------$host start azkaban-------"\n\t\t\tssh $host "cd /opt/module/azkaban/azkaban-exce ; bin/start-exec.sh"\t\t\n\t\tdone\n\t\t# \n\t\t#ssh hadoop111 "/home/hadoop101/bin/azkabweb.sh ; cd /opt/module/azkaban/azkaban-web ; bin/start-web.sh"\n;;\n"stop")\n\t\tssh hadoop111 "cd /opt/module/azkaban/azkaban-web ; bin/shutdown-web.sh"\n\t\tfor host in hadoop111 hadoop112 hadoop113;\n\t\tdo\n\t\t\techo "-------$host stop azkaban-------"\n\t\t\tssh $host "cd /opt/module/azkaban/azkaban-exce ; bin/shutdown-exec.sh"\n\t\tdone\n;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n#!/bin/bash\n# 配置激活脚本 并且配置主动开启web   和关闭\ncase $1 in\n"start")\nfor host in hadoop111 hadoop112 hadoop113;\ndo\n\t\t curl -G "$host:12321/executor?action=activate" && echo\ndone\n\t\tssh hadoop111 "/home/hadoop101/bin/azkabweb.sh ; cd /opt/module/azkaban/azkaban-web ; bin/start-web.sh"\n;;\n"stop")\n\t\tssh hadoop111 "cd /opt/module/azkaban/azkaban-web ; bin/shutdown-web.sh"\n;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 基本使用\n\n编写俩个文件打成应该zip包上传到kzkaban(这个就是工作流程的描述文件)\n\n蓝色正在执行,绿色执行成功，红色失败\n\njoblist查看具体的工作单元执行日志\n\nflowlog工作流程的日志\n\n配置文件：p\'roject文件和flow(描述)文件\n\n#project文件\n#作用是指定描述文件格式的版本 1.0是project格式 2.0是yaml格式\nazkaban-flow-version: 2.0\n\n\n1\n2\n3\n\n\n#描述flow\nnodes:\n - name: jobA\n type: command  #类型任务\n config:\n  command: echo "Hello World" #就是这个类型任务\n#command是需要执行的shell命令 可以是脚本等\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nyaml语法补充:号码后面有空格注意缩进用空格补\n\n#kv键值对\nname: 值\nage: 值\n{"name": "值","age": "值"}\n# 数组\n- a\n- b\n[ "a", "b"]\n#对象数组 \n- name: zhangsan\n  age: 10\n- name: lisi\n  age: 20\n[ {"name": "zhangsan","age": 10 },\n  {"name": "lisi","age": 20} ]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n作业依赖案例：\n\ndependsOn: #依赖于下面俩个 所以下面俩个执行完再执行这个\n    - 任务1\n    - 任务2\n\n\n1\n2\n3\n\n\n失败重试:\n\n * **自动 **:暂时性(每隔100秒)\n * 手动: 出现了问题(需要修复,再定位之前位置再跑)\n\n# 自动\nreiries: 重试次数\nreiry.backoff: 重试时间间隔\n#手动 \n在页面操作\n\n\n1\n2\n3\n4\n5\n\n\n任务类型：type\n\n * command 执行一条shell命令\n\n * javaprocess java进程\n   \n   > Xms:最小堆，Xmx:最大堆,classpath:类路径，javaclass:要运行的jaba对象有maim方法\n   > \n   > main.args: main方法参数\n\n * 步骤：\n   \n   1.MAVEN工程\n   2.创建应该类（里面一定要有main方法）\n   3.编写逻辑\n   4.打包\n   6.编写工作流程配置文件\n   \ttype: javaprocess  \n       config:\n         Xms: 96M\n         Xmx: 200M\n         java.class: com.axcmsm.Test\n    #没有配置classpath默认是以当前文件目录（因为jar包和配置文件打成zip包在一起了）\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n\n# 条件工作流\n\n按照自定义条件执行job任务\n\n条件构成：\n\n * (多个)父任务运行结束输出的参数\n * 使用预定义宏(使用它提前预定的内置规则)\n\n基本原理:\n\n（1）父 Job 将参数写入 JOB_OUTPUT_PROP_FILE 环境变量所指向的文件 json字符串 \n（2）子 Job 使用 ${jobName:param}来获取父 Job 输出的参数并定义执行条件\n\n再使用条件运算符进行必对执行.\n\n\n1\n2\n3\n4\n\n\n步骤：\n\n * 编写父任务脚本 json字符串k,v > $JOB_OUTPUT_PROP_FILE\n\n * 子任务脚本\n\n * 配置文件\n   \n   #子任务添加\n   condition: ${父任务名称:在文件中的key} == 值   \n    #这里是去JOB_OUTPUT_PROP_FILE根号key拿到value 在进行条件判断 \n   \n   \n   1\n   2\n   3\n   \n\n * 打成一个zip 上传即可\n\n预定义宏：根据所有父job的完成情况进行判断\n\n参数：\n\n1.all_success: 标识父job全部成功才可以\n2.all_done: 表示父job全部完成才执行\n3.all_failed: 表示父job全部失败才执行\n4.one_success: 表示job至少一个成功才执行\n5.one_failed: 表示父job至少一个失败才执行\n\n\n1\n2\n3\n4\n5\n\n\n配置：在需要条件判断的任务添加 condition: 上面的条件 即可\n\n定时执行：⭕\n\n在页面配置,点击schedule配置即可(里面有解释)\n\n*\t任何值\n,\t值列表分隔符\n——\t值范围\n/\t步长值\n\n\n1\n2\n3\n4\n\n\n\n# 邮件工作流\n\n注册邮箱：(作为发件人) 126邮箱>账号管理 或者qq邮箱 点击设置账号开启SMTP协议\n\n配置服务配置文件：配置发件人\n\n1.在web节点上,编辑/opt/module/azkaban/azkaban-web/conf/azkaban.properties 文件\n#这里设置邮件发送服务器，需要 申请邮箱，切开通 stmp 服务，以下只是例子\nmail.sender=atguigu@126.com\n#可以搜索host的服务器 qq的是smtp.qq.com\nmail.host=smtp.126.com\nmail.user=atguigu@126.com\nmail.password=用邮箱的授权码\n2.保存并重启 web-server。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n配置web服务：配置收件人\n\n打开azkabanweb:8081页面进行配置\n如果英文不好可以借助页面的翻译插件进行翻译操作即可\n有失败发生和成功发生。\n\n\n1\n2\n3\n\n\n\n# 电话服务报警\n\n第三方告警平台集成：睿象云等...\n\n官网地址：https://www.aiops.com/ 先注册登录\n\n集成azkaban：点击CA>点击集成>email\n\n通用集成:\n - ResIAPI 往提供的接口发送请求即可触发警报规则\n - Email  发送提供的邮箱地址即可触发警报规则 (推荐 因为azkaban原生支持邮箱发送)\n\n\n1\n2\n3\n\n\n配置睿象云：点击CA>配置>通知策略>新建通知\n\n配置好需要的实现的功能即可\n\n\n1\n\n\n最后再使用原生邮箱发送发送到他提供的地址即可促发\n\n注意\n\n在配置conf/azkaban.properties时里面配置的发送人是qq邮箱\n\n会被睿象云的邮箱屏蔽掉,最好使用126、136等邮箱作为发送邮箱\n\n\n# 注意事项\n\n在集群模式下,多台exec执行任务时,是webserver选择其中一个exec去执行。(大概率执行失败)\n\n因为你执行的脚本不在同一个exec节点下。\n\n解决方案：\n\n * 指定特定exec去执行 （id不固定,负载均衡失效...）\n   \n   在mysql的`azkaban数据库的executors表中,查询hadoop111的exec的id\n   在web页面执行工作流程时添加useExecutor的属性 把id放里面\n   #id每次启动又概率会发送改变\n   \n   \n   1\n   2\n   3\n   \n\n * 所有的exec节点都添加该脚本 (推荐)',normalizedContent:'# azkaban\n\n官网https://azkaban.github.io/\n\n用作调度hadoop的工作流程\n\n常见工作流调度系统：crontab(简单任务)、ooize、azkaban、airflow、dolphinscheduler等\n\noozie：oozie使用xml配置,在cdh中也可以使用hue组件进行可视化操作\nazkaban：yaml配置\nairflow：python脚本\ndolphinscheduler:可视化\n\n\n1\n2\n3\n4\n\n\n使用步骤：描述工作流程、配置定时规则\n\noozie和azkaban对比：\n\noozie是一个重量级任务调度系统、功能全面、配置复杂\n\nazkaban是一个轻量级调度器\n\n\n# 部署\n\n架构:web server(调度、用户、权限管理等)+executor server(具体任务执行)+mysql(定时规则、任务状态等)\n\n部署：单机、集群\n\n集群规划\n\nhadoop111  hadoop112   hadoop113\n  web       executor    executor \n\n\n1\n2\n\n\n步骤：\n\n * 上传解压安装包\n   \n   azkaban-db-3.84.4.tar.gz   #mysql建表语句\n   azkaban-exec-server-3.84.4.tar.gz  #executor 服务\n   azkaban-web-server-3.84.4.tar.gz  #web 服务\n   \n   \n   1\n   2\n   3\n   \n\n * 改名(可选)\n\n * 配置mysql\n   \n   #登录msql\n   #创建数据库 \n    create database azkaban;\n   #创建 azkaban 用户并赋予权限  设置密码有效长度 4 位及以上(方便操作 可选)\n    set global validate_password_length=4;\n   #设置密码策略最低级别(方便操作 可选)\n    set global validate_password_policy=0;\n   # 任何主机都可以访问 azkaban，密码是 000000\n    create user \'azkaban\'@\'%\' identified by \'000000\';\n   # 赋予 azkaban 用户增删改查权限\n    grant select,insert,update,delete on azkaban.* to \n   \'azkaban\'@\'%\' with grant option;\n   # 创建 azkaban 表，完成后退出 mysql\n    use azkaban;\n    source /opt/module/azkaban/azkaban-db-3.84.4/create-allsql-3.84.4.sql\n   # 更改 mysql 包大小；防止 azkaban 连接 mysql 阻塞\n     sudo vim /etc/my.cnf\n   # 在[mysqld]下面加一行 max_allowed_packet=1024m\n     [mysqld]\n     max_allowed_packet=1024m\n   #重启 mysql\n     sudo systemctl restart mysqld\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   \n\n * 配置exec\n   \n   # azkaban.properties\n   vim /opt/module/azkaban/azkaban-exec/conf/azkaban.properties\n   #配置\n   default.timezone.id=asia/shanghai\n   azkaban.webserver.url=http://hadoop111:8081\n   executor.port=12321 #需要添加\n   mysql.host=hadoop111\n   mysql.password=000000\n   \n   #同步分发节点\n   xsync /opt/module/azkaban/azkaban-exce/\n   #启动 进入到/opt/module/azkaban/azkaban-exec 路径 (因为配置文件是相对路径)\n   bin/start-exec.sh #三台\n   #激活 executor 分别在三台集群上 #发送get请求\n   curl -g "hadoop111:12321/executor?action=activate" && echo\n   curl -g "hadoop112:12321/executor?action=activate" && echo\n   curl -g "hadoop113:12321/executor?action=activate" && echo\n   # {"status":"success"} 标识激活成功\n   #停止\n   bin/shutdown-exec.sh \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n   \n   > 在executors表中可以查看主机连接信息\n\n * 配置web\n   \n   # 在hadoop111编辑 azkaban.properties\n   #修改\n   default.timezone.id=asia/shanghai\n   mysql.host=hadoop111\n   mysql.password=000000\n   azkaban.executorselector.filters=staticremainingflowsize,cpustatus\n   #staticremainingflowsize：正在排队的任务数\n   #cpustatus：cpu 占用情况\n   ##minimumfreememory：内存占用情况。测试环境，必须将 minimumfreememory 删除掉，否则它会认为集群资源不够，不执行。\n   #修改 azkaban-users.xml 文件 #添加hadoop101用户\n   vim /opt/module/azkaban/azkaban-web/conf/azkaban-users.xml\n   <azkaban-users>\n    <user groups="azkaban" password="azkaban" roles="admin" \n   username="azkaban"/>\n    <user password="metrics" roles="metrics" username="metrics"/>\n    #添加用户\n    <user password="hadoop101" roles="admin" username="hadoop101"/>\n    #admin的权限\n    <role name="admin" permissions="admin"/>\n    <role name="metrics" permissions="metrics"/>\n   </azkaban-users>\n   # 启动 web server  也是要进入这个路径\n   bin/start-web.sh #启动\n   # http://hadoop111:8081 登录即可\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   \n\n> 启动时要注意 要在 web server路径下不能多也不能少\n\n群启群关脚本\n\n> # 补充到的脚本知识\n> ssh 主机 "cd /home ; ls"\n> 1. 双引号，必须有。如果不加双引号，第二个ls命令在本地执行\n> 2. 分号，两个命令之间用分号隔开\n> \n> \n> 1\n> 2\n> 3\n> 4\n\n具体: 俩个脚本\n\n#!/bin/bash\n# 启动exec集群脚本 里面设置了web关闭 没有设置web开启因为web开启之前需要激活\ncase $1 in\n"start")\n\t\tfor host in hadoop111 hadoop112 hadoop113;\n\t\tdo\n\t\t\techo "-------$host start azkaban-------"\n\t\t\tssh $host "cd /opt/module/azkaban/azkaban-exce ; bin/start-exec.sh"\t\t\n\t\tdone\n\t\t# \n\t\t#ssh hadoop111 "/home/hadoop101/bin/azkabweb.sh ; cd /opt/module/azkaban/azkaban-web ; bin/start-web.sh"\n;;\n"stop")\n\t\tssh hadoop111 "cd /opt/module/azkaban/azkaban-web ; bin/shutdown-web.sh"\n\t\tfor host in hadoop111 hadoop112 hadoop113;\n\t\tdo\n\t\t\techo "-------$host stop azkaban-------"\n\t\t\tssh $host "cd /opt/module/azkaban/azkaban-exce ; bin/shutdown-exec.sh"\n\t\tdone\n;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n#!/bin/bash\n# 配置激活脚本 并且配置主动开启web   和关闭\ncase $1 in\n"start")\nfor host in hadoop111 hadoop112 hadoop113;\ndo\n\t\t curl -g "$host:12321/executor?action=activate" && echo\ndone\n\t\tssh hadoop111 "/home/hadoop101/bin/azkabweb.sh ; cd /opt/module/azkaban/azkaban-web ; bin/start-web.sh"\n;;\n"stop")\n\t\tssh hadoop111 "cd /opt/module/azkaban/azkaban-web ; bin/shutdown-web.sh"\n;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 基本使用\n\n编写俩个文件打成应该zip包上传到kzkaban(这个就是工作流程的描述文件)\n\n蓝色正在执行,绿色执行成功，红色失败\n\njoblist查看具体的工作单元执行日志\n\nflowlog工作流程的日志\n\n配置文件：p\'roject文件和flow(描述)文件\n\n#project文件\n#作用是指定描述文件格式的版本 1.0是project格式 2.0是yaml格式\nazkaban-flow-version: 2.0\n\n\n1\n2\n3\n\n\n#描述flow\nnodes:\n - name: joba\n type: command  #类型任务\n config:\n  command: echo "hello world" #就是这个类型任务\n#command是需要执行的shell命令 可以是脚本等\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nyaml语法补充:号码后面有空格注意缩进用空格补\n\n#kv键值对\nname: 值\nage: 值\n{"name": "值","age": "值"}\n# 数组\n- a\n- b\n[ "a", "b"]\n#对象数组 \n- name: zhangsan\n  age: 10\n- name: lisi\n  age: 20\n[ {"name": "zhangsan","age": 10 },\n  {"name": "lisi","age": 20} ]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n作业依赖案例：\n\ndependson: #依赖于下面俩个 所以下面俩个执行完再执行这个\n    - 任务1\n    - 任务2\n\n\n1\n2\n3\n\n\n失败重试:\n\n * **自动 **:暂时性(每隔100秒)\n * 手动: 出现了问题(需要修复,再定位之前位置再跑)\n\n# 自动\nreiries: 重试次数\nreiry.backoff: 重试时间间隔\n#手动 \n在页面操作\n\n\n1\n2\n3\n4\n5\n\n\n任务类型：type\n\n * command 执行一条shell命令\n\n * javaprocess java进程\n   \n   > xms:最小堆，xmx:最大堆,classpath:类路径，javaclass:要运行的jaba对象有maim方法\n   > \n   > main.args: main方法参数\n\n * 步骤：\n   \n   1.maven工程\n   2.创建应该类（里面一定要有main方法）\n   3.编写逻辑\n   4.打包\n   6.编写工作流程配置文件\n   \ttype: javaprocess  \n       config:\n         xms: 96m\n         xmx: 200m\n         java.class: com.axcmsm.test\n    #没有配置classpath默认是以当前文件目录（因为jar包和配置文件打成zip包在一起了）\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n\n# 条件工作流\n\n按照自定义条件执行job任务\n\n条件构成：\n\n * (多个)父任务运行结束输出的参数\n * 使用预定义宏(使用它提前预定的内置规则)\n\n基本原理:\n\n（1）父 job 将参数写入 job_output_prop_file 环境变量所指向的文件 json字符串 \n（2）子 job 使用 ${jobname:param}来获取父 job 输出的参数并定义执行条件\n\n再使用条件运算符进行必对执行.\n\n\n1\n2\n3\n4\n\n\n步骤：\n\n * 编写父任务脚本 json字符串k,v > $job_output_prop_file\n\n * 子任务脚本\n\n * 配置文件\n   \n   #子任务添加\n   condition: ${父任务名称:在文件中的key} == 值   \n    #这里是去job_output_prop_file根号key拿到value 在进行条件判断 \n   \n   \n   1\n   2\n   3\n   \n\n * 打成一个zip 上传即可\n\n预定义宏：根据所有父job的完成情况进行判断\n\n参数：\n\n1.all_success: 标识父job全部成功才可以\n2.all_done: 表示父job全部完成才执行\n3.all_failed: 表示父job全部失败才执行\n4.one_success: 表示job至少一个成功才执行\n5.one_failed: 表示父job至少一个失败才执行\n\n\n1\n2\n3\n4\n5\n\n\n配置：在需要条件判断的任务添加 condition: 上面的条件 即可\n\n定时执行：⭕\n\n在页面配置,点击schedule配置即可(里面有解释)\n\n*\t任何值\n,\t值列表分隔符\n——\t值范围\n/\t步长值\n\n\n1\n2\n3\n4\n\n\n\n# 邮件工作流\n\n注册邮箱：(作为发件人) 126邮箱>账号管理 或者qq邮箱 点击设置账号开启smtp协议\n\n配置服务配置文件：配置发件人\n\n1.在web节点上,编辑/opt/module/azkaban/azkaban-web/conf/azkaban.properties 文件\n#这里设置邮件发送服务器，需要 申请邮箱，切开通 stmp 服务，以下只是例子\nmail.sender=atguigu@126.com\n#可以搜索host的服务器 qq的是smtp.qq.com\nmail.host=smtp.126.com\nmail.user=atguigu@126.com\nmail.password=用邮箱的授权码\n2.保存并重启 web-server。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n配置web服务：配置收件人\n\n打开azkabanweb:8081页面进行配置\n如果英文不好可以借助页面的翻译插件进行翻译操作即可\n有失败发生和成功发生。\n\n\n1\n2\n3\n\n\n\n# 电话服务报警\n\n第三方告警平台集成：睿象云等...\n\n官网地址：https://www.aiops.com/ 先注册登录\n\n集成azkaban：点击ca>点击集成>email\n\n通用集成:\n - resiapi 往提供的接口发送请求即可触发警报规则\n - email  发送提供的邮箱地址即可触发警报规则 (推荐 因为azkaban原生支持邮箱发送)\n\n\n1\n2\n3\n\n\n配置睿象云：点击ca>配置>通知策略>新建通知\n\n配置好需要的实现的功能即可\n\n\n1\n\n\n最后再使用原生邮箱发送发送到他提供的地址即可促发\n\n注意\n\n在配置conf/azkaban.properties时里面配置的发送人是qq邮箱\n\n会被睿象云的邮箱屏蔽掉,最好使用126、136等邮箱作为发送邮箱\n\n\n# 注意事项\n\n在集群模式下,多台exec执行任务时,是webserver选择其中一个exec去执行。(大概率执行失败)\n\n因为你执行的脚本不在同一个exec节点下。\n\n解决方案：\n\n * 指定特定exec去执行 （id不固定,负载均衡失效...）\n   \n   在mysql的`azkaban数据库的executors表中,查询hadoop111的exec的id\n   在web页面执行工作流程时添加useexecutor的属性 把id放里面\n   #id每次启动又概率会发送改变\n   \n   \n   1\n   2\n   3\n   \n\n * 所有的exec节点都添加该脚本 (推荐)',charsets:{cjk:!0}},{title:"Hue笔记",frontmatter:{title:"Hue笔记",date:"2021-09-19T00:00:00.000Z",tags:["Hue"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/15.Hue.html",relativePath:"view/docs/笔记/15.Hue.md",key:"v-5c6715f2",path:"/view/docs/%E7%AC%94%E8%AE%B0/15.Hue.html",headers:[{level:2,title:"Hue介绍",slug:"hue介绍",normalizedTitle:"hue介绍",charIndex:2},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:81},{level:2,title:"集成",slug:"集成",normalizedTitle:"集成",charIndex:19},{level:3,title:"集成hdfs",slug:"集成hdfs",normalizedTitle:"集成hdfs",charIndex:1546},{level:3,title:"集成yarn",slug:"集成yarn",normalizedTitle:"集成yarn",charIndex:2719},{level:3,title:"集成 Hive",slug:"集成-hive",normalizedTitle:"集成 hive",charIndex:3411},{level:3,title:"集成 Mysql",slug:"集成-mysql",normalizedTitle:"集成 mysql",charIndex:4200},{level:3,title:"集成 Oozie",slug:"集成-oozie",normalizedTitle:"集成 oozie",charIndex:4548},{level:3,title:"集成 Hbase",slug:"集成-hbase",normalizedTitle:"集成 hbase",charIndex:7297},{level:3,title:"集成 Impala",slug:"集成-impala",normalizedTitle:"集成 impala",charIndex:9195}],lastUpdated:"2021/9/21 下午11:14:17",headersStr:"Hue介绍 安装 集成 集成hdfs 集成yarn 集成 Hive 集成 Mysql 集成 Oozie 集成 Hbase 集成 Impala",content:"# Hue介绍\n\n提供可视化web页面集成主流大数据框架进行数据的query、explor、repeat\n\n官网:https://gethue.com/\n\n\n# 安装\n\n俩种方式\n\n * 网页版安装\n * 编译压缩包安装\n\n压缩包下载地址:http://archive.cloudera.com/cdh5/cdh/5/\n\nCDH5.14.0 这个对应版本：<http://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.14.0.tar.gz<\n\n安装步骤：\n\n 1. 联网安装各种必须的依赖包\n\nyum install -y asciidoc cyrus-sasl-devel cyrus-sasl-gssapi cyrus-sasl-plain gcc gcc-c++ krb5-devel libffi-devel libxml2-devel libxslt-devel make openldap-devel python-devel sqlite-devel gmp-devel\n\n\n1\n\n 2. Hue 初始化配置 vim /export/servers/hue-3.9.0-cdh5.14.0/desktop/conf/vim hue.ini\n\n#通用配置\n[desktop]\n#可自己设置复杂的密钥\nsecret_key=jFE93j;2[290-eiw.KEiwN2s3['d;/.q[eIW^y#e=+Iei*@Mn<qW5o\n#谁来访问hue\nhttp_host=hadoop111\nis_hue_4=true\n#注意时区配置oozie要一致\ntime_zone=Asia/Shanghai\n#谁来运行hue服务 root也可以\nserver_user=hadoop101\nserver_group=hadoop101\n#默认谁来访问 代理用户\ndefault_user=hadoop101\ndefault_hdfs_superuser=hadoop101\n#配置使用 mysql 作为 hue 的存储数据库,大概在 hue.ini 的 587 行左右\n[[database]]\n#使用什么数据库保存数据\nengine=mysql\n#mysql安装的主机\nhost=主机名\n#端口\nport=3306\nuser=root\npassword=密码\n#指定数据库\nname=数据名称 hue\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n 3. 创建 mysql 中 Hue 使用的 DB\n    \n    create database hue default character set utf8 default collate utf8_general_ci;\n    \n    \n    1\n    \n\n 4. 编译 Hue\n    \n    cd /export/servers/hue-3.9.0-cdh5.14.0\n    make apps\n    \n    \n    1\n    2\n    \n\n 5. 启动Hue、Web UI访问\n    \n    cd /export/servers/hue-3.9.0-cdh5.14.0/\n    build/env/bin/supervisor\n    \n    #端口8888\n    \n    \n    1\n    2\n    3\n    4\n    \n\n> 第一次访问，需要设置超级管理员用户和密码。记住它， ctrl+c关闭窗口\n\n\n# 集成\n\n\n# 集成hdfs\n\n> 支持在线编辑修改\n\n * 修改 core-site.xml 配置\n   \n   <!—允许通过 httpfs 方式访问 hdfs 的主机名 --\x3e\n   <property>\n   <name>hadoop.proxyuser.root.hosts</name>\n   <value>*</value>\n   </property>\n   <!—允许通过 httpfs 方式访问 hdfs 的用户组 --\x3e\n   <property>\n   <name>hadoop.proxyuser.root.groups</name>\n   <value>*</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * 修改 hdfs-site.xml 配置\n   \n   <property>\n    <name>dfs.webhdfs.enabled</name>\n    <value>true</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 修改 hue.ini\n   \n   cd /export/servers/hue-3.9.0-cdh5.14.0/desktop/conf\n   vim hue.ini\n   #配置\n   [[hdfs_clusters]]\n    [[[default]]]\n   #在core-site.xml中的fs.defaultes的端口\n   fs_defaultfs=hdfs://node-1:9000\n   #修改主机即可\n   webhdfs_url=http://node-1:50070/webhdfs/v1\n   #配置家目录、bin目录、配置文件目录\n   hadoop_hdfs_home= /export/servers/hadoop-2.7.5\n   hadoop_bin=/export/servers/hadoop-2.7.5/bin\n   hadoop_conf_dir=/export/servers/hadoop-2.7.5/etc/hadoop\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n * 重启\n   \n   start-dfs.sh\n   cd /export/servers/hue-3.9.0-cdh5.14.0/\n   build/env/bin/supervisor\n   \n   \n   1\n   2\n   3\n   \n\n\n# 集成yarn\n\n * 修改 hue.ini\n   \n   [[yarn_clusters]]\n    [[[default]]]\n    #yarn主角色位于的主机\n    resourcemanager_host=node-1\n    #2nn端口\n    resourcemanager_port=8032\n    submit_to=True\n    #web访问yarn的主机和端口 \n    resourcemanager_api_url=http://node-1:8088\n    #历史服务器端口\n    history_server_api_url=http://node-1:19888\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * 开启 yarn 日志聚集服务\n   \n   <property> ##是否启用日志聚集功能。\n   <name>yarn.log-aggregation-enable</name>\n   <value>true</value>\n   </property>\n   <property> ##设置日志保留时间，单位是秒。\n   <name>yarn.log-aggregation.retain-seconds</name>\n   <value>106800</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 重启\n\n\n# 集成 Hive\n\n> 可在线编辑\n\n * 修改 Hue.ini\n   \n   [beeswax]\n   #hive的主机\n    hive_server_host=node-1\n   #beeline客户端端口\n    hive_server_port=10000\n   #hive配置文件路径\n    hive_conf_dir=/export/servers/hive/conf\n   #服务连接超时时间\n    server_conn_timeout=120\n   #连接hive用户名和密码\n    auth_username=root\n    auth_password=123456\n   [metastore]\n    #允许使用 hive 创建数据库表等操作\n    enable_new_create_table=true\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 启动 Hive 服务、重启 hue\n   \n   #去 node-1 机器上启动 hive 的 metastore 以及 hiveserver2 服务\n   cd /export/servers/hive\n   nohup bin/hive --service metastore &\n   nohup bin/hive --service hiveserver2 &\n   #重新启动 hue。\n   cd /export/servers/hue-3.9.0-cdh5.14.0/\n   build/env/bin/supervisor\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n\n# 集成 Mysql\n\n> 可以选择不同图表的效果展示查询结果\n\n * 修改 hue.ini\n   \n   # 需要把 mysql 的注释给去掉。 大概位于 1546 行\n   [[[mysql]]]\n   #集成后显示的mysql名字\n    nice_name=\"My SQL DB\"\n   #指定数据库\n    engine=mysql\n   #mysql位于的机器\n    host=node-1\n    port=3306\n   #用户密码\n    user=root\n    password=hadoop\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 重启 hue\n\n\n# 集成 Oozie\n\n * 修改 hue 配置文件 hue.ini\n   \n   [liboozie]\n    # The URL where the Oozie service runs on. This is required in order for\n    # users to submit jobs. Empty value disables the config check.\n   #oozie的web UI端访问页面\n    oozie_url=http://node-1:11000/oozie\n    # Requires FQDN in oozie_url if enabled\n    ## security_enabled=false\n    # Location on HDFS where the workflows/coordinator are deployed when submitted.\n   # 定时任务的存放路径 这里默认是hdfs的路径\n    remote_deployement_dir=/user/root/oozie_works\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n   \n   [oozie]\n   #优化\n    # Location on local FS where the examples are stored.\n    # local_data_dir=/export/servers/oozie-4.1.0-cdh5.14.0/examples/apps\n    # Location on local FS where the data for the examples is stored.\n    # sample_data_dir=/export/servers/oozie-4.1.0-cdh5.14.0/examples/input-data\n    # Location on HDFS where the oozie examples and workflows are stored.\n    # Parameters are $TIME and $USER, e.g. /user/$USER/hue/workspaces/workflow-\n   $TIME\n    # remote_data_dir=/user/root/oozie_works/examples/apps\n    # Maximum of Oozie workflows or coodinators to retrieve in one API call.\n    #job任务总数\n   oozie_jobs_count=100\n    # Use Cron format for defining the frequency of a Coordinator instead of the old \n   frequency number/unit.\n   #是否允许定时调度\n    enable_cron_scheduling=true\n    # Flag to enable the saved Editor queries to be dragged and dropped into a workflow.\n    enable_document_action=true\n    # Flag to enable Oozie backend filtering instead of doing it at the page level inJavascript. Requires Oozie 4.3+.\n    enable_oozie_backend_filtering=true\n    # Flag to enable the Impala action.\n   #是否做集成\n   enable_impala_action=true\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   \n   \n   [filebrowser]\n   #文件浏览 \n   #开启上传下载的按钮 就是本地和hdfs远程上传下载的按钮\n   #当编写好脚本就可以直接上传到hdfs了 非常方便\n    # Location on local filesystem where the uploaded archives are temporary stored.\n    archive_upload_tempdir=/tmp\n    # Show Download Button for HDFS file browser.\n   show_download_button=true\n    # Show Upload Button for HDFS file browser.\n   show_upload_button=true\n    # Flag to enable the extraction of a uploaded archive in HDFS.\n    enable_extract_uploaded_archive=true\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 启动 hue、oozie\n\n#启动 hue 进程\ncd /export/servers/hue-3.9.0-cdh5.14.0\nbuild/env/bin/supervisor\n#启动 oozie 进程\ncd /export/servers/oozie-4.1.0-cdh5.14.0\nbin/oozied.sh start\n#页面访问 hue\nhttp://node-1:8888/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n> 使用 点击query下拉选择Scheduler\n> \n> workflow：普通工作流 （选择对应的任务类型往下面托即可,选择执行文件）\n> \n> Schedule: 定时任务 （选择好对应的时区上海）\n> \n> Bundle ：绑定批量处理\n\n\n# 集成 Hbase\n\n> 支持删除修改等...\n\n * 修改hbase配置\n   \n   > 在 hbase-site.xml 配置文件中的添加如下内容，开启 hbase thrift 服务。\n   > \n   > 修改完分发\n   \n   <property>\n   <name>hbase.thrift.support.proxyuser</name>\n   <value>true</value>\n   </property>\n   <property>\n   <name>hbase.regionserver.thrift.http</name>\n   <value>true</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 修改 hadoop 配置\n   \n   #在 core-site.xml 中确保 HBase 被授权代理，添加下面内容 分发\n   #hbase安装包conf也需要 如果设置软链接就应该不用\n   <property>\n   <name>hadoop.proxyuser.hbase.hosts</name>\n   <value>*</value>\n   </property>\n   <property>\n   <name>hadoop.proxyuser.hbase.groups</name>\n   <value>*</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * 修改 Hue 配置\n   \n   [hbase]\n    # Comma-separated list of HBase Thrift servers for clusters in the format of \n   '(name|host:port)'.\n    # Use full hostname with security.\n    # If using Kerberos we assume GSSAPI SASL, not PLAIN.\n    #hbase集群的ip地址\n    hbase_clusters=(Cluster|node-1:9090)\n    # HBase configuration directory, where hbase-site.xml is located.\n    #集群的配置文件\n    hbase_conf_dir=/export/servers/hbase-1.2.1/conf\n    # Hard limit of rows or columns per row fetched before truncating.\n    ## truncate_limit = 500\n    # 'buffered' is the default of the HBase Thrift Server and supports security.\n    # 'framed' can be used to chunk up responses,\n    # which is useful when used in conjunction with the nonblocking server in Thrift.\n    #传输的缓存\n   thrift_transport=buffered\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   \n\n * 启动\n   \n   #包括hbase(包括 thrift 服务)、hue #需要启动zk\n   #需要启动 hdfs 和 hbase，然后再启动 thrift。\n   start-dfs.sh\n   start-hbase.sh\n   hbase-daemon.sh start thrift\n   #重新启动 hue。\n   cd /export/servers/hue-3.9.0-cdh5.14.0/\n   build/env/bin/supervisor\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n\n# 集成 Impala\n\n * 修改 Hue.ini\n   \n   [impala]\n    server_host=node-3\n    server_port=21050\n    impala_conf_dir=/etc/impala/conf\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 重启 Hue\n\ncd /export/servers/hue-3.9.0-cdh5.14.0/\nbuild/env/bin/supervisor\n\n\n1\n2\n\n\n",normalizedContent:"# hue介绍\n\n提供可视化web页面集成主流大数据框架进行数据的query、explor、repeat\n\n官网:https://gethue.com/\n\n\n# 安装\n\n俩种方式\n\n * 网页版安装\n * 编译压缩包安装\n\n压缩包下载地址:http://archive.cloudera.com/cdh5/cdh/5/\n\ncdh5.14.0 这个对应版本：<http://archive.cloudera.com/cdh5/cdh/5/hue-3.9.0-cdh5.14.0.tar.gz<\n\n安装步骤：\n\n 1. 联网安装各种必须的依赖包\n\nyum install -y asciidoc cyrus-sasl-devel cyrus-sasl-gssapi cyrus-sasl-plain gcc gcc-c++ krb5-devel libffi-devel libxml2-devel libxslt-devel make openldap-devel python-devel sqlite-devel gmp-devel\n\n\n1\n\n 2. hue 初始化配置 vim /export/servers/hue-3.9.0-cdh5.14.0/desktop/conf/vim hue.ini\n\n#通用配置\n[desktop]\n#可自己设置复杂的密钥\nsecret_key=jfe93j;2[290-eiw.keiwn2s3['d;/.q[eiw^y#e=+iei*@mn<qw5o\n#谁来访问hue\nhttp_host=hadoop111\nis_hue_4=true\n#注意时区配置oozie要一致\ntime_zone=asia/shanghai\n#谁来运行hue服务 root也可以\nserver_user=hadoop101\nserver_group=hadoop101\n#默认谁来访问 代理用户\ndefault_user=hadoop101\ndefault_hdfs_superuser=hadoop101\n#配置使用 mysql 作为 hue 的存储数据库,大概在 hue.ini 的 587 行左右\n[[database]]\n#使用什么数据库保存数据\nengine=mysql\n#mysql安装的主机\nhost=主机名\n#端口\nport=3306\nuser=root\npassword=密码\n#指定数据库\nname=数据名称 hue\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n 3. 创建 mysql 中 hue 使用的 db\n    \n    create database hue default character set utf8 default collate utf8_general_ci;\n    \n    \n    1\n    \n\n 4. 编译 hue\n    \n    cd /export/servers/hue-3.9.0-cdh5.14.0\n    make apps\n    \n    \n    1\n    2\n    \n\n 5. 启动hue、web ui访问\n    \n    cd /export/servers/hue-3.9.0-cdh5.14.0/\n    build/env/bin/supervisor\n    \n    #端口8888\n    \n    \n    1\n    2\n    3\n    4\n    \n\n> 第一次访问，需要设置超级管理员用户和密码。记住它， ctrl+c关闭窗口\n\n\n# 集成\n\n\n# 集成hdfs\n\n> 支持在线编辑修改\n\n * 修改 core-site.xml 配置\n   \n   <!—允许通过 httpfs 方式访问 hdfs 的主机名 --\x3e\n   <property>\n   <name>hadoop.proxyuser.root.hosts</name>\n   <value>*</value>\n   </property>\n   <!—允许通过 httpfs 方式访问 hdfs 的用户组 --\x3e\n   <property>\n   <name>hadoop.proxyuser.root.groups</name>\n   <value>*</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * 修改 hdfs-site.xml 配置\n   \n   <property>\n    <name>dfs.webhdfs.enabled</name>\n    <value>true</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 修改 hue.ini\n   \n   cd /export/servers/hue-3.9.0-cdh5.14.0/desktop/conf\n   vim hue.ini\n   #配置\n   [[hdfs_clusters]]\n    [[[default]]]\n   #在core-site.xml中的fs.defaultes的端口\n   fs_defaultfs=hdfs://node-1:9000\n   #修改主机即可\n   webhdfs_url=http://node-1:50070/webhdfs/v1\n   #配置家目录、bin目录、配置文件目录\n   hadoop_hdfs_home= /export/servers/hadoop-2.7.5\n   hadoop_bin=/export/servers/hadoop-2.7.5/bin\n   hadoop_conf_dir=/export/servers/hadoop-2.7.5/etc/hadoop\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n * 重启\n   \n   start-dfs.sh\n   cd /export/servers/hue-3.9.0-cdh5.14.0/\n   build/env/bin/supervisor\n   \n   \n   1\n   2\n   3\n   \n\n\n# 集成yarn\n\n * 修改 hue.ini\n   \n   [[yarn_clusters]]\n    [[[default]]]\n    #yarn主角色位于的主机\n    resourcemanager_host=node-1\n    #2nn端口\n    resourcemanager_port=8032\n    submit_to=true\n    #web访问yarn的主机和端口 \n    resourcemanager_api_url=http://node-1:8088\n    #历史服务器端口\n    history_server_api_url=http://node-1:19888\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * 开启 yarn 日志聚集服务\n   \n   <property> ##是否启用日志聚集功能。\n   <name>yarn.log-aggregation-enable</name>\n   <value>true</value>\n   </property>\n   <property> ##设置日志保留时间，单位是秒。\n   <name>yarn.log-aggregation.retain-seconds</name>\n   <value>106800</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 重启\n\n\n# 集成 hive\n\n> 可在线编辑\n\n * 修改 hue.ini\n   \n   [beeswax]\n   #hive的主机\n    hive_server_host=node-1\n   #beeline客户端端口\n    hive_server_port=10000\n   #hive配置文件路径\n    hive_conf_dir=/export/servers/hive/conf\n   #服务连接超时时间\n    server_conn_timeout=120\n   #连接hive用户名和密码\n    auth_username=root\n    auth_password=123456\n   [metastore]\n    #允许使用 hive 创建数据库表等操作\n    enable_new_create_table=true\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 启动 hive 服务、重启 hue\n   \n   #去 node-1 机器上启动 hive 的 metastore 以及 hiveserver2 服务\n   cd /export/servers/hive\n   nohup bin/hive --service metastore &\n   nohup bin/hive --service hiveserver2 &\n   #重新启动 hue。\n   cd /export/servers/hue-3.9.0-cdh5.14.0/\n   build/env/bin/supervisor\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n\n# 集成 mysql\n\n> 可以选择不同图表的效果展示查询结果\n\n * 修改 hue.ini\n   \n   # 需要把 mysql 的注释给去掉。 大概位于 1546 行\n   [[[mysql]]]\n   #集成后显示的mysql名字\n    nice_name=\"my sql db\"\n   #指定数据库\n    engine=mysql\n   #mysql位于的机器\n    host=node-1\n    port=3306\n   #用户密码\n    user=root\n    password=hadoop\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 重启 hue\n\n\n# 集成 oozie\n\n * 修改 hue 配置文件 hue.ini\n   \n   [liboozie]\n    # the url where the oozie service runs on. this is required in order for\n    # users to submit jobs. empty value disables the config check.\n   #oozie的web ui端访问页面\n    oozie_url=http://node-1:11000/oozie\n    # requires fqdn in oozie_url if enabled\n    ## security_enabled=false\n    # location on hdfs where the workflows/coordinator are deployed when submitted.\n   # 定时任务的存放路径 这里默认是hdfs的路径\n    remote_deployement_dir=/user/root/oozie_works\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n   \n   [oozie]\n   #优化\n    # location on local fs where the examples are stored.\n    # local_data_dir=/export/servers/oozie-4.1.0-cdh5.14.0/examples/apps\n    # location on local fs where the data for the examples is stored.\n    # sample_data_dir=/export/servers/oozie-4.1.0-cdh5.14.0/examples/input-data\n    # location on hdfs where the oozie examples and workflows are stored.\n    # parameters are $time and $user, e.g. /user/$user/hue/workspaces/workflow-\n   $time\n    # remote_data_dir=/user/root/oozie_works/examples/apps\n    # maximum of oozie workflows or coodinators to retrieve in one api call.\n    #job任务总数\n   oozie_jobs_count=100\n    # use cron format for defining the frequency of a coordinator instead of the old \n   frequency number/unit.\n   #是否允许定时调度\n    enable_cron_scheduling=true\n    # flag to enable the saved editor queries to be dragged and dropped into a workflow.\n    enable_document_action=true\n    # flag to enable oozie backend filtering instead of doing it at the page level injavascript. requires oozie 4.3+.\n    enable_oozie_backend_filtering=true\n    # flag to enable the impala action.\n   #是否做集成\n   enable_impala_action=true\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   \n   \n   [filebrowser]\n   #文件浏览 \n   #开启上传下载的按钮 就是本地和hdfs远程上传下载的按钮\n   #当编写好脚本就可以直接上传到hdfs了 非常方便\n    # location on local filesystem where the uploaded archives are temporary stored.\n    archive_upload_tempdir=/tmp\n    # show download button for hdfs file browser.\n   show_download_button=true\n    # show upload button for hdfs file browser.\n   show_upload_button=true\n    # flag to enable the extraction of a uploaded archive in hdfs.\n    enable_extract_uploaded_archive=true\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 启动 hue、oozie\n\n#启动 hue 进程\ncd /export/servers/hue-3.9.0-cdh5.14.0\nbuild/env/bin/supervisor\n#启动 oozie 进程\ncd /export/servers/oozie-4.1.0-cdh5.14.0\nbin/oozied.sh start\n#页面访问 hue\nhttp://node-1:8888/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n> 使用 点击query下拉选择scheduler\n> \n> workflow：普通工作流 （选择对应的任务类型往下面托即可,选择执行文件）\n> \n> schedule: 定时任务 （选择好对应的时区上海）\n> \n> bundle ：绑定批量处理\n\n\n# 集成 hbase\n\n> 支持删除修改等...\n\n * 修改hbase配置\n   \n   > 在 hbase-site.xml 配置文件中的添加如下内容，开启 hbase thrift 服务。\n   > \n   > 修改完分发\n   \n   <property>\n   <name>hbase.thrift.support.proxyuser</name>\n   <value>true</value>\n   </property>\n   <property>\n   <name>hbase.regionserver.thrift.http</name>\n   <value>true</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 修改 hadoop 配置\n   \n   #在 core-site.xml 中确保 hbase 被授权代理，添加下面内容 分发\n   #hbase安装包conf也需要 如果设置软链接就应该不用\n   <property>\n   <name>hadoop.proxyuser.hbase.hosts</name>\n   <value>*</value>\n   </property>\n   <property>\n   <name>hadoop.proxyuser.hbase.groups</name>\n   <value>*</value>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * 修改 hue 配置\n   \n   [hbase]\n    # comma-separated list of hbase thrift servers for clusters in the format of \n   '(name|host:port)'.\n    # use full hostname with security.\n    # if using kerberos we assume gssapi sasl, not plain.\n    #hbase集群的ip地址\n    hbase_clusters=(cluster|node-1:9090)\n    # hbase configuration directory, where hbase-site.xml is located.\n    #集群的配置文件\n    hbase_conf_dir=/export/servers/hbase-1.2.1/conf\n    # hard limit of rows or columns per row fetched before truncating.\n    ## truncate_limit = 500\n    # 'buffered' is the default of the hbase thrift server and supports security.\n    # 'framed' can be used to chunk up responses,\n    # which is useful when used in conjunction with the nonblocking server in thrift.\n    #传输的缓存\n   thrift_transport=buffered\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   \n\n * 启动\n   \n   #包括hbase(包括 thrift 服务)、hue #需要启动zk\n   #需要启动 hdfs 和 hbase，然后再启动 thrift。\n   start-dfs.sh\n   start-hbase.sh\n   hbase-daemon.sh start thrift\n   #重新启动 hue。\n   cd /export/servers/hue-3.9.0-cdh5.14.0/\n   build/env/bin/supervisor\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n\n# 集成 impala\n\n * 修改 hue.ini\n   \n   [impala]\n    server_host=node-3\n    server_port=21050\n    impala_conf_dir=/etc/impala/conf\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 重启 hue\n\ncd /export/servers/hue-3.9.0-cdh5.14.0/\nbuild/env/bin/supervisor\n\n\n1\n2\n\n\n",charsets:{cjk:!0}},{title:"Kylin笔记",frontmatter:{title:"Kylin笔记",date:"2021-10-13T00:00:00.000Z",tags:["Kylin"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/20.Kylin%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html",relativePath:"view/docs/笔记/20.Kylin即席查询.md",key:"v-c119c20c",path:"/view/docs/%E7%AC%94%E8%AE%B0/20.Kylin%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html",headers:[{level:2,title:"Kylin简介",slug:"kylin简介",normalizedTitle:"kylin简介",charIndex:2},{level:2,title:"架构",slug:"架构",normalizedTitle:"架构",charIndex:372},{level:2,title:"安装部署",slug:"安装部署",normalizedTitle:"安装部署",charIndex:589},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:1285},{level:3,title:"计算",slug:"计算",normalizedTitle:"计算",charIndex:228},{level:3,title:"查询",slug:"查询",normalizedTitle:"查询",charIndex:41},{level:2,title:"Cube构建原理",slug:"cube构建原理",normalizedTitle:"cube构建原理",charIndex:2310},{level:2,title:"优化手段",slug:"优化手段",normalizedTitle:"优化手段",charIndex:2713},{level:2,title:"BI工具集成",slug:"bi工具集成",normalizedTitle:"bi工具集成",charIndex:455},{level:3,title:"JDBC",slug:"jdbc",normalizedTitle:"jdbc",charIndex:525},{level:3,title:"Zepplin",slug:"zepplin",normalizedTitle:"zepplin",charIndex:4383}],lastUpdated:"2021/10/21 上午8:52:27",headersStr:"Kylin简介 架构 安装部署 使用 计算 查询 Cube构建原理 优化手段 BI工具集成 JDBC Zepplin",content:"# Kylin简介\n\n开源分布式分析引擎，提供hadoop/spark之上的SQL查询接口及多维分析(OLAP)的能力。\n\n亚秒(比秒更快一点)级内查询巨大的HIVE表\n\n数仓是BI的核心组件\n\nBI:商业智能,将数据转换成知识。为企业做决策的工具\n\n> 涉及数仓、联机分析处理(0LAP)、和数据挖掘等技术。\n\nOLAP:是种软件技术，可让分析人员从各个方面观察信息。故称多维分析。\n\n * 类型\n   \n   > ROLAP:基于关系型数据库，不需要预计算。\n   > \n   > MOLAP:基于多维数据集，需要预计算。\n   > \n   > 一个多维数据集，称为OLAP Cube\n   > \n   > 由多个cuboid组成一个OLAP Cube\n\nkylin对接的就是维度模型\n\n维度：分析数据的角度\n\n度量：被分析的指标\n\n\n# 架构\n\n * 查询层=>路由层=>计算层\n\n\n\n特点\n\n * 提供标准的SQL的接口\n\n * 支持超大数据集\n\n * 亚秒级响应\n\n * 可伸缩性和高吞吐率\n\n * BI工具集成\n   \n   > 例:\n   > \n   > ODBC: Tableau、excel、powerBi等\n   > \n   > JDBC：Saiku、BIRT等java工具\n   > \n   > RestAPI：javaScript、web网页等\n\n\n# 安装部署\n\n先部署好hadoop、hive、zk、hbase也需要配置好其环境变量\n\n * 上传解压安装包\n\n * 解决兼容性问题\n   \n   vim find-spark-dependency.sh \n   \n   \n   1\n   \n   \n   过滤掉 *! -name '*jackson*' ! -name '*metastore*'*\n   \n   spark_dependency=`find -L $spark_home/jars -name '*.jar' ! -name '*slf4j*' ! -name '*jackson*' ! -name '*metastore*' ! -name '*calcite*' ! -name '*doc*' ! -name '*test*' ! -name '*sources*' ''-printf '%p:' | sed 's/:$//'`\n   \n   \n   1\n   \n   \n   > 如果第一次改错了需要把 cached-spark-dependency.sh 删除 再改才生效\n   > \n   > 如果环境变量配置错误，需要把bin下面的新生成的sh文件删除 再配置环境变量\n\n * 启动 or 关闭\n   \n   bin/kylin.sh start\n   bin/kylin.sh stop\n   \n   \n   1\n   2\n   \n   \n   进程也是runjar\n\n * 端口是：7070/kylin\n   \n   用户名为：ADMIN，密码为：KYLIN\n   \n   \n   1\n   \n\n\n# 使用\n\n\n# 计算\n\n 1. 对接数据源，选择hive表的状态(前俩个离线，后俩个实时)\n    \n    > 注意：kylin不能处理hive表中的复杂数据类型(Array,Map,Struct),不管有没有参加计算都不允许。\n    > \n    > 所以不能直接导带有复杂类型字段的表\n\n 2. 配置预计算规则\n    \n    > 定义模式、选择维那些维度参与计算\n    > \n    > 通过历史服务器解决依赖关系\n\n 3. 如何连接到azkaban让azkaban去调度呢？\n    \n    > 使用resultAPI(在web页面操作的都能用resultAPI)\n    > \n    > 可以将构建cube的命令写到脚本中，将脚本交给其调度。\n    > \n    > #!/bin/bash\n    > cube_name=order_cube\n    > do_date=`date -d '-1 day' +%F`\n    > \n    > #获取00:00时间戳\n    > start_date_unix=`date -d \"$do_date 08:00:00\" +%s`\n    > start_date=$(($start_date_unix*1000))\n    > \n    > #获取24:00的时间戳\n    > stop_date=$(($start_date+86400000))\n    > \n    > curl -X PUT -H \"Authorization: Basic QURNSU46S1lMSU4=\" -H 'Content-Type: application/json' -d '{\"startTime\":'$start_date', \"endTime\":'$stop_date', \"buildType\":\"BUILD\"}' http://node1:7070/kylin/api/cubes/$cube_name/build\n    > \n    > \n    > 1\n    > 2\n    > 3\n    > 4\n    > 5\n    > 6\n    > 7\n    > 8\n    > 9\n    > 10\n    > 11\n    > 12\n    > \n    > \n    > 命令 --help 查看帮助文档\n\n\n# 查询\n\n> insight sql查询\n\n\n# Cube构建原理\n\n维度和度量：观察角度、计算结果\n\ncube和cuboid：每一种维度组合就是一个Cuboid，16个Cuboid整体就是一个Cube。\n\n构建算法：\n\n * 逐层构建layer\n   \n   * 优点：充分利用MR优点，处理了中间复杂的排序和shuffle工作。慢、稳定\n   * 缺点，当维度较多，mr任务增加需要额外计算资源，未聚合，每轮shuffle工作量大，对hdfs读写多\n   \n   > 该算法的效率较低，尤其是当Cube维度数较大的时候。\n\n * 快速构建算法 inmem\n   \n   * 会利用内存做预聚合，算出所有组合，mr输出的key都不同，见扫mr数量，不需要combiner，快，不稳定\n\n> 可以让它自动选择，也可以指定\n\n存储原理\n\n> 创建维度字典表，真正的值就不会参与运算。\n> \n> 存储Hbase K-V\n> \n> Cuboid+纬度值\n\n\n# 优化手段\n\n> 优化计算or查询\n\n聚合组：剪枝工具 计算\n\n> 减掉没有意义的维度组合\n\n * 强制维度：使用不同的强制维度(选择跟该维度依赖相关的值) A\n * 层级维度：跟层级有关，前后关系，例：时间、地区、部门 ：A=>B\n * 联合维度：将维度看作整体,例：AB\n\n> 配置在构建cube的第五步\n\n衍生度： 减少Cuboid的数量\n\n * 衍生维度不会参与最终的计算当中。\n\n * 事实表与该维度表中关联的ID外建参与计算\n\n * 但查询需将将对应的ID转成具体的维度可能会做个聚合操作，所以，从维度表主键到某个维度表所需的聚合工作量大，不建议使用衍生度\n\n> 一般情况可以，不用设置，如果任务量太大才需要设置，因为查的慢\n\nRow key 优化：\n\n * 被用作过滤的维度放在前边。 ：优化查询\n * 基数大的维度放在基数小的维度前边。：优化计算\n\n> 在页面上下拖动调节即可\n\n\n# BI工具集成\n\n\n# JDBC\n\n * 依赖\n   \n     <dependencies>\n           <dependency>\n               <groupId>org.apache.kylin</groupId>\n               <artifactId>kylin-jdbc</artifactId>\n               <version>3.0.2</version>\n           </dependency>\n       </dependencies>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n\n        //Kylin_JDBC 驱动\n        String KYLIN_DRIVER = \"org.apache.kylin.jdbc.Driver\";\n\n        //Kylin_URL\n        String KYLIN_URL = \"jdbc:kylin://node1:7070/gmall\";\n\n        //Kylin的用户名\n        String KYLIN_USER = \"ADMIN\";\n\n        //Kylin的密码\n        String KYLIN_PASSWD = \"KYLIN\";\n\n        //添加驱动信息\n        Class.forName(KYLIN_DRIVER);\n\n        //获取连接\n        Connection connection = DriverManager.getConnection(KYLIN_URL, KYLIN_USER, KYLIN_PASSWD);\n\n        //预编译SQL\n        PreparedStatement ps = connection.prepareStatement(\"select dp.region_name,sum(sku_num) from dwd_order_detail od join dim_base_province dp on od.province_id=dp.id group by dp.region_name\");\n\n        //执行查询\n        ResultSet resultSet = ps.executeQuery();\n\n        //遍历打印\n        while (resultSet.next()) {\n            System.out.println(resultSet.getString(1)+\":\"+resultSet.getLong(2));\n        }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# Zepplin\n\n * 上传解压安装包\n\n * 启动\n   \n    bin/zeppelin-daemon.sh start\n   \n   \n   1\n   \n\n * 访问 web页面 端口 默认 8080\n   \n   > zk在3.5后会在leader节点占用8080端口\n   > \n   > 所以需要修改一下端口号\n   > \n   > mv /opt/module/zeppelin/conf/zeppelin-site.xml.template /opt/module/zeppelin/conf/zeppelin-site.xml\n   > \n   > vim zeppelin-site.xml\n   > \n   > <property>\n   >   <name>zeppelin.server.port</name>\n   >   <value>9090</value>\n   >   <description>Server port.</description>\n   > </property>\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n\n * 在页面配置kylin的数据源修改一下项目和主机就可以了\n\n * 步骤：\n   \n   > 对接数据源=>写sql=>选择图表报表，还可以下载等操作。",normalizedContent:"# kylin简介\n\n开源分布式分析引擎，提供hadoop/spark之上的sql查询接口及多维分析(olap)的能力。\n\n亚秒(比秒更快一点)级内查询巨大的hive表\n\n数仓是bi的核心组件\n\nbi:商业智能,将数据转换成知识。为企业做决策的工具\n\n> 涉及数仓、联机分析处理(0lap)、和数据挖掘等技术。\n\nolap:是种软件技术，可让分析人员从各个方面观察信息。故称多维分析。\n\n * 类型\n   \n   > rolap:基于关系型数据库，不需要预计算。\n   > \n   > molap:基于多维数据集，需要预计算。\n   > \n   > 一个多维数据集，称为olap cube\n   > \n   > 由多个cuboid组成一个olap cube\n\nkylin对接的就是维度模型\n\n维度：分析数据的角度\n\n度量：被分析的指标\n\n\n# 架构\n\n * 查询层=>路由层=>计算层\n\n\n\n特点\n\n * 提供标准的sql的接口\n\n * 支持超大数据集\n\n * 亚秒级响应\n\n * 可伸缩性和高吞吐率\n\n * bi工具集成\n   \n   > 例:\n   > \n   > odbc: tableau、excel、powerbi等\n   > \n   > jdbc：saiku、birt等java工具\n   > \n   > restapi：javascript、web网页等\n\n\n# 安装部署\n\n先部署好hadoop、hive、zk、hbase也需要配置好其环境变量\n\n * 上传解压安装包\n\n * 解决兼容性问题\n   \n   vim find-spark-dependency.sh \n   \n   \n   1\n   \n   \n   过滤掉 *! -name '*jackson*' ! -name '*metastore*'*\n   \n   spark_dependency=`find -l $spark_home/jars -name '*.jar' ! -name '*slf4j*' ! -name '*jackson*' ! -name '*metastore*' ! -name '*calcite*' ! -name '*doc*' ! -name '*test*' ! -name '*sources*' ''-printf '%p:' | sed 's/:$//'`\n   \n   \n   1\n   \n   \n   > 如果第一次改错了需要把 cached-spark-dependency.sh 删除 再改才生效\n   > \n   > 如果环境变量配置错误，需要把bin下面的新生成的sh文件删除 再配置环境变量\n\n * 启动 or 关闭\n   \n   bin/kylin.sh start\n   bin/kylin.sh stop\n   \n   \n   1\n   2\n   \n   \n   进程也是runjar\n\n * 端口是：7070/kylin\n   \n   用户名为：admin，密码为：kylin\n   \n   \n   1\n   \n\n\n# 使用\n\n\n# 计算\n\n 1. 对接数据源，选择hive表的状态(前俩个离线，后俩个实时)\n    \n    > 注意：kylin不能处理hive表中的复杂数据类型(array,map,struct),不管有没有参加计算都不允许。\n    > \n    > 所以不能直接导带有复杂类型字段的表\n\n 2. 配置预计算规则\n    \n    > 定义模式、选择维那些维度参与计算\n    > \n    > 通过历史服务器解决依赖关系\n\n 3. 如何连接到azkaban让azkaban去调度呢？\n    \n    > 使用resultapi(在web页面操作的都能用resultapi)\n    > \n    > 可以将构建cube的命令写到脚本中，将脚本交给其调度。\n    > \n    > #!/bin/bash\n    > cube_name=order_cube\n    > do_date=`date -d '-1 day' +%f`\n    > \n    > #获取00:00时间戳\n    > start_date_unix=`date -d \"$do_date 08:00:00\" +%s`\n    > start_date=$(($start_date_unix*1000))\n    > \n    > #获取24:00的时间戳\n    > stop_date=$(($start_date+86400000))\n    > \n    > curl -x put -h \"authorization: basic qurnsu46s1lmsu4=\" -h 'content-type: application/json' -d '{\"starttime\":'$start_date', \"endtime\":'$stop_date', \"buildtype\":\"build\"}' http://node1:7070/kylin/api/cubes/$cube_name/build\n    > \n    > \n    > 1\n    > 2\n    > 3\n    > 4\n    > 5\n    > 6\n    > 7\n    > 8\n    > 9\n    > 10\n    > 11\n    > 12\n    > \n    > \n    > 命令 --help 查看帮助文档\n\n\n# 查询\n\n> insight sql查询\n\n\n# cube构建原理\n\n维度和度量：观察角度、计算结果\n\ncube和cuboid：每一种维度组合就是一个cuboid，16个cuboid整体就是一个cube。\n\n构建算法：\n\n * 逐层构建layer\n   \n   * 优点：充分利用mr优点，处理了中间复杂的排序和shuffle工作。慢、稳定\n   * 缺点，当维度较多，mr任务增加需要额外计算资源，未聚合，每轮shuffle工作量大，对hdfs读写多\n   \n   > 该算法的效率较低，尤其是当cube维度数较大的时候。\n\n * 快速构建算法 inmem\n   \n   * 会利用内存做预聚合，算出所有组合，mr输出的key都不同，见扫mr数量，不需要combiner，快，不稳定\n\n> 可以让它自动选择，也可以指定\n\n存储原理\n\n> 创建维度字典表，真正的值就不会参与运算。\n> \n> 存储hbase k-v\n> \n> cuboid+纬度值\n\n\n# 优化手段\n\n> 优化计算or查询\n\n聚合组：剪枝工具 计算\n\n> 减掉没有意义的维度组合\n\n * 强制维度：使用不同的强制维度(选择跟该维度依赖相关的值) a\n * 层级维度：跟层级有关，前后关系，例：时间、地区、部门 ：a=>b\n * 联合维度：将维度看作整体,例：ab\n\n> 配置在构建cube的第五步\n\n衍生度： 减少cuboid的数量\n\n * 衍生维度不会参与最终的计算当中。\n\n * 事实表与该维度表中关联的id外建参与计算\n\n * 但查询需将将对应的id转成具体的维度可能会做个聚合操作，所以，从维度表主键到某个维度表所需的聚合工作量大，不建议使用衍生度\n\n> 一般情况可以，不用设置，如果任务量太大才需要设置，因为查的慢\n\nrow key 优化：\n\n * 被用作过滤的维度放在前边。 ：优化查询\n * 基数大的维度放在基数小的维度前边。：优化计算\n\n> 在页面上下拖动调节即可\n\n\n# bi工具集成\n\n\n# jdbc\n\n * 依赖\n   \n     <dependencies>\n           <dependency>\n               <groupid>org.apache.kylin</groupid>\n               <artifactid>kylin-jdbc</artifactid>\n               <version>3.0.2</version>\n           </dependency>\n       </dependencies>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n\n        //kylin_jdbc 驱动\n        string kylin_driver = \"org.apache.kylin.jdbc.driver\";\n\n        //kylin_url\n        string kylin_url = \"jdbc:kylin://node1:7070/gmall\";\n\n        //kylin的用户名\n        string kylin_user = \"admin\";\n\n        //kylin的密码\n        string kylin_passwd = \"kylin\";\n\n        //添加驱动信息\n        class.forname(kylin_driver);\n\n        //获取连接\n        connection connection = drivermanager.getconnection(kylin_url, kylin_user, kylin_passwd);\n\n        //预编译sql\n        preparedstatement ps = connection.preparestatement(\"select dp.region_name,sum(sku_num) from dwd_order_detail od join dim_base_province dp on od.province_id=dp.id group by dp.region_name\");\n\n        //执行查询\n        resultset resultset = ps.executequery();\n\n        //遍历打印\n        while (resultset.next()) {\n            system.out.println(resultset.getstring(1)+\":\"+resultset.getlong(2));\n        }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# zepplin\n\n * 上传解压安装包\n\n * 启动\n   \n    bin/zeppelin-daemon.sh start\n   \n   \n   1\n   \n\n * 访问 web页面 端口 默认 8080\n   \n   > zk在3.5后会在leader节点占用8080端口\n   > \n   > 所以需要修改一下端口号\n   > \n   > mv /opt/module/zeppelin/conf/zeppelin-site.xml.template /opt/module/zeppelin/conf/zeppelin-site.xml\n   > \n   > vim zeppelin-site.xml\n   > \n   > <property>\n   >   <name>zeppelin.server.port</name>\n   >   <value>9090</value>\n   >   <description>server port.</description>\n   > </property>\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n\n * 在页面配置kylin的数据源修改一下项目和主机就可以了\n\n * 步骤：\n   \n   > 对接数据源=>写sql=>选择图表报表，还可以下载等操作。",charsets:{cjk:!0}},{title:"scala笔记",frontmatter:{title:"scala笔记",date:"2021-09-25T00:00:00.000Z",tags:["scala"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/16.scala.html",relativePath:"view/docs/笔记/16.scala.md",key:"v-553f9a5c",path:"/view/docs/%E7%AC%94%E8%AE%B0/16.scala.html",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:2},{level:2,title:"环境搭建",slug:"环境搭建",normalizedTitle:"环境搭建",charIndex:285},{level:2,title:"数据类型",slug:"数据类型",normalizedTitle:"数据类型",charIndex:1107},{level:2,title:"运算符",slug:"运算符",normalizedTitle:"运算符",charIndex:1177},{level:2,title:"流程控制",slug:"流程控制",normalizedTitle:"流程控制",charIndex:3589},{level:2,title:"函数式编程⭕",slug:"函数式编程⭕",normalizedTitle:"函数式编程⭕",charIndex:4999},{level:2,title:"面向对象⭕",slug:"面向对象⭕",normalizedTitle:"面向对象⭕",charIndex:7693},{level:2,title:"集合⭕",slug:"集合⭕",normalizedTitle:"集合⭕",charIndex:9938},{level:2,title:"模式匹配",slug:"模式匹配",normalizedTitle:"模式匹配",charIndex:14290},{level:2,title:"异常",slug:"异常",normalizedTitle:"异常",charIndex:3187},{level:2,title:"隐式转换",slug:"隐式转换",normalizedTitle:"隐式转换",charIndex:15118},{level:2,title:"泛型",slug:"泛型",normalizedTitle:"泛型",charIndex:710}],lastUpdated:"2021/9/26 上午12:12:21",headersStr:"概述 环境搭建 数据类型 运算符 流程控制 函数式编程⭕ 面向对象⭕ 集合⭕ 模式匹配 异常 隐式转换 泛型",content:'# 概述\n\nscala是基于jvm,和java完全兼容,继承了java的很多优点，其类库都能直接调用。\n\n比java更加面向对象,是一门函数式编程语言,静态类高级编程语言,类似于java的加强版。\n\n总结：是一种多范式编程语言\n\n更适合大数据处理,对集合类型数据处理有先天优势.\n\n官网:https://scala-lang.org/\n\n一叶障目，不见森林。\n\n一次编写到处使用。\n\nspark是新一代内存级大数据计算框架。(为了学好他开肝)\n\njava和scala都是混合型语言(编译成字节码文件,交给jvm解释执行)\n\nc++是编译行语言,编译后直接执行。\n\n\n# 环境搭建\n\n安装步骤：\n\n 1. 安装jdk1.8\n 2. 下载scala安装文件 scala-2.12.11.zip\n 3. 解压\n 4. 配置scala环境变量\n\n> 测试: 打开cmd窗口 输入 scala即可\n> \n> val print="helloworld!" #定义\n> println(print) #打印\n> :quit #退出交互\n> \n> \n> 1\n> 2\n> 3\n\n编写helloworld程序 :编译工具 scalac 文件名 编译 [生成俩个字节码文件]\n\nobject HellOScala{\n\tdef main(agrs: Array[string]): Unit = {\n\t\tprintln("hello scala")\n\t}\n}\n#object:关键字 入口类 声明一个单例对象（伴生对象）:全局唯一\n# def 方法名称(参数名称: 参数类型) :方法返回值类型 ={方法体}\n# Array是数组,[]是表示泛型 上面是声明了string类型的数组\n#伴生对象:相伴相生可以相互访问私有变量 一个用class定义 一个用object定义 (取代了java中的static)\n# 名称必须一样 且在同一个文件下\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n> scala去掉了static关键字,实现了单例模式,里面只有一个静态对象,在调用main方法时相当于调用这个静态对象里面的方法\n> \n> 如果想使用 javac编译 scala文件 要加上类库\n> \n> 例：\n> java -cp %ScALA_HOME%/lib/scala-library.jar: 类名\n> \n> \n> 1\n> 2\n\n下载ide中的scala依赖插件即可在idea中使用 ,新建一个scala文件夹设置成Sources Root，addformeworkSupport添加支持即可\n\n半生对象:object\n\n\n# 数据类型\n\n注释：// /**/ /****/\n\n编程规范：\n\n1. 使用一次tap,实现缩进\n2. ctrl+alt+l 进行格式化\n3 运算符俩边加空格,一行不能超过80个字符,超过换行展示\n\n\n1\n2\n3\n\n\n变量和常类：💦\n\n常量：程序执行过程中不会改变的变量\n\n基础语法\nvar 变量名 [:变量类型] = 初始值 #var i:Int=10\nval 常量名 [:常量类型] = 初始值 #val j:Int=20 #推荐\n# 能用常量的地方不用变量\n# 强类型语言一旦声明不能修改类型\n# 如果是引用类型是内存地址不变里面值可以修改\n\n\n1\n2\n3\n4\n5\n6\n\n\n标识符：自己可以起名字的地方,跟java差不多\n\n1. 以字母或者下划线开头,后接字母，数字、下划线\n2. 以操作符开头,且只能包含操作符（+~*/#!等）\n3、 反引号`...`包括任意字符串,关键字也可以\n\n\n1\n2\n3\n\n\n字符串：+号连接, printf用法用%传值,模板:通过$进行插值,通过*可以做字符串的乘法操作\n\n \tval name="张三"\n    println("hello"*3)\n    printf("我是%s,%d岁",name,20)\n    //s""是表示模板字符串  ${插值}\n    println("\\n"+s"我是${name}")\n\tprintln("\\n"+f"我是${age}%2.2f") //f格式\n\tprintln("\\n"+raw"我是${age}%2.2f") //raw除了插值其他都是原样输出\n\tprintln("\\n"+f"我是${age}%2.2f")\n\t s"""\n       |内容 sql\n       |可以换行操作\n       | ${name} 可插值\n       |""".stripMargin  //stripMargin是格式和边界\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n键盘输入：StdIn.readLine("提示:") StdIn.read类型等...\n\n写入文件：Source类\n\n * 读：Source.fromFile("src/main/resources/test.txt").foreach(print)\n\n * 写：scala中没有提供写的类,但我们可以直接调用java的类库\n   \n   //拷贝文件 \n   //调用java的wire库 进行写入操作\n   val write=new PrintWriter(new File("src/main/resources/copy.txt"))\n       //读取文件数据进行写入\n       Source.fromFile("src/main/resources/test.txt").foreach(\n         char=>{\n             print(char)\n             write.write(char)\n         }\n       )\n       write.close() //关闭资源\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n数据类型：⭕\n\n1. 一切数据都是对象,都是Any的子类\n2. 数据类型分为俩大类:数值类型AnyRef、引用类型AnyRef 本质都是对象\n3. 低精度像高精度自动转换(隐式)\n4. StringOps是对java中String的增强\n5. Unit是一个数据类型 返回值的意思 没有对象就为()空值\n6. Null是一个类型，是所有引用类型的子类 空引用\n7. Nothing 所有数据类型的子类\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n整数类型：byte、stort、int、long\n\n例： byte[1] 一个字节8位 8有符号无码整数\nbyte:8有符号无码整数 (无码 取反加1) 取反(0 OR 1)    \n\t首先内拿出一位来表示符号:0正数 1负数\n\t后面的七位才是真正意义上的表示数值的具体位数\n\t所以是2^7方=128,能表示的范围是0~127\n\t因为有正负所以是：  -127~127   \n\t其中\n    \t+0 00000000 = 0\n\t\t-0 10000000 = -128 (为什么?)\n\t\t因为考虑到扩展性问题\n\t\t例: -127=11111111 取反加一 = 10000001 而-128 正好是-127 减一\n\tshort[2]:16,int[4]:32(正负20亿左右),long[6]:64\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n字符类型：\'char\' \\t:实现对齐功能,\\n换行符,\\\\表示\\,\\""表示“”\n\n> 字符变量底层保存的是对应的ASCII码\n\n空类型:unit空值,null空引用,Nothing 抛异常\n\nUnit:表示无值和java中的void等同 \nNull：实例值null\nnothing:类层级最底层,可以是任何子类，如果确定没有正常返回值可以其指定\n\n\n1\n2\n3\n\n\n类型转换：精度从到高(自动) 强转 ().to类型\n\nchar只能转换成int\nbyte和char不能相互转换 可以转换成int\n转成string+""\n也可以toDouble.toInt l\n\n\n1\n2\n3\n4\n\n\n\n# 运算符\n\n> 与java类似\n\n算数：+ - * % /\n\n关系: == != < > <= >= 相等默认是比较内容 eq方法是比较内存地址\n\n逻辑：&&与 ||或 !非\n\n赋值：= += -= *= /= %= <<= >>= &= ^= !=\n\n位：& | ^ << >> >>>\n\n> 运算符也是对象 可以用 n1.+(n2)\n> \n> 也可以不用点调用 比如：7.5 toInt\n\n\n# 流程控制\n\n顺序：从上往下\n\n分支：if -else if- else :表达式有返回值,返回值是当前分支最后一行的返回值 字节给个值就可以\n\n例：\nval age=StdIn.readInt() //分支的返回值类型要一样 类型不一样用公共父类\n   val result= if (age>18) "成年" else "未成年"\n    printf(result)\n\n\n1\n2\n3\n4\n\n\n循环：for whlie do-while ：while和java一样\n\n基本语法：\n\n //范围遍历 0到9 by 2表示步长 不写默认是1 \n    for (i <-  0 to 10 by 2) //0.to(9)  (0 to 10).by(2)\n\tfor (i <-  0 to 10 reverse)//reverse 反转打印\n    //不包含结束位置(10)\n    for (i <- Range(0,10))\n    for (i <- 0 until 10)//until 直到 不包含10 底层就是range\n//集合遍历  \n \tfor (i <- Array(13,24,15)) println(i)\n    for (i <- List(13,24,25)) println(i)\n    for (i <- Set(13,24,51)) println(i)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n循环守卫: for (x <- 1 to 10 if x%2 == 0) for循环加上条件判断 满足才执行下面代码块\n\n嵌套循环：for (i <- 1 to 3; j <- 1 to 3)\n\n//九九乘法表\nfor (i <- 1 to 9; j <- 1 to i) {\n      print(s"$i * $j = ${i * j} \\t")\n      if (j==i) println() //换行\n    }\n\n\n1\n2\n3\n4\n5\n\n\n引入变量：for (i <- 1 to 3; j = 4 - i) println(j)\n\nfor { i <- 1 to 3;\n      j = 10 - i //引入变量\n      if j%i==0 //判断\n    }{  //打印\n      println(j)\n    }\n//例:打印9层妖塔\nfor(i <-  1 to 9; stars=2*i -1;spaces= 9-i)  println(" " * spaces + "*" * stars)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n返回值：默认值是空 val result= for (i <- 1 to 10) yield i 用yield生成集合类型作为返回值\n\n循环中断：Breaks类break 补抓和补抓基础退出循环\n\n  Breaks.breakable(//补抓异常\n      for (i <- 0 to 3){\n        if (i==3) Breaks.break() //抛出异常\n      }\n    )\n//可以直接导入这个 就可以直接调用方法了\nimport scala.util.control.Breaks._\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n方法调用：可以用点 也可以用空格代替\n\n\n# 函数式编程⭕\n\n命令式编程：落脚点是具体执行的命令,无论过程还是对象 （执行效率高）\n\n函数式编程：数据映射关系 y=f(x) 就是把其当成数学题的求解 （提高并且处理）\n\n基本语法：\n\ndef 函数名(形参: 类型 = "默认值",可变参数: 类型*): 返回值类型 = { 函数体 }\n//可以嵌套\n//可变参数要放置在最后面 返回集合\n//指定参数传值   函数名(参数1=1,参数2=2) 结合默认值使用,直接给想要的参数传值即可\n\n\n1\n2\n3\n4\n\n\n函数和方法的区别：完成某些功能的程序语句集合为函数,类中的函数称为方法\n\n匿名函数：(name:String)=>{函数体}\n\n \t//定时数据\n    def data(func:(Int,Int)=>Int):Int={func(6,3)}\n    //操作数据\n    val add=(x:Int,y:Int) => x + y// 加法\n    println(data(add)) //打印\n    println(data((a,b) => a-b)) //减法 简化\n    println(data(-_+_)) //b-a  再简化\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n函数至简原则:能省就省。\n\n1. 默认以最后一行表达式的值作为返回值。\n2. 一行代码可省略花括号\n3. 返回值类型可以推断都可以省略\n4. 如果定义了return 返回值类型就不能省略\n5. Unit,使用return不起作用。\n6. 无返回值类型可直接省略等号 \n7. 空参无返回值 定义调用时都可以省略小括号    直接:  函数名 调用\n\n例: def f(name:String)=name    f(x)=x\n\n8. 只关心逻辑的话 函数名都可以省略  lambda   (name:String)=>{函数体} \n\tlambda可以做为参数传入别的函数\n\tdef f(func: String => Unit):Unit={func("lambad")}//定义数据\n    f((name:String)=>{println(name)}) //操作数据的 加工等操作\n\t匿名函数简化:\n\t1.参数类型可以省略 2.类型省略后，只有一个参数原括号可省略\n\t3.只有一行大括号可省略 4.参数只出现异常可以用_代替\n\t5.不是调用语句是函数体_都可以省\n\tf(x=>println(x)) //名字可以改\n\tf(println(_)) \n\tf(println)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n高阶函数：\n\nval f1=f _  //函数可以作为值传递\n//作为参数传递\n def dat(func:(Int,Int)=>Int,a:Int,b:Int): Int ={\n   func(a,b)\n  }\n//可以作为函数的返回值返回\n函数()(里面的返回的结构体参数)\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n柯里化和闭包:\n\n柯里化：把一个列表的多个参数，编程多个参数列表：书写闭包的一种方式 推荐\n\n闭包：一个函数可以访问到它外部的值,这个函数和他所处的环境称为闭包(将所处的一块打包称一个包)\n\n> 闭包实际上把需要访问到外部的变量打包保存下来，放置堆内存让其引用\n> \n> 因为在嵌套时外面执行结束了,里面就访问不到了,栈内存,执行完就弹出去了\n\n//例:柯里化 实际上是嵌套\n    def func(int: Int)(string: String)(char: Char):Boolean={\n      if (int ==0 && string == ""&& char==\'0\') false else true\n    }\n    println(func(0)("")(\'0\'))\n\n\n1\n2\n3\n4\n5\n\n\n递归：函数在方法体内又调用了自身。\n\n> 数学表达式\n> \n> 尾递归(优化):不会不断压栈,对之前的函数进行弹栈在压栈（直接覆盖栈帧) 栈资源只耗费一份。\n> \n> 定义一个内部函数：对内部函数进行调用即可\n> \n> 例：\n> \n>   //计算阶层\n>   def tailFact(n:Int):Int={\n>     //currRes用于传入上一次计算的值。\n>     @tailrec //@tailrec检验尾递归是否正确\n>     def loop(n:Int,currRes:Int): Int ={\n>       if(n==0) return currRes //返回之前全部的计算结果\n>       loop(n-1,currRes * n) //减一调用  传入计算结果\n>     }\n>     loop(n,1)//传入阶层 和 初始值\n>   }\n>     println(tailFact(5))\n> \n> \n> 1\n> 2\n> 3\n> 4\n> 5\n> 6\n> 7\n> 8\n> 9\n> 10\n> 11\n\n控制抽象：值传递,名传递(代码传递)\n\n //传递一个代码块返回值是Int   \n    def f(a: =>Int)=println(a+a) //调用了2个a 执行了俩次f2   a=f2()\n    def f2():Int={println("执行了");32+5}\n    f(f2())\n\t//简化\n\tf({println("执行了");32+5})\n\n\n1\n2\n3\n4\n5\n6\n\n\n实现:while循环\n\n//柯里化实现while循环方法    名传递\n    def mywhile(con: =>Boolean)(op: =>Unit): Unit ={\n      if (con){\n        op//调用方法体 方法体传递\n        mywhile(con)(op)//闭包递归\n      }\n    }\n    //测试\n    var n=10\n    mywhile (n>0){println(n);n-=1}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n惰性加载：函数执行被推迟,首次取值该函数才会执行 lazy 修饰\n\nlazy val result:Int =sum(1,3) //该函数未执行调用\nprintln(result)//第一次取值时才会执行。只调用一次。\n\n\n1\n2\n\n\n\n# 面向对象⭕\n\n包：package 包名 定义 :跟java一样 com.公司名.项目名.业务模块名\n\n> 文件可以在不同的包下写，只需把对应包写出来即可,也可以用{}来进行嵌套,import导包，可以在不同的包中定义单例对象了，且内层包与外层包可以相互访问。\n\n包对象：同名的包对象，对应的成员,该包下的class和object的共享变量可直接访问。package object 包名\n\n导包：通配符 _ .(ArrayList=> 起别名) (类名1,多个类) (ArrayList=>_,_) 屏蔽类\n\n类和对象:\n\n//基本语法 默认是public  可以有多个类\n[修饰符] class 类名{\n\t@BeanProperty  //生成javabean getset方法\n\tvar age:Int = _  //_表示空值\n}\n\n\n1\n2\n3\n4\n5\n\n\n封装:抽取数据封装在一起。\n\n> public属性底层实际是private,看似点调用，其实是调用了底层封装的get方法。如果是private可用@BeanProperty 设置。\n> \n> 访问权限：默认public 无这个关键字,private:内部和伴生对象，protected:同包无法访问,\n> \n> private[包名] 变量:增加包的访问权限,包下可以相互访问的变量。\n\n方法：override 重写方法 定义跟函数一样 点调用 可重载\n\n构造器: 主构造器和辅助构造器\n\nclass 类名(形参列表,var 属性名: String){//主构造器\n\tdef this(新参){//辅助构造\n    \tthis(形参列表) //调用主构造器\n    }\n\tdef this(新参){//多个辅助构造 重载}\n//调用下面的构造器可以直接调用上面的构造器,上面调用下面因为没加载 需要先声明\n}\n //主构造：形参用val 或者 var 定义的 就会当成属性使用。(推荐)\n 例: class Student(var name: String,var age: Int) //里面没有方法{}都可以省略\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n继承：class 子类 extends 父类{单继承} 继承调用顺序:先调用父再调子。override 重写\n\n多态：定义:def 方法名(形参；父类or接口){形参.方法调用}``调用: 方法名(子类对象)\n\n> java中属性是静态,方法是动态。scala全部都是动态。\n\n抽象类：abstract class 类名 valivar 抽象属性:类型 方法也一样,不用给实现\n\n> 重写抽象方法可以不加override 普通方法需要加\n> \n> supper调用父类方法 如果父类用var修饰 子类直接名改即可，如果是val的话 要加上override val 修改\n\n匿名子类：直接new对象重写抽象方法即可。\n\n单例(伴生)对象：必须在同一个文件中且名字一样。伴生类class ，伴生对象object(相当于static 静态),内容共享\n\n> 当class中用私有修饰,可以使用object创建对象共享出去，且使用apply创建的方法,调用时可省略名称\n> \n> class A1 private(var name: String){def pr(){println(name)}} //外部不能访问\n> object A1{def apply(name: String): A1 = new A1(name)}//创建apply对象共享出去\n> A1("张三").pr() //调用省略apply\n> //也可以在次基础上创建单例模式 \n> //懒汉式:先给一个私有属性默认为 _ 空,然后创建一个对外共享方法,且判断属性是否给空\n> //\t为空赋值一个实例,不为空就返回实例即可\n> \n> \n> 1\n> 2\n> 3\n> 4\n> 5\n> 6\n\n特性：trait 代替接口 extends 使用\n\ntrait 特性名{ //抽象类和接口的结合\n\ttrait 主体\n}\n//调用  如果有父类先继承父类,with进行叠加\n//加载顺序：如果有相同的变量或方法，supper把最后一个拿来做回调(最右边开始)\nclass 类名 extends 特性1 with 特性2 ...\nsupper[父类].方法 //指定调用的方法\n_: Student =>    //把一个对象放在本身特征里 this.调用这个对象方法 _是通配符可以自己起(依赖注入)\nthis.name  //调用Student.name的属性\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n> 优先用特征。 内容本质且带参数考虑用抽象类\n\n扩展：\n\n1. 类型检查和转换\n\tobj.isInstanceOf[T]: 判断obj是否是T类型\n    obj.asInstanceOf[T]：将 obj 强转成 T 类型\n    classOf 获取对象的类名。\n2. 枚举类和应用类\n\t枚举类：需要继承 Enumeration //Value(编号,"值") \n\t应用类：需要继承 App  \t\t//可执行的main方法\n3. Type 定义新类型  //起别名\n\t使用 type 关键字可以定义新的数据数据类型名称，本质上就是类型的一个别名\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 集合⭕\n\n> 三大类：Seq(序列)、set(集)、map(映射) 都有iterable特性\n\n可变:scala.collection.immutable :可直接对原集合进行修改。\n\n不可变:scala.collection.mutable :对象不可修改，每次修改返回一个新对象,类似java中String\n\n> 提示：操作不不可变用符号,可变用方法，以作区分。\n\n数组：\n\n不可变: (推荐)\n\tval arr=new Array[Int](10)  //手动 构造方法\n\tval arr1=Array(12,13,14) //伴生对象调用Array.apply()\n\tarr(0)=41  //下标访问 =号修改\n\t//遍历\n\tfor(i <- 0 c arr1.length){print(i)} //until不包含最后一个 下标\n\tfor(i <- arr.indices ){print(i)}\n\tarr1.foreach(s=>{println(s)}) //lambada\n    for (e <- arr1) println(e) // foreach\n    //迭代器\n    val iter=arr1.iterator;while (iter.hasNext) println(iter.next())\n    //连接符打印\n    println(arr1.mkString(",")) //推荐\n    //添加元素 返回新数组\n\t//前面添加 val 新数组 = 73 +: 41 +: arr1 :+ 14 //后面添加 \t\t\n可变：\n\tnew ArrayBuffer();ArrayBuffer(值....)//伴生对象\n\t//添加元素 .append() 后 prepend() 前  insert(位置,值1,...)//指定插入 +=:前  +=后\n\tinsertAll(位置,数组) //追加数组\n\t//删除元素 remove(起始位,删除个数) 不指定个数默认是1    -= 值 对元素进行删除\n\t//转换数组\n\t.toArray//不可变  .toBuffer//可变\n二维:\n\tval arr:Array[Array[Int]]=Array.ofDim[Int](外层个数,内层个数)\n\tarr.foreach(_.foreach(println))//遍历\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n列表list： 不可变集合(默认)、有序可重复,没有索引\n\n不可变:\n\tval list=list(值1,...) //创建\n\tlist(1)//访问 不能直接赋值\n\tlist.foreach(println)//遍历\n\t//添加 +: :+ 跟数组一样    \n\t:: (左边元素给右边添加) 例：13 :: 12  ::  Nil  //Nil创建一个新列表 里面放入13  12\n\t合并列表 :::   ++\n可变：\n\tnew ListBuffer[Int](); ListBuffer(值...)//创建\n\t添加方法跟上面一样append insert prepend  例： 13+=: 14 +=: list += 14 //添加   \n\t++= 追加列表 update remove -=\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nset集合: 无序不可重复\n\n不可变：\n\tSet(值,值2....) //创建不可重复 去重\n\t添加 +  合并 ++ 删除 -\t\n可变:\n\tmutable.Set(值,值2....) //可变\n\t添加 += add() 删除 -= remove 合并 ++=\n\n\n1\n2\n3\n4\n5\n6\n\n\nmap集合：kv键值对\n\n不可变:\n\tval map: Map[String,Int] =Map("k" -> 值,...) //不可变\n\t遍历 .foreach(println) = .foreach((kv:(String,Int))=>println(kv))\n\t\tfor(key <- map.keys)    for(key <- map.values)\n\t.get(kev).get  .getOrElse("kev",如果没有返回默认值) //访问v\n可变：\n\tmutable.Map()//可变\n\t添加 put  +=((k,v))//更新 \n\t删除 remove(kev)  -= "key" \n\t访问 map(key)  修改 updata() 合并 ++= //有覆盖没有合并\n\t合并 \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n元组tuple：最大只能有22个元素 容器 (声明,,..) 可嵌套\n\n 访问: ._索引 or productElement(索引)\n 遍历:  for(elem <- tuple.productIterator) println(elem)\n\t   for((k,v) <- tuple) println(k,v)\n\n\n1\n2\n3\n\n\n# 集合常用函数💦\n\n基本函数:\n\tlist.length   set.size  //获取长度\n\tforeach   for(e <- list.iteratior) //遍历\n\tmsString("--") //生成字符串\n\tcontains() //是否包含元素\n衍生集合：\n\tlist.head #头  list.tail #去掉头返回剩下 \n    list.last #尾  list.init #不包含尾\n    list.reverse #反转 \n    list.take(n) #取前n个元素 list.takeRight(n) #右边开始前n个\n    list.drop(n) #去掉前n个 返回剩下的\n    //俩个集合\n    union 并集 ::: 也可以\n    intersect 交集   diff 差集\n    zip   拉链(对应位置(索引)的俩个元素进行配对形成二元组) 多出来的去掉\n    滑窗(对一定范围进行活动,拿到不同的值,对其操作)\n    sliding(n,步长) //大小为n的滑动窗口 返回一个迭代器  步长不写默认是1\n    \n集合计算函数:\n\tlist.sum 求和  list.product 求乘积\n\tlist.max 最大值  list.maxBy(((String,Int))=>tuple._2) 查找列表中元组中第二个值的最大值\n\tlist.min 最小值\t  //简写 list.minBy(_._2) 查找列表中元组中第二个值的最小值\n\t//排序\n\tsorted 正     sorted(Ordeing[Int].reverse) 倒序\n\tsortBy(_._2) //指定排序 sortWith(_<_) //从小到大\n高级函数:\n\tmap操作:传入一个函数\n        过滤 : filter(条件帅选) 例:list.filter(_%2==0)\n        转化(映射):  map(_*2) //元素都乘2 转换   用于打散操作\n        扁平化:  嵌套集合.flatten //生成一个\n        扁平化+映射: flatMap(_.split(" ")) //以“ ”分开成每个集合,然后再把集合扁平成一个\n        分组: groupBy(_%2) //奇数1 偶数0\n\t\t\tgroupBy(data=>{if(data%2==0) "偶数" else "奇数"})\n\t\t\t//Map(奇数 -> List(1, 53), 偶数 -> List(314, 12, 4, 32))\n    reduce操作:传入函数    \n    \t归约: reduce((a, b) => a + b) =reduceList(_+_) 从左往右操作  reduceRight()\n    \t折叠: fold(起始值)((初始值,下一个传入的值)=>a+b)  \n\t\t\tfoldList可以传入俩个不相同的  foldRight从右边开始操作\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n案例：词频统计\n\n //词频统计 每个单词\n    val wordCount  =List(\n      ("hello",2),\n      ("hello world",4),\n      ("hi",3),\n      ("world",4),\n      ("scala",7),\n      ("scala",1),\n      ("hello java",2),\n      ("hello spark",2),\n      ("hello fink",2),\n    ).map(kv=>{\n      //取出每一行 然后让值全部都乘以出现过度次数\n      (kv._1.trim+" ") * kv._2\n    }).flatMap(_.split(" "))//先转换打散 再集合成一个\n      .groupBy(x=>x)//分区 string,list(String)\n      .map(kv=>(kv._1,kv._2.size) )//统计转化 map\n      .toList //转成list准备排序\n      .sortWith(_._2>_._2)//对第二个进行倒序排序\n      .take(3)//输出前三个\n    println(wordCount) //打印\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n队列：Quene,先进先出：进队enqueue 出队dequeue\n\n并行集合：充分利用多核cpu,进行并行计算 par 关键字\n\n例：\t20,25,24,26,29,27,23,28,22,21\n  (1 to 10).par.map(x=> print(Thread.currentThread().getId+","))\n\n\n1\n2\n\n\n\n# 模式匹配\n\n类似java的switch：match关键字\n\n基本语法\nval 返回值=变量 match{\n\tcase \'变量符合条件\' => 执行操作\n    case  ‘变量符合条件’ if ‘提前判断’>=0 => 执行操作 //模式守卫\n    case  i: 匹配类型 => 执行操作 //匹配类型\n    case  Array(x,y,....) => x,y //匹配数组 Array(0,_*) 开头为0的元素\n    case first :: second :: rest => 执行操作 // 1 ,2 后面全部 其他跟上面一样  \n    case (0,_) =>执行操作 //元组匹配\n    case 样例类名("匹配内容") => 执行结果 //对象匹配\n\t...\n\tcase _ => "通配符"\n}\n//可以配合op:传代码 使用 默认右break _通配符 不给如果不满足会报错\ncase class 样例类名(name:String) `\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n> 可以匹配常量、类型、数组、列表、元组、对象....\n\n\n# 异常\n\n> try_catch-finally 来处理 跟java差不多 throw 抛出异常 @throws 声明异常\n\n//补抓\ntry{}catch{ //使用了模式匹配\n    //小的放上面\n\tcase ex: 异常类型 =>{ print("发生异常") }\n\tcase ex: 异常类型 =>{ print("发生异常") }\n\t..\n}finally{}\n//抛出\ndef test():Nothing={throw new Exception("请检查")}\n// 声明异常 @throws\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n> scala没有编译时异常这个概念 全部都是在运行时进行捕获的\n\n\n# 隐式转换\n\n> 第一次编译失败时,会在当前环境中查找能编译通过的代码(方法)，用于类型转化，实现第二次编译\n\n//隐式函数 implicit\nimplicit def imp(参数)...  调用 1.imp(参数)\n//参数 implicit  变量类型必须一致 (跟名称无关) 隐式参数优先于默认参数\nimplicit val \\str :String="hello"  def say(implicit name:String)  //找相同的类型\n调用 say \nimplicitly[类型] //可指明转换类型\n//类 implicit 类 //该类不能是顶级类\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n解析机制：\n\n1. 先在当前代码作用域下查找隐式实体\n2. 查找实体失败,在隐式参数的作用域里面查找(关联的全部伴生对象以及该类型所在包的包对象)\n\n\n1\n2\n\n\n\n# 泛型\n\n协变和逆变\n\nclass M[+T] //协变 :子类      \t 类名类型[父类]=new 类名[子类]\nclass M[-T] //逆变 ：父类\t \t类名类型[子类]=new 类名[父类]\t\nclass M[T] //不变  : 无父子关系\n//T可自定义\n\n\n1\n2\n3\n4\n\n\n上下限：\n\nclass M[T<:父类] //上限  不能超过  子类及其自身\nclass M[T>:父类] //下限  不能低于  父类及其自身\n\n\n1\n2\n\n\n上下文：\n\ndef f[A : B](a: A) = println(a) //等同于 def f[A](a:A)(implicit arg:B[A])=println(a)\n\n\n1\n',normalizedContent:'# 概述\n\nscala是基于jvm,和java完全兼容,继承了java的很多优点，其类库都能直接调用。\n\n比java更加面向对象,是一门函数式编程语言,静态类高级编程语言,类似于java的加强版。\n\n总结：是一种多范式编程语言\n\n更适合大数据处理,对集合类型数据处理有先天优势.\n\n官网:https://scala-lang.org/\n\n一叶障目，不见森林。\n\n一次编写到处使用。\n\nspark是新一代内存级大数据计算框架。(为了学好他开肝)\n\njava和scala都是混合型语言(编译成字节码文件,交给jvm解释执行)\n\nc++是编译行语言,编译后直接执行。\n\n\n# 环境搭建\n\n安装步骤：\n\n 1. 安装jdk1.8\n 2. 下载scala安装文件 scala-2.12.11.zip\n 3. 解压\n 4. 配置scala环境变量\n\n> 测试: 打开cmd窗口 输入 scala即可\n> \n> val print="helloworld!" #定义\n> println(print) #打印\n> :quit #退出交互\n> \n> \n> 1\n> 2\n> 3\n\n编写helloworld程序 :编译工具 scalac 文件名 编译 [生成俩个字节码文件]\n\nobject helloscala{\n\tdef main(agrs: array[string]): unit = {\n\t\tprintln("hello scala")\n\t}\n}\n#object:关键字 入口类 声明一个单例对象（伴生对象）:全局唯一\n# def 方法名称(参数名称: 参数类型) :方法返回值类型 ={方法体}\n# array是数组,[]是表示泛型 上面是声明了string类型的数组\n#伴生对象:相伴相生可以相互访问私有变量 一个用class定义 一个用object定义 (取代了java中的static)\n# 名称必须一样 且在同一个文件下\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n> scala去掉了static关键字,实现了单例模式,里面只有一个静态对象,在调用main方法时相当于调用这个静态对象里面的方法\n> \n> 如果想使用 javac编译 scala文件 要加上类库\n> \n> 例：\n> java -cp %scala_home%/lib/scala-library.jar: 类名\n> \n> \n> 1\n> 2\n\n下载ide中的scala依赖插件即可在idea中使用 ,新建一个scala文件夹设置成sources root，addformeworksupport添加支持即可\n\n半生对象:object\n\n\n# 数据类型\n\n注释：// /**/ /****/\n\n编程规范：\n\n1. 使用一次tap,实现缩进\n2. ctrl+alt+l 进行格式化\n3 运算符俩边加空格,一行不能超过80个字符,超过换行展示\n\n\n1\n2\n3\n\n\n变量和常类：💦\n\n常量：程序执行过程中不会改变的变量\n\n基础语法\nvar 变量名 [:变量类型] = 初始值 #var i:int=10\nval 常量名 [:常量类型] = 初始值 #val j:int=20 #推荐\n# 能用常量的地方不用变量\n# 强类型语言一旦声明不能修改类型\n# 如果是引用类型是内存地址不变里面值可以修改\n\n\n1\n2\n3\n4\n5\n6\n\n\n标识符：自己可以起名字的地方,跟java差不多\n\n1. 以字母或者下划线开头,后接字母，数字、下划线\n2. 以操作符开头,且只能包含操作符（+~*/#!等）\n3、 反引号`...`包括任意字符串,关键字也可以\n\n\n1\n2\n3\n\n\n字符串：+号连接, printf用法用%传值,模板:通过$进行插值,通过*可以做字符串的乘法操作\n\n \tval name="张三"\n    println("hello"*3)\n    printf("我是%s,%d岁",name,20)\n    //s""是表示模板字符串  ${插值}\n    println("\\n"+s"我是${name}")\n\tprintln("\\n"+f"我是${age}%2.2f") //f格式\n\tprintln("\\n"+raw"我是${age}%2.2f") //raw除了插值其他都是原样输出\n\tprintln("\\n"+f"我是${age}%2.2f")\n\t s"""\n       |内容 sql\n       |可以换行操作\n       | ${name} 可插值\n       |""".stripmargin  //stripmargin是格式和边界\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n键盘输入：stdin.readline("提示:") stdin.read类型等...\n\n写入文件：source类\n\n * 读：source.fromfile("src/main/resources/test.txt").foreach(print)\n\n * 写：scala中没有提供写的类,但我们可以直接调用java的类库\n   \n   //拷贝文件 \n   //调用java的wire库 进行写入操作\n   val write=new printwriter(new file("src/main/resources/copy.txt"))\n       //读取文件数据进行写入\n       source.fromfile("src/main/resources/test.txt").foreach(\n         char=>{\n             print(char)\n             write.write(char)\n         }\n       )\n       write.close() //关闭资源\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n数据类型：⭕\n\n1. 一切数据都是对象,都是any的子类\n2. 数据类型分为俩大类:数值类型anyref、引用类型anyref 本质都是对象\n3. 低精度像高精度自动转换(隐式)\n4. stringops是对java中string的增强\n5. unit是一个数据类型 返回值的意思 没有对象就为()空值\n6. null是一个类型，是所有引用类型的子类 空引用\n7. nothing 所有数据类型的子类\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n整数类型：byte、stort、int、long\n\n例： byte[1] 一个字节8位 8有符号无码整数\nbyte:8有符号无码整数 (无码 取反加1) 取反(0 or 1)    \n\t首先内拿出一位来表示符号:0正数 1负数\n\t后面的七位才是真正意义上的表示数值的具体位数\n\t所以是2^7方=128,能表示的范围是0~127\n\t因为有正负所以是：  -127~127   \n\t其中\n    \t+0 00000000 = 0\n\t\t-0 10000000 = -128 (为什么?)\n\t\t因为考虑到扩展性问题\n\t\t例: -127=11111111 取反加一 = 10000001 而-128 正好是-127 减一\n\tshort[2]:16,int[4]:32(正负20亿左右),long[6]:64\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n字符类型：\'char\' \\t:实现对齐功能,\\n换行符,\\\\表示\\,\\""表示“”\n\n> 字符变量底层保存的是对应的ascii码\n\n空类型:unit空值,null空引用,nothing 抛异常\n\nunit:表示无值和java中的void等同 \nnull：实例值null\nnothing:类层级最底层,可以是任何子类，如果确定没有正常返回值可以其指定\n\n\n1\n2\n3\n\n\n类型转换：精度从到高(自动) 强转 ().to类型\n\nchar只能转换成int\nbyte和char不能相互转换 可以转换成int\n转成string+""\n也可以todouble.toint l\n\n\n1\n2\n3\n4\n\n\n\n# 运算符\n\n> 与java类似\n\n算数：+ - * % /\n\n关系: == != < > <= >= 相等默认是比较内容 eq方法是比较内存地址\n\n逻辑：&&与 ||或 !非\n\n赋值：= += -= *= /= %= <<= >>= &= ^= !=\n\n位：& | ^ << >> >>>\n\n> 运算符也是对象 可以用 n1.+(n2)\n> \n> 也可以不用点调用 比如：7.5 toint\n\n\n# 流程控制\n\n顺序：从上往下\n\n分支：if -else if- else :表达式有返回值,返回值是当前分支最后一行的返回值 字节给个值就可以\n\n例：\nval age=stdin.readint() //分支的返回值类型要一样 类型不一样用公共父类\n   val result= if (age>18) "成年" else "未成年"\n    printf(result)\n\n\n1\n2\n3\n4\n\n\n循环：for whlie do-while ：while和java一样\n\n基本语法：\n\n //范围遍历 0到9 by 2表示步长 不写默认是1 \n    for (i <-  0 to 10 by 2) //0.to(9)  (0 to 10).by(2)\n\tfor (i <-  0 to 10 reverse)//reverse 反转打印\n    //不包含结束位置(10)\n    for (i <- range(0,10))\n    for (i <- 0 until 10)//until 直到 不包含10 底层就是range\n//集合遍历  \n \tfor (i <- array(13,24,15)) println(i)\n    for (i <- list(13,24,25)) println(i)\n    for (i <- set(13,24,51)) println(i)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n循环守卫: for (x <- 1 to 10 if x%2 == 0) for循环加上条件判断 满足才执行下面代码块\n\n嵌套循环：for (i <- 1 to 3; j <- 1 to 3)\n\n//九九乘法表\nfor (i <- 1 to 9; j <- 1 to i) {\n      print(s"$i * $j = ${i * j} \\t")\n      if (j==i) println() //换行\n    }\n\n\n1\n2\n3\n4\n5\n\n\n引入变量：for (i <- 1 to 3; j = 4 - i) println(j)\n\nfor { i <- 1 to 3;\n      j = 10 - i //引入变量\n      if j%i==0 //判断\n    }{  //打印\n      println(j)\n    }\n//例:打印9层妖塔\nfor(i <-  1 to 9; stars=2*i -1;spaces= 9-i)  println(" " * spaces + "*" * stars)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n返回值：默认值是空 val result= for (i <- 1 to 10) yield i 用yield生成集合类型作为返回值\n\n循环中断：breaks类break 补抓和补抓基础退出循环\n\n  breaks.breakable(//补抓异常\n      for (i <- 0 to 3){\n        if (i==3) breaks.break() //抛出异常\n      }\n    )\n//可以直接导入这个 就可以直接调用方法了\nimport scala.util.control.breaks._\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n方法调用：可以用点 也可以用空格代替\n\n\n# 函数式编程⭕\n\n命令式编程：落脚点是具体执行的命令,无论过程还是对象 （执行效率高）\n\n函数式编程：数据映射关系 y=f(x) 就是把其当成数学题的求解 （提高并且处理）\n\n基本语法：\n\ndef 函数名(形参: 类型 = "默认值",可变参数: 类型*): 返回值类型 = { 函数体 }\n//可以嵌套\n//可变参数要放置在最后面 返回集合\n//指定参数传值   函数名(参数1=1,参数2=2) 结合默认值使用,直接给想要的参数传值即可\n\n\n1\n2\n3\n4\n\n\n函数和方法的区别：完成某些功能的程序语句集合为函数,类中的函数称为方法\n\n匿名函数：(name:string)=>{函数体}\n\n \t//定时数据\n    def data(func:(int,int)=>int):int={func(6,3)}\n    //操作数据\n    val add=(x:int,y:int) => x + y// 加法\n    println(data(add)) //打印\n    println(data((a,b) => a-b)) //减法 简化\n    println(data(-_+_)) //b-a  再简化\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n函数至简原则:能省就省。\n\n1. 默认以最后一行表达式的值作为返回值。\n2. 一行代码可省略花括号\n3. 返回值类型可以推断都可以省略\n4. 如果定义了return 返回值类型就不能省略\n5. unit,使用return不起作用。\n6. 无返回值类型可直接省略等号 \n7. 空参无返回值 定义调用时都可以省略小括号    直接:  函数名 调用\n\n例: def f(name:string)=name    f(x)=x\n\n8. 只关心逻辑的话 函数名都可以省略  lambda   (name:string)=>{函数体} \n\tlambda可以做为参数传入别的函数\n\tdef f(func: string => unit):unit={func("lambad")}//定义数据\n    f((name:string)=>{println(name)}) //操作数据的 加工等操作\n\t匿名函数简化:\n\t1.参数类型可以省略 2.类型省略后，只有一个参数原括号可省略\n\t3.只有一行大括号可省略 4.参数只出现异常可以用_代替\n\t5.不是调用语句是函数体_都可以省\n\tf(x=>println(x)) //名字可以改\n\tf(println(_)) \n\tf(println)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n高阶函数：\n\nval f1=f _  //函数可以作为值传递\n//作为参数传递\n def dat(func:(int,int)=>int,a:int,b:int): int ={\n   func(a,b)\n  }\n//可以作为函数的返回值返回\n函数()(里面的返回的结构体参数)\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n柯里化和闭包:\n\n柯里化：把一个列表的多个参数，编程多个参数列表：书写闭包的一种方式 推荐\n\n闭包：一个函数可以访问到它外部的值,这个函数和他所处的环境称为闭包(将所处的一块打包称一个包)\n\n> 闭包实际上把需要访问到外部的变量打包保存下来，放置堆内存让其引用\n> \n> 因为在嵌套时外面执行结束了,里面就访问不到了,栈内存,执行完就弹出去了\n\n//例:柯里化 实际上是嵌套\n    def func(int: int)(string: string)(char: char):boolean={\n      if (int ==0 && string == ""&& char==\'0\') false else true\n    }\n    println(func(0)("")(\'0\'))\n\n\n1\n2\n3\n4\n5\n\n\n递归：函数在方法体内又调用了自身。\n\n> 数学表达式\n> \n> 尾递归(优化):不会不断压栈,对之前的函数进行弹栈在压栈（直接覆盖栈帧) 栈资源只耗费一份。\n> \n> 定义一个内部函数：对内部函数进行调用即可\n> \n> 例：\n> \n>   //计算阶层\n>   def tailfact(n:int):int={\n>     //currres用于传入上一次计算的值。\n>     @tailrec //@tailrec检验尾递归是否正确\n>     def loop(n:int,currres:int): int ={\n>       if(n==0) return currres //返回之前全部的计算结果\n>       loop(n-1,currres * n) //减一调用  传入计算结果\n>     }\n>     loop(n,1)//传入阶层 和 初始值\n>   }\n>     println(tailfact(5))\n> \n> \n> 1\n> 2\n> 3\n> 4\n> 5\n> 6\n> 7\n> 8\n> 9\n> 10\n> 11\n\n控制抽象：值传递,名传递(代码传递)\n\n //传递一个代码块返回值是int   \n    def f(a: =>int)=println(a+a) //调用了2个a 执行了俩次f2   a=f2()\n    def f2():int={println("执行了");32+5}\n    f(f2())\n\t//简化\n\tf({println("执行了");32+5})\n\n\n1\n2\n3\n4\n5\n6\n\n\n实现:while循环\n\n//柯里化实现while循环方法    名传递\n    def mywhile(con: =>boolean)(op: =>unit): unit ={\n      if (con){\n        op//调用方法体 方法体传递\n        mywhile(con)(op)//闭包递归\n      }\n    }\n    //测试\n    var n=10\n    mywhile (n>0){println(n);n-=1}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n惰性加载：函数执行被推迟,首次取值该函数才会执行 lazy 修饰\n\nlazy val result:int =sum(1,3) //该函数未执行调用\nprintln(result)//第一次取值时才会执行。只调用一次。\n\n\n1\n2\n\n\n\n# 面向对象⭕\n\n包：package 包名 定义 :跟java一样 com.公司名.项目名.业务模块名\n\n> 文件可以在不同的包下写，只需把对应包写出来即可,也可以用{}来进行嵌套,import导包，可以在不同的包中定义单例对象了，且内层包与外层包可以相互访问。\n\n包对象：同名的包对象，对应的成员,该包下的class和object的共享变量可直接访问。package object 包名\n\n导包：通配符 _ .(arraylist=> 起别名) (类名1,多个类) (arraylist=>_,_) 屏蔽类\n\n类和对象:\n\n//基本语法 默认是public  可以有多个类\n[修饰符] class 类名{\n\t@beanproperty  //生成javabean getset方法\n\tvar age:int = _  //_表示空值\n}\n\n\n1\n2\n3\n4\n5\n\n\n封装:抽取数据封装在一起。\n\n> public属性底层实际是private,看似点调用，其实是调用了底层封装的get方法。如果是private可用@beanproperty 设置。\n> \n> 访问权限：默认public 无这个关键字,private:内部和伴生对象，protected:同包无法访问,\n> \n> private[包名] 变量:增加包的访问权限,包下可以相互访问的变量。\n\n方法：override 重写方法 定义跟函数一样 点调用 可重载\n\n构造器: 主构造器和辅助构造器\n\nclass 类名(形参列表,var 属性名: string){//主构造器\n\tdef this(新参){//辅助构造\n    \tthis(形参列表) //调用主构造器\n    }\n\tdef this(新参){//多个辅助构造 重载}\n//调用下面的构造器可以直接调用上面的构造器,上面调用下面因为没加载 需要先声明\n}\n //主构造：形参用val 或者 var 定义的 就会当成属性使用。(推荐)\n 例: class student(var name: string,var age: int) //里面没有方法{}都可以省略\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n继承：class 子类 extends 父类{单继承} 继承调用顺序:先调用父再调子。override 重写\n\n多态：定义:def 方法名(形参；父类or接口){形参.方法调用}``调用: 方法名(子类对象)\n\n> java中属性是静态,方法是动态。scala全部都是动态。\n\n抽象类：abstract class 类名 valivar 抽象属性:类型 方法也一样,不用给实现\n\n> 重写抽象方法可以不加override 普通方法需要加\n> \n> supper调用父类方法 如果父类用var修饰 子类直接名改即可，如果是val的话 要加上override val 修改\n\n匿名子类：直接new对象重写抽象方法即可。\n\n单例(伴生)对象：必须在同一个文件中且名字一样。伴生类class ，伴生对象object(相当于static 静态),内容共享\n\n> 当class中用私有修饰,可以使用object创建对象共享出去，且使用apply创建的方法,调用时可省略名称\n> \n> class a1 private(var name: string){def pr(){println(name)}} //外部不能访问\n> object a1{def apply(name: string): a1 = new a1(name)}//创建apply对象共享出去\n> a1("张三").pr() //调用省略apply\n> //也可以在次基础上创建单例模式 \n> //懒汉式:先给一个私有属性默认为 _ 空,然后创建一个对外共享方法,且判断属性是否给空\n> //\t为空赋值一个实例,不为空就返回实例即可\n> \n> \n> 1\n> 2\n> 3\n> 4\n> 5\n> 6\n\n特性：trait 代替接口 extends 使用\n\ntrait 特性名{ //抽象类和接口的结合\n\ttrait 主体\n}\n//调用  如果有父类先继承父类,with进行叠加\n//加载顺序：如果有相同的变量或方法，supper把最后一个拿来做回调(最右边开始)\nclass 类名 extends 特性1 with 特性2 ...\nsupper[父类].方法 //指定调用的方法\n_: student =>    //把一个对象放在本身特征里 this.调用这个对象方法 _是通配符可以自己起(依赖注入)\nthis.name  //调用student.name的属性\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n> 优先用特征。 内容本质且带参数考虑用抽象类\n\n扩展：\n\n1. 类型检查和转换\n\tobj.isinstanceof[t]: 判断obj是否是t类型\n    obj.asinstanceof[t]：将 obj 强转成 t 类型\n    classof 获取对象的类名。\n2. 枚举类和应用类\n\t枚举类：需要继承 enumeration //value(编号,"值") \n\t应用类：需要继承 app  \t\t//可执行的main方法\n3. type 定义新类型  //起别名\n\t使用 type 关键字可以定义新的数据数据类型名称，本质上就是类型的一个别名\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 集合⭕\n\n> 三大类：seq(序列)、set(集)、map(映射) 都有iterable特性\n\n可变:scala.collection.immutable :可直接对原集合进行修改。\n\n不可变:scala.collection.mutable :对象不可修改，每次修改返回一个新对象,类似java中string\n\n> 提示：操作不不可变用符号,可变用方法，以作区分。\n\n数组：\n\n不可变: (推荐)\n\tval arr=new array[int](10)  //手动 构造方法\n\tval arr1=array(12,13,14) //伴生对象调用array.apply()\n\tarr(0)=41  //下标访问 =号修改\n\t//遍历\n\tfor(i <- 0 c arr1.length){print(i)} //until不包含最后一个 下标\n\tfor(i <- arr.indices ){print(i)}\n\tarr1.foreach(s=>{println(s)}) //lambada\n    for (e <- arr1) println(e) // foreach\n    //迭代器\n    val iter=arr1.iterator;while (iter.hasnext) println(iter.next())\n    //连接符打印\n    println(arr1.mkstring(",")) //推荐\n    //添加元素 返回新数组\n\t//前面添加 val 新数组 = 73 +: 41 +: arr1 :+ 14 //后面添加 \t\t\n可变：\n\tnew arraybuffer();arraybuffer(值....)//伴生对象\n\t//添加元素 .append() 后 prepend() 前  insert(位置,值1,...)//指定插入 +=:前  +=后\n\tinsertall(位置,数组) //追加数组\n\t//删除元素 remove(起始位,删除个数) 不指定个数默认是1    -= 值 对元素进行删除\n\t//转换数组\n\t.toarray//不可变  .tobuffer//可变\n二维:\n\tval arr:array[array[int]]=array.ofdim[int](外层个数,内层个数)\n\tarr.foreach(_.foreach(println))//遍历\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n列表list： 不可变集合(默认)、有序可重复,没有索引\n\n不可变:\n\tval list=list(值1,...) //创建\n\tlist(1)//访问 不能直接赋值\n\tlist.foreach(println)//遍历\n\t//添加 +: :+ 跟数组一样    \n\t:: (左边元素给右边添加) 例：13 :: 12  ::  nil  //nil创建一个新列表 里面放入13  12\n\t合并列表 :::   ++\n可变：\n\tnew listbuffer[int](); listbuffer(值...)//创建\n\t添加方法跟上面一样append insert prepend  例： 13+=: 14 +=: list += 14 //添加   \n\t++= 追加列表 update remove -=\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nset集合: 无序不可重复\n\n不可变：\n\tset(值,值2....) //创建不可重复 去重\n\t添加 +  合并 ++ 删除 -\t\n可变:\n\tmutable.set(值,值2....) //可变\n\t添加 += add() 删除 -= remove 合并 ++=\n\n\n1\n2\n3\n4\n5\n6\n\n\nmap集合：kv键值对\n\n不可变:\n\tval map: map[string,int] =map("k" -> 值,...) //不可变\n\t遍历 .foreach(println) = .foreach((kv:(string,int))=>println(kv))\n\t\tfor(key <- map.keys)    for(key <- map.values)\n\t.get(kev).get  .getorelse("kev",如果没有返回默认值) //访问v\n可变：\n\tmutable.map()//可变\n\t添加 put  +=((k,v))//更新 \n\t删除 remove(kev)  -= "key" \n\t访问 map(key)  修改 updata() 合并 ++= //有覆盖没有合并\n\t合并 \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n元组tuple：最大只能有22个元素 容器 (声明,,..) 可嵌套\n\n 访问: ._索引 or productelement(索引)\n 遍历:  for(elem <- tuple.productiterator) println(elem)\n\t   for((k,v) <- tuple) println(k,v)\n\n\n1\n2\n3\n\n\n# 集合常用函数💦\n\n基本函数:\n\tlist.length   set.size  //获取长度\n\tforeach   for(e <- list.iteratior) //遍历\n\tmsstring("--") //生成字符串\n\tcontains() //是否包含元素\n衍生集合：\n\tlist.head #头  list.tail #去掉头返回剩下 \n    list.last #尾  list.init #不包含尾\n    list.reverse #反转 \n    list.take(n) #取前n个元素 list.takeright(n) #右边开始前n个\n    list.drop(n) #去掉前n个 返回剩下的\n    //俩个集合\n    union 并集 ::: 也可以\n    intersect 交集   diff 差集\n    zip   拉链(对应位置(索引)的俩个元素进行配对形成二元组) 多出来的去掉\n    滑窗(对一定范围进行活动,拿到不同的值,对其操作)\n    sliding(n,步长) //大小为n的滑动窗口 返回一个迭代器  步长不写默认是1\n    \n集合计算函数:\n\tlist.sum 求和  list.product 求乘积\n\tlist.max 最大值  list.maxby(((string,int))=>tuple._2) 查找列表中元组中第二个值的最大值\n\tlist.min 最小值\t  //简写 list.minby(_._2) 查找列表中元组中第二个值的最小值\n\t//排序\n\tsorted 正     sorted(ordeing[int].reverse) 倒序\n\tsortby(_._2) //指定排序 sortwith(_<_) //从小到大\n高级函数:\n\tmap操作:传入一个函数\n        过滤 : filter(条件帅选) 例:list.filter(_%2==0)\n        转化(映射):  map(_*2) //元素都乘2 转换   用于打散操作\n        扁平化:  嵌套集合.flatten //生成一个\n        扁平化+映射: flatmap(_.split(" ")) //以“ ”分开成每个集合,然后再把集合扁平成一个\n        分组: groupby(_%2) //奇数1 偶数0\n\t\t\tgroupby(data=>{if(data%2==0) "偶数" else "奇数"})\n\t\t\t//map(奇数 -> list(1, 53), 偶数 -> list(314, 12, 4, 32))\n    reduce操作:传入函数    \n    \t归约: reduce((a, b) => a + b) =reducelist(_+_) 从左往右操作  reduceright()\n    \t折叠: fold(起始值)((初始值,下一个传入的值)=>a+b)  \n\t\t\tfoldlist可以传入俩个不相同的  foldright从右边开始操作\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n案例：词频统计\n\n //词频统计 每个单词\n    val wordcount  =list(\n      ("hello",2),\n      ("hello world",4),\n      ("hi",3),\n      ("world",4),\n      ("scala",7),\n      ("scala",1),\n      ("hello java",2),\n      ("hello spark",2),\n      ("hello fink",2),\n    ).map(kv=>{\n      //取出每一行 然后让值全部都乘以出现过度次数\n      (kv._1.trim+" ") * kv._2\n    }).flatmap(_.split(" "))//先转换打散 再集合成一个\n      .groupby(x=>x)//分区 string,list(string)\n      .map(kv=>(kv._1,kv._2.size) )//统计转化 map\n      .tolist //转成list准备排序\n      .sortwith(_._2>_._2)//对第二个进行倒序排序\n      .take(3)//输出前三个\n    println(wordcount) //打印\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n队列：quene,先进先出：进队enqueue 出队dequeue\n\n并行集合：充分利用多核cpu,进行并行计算 par 关键字\n\n例：\t20,25,24,26,29,27,23,28,22,21\n  (1 to 10).par.map(x=> print(thread.currentthread().getid+","))\n\n\n1\n2\n\n\n\n# 模式匹配\n\n类似java的switch：match关键字\n\n基本语法\nval 返回值=变量 match{\n\tcase \'变量符合条件\' => 执行操作\n    case  ‘变量符合条件’ if ‘提前判断’>=0 => 执行操作 //模式守卫\n    case  i: 匹配类型 => 执行操作 //匹配类型\n    case  array(x,y,....) => x,y //匹配数组 array(0,_*) 开头为0的元素\n    case first :: second :: rest => 执行操作 // 1 ,2 后面全部 其他跟上面一样  \n    case (0,_) =>执行操作 //元组匹配\n    case 样例类名("匹配内容") => 执行结果 //对象匹配\n\t...\n\tcase _ => "通配符"\n}\n//可以配合op:传代码 使用 默认右break _通配符 不给如果不满足会报错\ncase class 样例类名(name:string) `\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n> 可以匹配常量、类型、数组、列表、元组、对象....\n\n\n# 异常\n\n> try_catch-finally 来处理 跟java差不多 throw 抛出异常 @throws 声明异常\n\n//补抓\ntry{}catch{ //使用了模式匹配\n    //小的放上面\n\tcase ex: 异常类型 =>{ print("发生异常") }\n\tcase ex: 异常类型 =>{ print("发生异常") }\n\t..\n}finally{}\n//抛出\ndef test():nothing={throw new exception("请检查")}\n// 声明异常 @throws\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n> scala没有编译时异常这个概念 全部都是在运行时进行捕获的\n\n\n# 隐式转换\n\n> 第一次编译失败时,会在当前环境中查找能编译通过的代码(方法)，用于类型转化，实现第二次编译\n\n//隐式函数 implicit\nimplicit def imp(参数)...  调用 1.imp(参数)\n//参数 implicit  变量类型必须一致 (跟名称无关) 隐式参数优先于默认参数\nimplicit val \\str :string="hello"  def say(implicit name:string)  //找相同的类型\n调用 say \nimplicitly[类型] //可指明转换类型\n//类 implicit 类 //该类不能是顶级类\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n解析机制：\n\n1. 先在当前代码作用域下查找隐式实体\n2. 查找实体失败,在隐式参数的作用域里面查找(关联的全部伴生对象以及该类型所在包的包对象)\n\n\n1\n2\n\n\n\n# 泛型\n\n协变和逆变\n\nclass m[+t] //协变 :子类      \t 类名类型[父类]=new 类名[子类]\nclass m[-t] //逆变 ：父类\t \t类名类型[子类]=new 类名[父类]\t\nclass m[t] //不变  : 无父子关系\n//t可自定义\n\n\n1\n2\n3\n4\n\n\n上下限：\n\nclass m[t<:父类] //上限  不能超过  子类及其自身\nclass m[t>:父类] //下限  不能低于  父类及其自身\n\n\n1\n2\n\n\n上下文：\n\ndef f[a : b](a: a) = println(a) //等同于 def f[a](a:a)(implicit arg:b[a])=println(a)\n\n\n1\n',charsets:{cjk:!0}},{title:"hbase笔记",frontmatter:{title:"hbase笔记",date:"2021-09-15T00:00:00.000Z",tags:["hbase"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/11.hbase.html",relativePath:"view/docs/笔记/11.hbase.md",key:"v-377761dc",path:"/view/docs/%E7%AC%94%E8%AE%B0/11.hbase.html",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:2},{level:2,title:"入门",slug:"入门",normalizedTitle:"入门",charIndex:998},{level:2,title:"进阶",slug:"进阶",normalizedTitle:"进阶",charIndex:4468},{level:2,title:"API",slug:"api",normalizedTitle:"api",charIndex:5784},{level:3,title:"整合MR",slug:"整合mr",normalizedTitle:"整合mr",charIndex:13215},{level:3,title:"整合Hive",slug:"整合hive",normalizedTitle:"整合hive",charIndex:13909},{level:2,title:"优化",slug:"优化",normalizedTitle:"优化",charIndex:15528},{level:2,title:"踩坑",slug:"踩坑",normalizedTitle:"踩坑",charIndex:16410}],lastUpdated:"2021/9/21 下午11:14:17",headersStr:"简介 入门 进阶 API 整合MR 整合Hive 优化 踩坑",content:'# 简介\n\nHBase 是一种分布式、可扩展、支持海量数据存储Nosql数据库\n\n原谷歌三大论文之一Bigtable演化成HBase (GFS是hdfs,mr就是mr)\n\n基于hdfs,可以实现随机写操作。秒级响应(方式合久必分，分久必合)\n\n数据结构：逻辑结构表，物理存储结构KV\n\n逻辑结构：元数据\n\n将很多列分出来组成一个列族,从上往下叫Row key 按照字典序排序，而且唯一,不唯一就是覆盖。\n\n(宽表)纵向切分叫列族,(长表)横向切分的叫Region，切分后都放置不同文件夹。实际数据存储到Store里面\n\n存储结构：\n\n对于每一个列:都存储了列族、列名、Rowkey、timeStamp时间戳(版本号)、操作类型、值\n\n> 最后会校验时间戳(返回时间最大的)，如果不一致操作会出问题\n> \n> 删除操作:rowkey相同,类型是delet,然后比对时间戳(如果是最大)执行成功,返回删除\n> \n> 不会立马删除\n\n数据模式：\n\n * Name Space :命名空间 类似database\n   \n   > 默认：hbase(内置表) 、default(默认用户使用的命名空间)\n\n * Region：表 的切片(小表) 、定义列族即可、列是动态增加的\n\n * Row：每行数据又一个rowkey(字典序)和多个列组成\n\n * column:每个列需要指定列族与列限定符\n\n * Time stamp:时间戳标识版本\n\n * cell:唯一确认的单元(最小)\n\n基础架构：\n\nmaster操作表的DDL，zookeeper管理,其中storeFile存储到Store，Store存储到Region,Region存储到RegionServer 分布式，\n\nRegionServer作用:DML\n\n * Data:get、put、delete\n * Region：SplitRegion、compactRegin\n\nmaster作用：DDL\n\n * table:create、delete、alter\n * RegionServer：分配Region到每个RegionServer,监控RegionServer状态\n\n> 自带高可用(俩个master)\n\n> 最终文件存储到hdfs,而hdfs存储到datanode中，而datanode存储到linux中,然后存储到磁盘上。\n\n\n# 入门\n\n部署：\n\n 1. 上次安装包\n\n 2. 解压改名\n\n 3. 修改配置文件\n    \n    * regionservers 集群\n      \n      hadoop111\n      hadoop112\n      hadoop113\n      \n      \n      1\n      2\n      3\n      \n    \n    * hbase-env.sh 配置脚本执行文件\n      \n      #查看javahome\n      [hadoop101@axcmsm111 conf]$ echo $JAVA_HOME\n      /opt/module/jdk1.8.0_141\n      #配置JAVA环境变量\n      export JAVA_HOME=/opt/module/jdk1.8.0_141\n      #注释掉(可选,jdk1.7可以删掉)\n      # export HBASE_MASTER_OPTS="$HBASE_MASTER_OPTS -XX:PermSize=128m -XX:MaxPermSize=128m"\n      # export HBASE_REGIONSERVER_OPTS="$HBASE_REGIONSERVER_OPTS -XX:PermSize=128m -XX:MaxPermSize=128m"\n      \n      #静止启动默认的zk\n      export HBASE_MANAGES_ZK=false\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      \n    \n    * hbase-site.xml\n      \n      <configuration>\n      <property>\n      <name>hbase.rootdir</name>\n      <value>hdfs://hadoop111:9000/HBase</value>\n      </property>\n      <property>\n      <name>hbase.cluster.distributed</name>\n      <value>true</value>\n      </property>\n       \x3c!-- 0.98 后的新变动，之前版本没有.port,默认端口为 60000 --\x3e\n      <property>\n      <name>hbase.master.port</name>\n      <value>16000</value>\n      </property>\n      <property> \n      <name>hbase.zookeeper.quorum</name>\n       <value>hadoop111,hadoop112,hadoop113</value>\n      </property>\n      <property> \n      <name>hbase.zookeeper.property.dataDir</name>\n       <value>/opt/module/zookeeper-3.6.3/zkData</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      \n\n 4. 配置软链接\n    \n    ln -s /opt/module/hadoop-3.1.4/etc/hadoop/core-site.xml /opt/module/hbase/conf/core-site.xml\n    \n    ln -s /opt/module/hadoop-3.1.4/etc/hadoop/hdfs-site.xml /opt/module/hbase/conf/hdfs-site.xml\n    \n    \n    1\n    2\n    3\n    \n\n 5. 分发脚本\n    \n     xsync hbase/\n    \n    \n    1\n    \n\n 6. 启动 端口16010\n    \n    群起\n     ./bin/start-hbase.sh #第一次可能会又延迟\n     \n    #单节点\n    bin/hbase-daemon.sh start master #启动ygmaster\n    bin/hbase-daemon.sh start regionserver #启动多个\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 7. 关闭\n    \n    群关\n    ./bin/stop-hbase.sh \n    \n    \n    1\n    2\n    \n\n命令行操作：bin/hbase shell 进入命令行 help 帮助 list 查看列表\n\n提示：删除 ctrl+delete 不需要分号结尾 tap提示\n\nhelp查看\n\n Group name: ddl\n  Commands: alter, alter_async, alter_status, create, describe, disable, disable_all, drop, drop_all, enable, enable_all, exists, get_table, is_disabled, is_enabled, list, locate_region, show_filters\n  Group name: dml\n  Commands: append, count, delete, deleteall, get, get_counter, get_splits, incr, put, scan, truncate, truncate_preserve\n  ....\n\n\n1\n2\n3\n4\n5\n\n\n表操作：表名("库名:表名") 列("列族:列")\n\n * 创建表 create 表名,列族1，列族2，3.....(默认存储到difault命名空间)\n * 查看表结构 describe \'表名\'\n * 修改表信息 alter ’表名‘，{NAME=>\'列族\',VERSIONS=>3}\n * disable ’表名‘ 先下线 再删除表 drop ’表名‘\n * 查看表信息 scan \'student\'\n * 创建命名空间：create_namespace \'名字\'\n * 查看命名空间：list_namespace\n * 指定命名空间创建表：create ”命名空间名:表名“,"列族“\n * 删除命名空间：先下线表，再删除表，再向删除命名空间(drop_namespace)(也可以设置存储多少表)\n * 刷写磁盘 flush ”表名“\n\nDML:(看时间戳)\n\n * 增 ：put "库:表"，"rowkey","列族:列","数据"\n\n * 查\n   \n   * scan ”表名“ (可以加过滤条件等等...)\n   \n   * get "表名","rowkey"\n     \n     > 可以指定列名,列族\n\n * 改：put "库:表"，"rowkey","列族:列","数据"\n\n * 删：\n   \n   * delete ”表","rowkey”,”列“\n     \n     > 也可以按照时间戳删除(时间戳比他大的删除)\n   \n   * deleteall "表"，"rowkey"\n   \n   * truncate “表” 清空表\n\n\n# 进阶\n\n架构原理:\n\n数据最后存储到hdfs的datanode中,HMaster DDL管理表,管理HRegionServer,ZK分担工作量，HRegionServer包含Hlog(预写入日志)、多个HRegin(按行切分,里面包含多个列族sotre.memstore(刷写),stroeFilme(文件))里面的存储格式是Hfile(键值对),列族是逻辑结构真实文件夹是store\n\nzk分担了HMaster与客户端的交互，l客户端直接跟zk交互，\n\n如果操作是DML找zk,DDL还是需要跟HMaster交互\n\n> memstore刷鞋过程要经过跟hdfs客户端交互最后刷写到datanode\n> \n> 也就是磁盘上。\n\n写流程：RegionServer简称RS\n\n客户端向zk请求meta(结构)表所在的的RS(谁在维护),假设zk返回hadoop111(它在维护)，客户端再向Hbase中请求meta(表信息),hbase返回meta,获取RS(数据所在位置),做meta缓存，再发送put请求,先写入预写日志,再写入memstore缓存,再写入storefile文件。\n\n\n\n> 在0.9之前还有-root-表 其他表往后推一步。\n> \n> 现在改变了，在切分之前会先判断是否是meta表\n\n刷写流程：\n\nRS级别：里面有多个hr\n\n默认占超过RS的堆内存的40%刷写到磁盘(内存堵塞行为)\n\n安全模式,占堆内存的95%(也就是0.38)也开始刷写(没有堵塞直接刷写,一边写入缓存，一边刷写磁盘,当写入缓存速度比写磁盘快,到堆内存40%，进入堵塞,不要往内存写,不然爆了,等到0.38以下再开启写入缓存)\n\n当内存最后一次操作时间,过了一个小时(认为没有操作,也会进行刷写)\n\nhr级别：hr中的memstore\n\n当前的memstore到达了128M,单个进行刷写(里面还有wal预刷写操作)\n\n读流程：\n\n先读内存，再找zk,找meta位置,请求meta查找RS位置,缓存位置,再请求对应RS,其中RS中有一块Block Cache用来缓存最近读取的数据(遵循最近最少原则,满内存就开删一部分),读取这个缓存，也去读磁盘数据,然后进行比对时间戳。\n\n> 数据量大的几乎都是读磁盘的,所以hbase是一个读比写慢的框架\n\n合并数据：storeFile Compaction\n\n * Minor Compaction 小合并(不删数据)\n\n * Major Compaction 全局合并(合并成一个) compact \'表名\'\n   \n   > 生产情况建议设置为0,关闭自动合并,以为是重写,先读再写,影响业务，建议在空闲时间,手动全局合并\n   > \n   > 全局合并后应该需要等几分钟才会自动删除源文件\n\n切片流程：Region Split (默认10G)\n\n0.94之前到达之后才且,0.94后，自动按照缓存最大值切分为2,一直下去，会操作数据倾斜问题,所以在建表时就要做预分区。\n\n到达值,按照整个rowkey一刀俩断\n\n> 官方建议，经量使用一个列族(使用多个尽量保证数据同步增长,防止小文件)\n\n\n# API\n\n连接对象:\n\n * 获取DDL对象 admin对象\n * 获取DML对象 table对象\n   * 插入数据\n   * 查数据(get)\n   * 查数据(scan)\n   * 删除数据\n\npackage com.axcmsm.test;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.hadoop.hbase.*;\nimport org.apache.hadoop.hbase.client.*;\nimport org.apache.hadoop.hbase.util.Bytes;\nimport java.io.IOException;\nimport java.util.Iterator;\n\n/*\n * DDL：\n * 1判断表是否存在\n * 1.创建表\n * 3.创建命名空间\n * 4.删除表\n *\n * DML:\n * 1.插入数据\n * 2.查数据(get)\n * 3.查数据(scan)\n * 4.删除数据\n *\n *\n * */\npublic class TestApi {\n    private static Connection connection = null;\n    private static Admin admin = null;\n\n    static {\n        //        HBaseConfiguration conf = new HBaseConfiguration();\n        Configuration conf = HBaseConfiguration.create();\n        //连接zk\n        conf.set("hbase.zookeeper.quorum", "hadoop111,hadoop112,hadoop113");\n//        HBaseAdmin admin = new HBaseAdmin(conf);\n        try {\n//           创建连接对象\n            connection = ConnectionFactory.createConnection(conf);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        try {\n//            创建admin对象\n            admin = connection.getAdmin();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n\n    //    1判断表是否存在\n    public static boolean isTablieExit(String tableName) throws IOException {\n        boolean flag = admin.tableExists(TableName.valueOf(tableName));\n        return flag;\n    }\n\n    //关闭方法\n    public static void close() {\n        if (admin != null) {\n            try {\n                admin.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        if (connection != null) {\n            try {\n                connection.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n//    创建表\n    public static void createTable(String tableName,String... cfs) throws IOException {\n        if (cfs.length<=0){\n            System.out.println("请设置列族信息");\n            return;\n        }\n        if (isTablieExit(tableName)){\n            System.out.println("表已经存在");\n            return;\n        }\n        HTableDescriptor table = new HTableDescriptor(TableName.valueOf(tableName));\n        //循环添加列族\n        for (String cf : cfs) {\n            //创建列族描述器\n            HColumnDescriptor family = new HColumnDescriptor(cf);\n            table.addFamily(family);//添加列族信息\n        }\n        admin.createTable(table);\n    }\n\n    //删除表\n    public static void dropTable(String tableName) throws IOException {\n        if (!isTablieExit(tableName)) {\n            System.out.println("不存在");\n            return;\n        }\n        //下线\n        admin.disableTable(TableName.valueOf(tableName));\n        //删除表\n        admin.deleteTable(TableName.valueOf(tableName));\n\n    }\n    //创建命名空间\n    public static void createNameSpace(String ns){\n        try {\n            admin.createNamespace(NamespaceDescriptor.create(ns).build());\n        }catch (NamespaceExistException e) {\n            System.out.println(e+"命名空间已存在！！！！！！！！！！");\n        }\n        catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n    //插入数据\n    public static void putData(String tableName,String rowKey,String cf,String cn,String value) throws IOException {\n        Table table = connection.getTable(TableName.valueOf(tableName));\n        Put put = new Put(Bytes.toBytes(rowKey));//传入rowkey\n        put.addColumn(Bytes.toBytes(cf), Bytes.toBytes(cn), Bytes.toBytes(value));\n        table.put(put);//插入数据\n        //关闭表连接\n        table.close();\n    }\n\n    //获取数据\n    public static void getData(String tableName,String rowKey,String cf,String cn) throws IOException {\n        Table table = connection.getTable(TableName.valueOf(tableName));\n        //指定rowkey\n        Get get = new Get(Bytes.toBytes(rowKey));\n        //        指定列族  (不指定默认按row获取)\n//        get.addFamily(Bytes.toBytes(cf));\n        //指定列族和列\n        get.addColumn(Bytes.toBytes(cf),Bytes.toBytes(cn));\n        //获取数据的半本数\n        get.setMaxVersions(5);//最大半本数\n        //  解析\n        Result result = table.get(get);\n        for (Cell cell : result.rawCells()) {\n            System.out.println("CF:" + Bytes.toString(CellUtil.cloneFamily(cell)) +\n                    ", CN: " + Bytes.toString(CellUtil.cloneQualifier(cell))+\n                    ", value: "+Bytes.toString(CellUtil.cloneValue(cell)));\n        }\n        table.close();\n    }\n\n    //获取数据\n    public static void scanData(String tableName) throws IOException {\n        Table table = connection.getTable(TableName.valueOf(tableName));\n\n        //空参全表  可以传入rowkey 和列族 还有过滤器\n        ResultScanner scanner = table.getScanner(new Scan(Bytes.toBytes("1001")));\n        for (Result result : scanner) {\n            //解析result\n            for (Cell cell : result.rawCells()) {\n                System.out.println("Rk:"+Bytes.toString(CellUtil.cloneRow(cell))+\n                        ",CF:" + Bytes.toString(CellUtil.cloneFamily(cell)) +\n                        ", CN: " + Bytes.toString(CellUtil.cloneQualifier(cell))+\n                        ", value: "+Bytes.toString(CellUtil.cloneValue(cell)));\n            }\n        }\n        //关闭连接\n        table.close();\n    }\n\n    //删除数据\n    public static void deleteDate(String tableName,String rowkey,String cf,String cn) throws IOException {\n        Table table = connection.getTable(TableName.valueOf(tableName));\n\n        // 只传入rk 就相当于deleteall\n        Delete delete = new Delete(Bytes.toBytes(rowkey));\n        //指定列族、列删除新版本   慎用 你删除新版本旧版本又出来了\n//        delete.addColumn(Bytes.toBytes(cf),Bytes.toBytes(cn));\n        //指定列族、列删除全部版本\n//        delete.addColumns(Bytes.toBytes(cf),Bytes.toBytes(cn));\n        //指定列族\n        delete.addFamily(Bytes.toBytes(cf));\n        table.delete(delete);\n        table.close();\n\n    }\n\n    public static void main(String[] args) throws IOException {\n//        System.out.println("------------------");\n////        System.out.println(isTablieExit("0408:stu5"));\n//        System.out.println("------------------");\n        //创建表测试\n//        createTable("0408:stu5","info1","info2");\n//        createTable("0408:stu5","info1");\n        //删除表\n//        dropTable("0408:stu5");\n//        //创建命名空间\n////        createNameSpace("0408");\n\n////        插入数据测试\n//        putData("0408:stu5","1001","info1","name","lisi");\n//        putData("0408:stu5","1001","info1","age","12");\n//        //获取单行数据\n//        getData("0408:stu5","1001","info1","name");\n        //获取全表数据\n        scanData("0408:stu5");\n        System.out.println("------------------");\n//        System.out.println(isTablieExit("0408:stu5"));\n//        System.out.println("------------------");\n\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n\n\n> 扩展：delete删除实际上也是put操作,他给数据put一个标记显示为删除\n\n\n# 整合MR\n\n步骤：\n\n 1. 查看hbase的mr任务执行命令 (rm要操作hbse必须要持有这些jar包)\n    \n    在hbase2.0后要将hbase-mapreduce也添加到pom依赖即可\n    \n    bin/hbase mapredcp #显示执行的jar包\n    \n    \n    1\n    \n\n 2. 配置环境变量 在hadoop-env.sh\n    \n    # 配置mr整合到hbase\n    export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:/opt/module/hbase/lib/*\n    \n    \n    1\n    2\n    \n    \n    分发 重启\n\n 3. 运行官方案例\n    \n    #统计条数\n    /opt/module/hadoop-3.1.4/bin/yarn jar lib/hbase-server-1.3.1.jar rowcounter stu\n    \n    \n    1\n    2\n    \n    \n    #mr本地数据导入到 HBase\n    /opt/module/hadoop-3.1.4/bin/yarn jar lib/hbase-server-1.3.1.jar importtsv  -Dimporttsv.columns=HBASE_ROW_KEY,info:name,info:color fruit hdfs://hadoop111:9000/fruit.tsv\n    \n    \n    1\n    2\n    \n\n\n# 整合Hive\n\nhbase和hive比较：\n\nhabase是用来存储数据的,面向列族存储的非关系型数据库,存储结构化和非结构化的数据,适用于单表查询,基于hdfs,延迟低,接入在线业务适用(类似 es、redis)\n\nHive是分析清洗数据的,做数据仓库。\n\n步骤：\n\n * 配置环境 (也可以设置临时)\n   \n   export HBASE_HOME=/opt/module/hbase\n   export HIVE_HOME=/opt/module/hive312\n   \n   \n   1\n   2\n   \n\n * 创建软链接\n   \n   ln -s $HBASE_HOME/lib/hbase-common-1.3.1.jar $HIVE_HOME/lib/hbase-common-1.3.1.jar\n   ln -s $HBASE_HOME/lib/hbase-server-1.3.1.jar $HIVE_HOME/lib/hbase-server-1.3.1.jar\n   ln -s $HBASE_HOME/lib/hbase-client-1.3.1.jar $HIVE_HOME/lib/hbase-client-1.3.1.jar\n   ln -s $HBASE_HOME/lib/hbase-protocol-1.3.1.jar $HIVE_HOME/lib/hbase-protocol-1.3.1.jar\n   ln -s $HBASE_HOME/lib/hbase-it-1.3.1.jar $HIVE_HOME/lib/hbase-it-1.3.1.jar\n   ln -s $HBASE_HOME/lib/htrace-core-3.1.0-incubating.jar $HIVE_HOME/lib/htrace-core-3.1.0-incubating.jar\n   ln -s $HBASE_HOME/lib/hbase-hadoop2-compat-1.3.1.jar $HIVE_HOME/lib/hbase-hadoop2-compat-1.3.1.jar\n   ln -s $HBASE_HOME/lib/hbase-hadoop-compat-1.3.1.jar $HIVE_HOME/lib/hbase-hadoop-compat-1.3.1.jar\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 在hive-site.xml中修改zk属性\n   \n   <property>\n    <name>hive.zookeeper.quorum</name>\n    <value>hadoop111,hadoop112,hadoop113</value>\n    <description>The list of ZooKeeper servers to talk to. This is \n   only needed for read/write locks.</description>\n   </property>\n   <property>\n    <name>hive.zookeeper.client.port</name>\n    <value>2181</value>\n    <description>The port of ZooKeeper servers to talk to. This is \n   only needed for read/write locks.</description>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n\n# 优化\n\n高可用：自带高可用\n\n预分区：数据量(未来半年一年)、机器规模\n\n * 手动设定预分区\n\n * 生成 16 进制序列预分区\n\n * 按照文件中设置的规则预分区 create \'staff3\',\'partition3\',SPLITS_FILE => \'splits.txt\'\n\n * 使用javaApi创建预分区\n   \n   //自定义算法，产生一系列 hash 散列值存储在二维数组中\n   byte[][] splitKeys = 某个散列值函数\n   //创建 HbaseAdmin 实例\n   HBaseAdmin hAdmin = new HBaseAdmin(HbaseConfiguration.create());\n   //创建 HTableDescriptor 实例\n   HTableDescriptor tableDesc = new HTableDescriptor(tableName);\n   //通过 HTableDescriptor 实例和散列值二维数组创建带有预分区的 Hbase 表\n   hAdmin.createTable(tableDesc, splitKeys);\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\nRowKey设计:尽量均匀散落在每个分区\n\n(散列性,唯一性,长度原则(70-100))\n\n * 生产随机数、hash、散列值\n * 字符反转\n * 字符串拼接\n\n内存优化：不建议分配非常大的堆内存\n\n基础优化：\n\n * 允许在hdfs文件中追加内容\n * 优化datanode允许的最大文件打开数\n * 优化延迟高的数据操作的等待时间\n * 优化数据的写入效率\n * 设置rpc监听数量\n * 优化hstor文件大小\n * 优化hbase客户端缓存\n * 指定scan.next扫描所获取的行数\n * flush、compact、split机制\n\nkylin可以做预处理查询分析hive的结果存储到hbase到时就可以直接查。\n\n\n# 踩坑\n\nhadoop中core-site.xml和master端口不一致问题\n\nmaster.HMaster: Failed to become active master\njava.net.ConnectException: Call From axcmsm111/192.168.67.111 to hadoop111:9000 failed on connection exception: java.net.ConnectException: 拒绝连接; For more details see:  http://wiki.apache.org/hadoop/ConnectionRefused\n\n\n1\n2\n\n\n在hadoop的core-site.xml 中添加以下内容\n\n\x3c!-- 整合 Hbase --\x3e\n<property>\n<name>fs.defaultFS</name>\n<value>hdfs://hadoop111:9000/HBase</value>\n</property>\n\n\n1\n2\n3\n4\n5\n\n\n分发配置文件\n\n重启hadoop集群',normalizedContent:'# 简介\n\nhbase 是一种分布式、可扩展、支持海量数据存储nosql数据库\n\n原谷歌三大论文之一bigtable演化成hbase (gfs是hdfs,mr就是mr)\n\n基于hdfs,可以实现随机写操作。秒级响应(方式合久必分，分久必合)\n\n数据结构：逻辑结构表，物理存储结构kv\n\n逻辑结构：元数据\n\n将很多列分出来组成一个列族,从上往下叫row key 按照字典序排序，而且唯一,不唯一就是覆盖。\n\n(宽表)纵向切分叫列族,(长表)横向切分的叫region，切分后都放置不同文件夹。实际数据存储到store里面\n\n存储结构：\n\n对于每一个列:都存储了列族、列名、rowkey、timestamp时间戳(版本号)、操作类型、值\n\n> 最后会校验时间戳(返回时间最大的)，如果不一致操作会出问题\n> \n> 删除操作:rowkey相同,类型是delet,然后比对时间戳(如果是最大)执行成功,返回删除\n> \n> 不会立马删除\n\n数据模式：\n\n * name space :命名空间 类似database\n   \n   > 默认：hbase(内置表) 、default(默认用户使用的命名空间)\n\n * region：表 的切片(小表) 、定义列族即可、列是动态增加的\n\n * row：每行数据又一个rowkey(字典序)和多个列组成\n\n * column:每个列需要指定列族与列限定符\n\n * time stamp:时间戳标识版本\n\n * cell:唯一确认的单元(最小)\n\n基础架构：\n\nmaster操作表的ddl，zookeeper管理,其中storefile存储到store，store存储到region,region存储到regionserver 分布式，\n\nregionserver作用:dml\n\n * data:get、put、delete\n * region：splitregion、compactregin\n\nmaster作用：ddl\n\n * table:create、delete、alter\n * regionserver：分配region到每个regionserver,监控regionserver状态\n\n> 自带高可用(俩个master)\n\n> 最终文件存储到hdfs,而hdfs存储到datanode中，而datanode存储到linux中,然后存储到磁盘上。\n\n\n# 入门\n\n部署：\n\n 1. 上次安装包\n\n 2. 解压改名\n\n 3. 修改配置文件\n    \n    * regionservers 集群\n      \n      hadoop111\n      hadoop112\n      hadoop113\n      \n      \n      1\n      2\n      3\n      \n    \n    * hbase-env.sh 配置脚本执行文件\n      \n      #查看javahome\n      [hadoop101@axcmsm111 conf]$ echo $java_home\n      /opt/module/jdk1.8.0_141\n      #配置java环境变量\n      export java_home=/opt/module/jdk1.8.0_141\n      #注释掉(可选,jdk1.7可以删掉)\n      # export hbase_master_opts="$hbase_master_opts -xx:permsize=128m -xx:maxpermsize=128m"\n      # export hbase_regionserver_opts="$hbase_regionserver_opts -xx:permsize=128m -xx:maxpermsize=128m"\n      \n      #静止启动默认的zk\n      export hbase_manages_zk=false\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      \n    \n    * hbase-site.xml\n      \n      <configuration>\n      <property>\n      <name>hbase.rootdir</name>\n      <value>hdfs://hadoop111:9000/hbase</value>\n      </property>\n      <property>\n      <name>hbase.cluster.distributed</name>\n      <value>true</value>\n      </property>\n       \x3c!-- 0.98 后的新变动，之前版本没有.port,默认端口为 60000 --\x3e\n      <property>\n      <name>hbase.master.port</name>\n      <value>16000</value>\n      </property>\n      <property> \n      <name>hbase.zookeeper.quorum</name>\n       <value>hadoop111,hadoop112,hadoop113</value>\n      </property>\n      <property> \n      <name>hbase.zookeeper.property.datadir</name>\n       <value>/opt/module/zookeeper-3.6.3/zkdata</value>\n      </property>\n      </configuration>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      \n\n 4. 配置软链接\n    \n    ln -s /opt/module/hadoop-3.1.4/etc/hadoop/core-site.xml /opt/module/hbase/conf/core-site.xml\n    \n    ln -s /opt/module/hadoop-3.1.4/etc/hadoop/hdfs-site.xml /opt/module/hbase/conf/hdfs-site.xml\n    \n    \n    1\n    2\n    3\n    \n\n 5. 分发脚本\n    \n     xsync hbase/\n    \n    \n    1\n    \n\n 6. 启动 端口16010\n    \n    群起\n     ./bin/start-hbase.sh #第一次可能会又延迟\n     \n    #单节点\n    bin/hbase-daemon.sh start master #启动ygmaster\n    bin/hbase-daemon.sh start regionserver #启动多个\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 7. 关闭\n    \n    群关\n    ./bin/stop-hbase.sh \n    \n    \n    1\n    2\n    \n\n命令行操作：bin/hbase shell 进入命令行 help 帮助 list 查看列表\n\n提示：删除 ctrl+delete 不需要分号结尾 tap提示\n\nhelp查看\n\n group name: ddl\n  commands: alter, alter_async, alter_status, create, describe, disable, disable_all, drop, drop_all, enable, enable_all, exists, get_table, is_disabled, is_enabled, list, locate_region, show_filters\n  group name: dml\n  commands: append, count, delete, deleteall, get, get_counter, get_splits, incr, put, scan, truncate, truncate_preserve\n  ....\n\n\n1\n2\n3\n4\n5\n\n\n表操作：表名("库名:表名") 列("列族:列")\n\n * 创建表 create 表名,列族1，列族2，3.....(默认存储到difault命名空间)\n * 查看表结构 describe \'表名\'\n * 修改表信息 alter ’表名‘，{name=>\'列族\',versions=>3}\n * disable ’表名‘ 先下线 再删除表 drop ’表名‘\n * 查看表信息 scan \'student\'\n * 创建命名空间：create_namespace \'名字\'\n * 查看命名空间：list_namespace\n * 指定命名空间创建表：create ”命名空间名:表名“,"列族“\n * 删除命名空间：先下线表，再删除表，再向删除命名空间(drop_namespace)(也可以设置存储多少表)\n * 刷写磁盘 flush ”表名“\n\ndml:(看时间戳)\n\n * 增 ：put "库:表"，"rowkey","列族:列","数据"\n\n * 查\n   \n   * scan ”表名“ (可以加过滤条件等等...)\n   \n   * get "表名","rowkey"\n     \n     > 可以指定列名,列族\n\n * 改：put "库:表"，"rowkey","列族:列","数据"\n\n * 删：\n   \n   * delete ”表","rowkey”,”列“\n     \n     > 也可以按照时间戳删除(时间戳比他大的删除)\n   \n   * deleteall "表"，"rowkey"\n   \n   * truncate “表” 清空表\n\n\n# 进阶\n\n架构原理:\n\n数据最后存储到hdfs的datanode中,hmaster ddl管理表,管理hregionserver,zk分担工作量，hregionserver包含hlog(预写入日志)、多个hregin(按行切分,里面包含多个列族sotre.memstore(刷写),stroefilme(文件))里面的存储格式是hfile(键值对),列族是逻辑结构真实文件夹是store\n\nzk分担了hmaster与客户端的交互，l客户端直接跟zk交互，\n\n如果操作是dml找zk,ddl还是需要跟hmaster交互\n\n> memstore刷鞋过程要经过跟hdfs客户端交互最后刷写到datanode\n> \n> 也就是磁盘上。\n\n写流程：regionserver简称rs\n\n客户端向zk请求meta(结构)表所在的的rs(谁在维护),假设zk返回hadoop111(它在维护)，客户端再向hbase中请求meta(表信息),hbase返回meta,获取rs(数据所在位置),做meta缓存，再发送put请求,先写入预写日志,再写入memstore缓存,再写入storefile文件。\n\n\n\n> 在0.9之前还有-root-表 其他表往后推一步。\n> \n> 现在改变了，在切分之前会先判断是否是meta表\n\n刷写流程：\n\nrs级别：里面有多个hr\n\n默认占超过rs的堆内存的40%刷写到磁盘(内存堵塞行为)\n\n安全模式,占堆内存的95%(也就是0.38)也开始刷写(没有堵塞直接刷写,一边写入缓存，一边刷写磁盘,当写入缓存速度比写磁盘快,到堆内存40%，进入堵塞,不要往内存写,不然爆了,等到0.38以下再开启写入缓存)\n\n当内存最后一次操作时间,过了一个小时(认为没有操作,也会进行刷写)\n\nhr级别：hr中的memstore\n\n当前的memstore到达了128m,单个进行刷写(里面还有wal预刷写操作)\n\n读流程：\n\n先读内存，再找zk,找meta位置,请求meta查找rs位置,缓存位置,再请求对应rs,其中rs中有一块block cache用来缓存最近读取的数据(遵循最近最少原则,满内存就开删一部分),读取这个缓存，也去读磁盘数据,然后进行比对时间戳。\n\n> 数据量大的几乎都是读磁盘的,所以hbase是一个读比写慢的框架\n\n合并数据：storefile compaction\n\n * minor compaction 小合并(不删数据)\n\n * major compaction 全局合并(合并成一个) compact \'表名\'\n   \n   > 生产情况建议设置为0,关闭自动合并,以为是重写,先读再写,影响业务，建议在空闲时间,手动全局合并\n   > \n   > 全局合并后应该需要等几分钟才会自动删除源文件\n\n切片流程：region split (默认10g)\n\n0.94之前到达之后才且,0.94后，自动按照缓存最大值切分为2,一直下去，会操作数据倾斜问题,所以在建表时就要做预分区。\n\n到达值,按照整个rowkey一刀俩断\n\n> 官方建议，经量使用一个列族(使用多个尽量保证数据同步增长,防止小文件)\n\n\n# api\n\n连接对象:\n\n * 获取ddl对象 admin对象\n * 获取dml对象 table对象\n   * 插入数据\n   * 查数据(get)\n   * 查数据(scan)\n   * 删除数据\n\npackage com.axcmsm.test;\nimport org.apache.hadoop.conf.configuration;\nimport org.apache.hadoop.hbase.*;\nimport org.apache.hadoop.hbase.client.*;\nimport org.apache.hadoop.hbase.util.bytes;\nimport java.io.ioexception;\nimport java.util.iterator;\n\n/*\n * ddl：\n * 1判断表是否存在\n * 1.创建表\n * 3.创建命名空间\n * 4.删除表\n *\n * dml:\n * 1.插入数据\n * 2.查数据(get)\n * 3.查数据(scan)\n * 4.删除数据\n *\n *\n * */\npublic class testapi {\n    private static connection connection = null;\n    private static admin admin = null;\n\n    static {\n        //        hbaseconfiguration conf = new hbaseconfiguration();\n        configuration conf = hbaseconfiguration.create();\n        //连接zk\n        conf.set("hbase.zookeeper.quorum", "hadoop111,hadoop112,hadoop113");\n//        hbaseadmin admin = new hbaseadmin(conf);\n        try {\n//           创建连接对象\n            connection = connectionfactory.createconnection(conf);\n        } catch (ioexception e) {\n            e.printstacktrace();\n        }\n        try {\n//            创建admin对象\n            admin = connection.getadmin();\n        } catch (ioexception e) {\n            e.printstacktrace();\n        }\n    }\n\n\n    //    1判断表是否存在\n    public static boolean istablieexit(string tablename) throws ioexception {\n        boolean flag = admin.tableexists(tablename.valueof(tablename));\n        return flag;\n    }\n\n    //关闭方法\n    public static void close() {\n        if (admin != null) {\n            try {\n                admin.close();\n            } catch (ioexception e) {\n                e.printstacktrace();\n            }\n        }\n        if (connection != null) {\n            try {\n                connection.close();\n            } catch (ioexception e) {\n                e.printstacktrace();\n            }\n        }\n    }\n\n//    创建表\n    public static void createtable(string tablename,string... cfs) throws ioexception {\n        if (cfs.length<=0){\n            system.out.println("请设置列族信息");\n            return;\n        }\n        if (istablieexit(tablename)){\n            system.out.println("表已经存在");\n            return;\n        }\n        htabledescriptor table = new htabledescriptor(tablename.valueof(tablename));\n        //循环添加列族\n        for (string cf : cfs) {\n            //创建列族描述器\n            hcolumndescriptor family = new hcolumndescriptor(cf);\n            table.addfamily(family);//添加列族信息\n        }\n        admin.createtable(table);\n    }\n\n    //删除表\n    public static void droptable(string tablename) throws ioexception {\n        if (!istablieexit(tablename)) {\n            system.out.println("不存在");\n            return;\n        }\n        //下线\n        admin.disabletable(tablename.valueof(tablename));\n        //删除表\n        admin.deletetable(tablename.valueof(tablename));\n\n    }\n    //创建命名空间\n    public static void createnamespace(string ns){\n        try {\n            admin.createnamespace(namespacedescriptor.create(ns).build());\n        }catch (namespaceexistexception e) {\n            system.out.println(e+"命名空间已存在！！！！！！！！！！");\n        }\n        catch (ioexception e) {\n            e.printstacktrace();\n        }\n    }\n\n    //插入数据\n    public static void putdata(string tablename,string rowkey,string cf,string cn,string value) throws ioexception {\n        table table = connection.gettable(tablename.valueof(tablename));\n        put put = new put(bytes.tobytes(rowkey));//传入rowkey\n        put.addcolumn(bytes.tobytes(cf), bytes.tobytes(cn), bytes.tobytes(value));\n        table.put(put);//插入数据\n        //关闭表连接\n        table.close();\n    }\n\n    //获取数据\n    public static void getdata(string tablename,string rowkey,string cf,string cn) throws ioexception {\n        table table = connection.gettable(tablename.valueof(tablename));\n        //指定rowkey\n        get get = new get(bytes.tobytes(rowkey));\n        //        指定列族  (不指定默认按row获取)\n//        get.addfamily(bytes.tobytes(cf));\n        //指定列族和列\n        get.addcolumn(bytes.tobytes(cf),bytes.tobytes(cn));\n        //获取数据的半本数\n        get.setmaxversions(5);//最大半本数\n        //  解析\n        result result = table.get(get);\n        for (cell cell : result.rawcells()) {\n            system.out.println("cf:" + bytes.tostring(cellutil.clonefamily(cell)) +\n                    ", cn: " + bytes.tostring(cellutil.clonequalifier(cell))+\n                    ", value: "+bytes.tostring(cellutil.clonevalue(cell)));\n        }\n        table.close();\n    }\n\n    //获取数据\n    public static void scandata(string tablename) throws ioexception {\n        table table = connection.gettable(tablename.valueof(tablename));\n\n        //空参全表  可以传入rowkey 和列族 还有过滤器\n        resultscanner scanner = table.getscanner(new scan(bytes.tobytes("1001")));\n        for (result result : scanner) {\n            //解析result\n            for (cell cell : result.rawcells()) {\n                system.out.println("rk:"+bytes.tostring(cellutil.clonerow(cell))+\n                        ",cf:" + bytes.tostring(cellutil.clonefamily(cell)) +\n                        ", cn: " + bytes.tostring(cellutil.clonequalifier(cell))+\n                        ", value: "+bytes.tostring(cellutil.clonevalue(cell)));\n            }\n        }\n        //关闭连接\n        table.close();\n    }\n\n    //删除数据\n    public static void deletedate(string tablename,string rowkey,string cf,string cn) throws ioexception {\n        table table = connection.gettable(tablename.valueof(tablename));\n\n        // 只传入rk 就相当于deleteall\n        delete delete = new delete(bytes.tobytes(rowkey));\n        //指定列族、列删除新版本   慎用 你删除新版本旧版本又出来了\n//        delete.addcolumn(bytes.tobytes(cf),bytes.tobytes(cn));\n        //指定列族、列删除全部版本\n//        delete.addcolumns(bytes.tobytes(cf),bytes.tobytes(cn));\n        //指定列族\n        delete.addfamily(bytes.tobytes(cf));\n        table.delete(delete);\n        table.close();\n\n    }\n\n    public static void main(string[] args) throws ioexception {\n//        system.out.println("------------------");\n////        system.out.println(istablieexit("0408:stu5"));\n//        system.out.println("------------------");\n        //创建表测试\n//        createtable("0408:stu5","info1","info2");\n//        createtable("0408:stu5","info1");\n        //删除表\n//        droptable("0408:stu5");\n//        //创建命名空间\n////        createnamespace("0408");\n\n////        插入数据测试\n//        putdata("0408:stu5","1001","info1","name","lisi");\n//        putdata("0408:stu5","1001","info1","age","12");\n//        //获取单行数据\n//        getdata("0408:stu5","1001","info1","name");\n        //获取全表数据\n        scandata("0408:stu5");\n        system.out.println("------------------");\n//        system.out.println(istablieexit("0408:stu5"));\n//        system.out.println("------------------");\n\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n\n\n> 扩展：delete删除实际上也是put操作,他给数据put一个标记显示为删除\n\n\n# 整合mr\n\n步骤：\n\n 1. 查看hbase的mr任务执行命令 (rm要操作hbse必须要持有这些jar包)\n    \n    在hbase2.0后要将hbase-mapreduce也添加到pom依赖即可\n    \n    bin/hbase mapredcp #显示执行的jar包\n    \n    \n    1\n    \n\n 2. 配置环境变量 在hadoop-env.sh\n    \n    # 配置mr整合到hbase\n    export hadoop_classpath=$hadoop_classpath:/opt/module/hbase/lib/*\n    \n    \n    1\n    2\n    \n    \n    分发 重启\n\n 3. 运行官方案例\n    \n    #统计条数\n    /opt/module/hadoop-3.1.4/bin/yarn jar lib/hbase-server-1.3.1.jar rowcounter stu\n    \n    \n    1\n    2\n    \n    \n    #mr本地数据导入到 hbase\n    /opt/module/hadoop-3.1.4/bin/yarn jar lib/hbase-server-1.3.1.jar importtsv  -dimporttsv.columns=hbase_row_key,info:name,info:color fruit hdfs://hadoop111:9000/fruit.tsv\n    \n    \n    1\n    2\n    \n\n\n# 整合hive\n\nhbase和hive比较：\n\nhabase是用来存储数据的,面向列族存储的非关系型数据库,存储结构化和非结构化的数据,适用于单表查询,基于hdfs,延迟低,接入在线业务适用(类似 es、redis)\n\nhive是分析清洗数据的,做数据仓库。\n\n步骤：\n\n * 配置环境 (也可以设置临时)\n   \n   export hbase_home=/opt/module/hbase\n   export hive_home=/opt/module/hive312\n   \n   \n   1\n   2\n   \n\n * 创建软链接\n   \n   ln -s $hbase_home/lib/hbase-common-1.3.1.jar $hive_home/lib/hbase-common-1.3.1.jar\n   ln -s $hbase_home/lib/hbase-server-1.3.1.jar $hive_home/lib/hbase-server-1.3.1.jar\n   ln -s $hbase_home/lib/hbase-client-1.3.1.jar $hive_home/lib/hbase-client-1.3.1.jar\n   ln -s $hbase_home/lib/hbase-protocol-1.3.1.jar $hive_home/lib/hbase-protocol-1.3.1.jar\n   ln -s $hbase_home/lib/hbase-it-1.3.1.jar $hive_home/lib/hbase-it-1.3.1.jar\n   ln -s $hbase_home/lib/htrace-core-3.1.0-incubating.jar $hive_home/lib/htrace-core-3.1.0-incubating.jar\n   ln -s $hbase_home/lib/hbase-hadoop2-compat-1.3.1.jar $hive_home/lib/hbase-hadoop2-compat-1.3.1.jar\n   ln -s $hbase_home/lib/hbase-hadoop-compat-1.3.1.jar $hive_home/lib/hbase-hadoop-compat-1.3.1.jar\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 在hive-site.xml中修改zk属性\n   \n   <property>\n    <name>hive.zookeeper.quorum</name>\n    <value>hadoop111,hadoop112,hadoop113</value>\n    <description>the list of zookeeper servers to talk to. this is \n   only needed for read/write locks.</description>\n   </property>\n   <property>\n    <name>hive.zookeeper.client.port</name>\n    <value>2181</value>\n    <description>the port of zookeeper servers to talk to. this is \n   only needed for read/write locks.</description>\n   </property>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n\n# 优化\n\n高可用：自带高可用\n\n预分区：数据量(未来半年一年)、机器规模\n\n * 手动设定预分区\n\n * 生成 16 进制序列预分区\n\n * 按照文件中设置的规则预分区 create \'staff3\',\'partition3\',splits_file => \'splits.txt\'\n\n * 使用javaapi创建预分区\n   \n   //自定义算法，产生一系列 hash 散列值存储在二维数组中\n   byte[][] splitkeys = 某个散列值函数\n   //创建 hbaseadmin 实例\n   hbaseadmin hadmin = new hbaseadmin(hbaseconfiguration.create());\n   //创建 htabledescriptor 实例\n   htabledescriptor tabledesc = new htabledescriptor(tablename);\n   //通过 htabledescriptor 实例和散列值二维数组创建带有预分区的 hbase 表\n   hadmin.createtable(tabledesc, splitkeys);\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\nrowkey设计:尽量均匀散落在每个分区\n\n(散列性,唯一性,长度原则(70-100))\n\n * 生产随机数、hash、散列值\n * 字符反转\n * 字符串拼接\n\n内存优化：不建议分配非常大的堆内存\n\n基础优化：\n\n * 允许在hdfs文件中追加内容\n * 优化datanode允许的最大文件打开数\n * 优化延迟高的数据操作的等待时间\n * 优化数据的写入效率\n * 设置rpc监听数量\n * 优化hstor文件大小\n * 优化hbase客户端缓存\n * 指定scan.next扫描所获取的行数\n * flush、compact、split机制\n\nkylin可以做预处理查询分析hive的结果存储到hbase到时就可以直接查。\n\n\n# 踩坑\n\nhadoop中core-site.xml和master端口不一致问题\n\nmaster.hmaster: failed to become active master\njava.net.connectexception: call from axcmsm111/192.168.67.111 to hadoop111:9000 failed on connection exception: java.net.connectexception: 拒绝连接; for more details see:  http://wiki.apache.org/hadoop/connectionrefused\n\n\n1\n2\n\n\n在hadoop的core-site.xml 中添加以下内容\n\n\x3c!-- 整合 hbase --\x3e\n<property>\n<name>fs.defaultfs</name>\n<value>hdfs://hadoop111:9000/hbase</value>\n</property>\n\n\n1\n2\n3\n4\n5\n\n\n分发配置文件\n\n重启hadoop集群',charsets:{cjk:!0}},{title:"Presto笔记",frontmatter:{title:"Presto笔记",date:"2021-10-14T00:00:00.000Z",tags:["Presto"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/22.Presto%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html",relativePath:"view/docs/笔记/22.Presto即席查询.md",key:"v-1d22ef68",path:"/view/docs/%E7%AC%94%E8%AE%B0/22.Presto%E5%8D%B3%E5%B8%AD%E6%9F%A5%E8%AF%A2.html",headers:[{level:2,title:"Presto简介",slug:"presto简介",normalizedTitle:"presto简介",charIndex:2},{level:2,title:"架构",slug:"架构",normalizedTitle:"架构",charIndex:104},{level:2,title:"安装部署",slug:"安装部署",normalizedTitle:"安装部署",charIndex:369},{level:3,title:"服务端",slug:"服务端",normalizedTitle:"服务端",charIndex:418},{level:3,title:"客户端",slug:"客户端",normalizedTitle:"客户端",charIndex:2296},{level:2,title:"优化",slug:"优化",normalizedTitle:"优化",charIndex:3850},{level:3,title:"数据存储",slug:"数据存储",normalizedTitle:"数据存储",charIndex:3857},{level:3,title:"查询SQL",slug:"查询sql",normalizedTitle:"查询sql",charIndex:3928},{level:3,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:4149}],lastUpdated:"2021/10/21 上午8:52:27",headersStr:"Presto简介 架构 安装部署 服务端 客户端 优化 数据存储 查询SQL 注意事项",content:"# Presto简介\n\n是开源分布式SQL查询引擎，数据量GB到PB字节之间，主要处理秒级查询的场景。\n\n> 充分利用内存，没有用到预计算\n\n注意：它只负责计算查询，不负责存储，不支持在线事务()。\n\n\n# 架构\n\n\n\n优点：\n\n * Presto基于内存运算，减少IO,计算更快\n * 能够对接多种数据源，跨数据源联表查询，例：hive和mysql连表\n\n缺点：\n\n * 不是一下子全部放入内存，是边度数据边计算，再清内存，再读再计算。\n * 当链表查，可能参数大量临时表，查询会变慢。\n\n> 可以在hive先把需要查询的表join到一起形成大宽表，迎合其特点。\n\n与impala比较:\n\n> Impala性能稍领先于Presto，但是Presto在数据源支持上非常丰富，包括Hive、图数据库、传统关系型数据库、Redis等\n\n\n# 安装部署\n\n官网地址：https://prestodb.github.io/\n\n下载地址\n\n\n# 服务端\n\n 1. 上传解压改名 presto-server-0.196.tar.gz\n\n 2. 创建配置目录\n    \n     mkdir data\n     mkdir etc\n     vim etc/jvm.config\n     添加\n     \n    -server\n    -Xmx16G\n    -XX:+UseG1GC\n    -XX:G1HeapRegionSize=32M\n    -XX:+UseGCOverheadLimit\n    -XX:+ExplicitGCInvokesConcurrent\n    -XX:+HeapDumpOnOutOfMemoryError\n    -XX:+ExitOnOutOfMemoryError\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    \n\n 3. 配置数据源\n    \n     mkdir etc/catalog\n     cd etc/catalog\n     vim hive.properties \n     \n    #添加\n    connector.name=hive-hadoop2\n    hive.metastore.uri=thrift://node1:9083\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n    \n    > 如果配置别的数据源请参照官网，然后把对应的参数copy下来稍作修改\n\n 4. 分发\n    \n    xsync presto\n    \n    \n    1\n    \n\n 5. 修改node id\n    \n    vim /opt/module/presto/etc/node.properties\n    #添加 #node.id   三台节点的node.id要不一样 改个数字就可以\n    \n    node.environment=production\n    node.id=ffffffff-ffff-ffff-ffff-ffffffffffff1\n    node.data-dir=/opt/module/presto/data\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 6. 配置 worker\n    \n    vim /opt/module/presto/etc/config.properties\n    \n    #主节点\n    coordinator=true\n    node-scheduler.include-coordinator=false\n    http-server.http.port=8881\n    query.max-memory=50GB\n    discovery-server.enabled=true\n    discovery.uri=http://node1:8881\n    \n    #其他节点\n    coordinator=false\n    http-server.http.port=8881\n    query.max-memory=50GB\n    discovery.uri=http://node1:8881\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n 7. 启动\n    \n    > 启动之前需要先启动hive\n    > \n    > nohup bin/hive --service metastore &\n    > \n    > \n    > 1\n    \n    再启动presto\n    \n     bin/launcher run  #前台启动\n     bin/launcher start  #后台启动\n     #或者使用 ssh脚本 \n     xcall.sh /opt/module/presto/bin/launcher start\n    \n    \n    1\n    2\n    3\n    4\n    \n\n\n# 客户端\n\n下载Presto的客户端：https://repo1.maven.org/maven2/com/facebook/presto/presto-cli/0.196/presto-cli-0.196-executable.jar\n\nshell\n\n * 上传 改名 添加执行权限\n   \n    mv presto-cli-0.196-executable.jar  prestocli\n    chmod +x prestocli\n   \n   \n   1\n   2\n   \n\n * 启动\n   \n   # 执行\n   ./prestocli --server node1:8881 --catalog hive --schema default\n   \n   \n   1\n   2\n   \n\n * 使用\n   \n   #查看数据库\n   show schemas;\n   #切换\n   use gmall;\n   #查看表\n   show tables;\n   > 可以按回车换行，空格翻页\n   > 按 q 退出当前查询\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n   \n   如果查看列式存储+lzo格式的文件需要把loz的jar包拷贝到plugin的对应目录下\n   \n   cp /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar /opt/module/presto/plugin/hive-hadoop2/\n   \n   \n   1\n   \n   \n   分发这个jar包 三台都需要配置\n   \n   xsync /opt/module/presto/plugin/hive-hadoop2/hadoop-lzo-0.4.20.jar\n   \n   \n   1\n   \n   \n   > presto不支持查询lzo压缩文件，如果是查询全lzo文件，需要修改hadoop-lzo代码\n\n可视化\n\n * 上传解压 yanagishima-18.0.zip\n   \n   #如果最小安装 需要先安装unzip:   xcall.sh sudo yum -y install unzip\n   unzip yanagishima-18.0.zip -d /opt/moudle\n   \n   \n   1\n   2\n   \n\n * 修改配置文件\n   \n   vim conf/yanagishima.properties\n   #添加下面的配置\n   jetty.port=7080\n   presto.datasources=hadoop101-presto  #自己起 但是下面用到都得改改\n   presto.coordinator.server.hadoop101-presto=http://node1:8881\n   catalog.hadoop101-presto=hive\n   schema.hadoop101-presto=default\n   sql.query.engines=presto\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 启动：/opt/module/yanagishima-18.0\n   \n   nohup bin/yanagishima-start.sh >y.log 2>&1 &\n   \n   \n   1\n   \n\n * 访问页面的7080端口 写sql即可\n   \n   > 注意：执行sql语句时不能带；结尾.....\n\n\n# 优化\n\n\n# 数据存储\n\n> 指的是hive表\n\n * 合理设置分区\n * 使用列式存储：建议采用ORC\n * 使用压缩：建议采用Snappy压缩\n\n\n# 查询SQL\n\n * 只选择使用的字段。\n\n * 能用分区做过滤条件，先用分区做过滤条件\n\n * Group BY 语句优化：按照积数降序排列\n   \n   [GOOD]: SELECT GROUP BY uid, gender\n   [BAD]:  SELECT GROUP BY gender, uid\n   \n   \n   1\n   2\n   \n\n * Order by时使用Limit\n\n * 使用Join语句时将大表放在左边\n\n\n# 注意事项\n\n * 字段名的引用：\n   \n   MySQL对字段加反引号`、Presto对字段加双引号分割\n   #如果不是关键字，就可以不加\n   \n   \n   1\n   2\n   \n\n * 时间函数\n   \n   对于Timestamp，需要进行比较的时候，需要添加Timestamp关键字，而MySQL中对Timestamp可以直接进行比较。\n   /*MySQL的写法*/\n   SELECT t FROM a WHERE t > '2017-01-01 00:00:00'; \n   \n   /*Presto中的写法*/\n   SELECT t FROM a WHERE t > timestamp '2017-01-01 00:00:00';\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 不支持INSERT OVERWRITE语法\n   \n   只能先delete，然后insert into\n   \n   \n   1\n   \n\n * PARQUET格式\n   \n   支持查询，但不支持insert。\n   \n   \n   1\n   ",normalizedContent:"# presto简介\n\n是开源分布式sql查询引擎，数据量gb到pb字节之间，主要处理秒级查询的场景。\n\n> 充分利用内存，没有用到预计算\n\n注意：它只负责计算查询，不负责存储，不支持在线事务()。\n\n\n# 架构\n\n\n\n优点：\n\n * presto基于内存运算，减少io,计算更快\n * 能够对接多种数据源，跨数据源联表查询，例：hive和mysql连表\n\n缺点：\n\n * 不是一下子全部放入内存，是边度数据边计算，再清内存，再读再计算。\n * 当链表查，可能参数大量临时表，查询会变慢。\n\n> 可以在hive先把需要查询的表join到一起形成大宽表，迎合其特点。\n\n与impala比较:\n\n> impala性能稍领先于presto，但是presto在数据源支持上非常丰富，包括hive、图数据库、传统关系型数据库、redis等\n\n\n# 安装部署\n\n官网地址：https://prestodb.github.io/\n\n下载地址\n\n\n# 服务端\n\n 1. 上传解压改名 presto-server-0.196.tar.gz\n\n 2. 创建配置目录\n    \n     mkdir data\n     mkdir etc\n     vim etc/jvm.config\n     添加\n     \n    -server\n    -xmx16g\n    -xx:+useg1gc\n    -xx:g1heapregionsize=32m\n    -xx:+usegcoverheadlimit\n    -xx:+explicitgcinvokesconcurrent\n    -xx:+heapdumponoutofmemoryerror\n    -xx:+exitonoutofmemoryerror\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    \n\n 3. 配置数据源\n    \n     mkdir etc/catalog\n     cd etc/catalog\n     vim hive.properties \n     \n    #添加\n    connector.name=hive-hadoop2\n    hive.metastore.uri=thrift://node1:9083\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    \n    \n    > 如果配置别的数据源请参照官网，然后把对应的参数copy下来稍作修改\n\n 4. 分发\n    \n    xsync presto\n    \n    \n    1\n    \n\n 5. 修改node id\n    \n    vim /opt/module/presto/etc/node.properties\n    #添加 #node.id   三台节点的node.id要不一样 改个数字就可以\n    \n    node.environment=production\n    node.id=ffffffff-ffff-ffff-ffff-ffffffffffff1\n    node.data-dir=/opt/module/presto/data\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 6. 配置 worker\n    \n    vim /opt/module/presto/etc/config.properties\n    \n    #主节点\n    coordinator=true\n    node-scheduler.include-coordinator=false\n    http-server.http.port=8881\n    query.max-memory=50gb\n    discovery-server.enabled=true\n    discovery.uri=http://node1:8881\n    \n    #其他节点\n    coordinator=false\n    http-server.http.port=8881\n    query.max-memory=50gb\n    discovery.uri=http://node1:8881\n    \n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    \n\n 7. 启动\n    \n    > 启动之前需要先启动hive\n    > \n    > nohup bin/hive --service metastore &\n    > \n    > \n    > 1\n    \n    再启动presto\n    \n     bin/launcher run  #前台启动\n     bin/launcher start  #后台启动\n     #或者使用 ssh脚本 \n     xcall.sh /opt/module/presto/bin/launcher start\n    \n    \n    1\n    2\n    3\n    4\n    \n\n\n# 客户端\n\n下载presto的客户端：https://repo1.maven.org/maven2/com/facebook/presto/presto-cli/0.196/presto-cli-0.196-executable.jar\n\nshell\n\n * 上传 改名 添加执行权限\n   \n    mv presto-cli-0.196-executable.jar  prestocli\n    chmod +x prestocli\n   \n   \n   1\n   2\n   \n\n * 启动\n   \n   # 执行\n   ./prestocli --server node1:8881 --catalog hive --schema default\n   \n   \n   1\n   2\n   \n\n * 使用\n   \n   #查看数据库\n   show schemas;\n   #切换\n   use gmall;\n   #查看表\n   show tables;\n   > 可以按回车换行，空格翻页\n   > 按 q 退出当前查询\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n   \n   如果查看列式存储+lzo格式的文件需要把loz的jar包拷贝到plugin的对应目录下\n   \n   cp /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar /opt/module/presto/plugin/hive-hadoop2/\n   \n   \n   1\n   \n   \n   分发这个jar包 三台都需要配置\n   \n   xsync /opt/module/presto/plugin/hive-hadoop2/hadoop-lzo-0.4.20.jar\n   \n   \n   1\n   \n   \n   > presto不支持查询lzo压缩文件，如果是查询全lzo文件，需要修改hadoop-lzo代码\n\n可视化\n\n * 上传解压 yanagishima-18.0.zip\n   \n   #如果最小安装 需要先安装unzip:   xcall.sh sudo yum -y install unzip\n   unzip yanagishima-18.0.zip -d /opt/moudle\n   \n   \n   1\n   2\n   \n\n * 修改配置文件\n   \n   vim conf/yanagishima.properties\n   #添加下面的配置\n   jetty.port=7080\n   presto.datasources=hadoop101-presto  #自己起 但是下面用到都得改改\n   presto.coordinator.server.hadoop101-presto=http://node1:8881\n   catalog.hadoop101-presto=hive\n   schema.hadoop101-presto=default\n   sql.query.engines=presto\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 启动：/opt/module/yanagishima-18.0\n   \n   nohup bin/yanagishima-start.sh >y.log 2>&1 &\n   \n   \n   1\n   \n\n * 访问页面的7080端口 写sql即可\n   \n   > 注意：执行sql语句时不能带；结尾.....\n\n\n# 优化\n\n\n# 数据存储\n\n> 指的是hive表\n\n * 合理设置分区\n * 使用列式存储：建议采用orc\n * 使用压缩：建议采用snappy压缩\n\n\n# 查询sql\n\n * 只选择使用的字段。\n\n * 能用分区做过滤条件，先用分区做过滤条件\n\n * group by 语句优化：按照积数降序排列\n   \n   [good]: select group by uid, gender\n   [bad]:  select group by gender, uid\n   \n   \n   1\n   2\n   \n\n * order by时使用limit\n\n * 使用join语句时将大表放在左边\n\n\n# 注意事项\n\n * 字段名的引用：\n   \n   mysql对字段加反引号`、presto对字段加双引号分割\n   #如果不是关键字，就可以不加\n   \n   \n   1\n   2\n   \n\n * 时间函数\n   \n   对于timestamp，需要进行比较的时候，需要添加timestamp关键字，而mysql中对timestamp可以直接进行比较。\n   /*mysql的写法*/\n   select t from a where t > '2017-01-01 00:00:00'; \n   \n   /*presto中的写法*/\n   select t from a where t > timestamp '2017-01-01 00:00:00';\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 不支持insert overwrite语法\n   \n   只能先delete，然后insert into\n   \n   \n   1\n   \n\n * parquet格式\n   \n   支持查询，但不支持insert。\n   \n   \n   1\n   ",charsets:{cjk:!0}},{title:"zabbix笔记",frontmatter:{title:"zabbix笔记",date:"2021-10-16T00:00:00.000Z",tags:["zabbix"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/26.zabbix.html",relativePath:"view/docs/笔记/26.zabbix.md",key:"v-ff763138",path:"/view/docs/%E7%AC%94%E8%AE%B0/26.zabbix.html",headers:[{level:2,title:"zabbix概述",slug:"zabbix概述",normalizedTitle:"zabbix概述",charIndex:2},{level:2,title:"基础架构",slug:"基础架构",normalizedTitle:"基础架构",charIndex:72},{level:2,title:"部署",slug:"部署",normalizedTitle:"部署",charIndex:83},{level:3,title:"准备工作",slug:"准备工作",normalizedTitle:"准备工作",charIndex:333},{level:3,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:750},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:535},{level:3,title:"模板的使用",slug:"模板的使用",normalizedTitle:"模板的使用",charIndex:3590},{level:2,title:"集成Grafana",slug:"集成grafana",normalizedTitle:"集成grafana",charIndex:3672},{level:3,title:"部署Grafana",slug:"部署grafana",normalizedTitle:"部署grafana",charIndex:3699},{level:3,title:"使用步骤",slug:"使用步骤",normalizedTitle:"使用步骤",charIndex:4448}],lastUpdated:"2021/10/21 上午8:56:52",headersStr:"zabbix概述 基础架构 部署 准备工作 安装 使用 模板的使用 集成Grafana 部署Grafana 使用步骤",content:"# zabbix概述\n\n能够监控各种网络参数以及服务器健康和完整性，提供灵活通的知机制，基于已存储的数据，提供报告和数据可视化等功能。\n\n\n# 基础架构\n\n\n\n\n# 部署\n\n规划：\n\n进程              HADOOP102节点   HADOOP103节点   HADOOP104节点\nzabbix-agent    √             √             √\nzabbix-server   √                           \nMySQL           √                           \nzabbix-web      √                           \n\n\n# 准备工作\n\n * 关闭集群\n\n * 关闭防火墙\n\n * 关闭selinux\n   \n   > 因为需要开web页面 而这个页面是用的httpd容器,如果不关闭就无法访问到一些权限，导致页面无法访问\n   > \n   > 正常情况下，是修改里面的配置文件，而selinux是linux与安全相关的组件，改的东西多，所以需要学，成本高\n   > \n   > 所以我们这里就直接把他给关闭了，因为主要是给web使用的，所以我们主要管node1节点即可\n   > \n   > sudo vim /etc/selinux/config\n   > #修改\n   > SELINUX=disabled\n   > #重启\n   > sudo reboot\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n\n * 配置Zabbix yum源（3台节点）\n   \n   > /etc/yum.repos.d 安装的yum源在这个目录下\n   \n   #安装俩个仓库\n   sudo rpm -Uvh https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm\n   sudo yum install -y centos-release-scl\n   #或者使用脚本集体安装：xcall.sh sudo yum install -y centos-release-scl\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 修改zabbix仓库配置文件\n   \n   > 主要修改镜像，和web页面的开启。因为国外速度比较慢\n   \n   #三台\n   sudo sed -i 's/http:\\/\\/repo.zabbix.com/https:\\/\\/mirrors.aliyun.com\\/zabbix/g' /etc/yum.repos.d/zabbix.repo\n   \n   \n   1\n   2\n   \n   \n    #查看\n    sudo cat /etc/yum.repos.d/zabbix.repo \n   \n   \n   1\n   2\n   \n   \n   #开放 node1节点的web服务\n   sudo vim /etc/yum.repos.d/zabbix.repo \n   #修改\n   enabled=1\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# 安装\n\n官网步骤\n\n * 安装：（3台）\n   \n   #node1节点\n   sudo yum install -y zabbix-server-mysql zabbix-agent zabbix-web-mysql-scl zabbix-apache-conf-scl\n   #node2 node3 节点\n   sudo yum install -y zabbix-agent\n   \n   \n   1\n   2\n   3\n   4\n   \n   \n   > 删除\n   > \n   > #查看\n   > rpm -qa | grep zabbix\n   > #删除\n   > sudo yum remove 包名\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n\n * 配置Zabbix\n   \n   创建zabbix数据库\n   \n   mysql -uroot -phadoop -e\"create database zabbix character set utf8 collate utf8_bin\"\n   \n   \n   1\n   \n   \n   创建zabbix表\n   \n   zcat /usr/share/doc/zabbix-server-mysql-5.0.*/create.sql.gz | mysql -uroot -phadoop zabbix\n   #如果安装的版本更新了 就替换一下就可以了\n   \n   \n   1\n   2\n   \n\n * 修改配置文件\n   \n   配置数据库访问\n   \n   #node1节点 配置数据库访问\n   sudo vim /etc/zabbix/zabbix_server.conf\n   \n   DBHost=node1\n   DBName=zabbix\n   DBUser=root\n   DBPassword=hadoop\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n   \n   配置agent：3台\n   \n   sudo vim /etc/zabbix/zabbix_agentd.conf\n   #修改\n   Server=node1\n   #ServerActive=127.0.0.1\n   #Hostname=Zabbix server\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   配置Zabbix_Web时区\n   \n   #:node1 节点\n   sudo vim /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf\n   #添加\n   [zabbix]\n   php_value[date.timezone] = Asia/Shanghai\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 启动：默认是80端口\n   \n   #node1\n   sudo systemctl start zabbix-server zabbix-agent httpd rh-php72-php-fpm #启动\n   sudo systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm #开启自启\n   #其他节点\n   sudo systemctl start zabbix-agent\n   sudo systemctl enable zabbix-agent\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 停止\n   \n   #node1\n   sudo systemctl stop zabbix-server zabbix-agent httpd rh-php72-php-fpm\n   sudo systemctl disable zabbix-server zabbix-agent httpd rh-php72-php-fpm\n   #其他节点\n   sudo systemctl stop zabbix-agent\n   sudo systemctl disable zabbix-agent\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n> 访问：*http://node1/zabbix\n\n> next=>next=>填写数据库资料=>填写server地址节点=>next\n> \n> 登录\n> \n>  * 用户名：Admin\n>  * 密码：zabbix\n\n\n# 使用\n\n术语：主机、监控项、触发器、动作\n\n需求：监控每台的datanode节点\n\n> 配置监控项里面的键值proc.num[,,all,datanode] (监控的进程)\n> \n> 配置触发器，配置严重性，配置表达式\n> \n> 配置触发后的动作：发通知or执行脚本\n> \n> web里配置，配置好\n> \n> sbin/stop-dfs.sh #测试 第一台节点\n> \n> \n> 1\n\n\n# 模板的使用\n\n * 点击模板 输入参数过滤 例：linux 、mysql 、hadoop等，因为对大数据支持还不够完善。\n * 也可以自己定制模板，创建.\n\n\n# 集成Grafana\n\n它是用来做可视化的工具\n\n\n# 部署Grafana\n\n 1. 下载Grafana安装包\n    \n    官方仓库：https://dl.grafana.com/oss/release/grafana-7.4.3-1.x86_64.rpm\n    \n    国内镜像：https://repo.huaweicloud.com/grafana/7.4.3/grafana-7.4.3-1.x86_64.rpm\n\n 2. 上传解压安装包\n    \n    #在线下载 #下载到当前目录\n    wget https://repo.huaweicloud.com/grafana/7.4.3/grafana-7.4.3-1.x86_64.rpm \n    #解压\n    sudo rpm -ivh grafana-7.4.3-1.x86_64.rpm\n    \n    \n    1\n    2\n    3\n    4\n    \n    \n    > 缺少依赖问题 先下载依赖 再进行安装\n    > \n    > sudo yum install fontconfig\n    > sudo yum install urw-fonts\n    > \n    > \n    > 1\n    > 2\n\n 3. 启动\n    \n    sudo systemctl start grafana-server\n    sudo systemctl stop grafana-server #g\n    \n    \n    1\n    2\n    \n\n 4. 访问web页面：http://node1:3000/\n    \n    > 首次登录用户名和密码均为 admin\n    > \n    > 第二次是设置密码，可跳过，注意。\n\n\n# 使用步骤\n\n> 对接数据源、做配置、做图。\n\n * 添加看板、设置添加数据源（如果没有查找更多，在官网下载）搜索Zabbix 就可以找到下载方式\n   \n   #安装插件\n   sudo grafana-cli plugins install alexanderzobnin-zabbix-app\n   \n   \n   1\n   2\n   \n   \n   #重启\n   sudo systemctl restart grafana-server\n   \n   \n   1\n   2\n   \n   \n   #激活启动插件\n   点击plugins，搜索Zabbix，点击enable激活\n   \n   \n   1\n   2\n   \n   \n   然后重新开始配置数据源即可\n   \n   uri：http://node1/zabbix/api_jsonrpc.php\n   #配置基本认证\n   Admin\n   zabbix\n   #API细节 也需要填写用户名和密码\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 设置zabbix监控模板Template OS Linux by Zabbix agent 测试\n   \n   然后在可视化那里设置查询的分组节点指标即可",normalizedContent:"# zabbix概述\n\n能够监控各种网络参数以及服务器健康和完整性，提供灵活通的知机制，基于已存储的数据，提供报告和数据可视化等功能。\n\n\n# 基础架构\n\n\n\n\n# 部署\n\n规划：\n\n进程              hadoop102节点   hadoop103节点   hadoop104节点\nzabbix-agent    √             √             √\nzabbix-server   √                           \nmysql           √                           \nzabbix-web      √                           \n\n\n# 准备工作\n\n * 关闭集群\n\n * 关闭防火墙\n\n * 关闭selinux\n   \n   > 因为需要开web页面 而这个页面是用的httpd容器,如果不关闭就无法访问到一些权限，导致页面无法访问\n   > \n   > 正常情况下，是修改里面的配置文件，而selinux是linux与安全相关的组件，改的东西多，所以需要学，成本高\n   > \n   > 所以我们这里就直接把他给关闭了，因为主要是给web使用的，所以我们主要管node1节点即可\n   > \n   > sudo vim /etc/selinux/config\n   > #修改\n   > selinux=disabled\n   > #重启\n   > sudo reboot\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n\n * 配置zabbix yum源（3台节点）\n   \n   > /etc/yum.repos.d 安装的yum源在这个目录下\n   \n   #安装俩个仓库\n   sudo rpm -uvh https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm\n   sudo yum install -y centos-release-scl\n   #或者使用脚本集体安装：xcall.sh sudo yum install -y centos-release-scl\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 修改zabbix仓库配置文件\n   \n   > 主要修改镜像，和web页面的开启。因为国外速度比较慢\n   \n   #三台\n   sudo sed -i 's/http:\\/\\/repo.zabbix.com/https:\\/\\/mirrors.aliyun.com\\/zabbix/g' /etc/yum.repos.d/zabbix.repo\n   \n   \n   1\n   2\n   \n   \n    #查看\n    sudo cat /etc/yum.repos.d/zabbix.repo \n   \n   \n   1\n   2\n   \n   \n   #开放 node1节点的web服务\n   sudo vim /etc/yum.repos.d/zabbix.repo \n   #修改\n   enabled=1\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# 安装\n\n官网步骤\n\n * 安装：（3台）\n   \n   #node1节点\n   sudo yum install -y zabbix-server-mysql zabbix-agent zabbix-web-mysql-scl zabbix-apache-conf-scl\n   #node2 node3 节点\n   sudo yum install -y zabbix-agent\n   \n   \n   1\n   2\n   3\n   4\n   \n   \n   > 删除\n   > \n   > #查看\n   > rpm -qa | grep zabbix\n   > #删除\n   > sudo yum remove 包名\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n\n * 配置zabbix\n   \n   创建zabbix数据库\n   \n   mysql -uroot -phadoop -e\"create database zabbix character set utf8 collate utf8_bin\"\n   \n   \n   1\n   \n   \n   创建zabbix表\n   \n   zcat /usr/share/doc/zabbix-server-mysql-5.0.*/create.sql.gz | mysql -uroot -phadoop zabbix\n   #如果安装的版本更新了 就替换一下就可以了\n   \n   \n   1\n   2\n   \n\n * 修改配置文件\n   \n   配置数据库访问\n   \n   #node1节点 配置数据库访问\n   sudo vim /etc/zabbix/zabbix_server.conf\n   \n   dbhost=node1\n   dbname=zabbix\n   dbuser=root\n   dbpassword=hadoop\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n   \n   配置agent：3台\n   \n   sudo vim /etc/zabbix/zabbix_agentd.conf\n   #修改\n   server=node1\n   #serveractive=127.0.0.1\n   #hostname=zabbix server\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   配置zabbix_web时区\n   \n   #:node1 节点\n   sudo vim /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf\n   #添加\n   [zabbix]\n   php_value[date.timezone] = asia/shanghai\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 启动：默认是80端口\n   \n   #node1\n   sudo systemctl start zabbix-server zabbix-agent httpd rh-php72-php-fpm #启动\n   sudo systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm #开启自启\n   #其他节点\n   sudo systemctl start zabbix-agent\n   sudo systemctl enable zabbix-agent\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 停止\n   \n   #node1\n   sudo systemctl stop zabbix-server zabbix-agent httpd rh-php72-php-fpm\n   sudo systemctl disable zabbix-server zabbix-agent httpd rh-php72-php-fpm\n   #其他节点\n   sudo systemctl stop zabbix-agent\n   sudo systemctl disable zabbix-agent\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n> 访问：*http://node1/zabbix\n\n> next=>next=>填写数据库资料=>填写server地址节点=>next\n> \n> 登录\n> \n>  * 用户名：admin\n>  * 密码：zabbix\n\n\n# 使用\n\n术语：主机、监控项、触发器、动作\n\n需求：监控每台的datanode节点\n\n> 配置监控项里面的键值proc.num[,,all,datanode] (监控的进程)\n> \n> 配置触发器，配置严重性，配置表达式\n> \n> 配置触发后的动作：发通知or执行脚本\n> \n> web里配置，配置好\n> \n> sbin/stop-dfs.sh #测试 第一台节点\n> \n> \n> 1\n\n\n# 模板的使用\n\n * 点击模板 输入参数过滤 例：linux 、mysql 、hadoop等，因为对大数据支持还不够完善。\n * 也可以自己定制模板，创建.\n\n\n# 集成grafana\n\n它是用来做可视化的工具\n\n\n# 部署grafana\n\n 1. 下载grafana安装包\n    \n    官方仓库：https://dl.grafana.com/oss/release/grafana-7.4.3-1.x86_64.rpm\n    \n    国内镜像：https://repo.huaweicloud.com/grafana/7.4.3/grafana-7.4.3-1.x86_64.rpm\n\n 2. 上传解压安装包\n    \n    #在线下载 #下载到当前目录\n    wget https://repo.huaweicloud.com/grafana/7.4.3/grafana-7.4.3-1.x86_64.rpm \n    #解压\n    sudo rpm -ivh grafana-7.4.3-1.x86_64.rpm\n    \n    \n    1\n    2\n    3\n    4\n    \n    \n    > 缺少依赖问题 先下载依赖 再进行安装\n    > \n    > sudo yum install fontconfig\n    > sudo yum install urw-fonts\n    > \n    > \n    > 1\n    > 2\n\n 3. 启动\n    \n    sudo systemctl start grafana-server\n    sudo systemctl stop grafana-server #g\n    \n    \n    1\n    2\n    \n\n 4. 访问web页面：http://node1:3000/\n    \n    > 首次登录用户名和密码均为 admin\n    > \n    > 第二次是设置密码，可跳过，注意。\n\n\n# 使用步骤\n\n> 对接数据源、做配置、做图。\n\n * 添加看板、设置添加数据源（如果没有查找更多，在官网下载）搜索zabbix 就可以找到下载方式\n   \n   #安装插件\n   sudo grafana-cli plugins install alexanderzobnin-zabbix-app\n   \n   \n   1\n   2\n   \n   \n   #重启\n   sudo systemctl restart grafana-server\n   \n   \n   1\n   2\n   \n   \n   #激活启动插件\n   点击plugins，搜索zabbix，点击enable激活\n   \n   \n   1\n   2\n   \n   \n   然后重新开始配置数据源即可\n   \n   uri：http://node1/zabbix/api_jsonrpc.php\n   #配置基本认证\n   admin\n   zabbix\n   #api细节 也需要填写用户名和密码\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 设置zabbix监控模板template os linux by zabbix agent 测试\n   \n   然后在可视化那里设置查询的分组节点指标即可",charsets:{cjk:!0}},{title:"superset笔记",frontmatter:{title:"superset笔记",date:"2021-10-15T00:00:00.000Z",tags:["superset"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/23.superset%E5%8F%AF%E8%A7%86%E5%8C%96.html",relativePath:"view/docs/笔记/23.superset可视化.md",key:"v-1500dd1e",path:"/view/docs/%E7%AC%94%E8%AE%B0/23.superset%E5%8F%AF%E8%A7%86%E5%8C%96.html",headers:[{level:2,title:"superset概述",slug:"superset概述",normalizedTitle:"superset概述",charIndex:2},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:86},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:5622}],lastUpdated:"2023/1/15 上午4:58:42",headersStr:"superset概述 安装 使用",content:'# superset概述\n\n第三方开源的，现代、轻量的BI分析工具，可对接多种数据源，有丰富的图表展示，可自定义仪表盘。\n\n例：HIVE、Kylin、Druid等\n\n\n# 安装\n\n官网：http://superset.apache.org/\n\n步骤：\n\n 1. 安装python环境：(页面由python编写的Flask，3.7版本)\n    \n    * 因为系统自带的一些功能依赖原本的python版本所以不能直接删除下载\n    \n    * 所以需要安装：Miniconda：https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n      \n      > conda 是一个开源的包，环境管理器，可切换python环境\n      > \n      > anaconda是一大堆的工具包\n      > \n      > miniconda是迷你版的\n      > \n      > 安装步骤：\n      > \n      >  1. 下载上传\n      >  2. bash Miniconda3-latest-Linux-x86_64.sh 执行安装\n      > \n      >  * 回车、空格、yes、安装路径、yes 初始化、\n      > \n      >  * source ~/.bashrc 生效\n      > \n      >  * conda config --set auto_activate_base false\n      >    #设置不开启自启\n      >    \n      >    \n      >    1\n      >    2\n      >    \n      > \n      > \n      > 输错了，按  ctrl+delete 才能删\n      > \n      > **常用的环境命令**\n      > \n      > - 创建：`conda create -n env_name`       python=版本号  \n      > \n      > - 查看：`conda info --envs`\n      > \n      > - 删除：`conda remove -n env_name --all`\n      > \n      > - 切换：\n      > \n      >   > `conda activate env_name`   激活\n      >   >\n      >   > `conda deactivate`  退出 \n      > \n      > \n      > 1\n      > 2\n      > 3\n      > 4\n      > 5\n      > 6\n      > 7\n      > 8\n      > 9\n      > 10\n      > 11\n      > 12\n      > 13\n      > 14\n      > 15\n      > 16\n    \n    * 配置镜像\n      \n      conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free\n      conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n      conda config --set show_channel_urls yes\n      \n      \n      1\n      2\n      3\n      \n    \n    * 创建环境 (需要联网下载)\n      \n      conda create --name superset python=3.7\n      \n      \n      1\n      \n    \n    * 激活\n      \n      conda activate superset\n      \n      \n      1\n      \n\n 2. 部署superset ：往下都需要在superset环境下\n    \n    * 安装依赖\n      \n      sudo yum install -y gcc gcc-c++ libffi-devel python-devel python-pip python-wheel python-setuptools openssl-devel cyrus-sasl-devel openldap-devel\n      \n      \n      1\n      \n    \n    * 安装\n      \n      #更新pip\n      pip install --upgrade setuptools pip -i https://pypi.douban.com/simple/\n      # 安装\n      pip install apache-superset -i https://pypi.douban.com/simple/\n      \n      \n      1\n      2\n      3\n      4\n      \n    \n    * 初始化数据库\n      \n      superset db upgrade\n      \n      \n      1\n      \n      \n      > 2022\\4\\6 初始化失败\n      > \n      > ImportError: cannot import name \'soft_unicode\' from \'markupsafe\' (/opt/module/miniconda3/envs/superset/lib/python3.7/site-packages/markupsafe/__init__.py)\n      > \n      > \n      > 1\n      > \n      > \n      > 解决：降低markupsafe版本\n      > \n      > pip uninstall markupsafe;python -m pip install markupsafe==2.0.1;\n      > \n      > \n      > 1\n    \n    * 创建管理员用户\n      \n      export FLASK_APP=superset\n      superset fab create-admin\n      \n      \n      1\n      2\n      \n      \n      > 输入创建的用户名、回车、回车、回车、密码俩次即可\n    \n    * 初始化\n      \n      superset init\n      \n      \n      1\n      \n\n 3. 启动关闭\n    \n    * 安装guuicorn (类似tomcat web服务器)\n      \n      pip install gunicorn -i https://pypi.douban.com/simple/\n      \n      \n      1\n      \n    \n    * 启动\n      \n      gunicorn --workers 5 --timeout 120 --bind node1:8787  "superset.app:create_app()" --daemon\n      \n      \n      1\n      \n      \n      > *--workers：指定进程个数*\n      > \n      > *--timeout：worker进程超时时间，超时会自动重启*\n      > \n      > *--bind：绑定本机地址，即为Superset访问地址*\n      > \n      > *-********-daemon********：后台运行*\n    \n    * 端口 8787 输入你创建的账号即可\n    \n    * 停止\n      \n      #杀死进程\n      ps -ef | awk \'/superset/ && !/awk/{print $2}\' | xargs kill -9\n      #退出\n      conda deactivate\n      \n      \n      1\n      2\n      3\n      4\n      \n    \n    * 脚本 vim superset.sh\n      \n      #!/bin/bash\n      \n      superset_status(){\n          result=`ps -ef | awk \'/gunicorn/ && !/awk/{print $2}\' | wc -l`\n          if [[ $result -eq 0 ]]; then\n              return 0\n          else\n              return 1\n          fi\n      }\n      superset_start(){\n              source ~/.bashrc\n              superset_status >/dev/null 2>&1\n              if [[ $? -eq 0 ]]; then\n                  conda activate superset ; gunicorn --workers 5 --timeout 120 --bind node1:8787 --daemon \'superset.app:create_app()\'\n              else\n                  echo "superset正在运行"\n              fi\n      \n      }\n      \n      superset_stop(){\n          superset_status >/dev/null 2>&1\n          if [[ $? -eq 0 ]]; then\n              echo "superset未在运行"\n          else\n              ps -ef | awk \'/gunicorn/ && !/awk/{print $2}\' | xargs kill -9\n          fi\n      }\n      \n      \n      case $1 in\n          start )\n              echo "启动Superset"\n              superset_start\n          ;;\n          stop )\n              echo "停止Superset"\n              superset_stop\n          ;;\n          restart )\n              echo "重启Superset"\n              superset_stop\n              superset_start\n          ;;\n          status )\n              superset_status >/dev/null 2>&1\n              if [[ $? -eq 0 ]]; then\n                  echo "superset未在运行"\n              else\n                  echo "superset正在运行"\n              fi\n      esac\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      \n\n\n# 使用\n\n * 安装依赖 ：(superset)环境 对接mysql依赖\n   \n   conda install mysqlclient\n   \n   \n   1\n   \n   \n   如果对接不同的数据源需要下载不同的依赖\n   \n   依赖选择,参照官网\n\n * 重启\n   \n   superset.sh restart \n   #使用上面编写的脚本\n   \n   \n   1\n   2\n   \n\n * 使用 访问对应端口配置对应的图标即可\n   \n   配置对接数据、选择对应的表即可\n   \n   然后创建仪表盘凭，然后选择charts画图放入仪表盘展示即可\n\n\n\n',normalizedContent:'# superset概述\n\n第三方开源的，现代、轻量的bi分析工具，可对接多种数据源，有丰富的图表展示，可自定义仪表盘。\n\n例：hive、kylin、druid等\n\n\n# 安装\n\n官网：http://superset.apache.org/\n\n步骤：\n\n 1. 安装python环境：(页面由python编写的flask，3.7版本)\n    \n    * 因为系统自带的一些功能依赖原本的python版本所以不能直接删除下载\n    \n    * 所以需要安装：miniconda：https://repo.anaconda.com/miniconda/miniconda3-latest-linux-x86_64.sh\n      \n      > conda 是一个开源的包，环境管理器，可切换python环境\n      > \n      > anaconda是一大堆的工具包\n      > \n      > miniconda是迷你版的\n      > \n      > 安装步骤：\n      > \n      >  1. 下载上传\n      >  2. bash miniconda3-latest-linux-x86_64.sh 执行安装\n      > \n      >  * 回车、空格、yes、安装路径、yes 初始化、\n      > \n      >  * source ~/.bashrc 生效\n      > \n      >  * conda config --set auto_activate_base false\n      >    #设置不开启自启\n      >    \n      >    \n      >    1\n      >    2\n      >    \n      > \n      > \n      > 输错了，按  ctrl+delete 才能删\n      > \n      > **常用的环境命令**\n      > \n      > - 创建：`conda create -n env_name`       python=版本号  \n      > \n      > - 查看：`conda info --envs`\n      > \n      > - 删除：`conda remove -n env_name --all`\n      > \n      > - 切换：\n      > \n      >   > `conda activate env_name`   激活\n      >   >\n      >   > `conda deactivate`  退出 \n      > \n      > \n      > 1\n      > 2\n      > 3\n      > 4\n      > 5\n      > 6\n      > 7\n      > 8\n      > 9\n      > 10\n      > 11\n      > 12\n      > 13\n      > 14\n      > 15\n      > 16\n    \n    * 配置镜像\n      \n      conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free\n      conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\n      conda config --set show_channel_urls yes\n      \n      \n      1\n      2\n      3\n      \n    \n    * 创建环境 (需要联网下载)\n      \n      conda create --name superset python=3.7\n      \n      \n      1\n      \n    \n    * 激活\n      \n      conda activate superset\n      \n      \n      1\n      \n\n 2. 部署superset ：往下都需要在superset环境下\n    \n    * 安装依赖\n      \n      sudo yum install -y gcc gcc-c++ libffi-devel python-devel python-pip python-wheel python-setuptools openssl-devel cyrus-sasl-devel openldap-devel\n      \n      \n      1\n      \n    \n    * 安装\n      \n      #更新pip\n      pip install --upgrade setuptools pip -i https://pypi.douban.com/simple/\n      # 安装\n      pip install apache-superset -i https://pypi.douban.com/simple/\n      \n      \n      1\n      2\n      3\n      4\n      \n    \n    * 初始化数据库\n      \n      superset db upgrade\n      \n      \n      1\n      \n      \n      > 2022\\4\\6 初始化失败\n      > \n      > importerror: cannot import name \'soft_unicode\' from \'markupsafe\' (/opt/module/miniconda3/envs/superset/lib/python3.7/site-packages/markupsafe/__init__.py)\n      > \n      > \n      > 1\n      > \n      > \n      > 解决：降低markupsafe版本\n      > \n      > pip uninstall markupsafe;python -m pip install markupsafe==2.0.1;\n      > \n      > \n      > 1\n    \n    * 创建管理员用户\n      \n      export flask_app=superset\n      superset fab create-admin\n      \n      \n      1\n      2\n      \n      \n      > 输入创建的用户名、回车、回车、回车、密码俩次即可\n    \n    * 初始化\n      \n      superset init\n      \n      \n      1\n      \n\n 3. 启动关闭\n    \n    * 安装guuicorn (类似tomcat web服务器)\n      \n      pip install gunicorn -i https://pypi.douban.com/simple/\n      \n      \n      1\n      \n    \n    * 启动\n      \n      gunicorn --workers 5 --timeout 120 --bind node1:8787  "superset.app:create_app()" --daemon\n      \n      \n      1\n      \n      \n      > *--workers：指定进程个数*\n      > \n      > *--timeout：worker进程超时时间，超时会自动重启*\n      > \n      > *--bind：绑定本机地址，即为superset访问地址*\n      > \n      > *-********-daemon********：后台运行*\n    \n    * 端口 8787 输入你创建的账号即可\n    \n    * 停止\n      \n      #杀死进程\n      ps -ef | awk \'/superset/ && !/awk/{print $2}\' | xargs kill -9\n      #退出\n      conda deactivate\n      \n      \n      1\n      2\n      3\n      4\n      \n    \n    * 脚本 vim superset.sh\n      \n      #!/bin/bash\n      \n      superset_status(){\n          result=`ps -ef | awk \'/gunicorn/ && !/awk/{print $2}\' | wc -l`\n          if [[ $result -eq 0 ]]; then\n              return 0\n          else\n              return 1\n          fi\n      }\n      superset_start(){\n              source ~/.bashrc\n              superset_status >/dev/null 2>&1\n              if [[ $? -eq 0 ]]; then\n                  conda activate superset ; gunicorn --workers 5 --timeout 120 --bind node1:8787 --daemon \'superset.app:create_app()\'\n              else\n                  echo "superset正在运行"\n              fi\n      \n      }\n      \n      superset_stop(){\n          superset_status >/dev/null 2>&1\n          if [[ $? -eq 0 ]]; then\n              echo "superset未在运行"\n          else\n              ps -ef | awk \'/gunicorn/ && !/awk/{print $2}\' | xargs kill -9\n          fi\n      }\n      \n      \n      case $1 in\n          start )\n              echo "启动superset"\n              superset_start\n          ;;\n          stop )\n              echo "停止superset"\n              superset_stop\n          ;;\n          restart )\n              echo "重启superset"\n              superset_stop\n              superset_start\n          ;;\n          status )\n              superset_status >/dev/null 2>&1\n              if [[ $? -eq 0 ]]; then\n                  echo "superset未在运行"\n              else\n                  echo "superset正在运行"\n              fi\n      esac\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      30\n      31\n      32\n      33\n      34\n      35\n      36\n      37\n      38\n      39\n      40\n      41\n      42\n      43\n      44\n      45\n      46\n      47\n      48\n      49\n      50\n      51\n      52\n      53\n      \n\n\n# 使用\n\n * 安装依赖 ：(superset)环境 对接mysql依赖\n   \n   conda install mysqlclient\n   \n   \n   1\n   \n   \n   如果对接不同的数据源需要下载不同的依赖\n   \n   依赖选择,参照官网\n\n * 重启\n   \n   superset.sh restart \n   #使用上面编写的脚本\n   \n   \n   1\n   2\n   \n\n * 使用 访问对应端口配置对应的图标即可\n   \n   配置对接数据、选择对应的表即可\n   \n   然后创建仪表盘凭，然后选择charts画图放入仪表盘展示即可\n\n\n\n',charsets:{cjk:!0}},{title:"Pandas",frontmatter:{},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/Pandas.html",relativePath:"view/docs/笔记/Pandas.md",key:"v-3705dc52",path:"/view/docs/%E7%AC%94%E8%AE%B0/Pandas.html",headers:[{level:2,title:"Pandas",slug:"pandas",normalizedTitle:"pandas",charIndex:2},{level:2,title:"读取数据文件",slug:"读取数据文件",normalizedTitle:"读取数据文件",charIndex:13},{level:2,title:"数据结构",slug:"数据结构",normalizedTitle:"数据结构",charIndex:473},{level:2,title:"数据查询",slug:"数据查询",normalizedTitle:"数据查询",charIndex:1257},{level:2,title:"新增数据列",slug:"新增数据列",normalizedTitle:"新增数据列",charIndex:2088},{level:2,title:"数据统计函数",slug:"数据统计函数",normalizedTitle:"数据统计函数",charIndex:2770},{level:2,title:"缺失值处理",slug:"缺失值处理",normalizedTitle:"缺失值处理",charIndex:3304},{level:2,title:"数据排序",slug:"数据排序",normalizedTitle:"数据排序",charIndex:4038},{level:2,title:"字符串处理",slug:"字符串处理",normalizedTitle:"字符串处理",charIndex:4424},{level:2,title:"axis参数",slug:"axis参数",normalizedTitle:"axis参数",charIndex:4638},{level:2,title:"索引index",slug:"索引index",normalizedTitle:"索引index",charIndex:595},{level:2,title:"合并",slug:"合并",normalizedTitle:"合并",charIndex:4911},{level:2,title:"批量拆分和合并Excel",slug:"批量拆分和合并excel",normalizedTitle:"批量拆分和合并excel",charIndex:6096},{level:2,title:"分组统计",slug:"分组统计",normalizedTitle:"分组统计",charIndex:6156},{level:2,title:"分层索引",slug:"分层索引",normalizedTitle:"分层索引",charIndex:6536},{level:2,title:"数据转换函数",slug:"数据转换函数",normalizedTitle:"数据转换函数",charIndex:6835},{level:2,title:"数据透视和投射",slug:"数据透视和投射",normalizedTitle:"数据透视和投射",charIndex:6940}],lastUpdated:"2022/2/24 下午1:58:48",headersStr:"Pandas 读取数据文件 数据结构 数据查询 新增数据列 数据统计函数 缺失值处理 数据排序 字符串处理 axis参数 索引index 合并 批量拆分和合并Excel 分组统计 分层索引 数据转换函数 数据透视和投射",content:"# Pandas\n\n\n# 读取数据文件\n\n * 纯文本 csv，txt\n * slsx格式的execl文件\n * mysql数据表\n\n#csv\nr=pd.read_csv(路径,sep=分隔符，header=标题行,names=[\"列名1\",\"列名2\",\"列名3\"]，skiprows='第几行开始读取')\nr.head()#前5行\nr.shape#查看数据形状(行，列)\nr.columns#查看数据的列名\nr.index#查看数据的索引\nr.dtypes#数据类型\nr.set_index(列，inplace=True)#设置索引\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n#execl\nr=pd.read_excel(path)\n\n\n1\n2\n\n\n#mysql\nimport pymysql\nconn=pymysql.connect(host,user,password,database,charset='utf8')\nr=pd.read_sql(\"select * from table\",con=conn)\n\n\n1\n2\n3\n4\n\n\n\n# 数据结构\n\n * DataFrame：二维数据,整个表，多行多列=> df.index ,df.columns\n   \n   > 表类型数据结构：\n   > \n   >  * 每列可有不同的值类型(数值，字符串，布尔值)\n   >  * 既有行索引index,也有列索引coumns\n   >  * 可以被看做由Series组成的字典\n\n * Series：一维数据，一行或一列\n   \n   > 类似一维数组对象，由一组不同数据类型以及索引组成。\n\n#series\nimport pandas as pd\nimport pandas as np\n\n#创建简单的Series\nr=pd.Series([1,'a',3,42]) #r.index 索引 r.values值\n#创建Series指定索引\nr=pd.Series([1,'a',3,42],index=['a','b','v','c'])\n#使用python字典创建Series\nr=pd.Series({\"a\":123,\"b\":245,\"c\":222})\n\n#访问\nr[索引]\nr[[索引1，索引2]] #多个\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n#创建dataframe=>读取exect csv msql\n#多个字典创建\ndf=pd.DataFrame({'add':[1，1，1],'bbb':[2,2,2]})#df.index df.columns\n\n#查询\n    #查询列\n    df['add']#一个series\n    df[['add','bbb']]#多列还是df\n\n    #查询行\n    df.loc[i]#查询一行\n    df.loc[1:3]#查询多行还是df\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 数据查询\n\n> 数值、列表、区间、条件、函数\n\n方法:\n\n * df.loc：根据行、列标签值查询 =>既能查询又能覆盖写入\n * df.iloc：根据行、列的数值位置查询\n * df.where\n * df.query\n\n#df.loc\n1. 使用单个label值进行查询\n\tdf.loc['索引',\"列名\"]#查询单个值\n    df.loc[\"索引\"，[\"列名1\",\"列名2\"]]#得到Series\n    \n2. 使用值列表进行查询\n\tdf.loc[['索引1','索引2'],[\"列\"]]#得到Series\n    df.loc[['索引1','索引2'],['列1'，'列2']]#得到df\n    \n3. 使用数值区间进行范围查询\n\tdf.loc['开始索引':'结束索引','列']#按行index区间进行查询\n    df.loc['索引','开始列':'结束列']#按列index区间进行查询\n    df.loc['开始索引':'结束索引','开始列':'结束列']#按行列区间查询\n    \n4. 使用条件表达式查询\n\tdf.loc[df['列']<-10,:]#根据列小于10的行索引，列取全部\n    df.loc[(df['列1']<=30)&(df['列2']>=10),:] #复杂条件查询\n    \n5. 调用函数查询\n\tdf.loc[lambda df: (df['列1']<=30)&(df['列2']>=10),:]\n    \n    df.loc[函数名,:]\n    def 函数名:\n        return df.index.str.startswith(\"xxx\") & df[\"列\"]==1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n> 适用行、列\n> \n> 降维：dataFarme>Series>值\n\n\n# 新增数据列\n\n1. 直接赋值\n\tdf.loc[:,'列']=df[\"列\"].str.replace(\"C\",\"\").astype('int32')#替换\n\tdf.loc[:,'列3']=df[\"列1\"]-df['列2']#新增\n    \n2. apply 赋值\n\tdef set(x):\n        if x['列1']>30:\n            return '高'\n        if x['列2']<-10:\n            return '低'\n        return '中'\n    df.loc[:,'wendu']=df.apply(set,axis=1) #columns=1,index=0\n    #统计=>对相同类型的key进行统计\n    df['wendu'].value_counts()\n    \n3. assign 同时添加多个列\n\tdf.assign(\n    \t列1=lambda x:x['列1'] *9/4 +32,\n        列2=lambda x:x['列2'] *9/4 +32,\n    )\n    \n4. 分条件赋值\n\tdf['wencha']=''\n\tdf.loc[df['列1']-df['列2']>10,'wencha']='温差大'\n\tdf.loc[df['列1']-df['列2']<=10,'wencha']='温差正常'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 数据统计函数\n\n * 汇总类统计\n * 唯一去重和按值计数\n * 相关系数和协方差\n\n# 汇总类统计\n    df.describe()#提取所有数字列统计结果  \n    #count统计、menan平均值、std标准差、min最小值、max最大值、分位数\n    df['列'].mean()#查看单个Serise的数据 p\n    df['列'].max()\n    df['列'].min()\n    df['列'].median()#中位数\n\n# 唯一去重和按值计数\n\tdf['列'].unique()#出现值的范围，有那些值\n    df['列'].value_counts()#统计每个值出现了多少次\n   \n# 相关系数(相似度)和协方差(反向程度) =>俩个股票的，正相关or负相关   产品销量的波动，跟那些因数正相关，负相关\n\tdf.cov()#协方差矩阵  正 同向变化\n    df.corr()#相关系数矩阵  1正相关 -1负相关\n    df['列'].cov()\n    df['列'].corr(df['列1']-df['列2'])\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 缺失值处理\n\n * isnull和notnull：检测是否有空值\n * dropna：丢弃、删除缺失值\n   * axis：删除行还是列=> 0:index 1:columns 默认是0\n   * how：适用范围，如果等于any是任何，等于all为空才删除\n   * inplace：如果True修改当前df,否则返回新df\n * fillna：填充缺失值\n   * value：用于填充的值，可以单个值，或者字典（key是列名，value是值）\n   * method：等于ffill使用前一个不为空的值填充；等于bfil使用后一个填充\n   * axis：按照行或列填充（0行1列）\n   * inplace：True原df修改,否则返回新df\n\n#检测空值\n\tdf.isnull()#所有为空\n    df['列'].isnull()\n    df.loc[df['列'].notnull(),:]#筛选不为空的数据\n    \n#删除全是空值的数据\n\tdf.dropna(axis='columns',how='all',inplace=True)#全是空列\n\tdf.dropna(axis='index',how='all',inplace=True)#全是空行\n\n#填充\n\tdf.fillna({\"列\":0})\n    df.loc[:,'列']=df['列'].fillna(0)\n    df.loc[:,'列']=df['列'].fillna(method='ffill')\n#保存\n\tdf.to_excel(路径,index=False)#不生成index数据\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 数据排序\n\n * series排序\n   \n   series.sort_values(ascending=True,inplace=False)\n   #参数说明\n   \tascending：True升序、False降序\n   \n   \n   1\n   2\n   3\n   \n\n * DataFrame排序\n   \n   DataFrame.sort_values(by,ascending=True,inplace=False)\n   #参数说明\n   \tascending：True升序、False降序\n       by:字符串或者List<字符串> 单列排序或多列排序\n   \n   \n   1\n   2\n   3\n   4\n   \n\ndf.sort_values(by=['列1'，'列2'],ascending=[True,False])\n\n\n1\n\n\n\n# 字符串处理\n\n> 先调用str属性在调用对应字符串函数（df没有str属性和处理方法）\n> \n> 只能字符串列上使用，不能在数字列上使用\n\ndf.str.replace(\"替换\"，\"1\")#支持正则替换\ndf.str.isnumeric()#判断是不是数字\ndf.str.startswith(\"开头\")\ndf.str.replace(\"替换\",'1').str.sclice(0,5)#链式调用\n\n\n1\n2\n3\n4\n\n\n\n# axis参数\n\n * axis=0或index\n   * 如果是单行操作：指某一行\n   * 如果是聚合操作：指跨行cross rows\n * axis=1或columns\n   * 单列操作，就指的是某一列\n   * 聚合操作：指跨列cross columns\n\n\n# 索引index\n\n用途：\n\n * 更方便的数据查询\n * 性能提升\n * 自动数据对齐\n * 更多更强大的数据结构支持\n\n#设置索引\ndf.set_index('列名',inplace=True,drop=False)#drop是让索引列还保在数据中\n\n\n1\n2\n\n\n\n# 合并\n\n * merge\n   \n   pd.merge(left,how='inner',on=None,left_on=None,left_index=False,right_index=False,sort=True,suffixes=('_x','_y'),copy=True,indicator=False,validate=None)\n   \n   left、right 要合并的df或有name的series\n   how join的类型\n   on join的key\n   left_on 左连接key\n   rigth_on 右连接的key\n   left_index,right_index 使用index而不是普通的column做join\n   suffixes 俩个元素的后缀，列有重名自动加后缀\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * concat\n   \n   > 使用某种合并方式(内外)，沿某个轴向(axis=0/1),把多个pandas对象合并成一个\n   \n   pd.concat(objs,axis=0,join='outer',ignore_index=False)\n   objs: 一个列表 df或seres可混合\n   axis：默认是0按行合并，1是按列合并\n   join：合并时索引对齐方式 outer、inner\n   ignore_index 是否忽略原来的索引\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * append\n   \n   df.append(other,ignore_index=False)\n   other:ignore_index 是否忽略原来的索引单个df、series、dict、或列表\n   ignore_index 是否忽略原来的索引\n   \n   \n   1\n   2\n   3\n   \n\n#连接\npd.merge(表1，表2，left_on='表1key',right_on='表2key',how='inner')#内连接\n\n#一对一，一对多，多对多数量对齐关系\npd.merge(表1,表2，on='相同的列名'）\n\n\n#左右连接、内连接、外连接区别\npd.merge(表1,表2，how='left')\npd.merge(表1,表2，how='right')\npd.merge(表1,表2，how='ourter') \n         \n#重名处理\npd.merge(表1,表2，on='相列名',suffixe=['_left','_right'])         \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 批量拆分和合并Excel\n\n> 拆分 df.iloc 合并df.concat() 保存df.toexcel()\n\n\n# 分组统计\n\n> groupby\n\n#分组使用聚合函数左数据统计\n\tdf.groupby('列').sum() #单列分组统计\n\tdf.groupby(['列1','列2']).mean() #多列分组统计\n    df.groupby(['列1','列2'],as_index=False).mean() #多列分组统计 不变成索引\n    df.groupby('列').agg([np.sum,np.mean,np.std])\t#查看多中数据统计\n    df.groupby('列')['列'].agg([np.sum,np.mean,np.std])\t#查看多中数据统计\n    df.groupby('列').agg([\"C列\":np.sum,\"D列\":np.mean])\t#不同列使用不同聚合函数    \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 分层索引\n\n#series\nr=df.groupby(['公司','日期'])['收盘'].mean()#分层索引\nr.index\nr.unstack()#把二级索引变成列\nr.reset_index()#变成普通的列\n\nr.loc['索引']\nr.loc[('索引1','索引2')]\n\n#datafrme\ndf.set_index(['公司','日期'],inplace=True)\ndf.sort_index(inplace=True)\ndf.loc[['1','2'],:]\ndf.reset_index()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 数据转换函数\n\n * map：适用于series、实现每个值->指的映射\n * apply：series实现对某个值的处理、用于df实现每个周的series的处理\n * applymap：只能用于df\n\n\n# 数据透视和投射\n\n * unstack实现数据二维透视\n * pivot简化透视\n * stack",normalizedContent:"# pandas\n\n\n# 读取数据文件\n\n * 纯文本 csv，txt\n * slsx格式的execl文件\n * mysql数据表\n\n#csv\nr=pd.read_csv(路径,sep=分隔符，header=标题行,names=[\"列名1\",\"列名2\",\"列名3\"]，skiprows='第几行开始读取')\nr.head()#前5行\nr.shape#查看数据形状(行，列)\nr.columns#查看数据的列名\nr.index#查看数据的索引\nr.dtypes#数据类型\nr.set_index(列，inplace=true)#设置索引\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n#execl\nr=pd.read_excel(path)\n\n\n1\n2\n\n\n#mysql\nimport pymysql\nconn=pymysql.connect(host,user,password,database,charset='utf8')\nr=pd.read_sql(\"select * from table\",con=conn)\n\n\n1\n2\n3\n4\n\n\n\n# 数据结构\n\n * dataframe：二维数据,整个表，多行多列=> df.index ,df.columns\n   \n   > 表类型数据结构：\n   > \n   >  * 每列可有不同的值类型(数值，字符串，布尔值)\n   >  * 既有行索引index,也有列索引coumns\n   >  * 可以被看做由series组成的字典\n\n * series：一维数据，一行或一列\n   \n   > 类似一维数组对象，由一组不同数据类型以及索引组成。\n\n#series\nimport pandas as pd\nimport pandas as np\n\n#创建简单的series\nr=pd.series([1,'a',3,42]) #r.index 索引 r.values值\n#创建series指定索引\nr=pd.series([1,'a',3,42],index=['a','b','v','c'])\n#使用python字典创建series\nr=pd.series({\"a\":123,\"b\":245,\"c\":222})\n\n#访问\nr[索引]\nr[[索引1，索引2]] #多个\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n#创建dataframe=>读取exect csv msql\n#多个字典创建\ndf=pd.dataframe({'add':[1，1，1],'bbb':[2,2,2]})#df.index df.columns\n\n#查询\n    #查询列\n    df['add']#一个series\n    df[['add','bbb']]#多列还是df\n\n    #查询行\n    df.loc[i]#查询一行\n    df.loc[1:3]#查询多行还是df\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 数据查询\n\n> 数值、列表、区间、条件、函数\n\n方法:\n\n * df.loc：根据行、列标签值查询 =>既能查询又能覆盖写入\n * df.iloc：根据行、列的数值位置查询\n * df.where\n * df.query\n\n#df.loc\n1. 使用单个label值进行查询\n\tdf.loc['索引',\"列名\"]#查询单个值\n    df.loc[\"索引\"，[\"列名1\",\"列名2\"]]#得到series\n    \n2. 使用值列表进行查询\n\tdf.loc[['索引1','索引2'],[\"列\"]]#得到series\n    df.loc[['索引1','索引2'],['列1'，'列2']]#得到df\n    \n3. 使用数值区间进行范围查询\n\tdf.loc['开始索引':'结束索引','列']#按行index区间进行查询\n    df.loc['索引','开始列':'结束列']#按列index区间进行查询\n    df.loc['开始索引':'结束索引','开始列':'结束列']#按行列区间查询\n    \n4. 使用条件表达式查询\n\tdf.loc[df['列']<-10,:]#根据列小于10的行索引，列取全部\n    df.loc[(df['列1']<=30)&(df['列2']>=10),:] #复杂条件查询\n    \n5. 调用函数查询\n\tdf.loc[lambda df: (df['列1']<=30)&(df['列2']>=10),:]\n    \n    df.loc[函数名,:]\n    def 函数名:\n        return df.index.str.startswith(\"xxx\") & df[\"列\"]==1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n> 适用行、列\n> \n> 降维：datafarme>series>值\n\n\n# 新增数据列\n\n1. 直接赋值\n\tdf.loc[:,'列']=df[\"列\"].str.replace(\"c\",\"\").astype('int32')#替换\n\tdf.loc[:,'列3']=df[\"列1\"]-df['列2']#新增\n    \n2. apply 赋值\n\tdef set(x):\n        if x['列1']>30:\n            return '高'\n        if x['列2']<-10:\n            return '低'\n        return '中'\n    df.loc[:,'wendu']=df.apply(set,axis=1) #columns=1,index=0\n    #统计=>对相同类型的key进行统计\n    df['wendu'].value_counts()\n    \n3. assign 同时添加多个列\n\tdf.assign(\n    \t列1=lambda x:x['列1'] *9/4 +32,\n        列2=lambda x:x['列2'] *9/4 +32,\n    )\n    \n4. 分条件赋值\n\tdf['wencha']=''\n\tdf.loc[df['列1']-df['列2']>10,'wencha']='温差大'\n\tdf.loc[df['列1']-df['列2']<=10,'wencha']='温差正常'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 数据统计函数\n\n * 汇总类统计\n * 唯一去重和按值计数\n * 相关系数和协方差\n\n# 汇总类统计\n    df.describe()#提取所有数字列统计结果  \n    #count统计、menan平均值、std标准差、min最小值、max最大值、分位数\n    df['列'].mean()#查看单个serise的数据 p\n    df['列'].max()\n    df['列'].min()\n    df['列'].median()#中位数\n\n# 唯一去重和按值计数\n\tdf['列'].unique()#出现值的范围，有那些值\n    df['列'].value_counts()#统计每个值出现了多少次\n   \n# 相关系数(相似度)和协方差(反向程度) =>俩个股票的，正相关or负相关   产品销量的波动，跟那些因数正相关，负相关\n\tdf.cov()#协方差矩阵  正 同向变化\n    df.corr()#相关系数矩阵  1正相关 -1负相关\n    df['列'].cov()\n    df['列'].corr(df['列1']-df['列2'])\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 缺失值处理\n\n * isnull和notnull：检测是否有空值\n * dropna：丢弃、删除缺失值\n   * axis：删除行还是列=> 0:index 1:columns 默认是0\n   * how：适用范围，如果等于any是任何，等于all为空才删除\n   * inplace：如果true修改当前df,否则返回新df\n * fillna：填充缺失值\n   * value：用于填充的值，可以单个值，或者字典（key是列名，value是值）\n   * method：等于ffill使用前一个不为空的值填充；等于bfil使用后一个填充\n   * axis：按照行或列填充（0行1列）\n   * inplace：true原df修改,否则返回新df\n\n#检测空值\n\tdf.isnull()#所有为空\n    df['列'].isnull()\n    df.loc[df['列'].notnull(),:]#筛选不为空的数据\n    \n#删除全是空值的数据\n\tdf.dropna(axis='columns',how='all',inplace=true)#全是空列\n\tdf.dropna(axis='index',how='all',inplace=true)#全是空行\n\n#填充\n\tdf.fillna({\"列\":0})\n    df.loc[:,'列']=df['列'].fillna(0)\n    df.loc[:,'列']=df['列'].fillna(method='ffill')\n#保存\n\tdf.to_excel(路径,index=false)#不生成index数据\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 数据排序\n\n * series排序\n   \n   series.sort_values(ascending=true,inplace=false)\n   #参数说明\n   \tascending：true升序、false降序\n   \n   \n   1\n   2\n   3\n   \n\n * dataframe排序\n   \n   dataframe.sort_values(by,ascending=true,inplace=false)\n   #参数说明\n   \tascending：true升序、false降序\n       by:字符串或者list<字符串> 单列排序或多列排序\n   \n   \n   1\n   2\n   3\n   4\n   \n\ndf.sort_values(by=['列1'，'列2'],ascending=[true,false])\n\n\n1\n\n\n\n# 字符串处理\n\n> 先调用str属性在调用对应字符串函数（df没有str属性和处理方法）\n> \n> 只能字符串列上使用，不能在数字列上使用\n\ndf.str.replace(\"替换\"，\"1\")#支持正则替换\ndf.str.isnumeric()#判断是不是数字\ndf.str.startswith(\"开头\")\ndf.str.replace(\"替换\",'1').str.sclice(0,5)#链式调用\n\n\n1\n2\n3\n4\n\n\n\n# axis参数\n\n * axis=0或index\n   * 如果是单行操作：指某一行\n   * 如果是聚合操作：指跨行cross rows\n * axis=1或columns\n   * 单列操作，就指的是某一列\n   * 聚合操作：指跨列cross columns\n\n\n# 索引index\n\n用途：\n\n * 更方便的数据查询\n * 性能提升\n * 自动数据对齐\n * 更多更强大的数据结构支持\n\n#设置索引\ndf.set_index('列名',inplace=true,drop=false)#drop是让索引列还保在数据中\n\n\n1\n2\n\n\n\n# 合并\n\n * merge\n   \n   pd.merge(left,how='inner',on=none,left_on=none,left_index=false,right_index=false,sort=true,suffixes=('_x','_y'),copy=true,indicator=false,validate=none)\n   \n   left、right 要合并的df或有name的series\n   how join的类型\n   on join的key\n   left_on 左连接key\n   rigth_on 右连接的key\n   left_index,right_index 使用index而不是普通的column做join\n   suffixes 俩个元素的后缀，列有重名自动加后缀\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * concat\n   \n   > 使用某种合并方式(内外)，沿某个轴向(axis=0/1),把多个pandas对象合并成一个\n   \n   pd.concat(objs,axis=0,join='outer',ignore_index=false)\n   objs: 一个列表 df或seres可混合\n   axis：默认是0按行合并，1是按列合并\n   join：合并时索引对齐方式 outer、inner\n   ignore_index 是否忽略原来的索引\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * append\n   \n   df.append(other,ignore_index=false)\n   other:ignore_index 是否忽略原来的索引单个df、series、dict、或列表\n   ignore_index 是否忽略原来的索引\n   \n   \n   1\n   2\n   3\n   \n\n#连接\npd.merge(表1，表2，left_on='表1key',right_on='表2key',how='inner')#内连接\n\n#一对一，一对多，多对多数量对齐关系\npd.merge(表1,表2，on='相同的列名'）\n\n\n#左右连接、内连接、外连接区别\npd.merge(表1,表2，how='left')\npd.merge(表1,表2，how='right')\npd.merge(表1,表2，how='ourter') \n         \n#重名处理\npd.merge(表1,表2，on='相列名',suffixe=['_left','_right'])         \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 批量拆分和合并excel\n\n> 拆分 df.iloc 合并df.concat() 保存df.toexcel()\n\n\n# 分组统计\n\n> groupby\n\n#分组使用聚合函数左数据统计\n\tdf.groupby('列').sum() #单列分组统计\n\tdf.groupby(['列1','列2']).mean() #多列分组统计\n    df.groupby(['列1','列2'],as_index=false).mean() #多列分组统计 不变成索引\n    df.groupby('列').agg([np.sum,np.mean,np.std])\t#查看多中数据统计\n    df.groupby('列')['列'].agg([np.sum,np.mean,np.std])\t#查看多中数据统计\n    df.groupby('列').agg([\"c列\":np.sum,\"d列\":np.mean])\t#不同列使用不同聚合函数    \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 分层索引\n\n#series\nr=df.groupby(['公司','日期'])['收盘'].mean()#分层索引\nr.index\nr.unstack()#把二级索引变成列\nr.reset_index()#变成普通的列\n\nr.loc['索引']\nr.loc[('索引1','索引2')]\n\n#datafrme\ndf.set_index(['公司','日期'],inplace=true)\ndf.sort_index(inplace=true)\ndf.loc[['1','2'],:]\ndf.reset_index()\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 数据转换函数\n\n * map：适用于series、实现每个值->指的映射\n * apply：series实现对某个值的处理、用于df实现每个周的series的处理\n * applymap：只能用于df\n\n\n# 数据透视和投射\n\n * unstack实现数据二维透视\n * pivot简化透视\n * stack",charsets:{cjk:!0}},{title:"Kerberos笔记",frontmatter:{title:"Kerberos笔记",date:"2021-10-17T00:00:00.000Z",tags:["Kerberos"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/28.Kerberos.html",relativePath:"view/docs/笔记/28.Kerberos.md",key:"v-464eb01e",path:"/view/docs/%E7%AC%94%E8%AE%B0/28.Kerberos.html",headers:[{level:2,title:"Kerberos概述",slug:"kerberos概述",normalizedTitle:"kerberos概述",charIndex:2},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:287},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:2077},{level:2,title:"创建Hadoop系统用户",slug:"创建hadoop系统用户",normalizedTitle:"创建hadoop系统用户",charIndex:3007},{level:2,title:"Hadoop Kerberos配置",slug:"hadoop-kerberos配置",normalizedTitle:"hadoop kerberos配置",charIndex:3476},{level:3,title:"安全传输协议",slug:"安全传输协议",normalizedTitle:"安全传输协议",charIndex:13224},{level:3,title:"配置Yarn",slug:"配置yarn",normalizedTitle:"配置yarn",charIndex:15015},{level:2,title:"安全模式下启动Hadoop集群",slug:"安全模式下启动hadoop集群",normalizedTitle:"安全模式下启动hadoop集群",charIndex:16914},{level:3,title:"启动HDFS",slug:"启动hdfs",normalizedTitle:"启动hdfs",charIndex:18689},{level:3,title:"启动YARN",slug:"启动yarn",normalizedTitle:"启动yarn",charIndex:21972},{level:2,title:"安全集群使用",slug:"安全集群使用",normalizedTitle:"安全集群使用",charIndex:22542},{level:2,title:"Hive用户认证配置",slug:"hive用户认证配置",normalizedTitle:"hive用户认证配置",charIndex:24065},{level:3,title:"使用",slug:"使用-2",normalizedTitle:"使用",charIndex:2077}],lastUpdated:"2021/10/25 下午9:19:48",headersStr:"Kerberos概述 安装 使用 创建Hadoop系统用户 Hadoop Kerberos配置 安全传输协议 配置Yarn 安全模式下启动Hadoop集群 启动HDFS 启动YARN 安全集群使用 Hive用户认证配置 使用",content:'# Kerberos概述\n\n是一种计算机网络认证协议，对个人通信以安全手段进行身份验证。MIT开发的。\n\n术语：\n\n * KDC:密钥分发中心，负责存储用户信息，管理发放票据。\n\n * Realm：Kerberos所管理的一个领域或范围，称之为一个Realm。\n\n * Rrincipal：Kerberos所管理的一个用户或者一个服务，可以理解为Kerberos中保存的一个账号，其格式通常如下：primary/nstance@realm\n\n * keytab：Kerberos中的用户认证，可通过密码或者密钥文件证明身份，keytab指密钥文件。\n\n认证原理\n\n\n\n\n# 安装\n\n规划：选择node1作为服务器KDC,然后所有主机都部署客户端\n\n> 三台主机切换到root 往下操作都用root\n> \n> su root\n> \n> \n> 1\n\n安装服务\n\n#node1\nyum install -y krb5-server\n#全部节点\nyum install -y krb5-workstation krb5-libs\n\n\n1\n2\n3\n4\n\n\n修改配置\n\n#node1\nvim /var/kerberos/krb5kdc/kdc.conf\n修改\n# EXAMPLE.COM  改一下名字就可以了 公司名，这里就不改了\n[kdcdefaults]\n kdc_ports = 88\n kdc_tcp_ports = 88\n[realms]\n EXAMPLE.COM = {\n  #master_key_type = aes256-cts\n  acl_file = /var/kerberos/krb5kdc/kadm5.acl\n  dict_file = /usr/share/dict/words\n  admin_keytab = /var/kerberos/krb5kdc/kadm5.keytab\n  supported_enctypes = aes256-cts:normal aes128-\tcts:normal des3-hmac-sha1:normal arcfour-hmac:normal camellia256-cts:normal camellia128-cts:normal des-hmac-sha1:normal des-cbc-md5:normal des-cbc-crc:normal\n }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n#所有主机\n vim /etc/krb5.conf\n \n#修改\n[logging]\n default = FILE:/var/log/krb5libs.log\n kdc = FILE:/var/log/krb5kdc.log\n admin_server = FILE:/var/log/kadmind.log\n\n[libdefaults]\n dns_lookup_realm = false\n dns_lookup_kdc = false\n ticket_lifetime = 24h\n renew_lifetime = 7d\n forwardable = true\n rdns = false\n pkinit_anchors = FILE:/etc/pki/tls/certs/ca-bundle.crt\n default_realm = EXAMPLE.COM\n #default_ccache_name = KEYRING:persistent:%{uid}\n\n[realms]\n EXAMPLE.COM = {\n  kdc = node1\n  admin_server = node1\n }\n[domain_realm]\n# .example.com = EXAMPLE.COM\n# example.com = EXAMPLE.COM\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n初始化KDC数据库\n\n#node1\nkdb5_util create -s\n#输入密码 hadoop 和确认密码\n\n\n1\n2\n3\n\n\n修改管理员权限配置文件\n\n#node1\nvim /var/kerberos/krb5kdc/kadm5.acl\n#默认是不需要改的\n*/admin@EXAMPLE.COM     *\n\n\n1\n2\n3\n4\n\n\n启动\n\n#node1\nsystemctl start krb5kdc\nsystemctl enable krb5kdc#开启自起\n\nsystemctl start kadmin #启动数据访问入口\nsystemctl enable kadmin\n\n\n1\n2\n3\n4\n5\n6\n\n\n创建管理员用户\n\nkadmin.local -q "addprinc admin/admin"\n#输入密码\n\n\n1\n2\n\n\n\n# 使用\n\n基本操作\n\n * 数据库的操作\n   \n   1. 本地登录（无需验证）\n   \tkadmin.local \n   2. 远程登录\n   \t kadmin \n   exit #退出\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 创建主体 test表示创建的用户\n   \n   #未登录：kadmin.local -q"addprinc test"\n   kadmin.local: addprinc test\n   \n   \n   1\n   2\n   \n\n * 修改主体\n   \n   kadmin.local :cpw test \n   #输入修改的密码\n   \n   \n   1\n   2\n   \n\n * 查看所有主体：\n   \n   kadmin.local: list_principals\n   \n   \n   1\n   \n\n * 删除\n   \n   delprinc test\n   \n   \n   1\n   \n\n认证操作\n\n * 密码认证\n   \n   #主体认证 输入用户名密码\n   kinit test\n   #查看认证\n   klist\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 密钥文件认证\n   \n   #生成主体test的keytab文件到指定目录/root/test.keytab\n   kadmin.local -q "xst -norandkey -k  /root/test.keytab test@EXAMPLE.COM"\n   #-norandkey的作用是声明不随机生成密码，若不加该参数，会导致之前的密码失效\n   \n   #使用keytab进行认证\n   kinit -kt /root/test.keytab test\n   #查看认证凭证\n   klist \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * *销毁凭证*\n   \n   #销毁\n   kdestroy\n   #查看\n   klist\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# 创建Hadoop系统用户\n\n不同的服务创建不同的用户\n\n*USER:GROUP*      *DAEMONS*\n*hdfs:hadoop*     NameNode, Secondary NameNode, JournalNode, DataNode\n*yarn:hadoop*     ResourceManager, NodeManager\n*mapred:hadoop*   MapReduce JobHistory Server\n\n#三台\n#创建组\ngroupadd hadoop\n#创建各用户并设置密码 #三台\nuseradd hdfs -g hadoop\necho hdfs | passwd --stdin  hdfs\n\nuseradd yarn -g hadoop\necho yarn | passwd --stdin yarn\n\nuseradd mapred -g hadoop\necho mapred | passwd --stdin mapred\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# Hadoop Kerberos配置\n\n为Hadoop各服务创建Kerberos主体（Principal）\n\n*服务*                        *所在主机*   *主体（PRINCIPAL）*\n*NameNode*                  node1    nn/node1\n*DataNode*                  node1    dn/node1\n*D********ataNode*          node2    dn/node2\n*DataNode*                  node3    dn/node3\n*Secondary NameNode*        node3    sn/node3\n*Resource********Manager*   node2    rm/node2\n*N********odeManager*       node1    nm/node1\n*N********odeManager*       node2    nm/node2\n*N********odeManager*       node3    nm/node3\n*JobHistory Server*         node1    jhs/node1\n*W********eb UI*            node1    HTTP/node1\n*W********eb UI*            node2    HTTP/node2\n*W********eb UI*            node3    HTTP/node3\n\n * 路径准备:存储密钥文件\n   \n   #每台节点\n   mkdir /etc/security/keytab/\n   chown -R root:hadoop /etc/security/keytab/\n   chmod 770 /etc/security/keytab/\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 创建主体和放置在指定目录下\n   \n   #以下命令在node1节点执行\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey nn/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/nn.service.keytab nn/node1"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey dn/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/dn.service.keytab dn/node1"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey nm/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/nm.service.keytab nm/node1"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey jhs/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/jhs.service.keytab jhs/node1"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey HTTP/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/spnego.service.keytab HTTP/node1"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n   \n   #node2\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey rm/node2"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/rm.service.keytab rm/node2"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey dn/node2"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/dn.service.keytab dn/node2"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey nm/node2"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/nm.service.keytab nm/node2"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey HTTP/node2"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/spnego.service.keytab HTTP/node2"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   #node3\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey dn/node3"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/dn.service.keytab dn/node3"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey sn/node3"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/sn.service.keytab sn/node3"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey nm/node3"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/nm.service.keytab nm/node3"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey HTTP/node3"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/spnego.service.keytab HTTP/node3"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   修改所有节点keytab文件的所有者和访问权限。\n   \n   #三台\n   chown -R root:hadoop /etc/security/keytab/\n   chmod 660 /etc/security/keytab/*\n   \n   \n   1\n   2\n   3\n   \n\n * 修改hadoop配置文件\n   \n   * core-site.xml\n     \n     vim /opt/module/hadoop-3.1.3/etc/hadoop/core-site.xml\n     \n     \x3c!-- Kerberos主体到系统用户的映射机制 --\x3e\n     <property>\n       <name>hadoop.security.auth_to_local.mechanism</name>\n       <value>MIT</value>\n     </property>\n     \n     \x3c!-- Kerberos主体到系统用户的具体映射规则 --\x3e\n     <property>\n       <name>hadoop.security.auth_to_local</name>\n       <value>\n         RULE:[2:$1/$2@$0]([ndj]n\\/.*@EXAMPLE\\.COM)s/.*/hdfs/\n         RULE:[2:$1/$2@$0]([rn]m\\/.*@EXAMPLE\\.COM)s/.*/yarn/\n         RULE:[2:$1/$2@$0](jhs\\/.*@EXAMPLE\\.COM)s/.*/mapred/\n         DEFAULT\n       </value>\n     </property>\n     \n     \x3c!-- 启用Hadoop集群Kerberos安全认证 --\x3e\n     <property>\n       <name>hadoop.security.authentication</name>\n       <value>kerberos</value>\n     </property>\n     \n     \x3c!-- 启用Hadoop集群授权管理 --\x3e\n     <property>\n       <name>hadoop.security.authorization</name>\n       <value>true</value>\n     </property>\n     \n     \x3c!-- Hadoop集群间RPC通讯设为仅认证模式 --\x3e\n     <property>\n       <name>hadoop.rpc.protection</name>\n       <value>authentication</value>\n     </property>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     \n   \n   * hdfs-site.xml\n     \n     vim /opt/module/hadoop-3.1.3/etc/hadoop/hdfs-site.xml\n     \n     \x3c!-- 访问DataNode数据块时需通过Kerberos认证 --\x3e\n     <property>\n       <name>dfs.block.access.token.enable</name>\n       <value>true</value>\n     </property>\n     \n     \x3c!-- NameNode服务的Kerberos主体,_HOST会自动解析为服务所在的主机名 --\x3e\n     <property>\n       <name>dfs.namenode.kerberos.principal</name>\n       <value>nn/_HOST@EXAMPLE.COM</value>\n     </property>\n     \n     \x3c!-- NameNode服务的Kerberos密钥文件路径 --\x3e\n     <property>\n       <name>dfs.namenode.keytab.file</name>\n       <value>/etc/security/keytab/nn.service.keytab</value>\n     </property>\n     \n     \x3c!--Secondary NameNode服务的Kerberos密钥文件路径  --\x3e\n     <property>\n       <name>dfs.secondary.namenode.keytab.file</name>\n       <value>/etc/security/keytab/sn.service.keytab</value>\n     </property>\n     \n     \x3c!--Secondary NameNode服务的Kerberos主体  --\x3e\n     <property>\n       <name>dfs.secondary.namenode.kerberos.principal</name>\n       <value>sn/_HOST@EXAMPLE.COM</value>\n     </property>\n     \n     \x3c!-- NameNode Web服务的Kerberos主体 --\x3e\n     <property>\n       <name>dfs.namenode.kerberos.internal.spnego.principal</name>\n       <value>HTTP/_HOST@EXAMPLE.COM</value>\n     </property>\n     \n     \x3c!-- WebHDFS REST服务的Kerberos主体 --\x3e\n     <property>\n       <name>dfs.web.authentication.kerberos.principal</name>\n       <value>HTTP/_HOST@EXAMPLE.COM</value>\n     </property>\n     \n     \x3c!-- Secondary NameNode Web UI服务的Kerberos主体 --\x3e\n     <property>\n       <name>dfs.secondary.namenode.kerberos.internal.spnego.principal</name>\n       <value>HTTP/_HOST@EXAMPLE.COM</value>\n     </property>\n     \n     \x3c!-- Hadoop Web UI的Kerberos密钥文件路径 --\x3e\n     <property>\n       <name>dfs.web.authentication.kerberos.keytab</name>\n       <value>/etc/security/keytab/spnego.service.keytab</value>\n     </property>\n     \n     \x3c!-- DataNode服务的Kerberos主体 --\x3e\n     <property>\n       <name>dfs.datanode.kerberos.principal</name>\n       <value>dn/_HOST@EXAMPLE.COM</value>\n     </property>\n     \n     \x3c!-- DataNode服务的Kerberos密钥文件路径 --\x3e\n     <property>\n       <name>dfs.datanode.keytab.file</name>\n       <value>/etc/security/keytab/dn.service.keytab</value>\n     </property>\n     \n     \x3c!-- 配置NameNode Web UI 使用HTTPS协议 --\x3e\n     <property>\n       <name>dfs.http.policy</name>\n       <value>HTTPS_ONLY</value>\n     </property>\n     \n     \x3c!-- 配置DataNode数据传输保护策略为仅认证模式 --\x3e\n     <property>\n       <name>dfs.data.transfer.protection</name>\n       <value>authentication</value>\n     </property>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     46\n     47\n     48\n     49\n     50\n     51\n     52\n     53\n     54\n     55\n     56\n     57\n     58\n     59\n     60\n     61\n     62\n     63\n     64\n     65\n     66\n     67\n     68\n     69\n     70\n     71\n     72\n     73\n     74\n     75\n     76\n     77\n     78\n     79\n     \n   \n   * yarn-site.xml\n     \n     vim /opt/module/hadoop-3.1.3/etc/hadoop/yarn-site.xml\n     \n     \x3c!-- Resource Manager 服务的Kerberos主体 --\x3e\n     <property>\n       <name>yarn.resourcemanager.principal</name>\n       <value>rm/_HOST@EXAMPLE.COM</value>\n     </property>\n     \n     \x3c!-- Resource Manager 服务的Kerberos密钥文件 --\x3e\n     <property>\n       <name>yarn.resourcemanager.keytab</name>\n       <value>/etc/security/keytab/rm.service.keytab</value>\n     </property>\n     \n     \x3c!-- Node Manager 服务的Kerberos主体 --\x3e\n     <property>\n       <name>yarn.nodemanager.principal</name>\n       <value>nm/_HOST@EXAMPLE.COM</value>\n     </property>\n     \n     \x3c!-- Node Manager 服务的Kerberos密钥文件 --\x3e\n     <property>\n       <name>yarn.nodemanager.keytab</name>\n       <value>/etc/security/keytab/nm.service.keytab</value>\n     </property>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     \n   \n   * mappred-site.xml\n     \n     vim /opt/module/hadoop-3.1.3/etc/hadoop/mapred-site.xml\n     \n     \x3c!-- 历史服务器的Kerberos主体 --\x3e\n     <property>\n       <name>mapreduce.jobhistory.keytab</name>\n       <value>/etc/security/keytab/jhs.service.keytab</value>\n     </property>\n     \n     \x3c!-- 历史服务器的Kerberos密钥文件 --\x3e\n     <property>\n       <name>mapreduce.jobhistory.principal</name>\n       <value>jhs/_HOST@EXAMPLE.COM</value>\n     </property>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     \n   \n   * 分发配置文件\n     \n      xsync /opt/module/hadoop-3.1.3/etc/hadoop/core-site.xml\n      xsync /opt/module/hadoop-3.1.3/etc/hadoop/hdfs-site.xml\n      xsync /opt/module/hadoop-3.1.3/etc/hadoop/yarn-site.xml\n      xsync /opt/module/hadoop-3.1.3/etc/hadoop/mapred-site.xml\n     \n     \n     1\n     2\n     3\n     4\n     \n\n\n# 安全传输协议\n\n生成密钥对\n\nKeytool是java数据证书的管理工具，让用户管理自己的公/私钥相关证书。\n\n * keystore 指定密钥库的名称以及位置\n * genkey 生成密钥对\n * alias 指定别名 默认是mykey\n * keyalg 指定密钥算法RSA/DSA 默认是DSA\n\n生成：\n\nkeytool -keystore /etc/security/keytab/keystore -alias jetty -genkey -keyalg RSA\n输入密钥库口令:  hadoop\n再次输入新口令: \n您的名字与姓氏是什么?\n  [Unknown]:  \n您的组织单位名称是什么?\n  [Unknown]:  \n您的组织名称是什么?\n  [Unknown]:  \n您所在的城市或区域名称是什么?\n  [Unknown]:  \n您所在的省/市/自治区名称是什么?\n  [Unknown]:  \n该单位的双字母国家/地区代码是什么?\n  [Unknown]:  \nCN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown是否正确?\n  [否]:  y\n\n输入 <jetty> 的密钥口令\n        (如果和密钥库口令相同, 按回车):  \n再次输入新口令:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n#查看\nkeytool -keystore keystore -list\n\n\n1\n2\n\n\n修改keystore文件的所有者和访问权限\n\nchown -R root:hadoop /etc/security/keytab/keystore\nchmod 660 /etc/security/keytab/keystore\n\n\n1\n2\n\n\n分发\n\nxsync /etc/security/keytab/keystore\n\n\n1\n\n\n配置ssl参数 $HADOOP_HOME/etc/hadoop\n\n cd /opt/module/hadoop-3.1.3/etc/hadoop\n mv $HADOOP_HOME/etc/hadoop/ssl-server.xml.example $HADOOP_HOME/etc/hadoop/ssl-server.xml\n \n 修改以下参数\n\x3c!-- SSL密钥库路径 --\x3e\n<property>\n  <name>ssl.server.keystore.location</name>\n  <value>/etc/security/keytab/keystore</value>\n</property>\n\n\x3c!-- SSL密钥库密码 --\x3e\n<property>\n  <name>ssl.server.keystore.password</name>\n  <value>123456</value>\n</property>\n\n\x3c!-- SSL可信任密钥库路径 --\x3e\n<property>\n  <name>ssl.server.truststore.location</name>\n  <value>/etc/security/keytab/keystore</value>\n</property>\n\n\x3c!-- SSL密钥库中密钥的密码 --\x3e\n<property>\n  <name>ssl.server.keystore.keypassword</name>\n  <value>123456</value>\n</property>\n\n\x3c!-- SSL可信任密钥库密码 --\x3e\n<property>\n  <name>ssl.server.truststore.password</name>\n  <value>123456</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n分发\n\nxsync $HADOOP_HOME/etc/hadoop/ssl-server.xml\n\n\n1\n\n\n\n# 配置Yarn\n\n配置使用LinuxContainerExecutor\n\n1）修改所有节点的container-executor所有者和权限，要求其所有者为root，所有组为hadoop，启动NodeManger的yarn用户的所属组），权限为6050，其默认路径为$HADOOP_HOME/bin\n\n#三台\nchown root:hadoop /opt/module/hadoop-3.1.3/bin/container-executor\nchmod 6050 /opt/module/hadoop-3.1.3/bin/container-executor\n\n\n1\n2\n3\n\n\n2）修改所有节点的container-executor.cfg文件的所有者和权限，要求该文件及其所有的上级目录的所有者均为root，所有组为hadoop（启动NodeManger的yarn用户的所属组），权限为400。其默认路径为$HADOOP_HOME/etc/hadoop\n\n#三台\nchown root:hadoop /opt/module/hadoop-3.1.3/etc/hadoop/container-executor.cfg\nchown root:hadoop /opt/module/hadoop-3.1.3/etc/hadoop\nchown root:hadoop /opt/module/hadoop-3.1.3/etc\nchown root:hadoop /opt/module/hadoop-3.1.3\nchown root:hadoop /opt/module\nchmod 400 /opt/module/hadoop-3.1.3/etc/hadoop/container-executor.cfg\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n3）修改$HADOOP_HOME/etc/hadoop/container-executor.cfg\n\nvim $HADOOP_HOME/etc/hadoop/container-executor.cfg\n\n#添加\nyarn.nodemanager.linux-container-executor.group=hadoop\nbanned.users=hdfs,yarn,mapred\nmin.user.id=1000\nallowed.system.users=\nfeature.tc.enabled=false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n4）修改$HADOOP_HOME/etc/hadoop/yarn-site.xml文件\n\nvim $HADOOP_HOME/etc/hadoop/yarn-site.xml\n#增加以下内容\n\x3c!-- 配置Node Manager使用LinuxContainerExecutor管理Container --\x3e\n<property>\n  <name>yarn.nodemanager.container-executor.class</name>\n  <value>org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor</value>\n</property>\n\n\x3c!-- 配置Node Manager的启动用户的所属组 --\x3e\n<property>\n  <name>yarn.nodemanager.linux-container-executor.group</name>\n  <value>hadoop</value>\n</property>\n\n\x3c!-- LinuxContainerExecutor脚本路径 --\x3e\n<property>\n  <name>yarn.nodemanager.linux-container-executor.path</name>\n  <value>/opt/module/hadoop-3.1.3/bin/container-executor</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n5）分发container-executor.cfg和yarn-site.xml文件\n\nxsync $HADOOP_HOME/etc/hadoop/container-executor.cfg\nxsync $HADOOP_HOME/etc/hadoop/yarn-site.xml\n\n\n1\n2\n\n\n\n# 安全模式下启动Hadoop集群\n\n修改特定本地路径权限\n\n*LOCAL*   $HADOOP_LOG_DIR               HDFS:HADOOP   DRWXRWXR-X\n*local*   dfs.namenode.name.dir         hdfs:hadoop   drwx------\n*local*   dfs.datanode.data.dir         hdfs:hadoop   drwx------\n*local*   dfs.namenode.checkpoint.dir   hdfs:hadoop   drwx------\n*local*   yarn.nodemanager.local-dirs   yarn:hadoop   drwxrwxr-x\n*local*   yarn.nodemanager.log-dirs     yarn:hadoop   drwxrwxr-x\n\n1）$HADOOP_LOG_DIR（所有节点）\n\n该变量位于hadoop-env.sh文件，默认值为 ${HADOOP_HOME}/logs\n\nchown hdfs:hadoop /opt/module/hadoop-3.1.3/logs/\nchmod 775 /opt/module/hadoop-3.1.3/logs/\n\n\n1\n2\n\n\n2）dfs.namenode.name.dir（NameNode节点）\n\n该参数位于hdfs-site.xml文件，默认值为file://${hadoop.tmp.dir}/dfs/name\n\n#node1\nchown -R hdfs:hadoop /opt/module/hadoop-3.1.3/data/dfs/name/\nchown -R hdfs:hadoop /opt/module/hadoop-3.1.3/data/dfs/name/\n\n\n1\n2\n3\n\n\n3）dfs.datanode.data.dir（DataNode节点）\n\n该参数为于hdfs-site.xml文件，默认值为file://${hadoop.tmp.dir}/dfs/data\n\nchown -R hdfs:hadoop /opt/module/hadoop-3.1.3/data/dfs/data/\nchmod 700 /opt/module/hadoop-3.1.3/data/dfs/data/\n\n\n1\n2\n\n\n4）dfs.namenode.checkpoint.dir（SecondaryNameNode节点）\n\n该参数位于hdfs-site.xml文件，默认值为file://${hadoop.tmp.dir}/dfs/namesecondary\n\n#node3\nchown -R hdfs:hadoop /opt/module/hadoop-3.1.3/data/dfs/namesecondary/\nchmod 700 /opt/module/hadoop-3.1.3/data/dfs/namesecondary/\n\n\n1\n2\n3\n\n\n5）yarn.nodemanager.local-dirs（NodeManager节点）\n\n该参数位于yarn-site.xml文件，默认值为file://${hadoop.tmp.dir}/nm-local-dir\n\n#三台\nchown -R yarn:hadoop /opt/module/hadoop-3.1.3/data/nm-local-dir/\nchmod -R 775 /opt/module/hadoop-3.1.3/data/nm-local-dir/\n\n\n1\n2\n3\n\n\n6）yarn.nodemanager.log-dirs（NodeManager节点）\n\n该参数位于yarn-site.xml文件，默认值为$HADOOP_LOG_DIR/userlogs\n\n#三台\nchown yarn:hadoop /opt/module/hadoop-3.1.3/logs/userlogs/\nchmod 775 /opt/module/hadoop-3.1.3/logs/userlogs/\n\n\n1\n2\n3\n\n\n\n# 启动HDFS\n\n单点启动：\n\n#启动NameNode (node1)\nsudo -i -u hdfs hdfs --daemon start namenode\n#启动DataNode（3个）\nsudo -i -u hdfs hdfs --daemon start datanode\n#启动SecondaryNameNode (node3)\nsudo -i -u hdfs hdfs --daemon start secondarynamenode\n\n说明：\n-i：重新加载环境变量\n-u：以特定用户的身份执行后续命令\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n访问：https://node1:9871/ 注意端口号：9871\n\n群启：\n\n在node1上给hdfs用户配置所有节点免密登录、修改node1上的$HADOOP_HOME/sbin/start-dfs.sh脚本\n\nssh-keygen\n#三回车  \n\n#node1上执行拷贝 输入hdfs的密码\nssh-copy-id node1\nssh-copy-id node2\nssh-copy-id node3\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n#node1\nvim $HADOOP_HOME/sbin/start-dfs.sh\nvim $HADOOP_HOME/sbin/stop-dfs.sh\n在顶部增加如下内容\nHDFS_DATANODE_USER=hdfs\nHDFS_NAMENODE_USER=hdfs\nHDFS_SECONDARYNAMENODE_USER=hdfs\n\n注意：俩个都加上才能使用\n\n以root用户执行群起脚本，即可启动HDFS集群\nstart-dfs.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n修改HDFS特定路径访问权限：\n\n*HDFS*   /                                            HDFS:HADOOP     DRWXR-XR-X\n*hdfs*   /tmp                                         hdfs:hadoop     drwxrwxrwxt\n*hdfs*   /user                                        hdfs:hadoop     drwxrwxr-x\n*hdfs*   yarn.nodemanager.remote-app-log-dir          yarn:hadoop     drwxrwxrwxt\n*hdfs*   mapreduce.jobhistory.intermediate-done-dir   mapred:hadoop   drwxrwxrwxt\n*hdfs*   mapreduce.jobhistory.done-dir                mapred:hadoop   drwxrwx---\n\n若上述路径不存在，需手动创建\n\n * 创建hdfs/hadoop主体\n   \n   kadmin.local -q "addprinc hdfs/hadoop"\n   \n   \n   1\n   \n\n * 认证hdfs/hadoop主体\n   \n   kinit hdfs/hadoop\n   \n   \n   1\n   \n\n * 指定用户组和权限的管理\n   \n    #修改/、/tmp、/user路径\n    hadoop fs -chown hdfs:hadoop / /tmp /user\n    hadoop fs -chmod 755 /\n    hadoop fs -chmod 1777 /tmp\n    hadoop fs -chmod 775 /user\n    \n    #yarn.nodemanager.remote-app-log-dir位于yarn-site.xml文件，默认值/tmp/logs\n     hadoop fs -chown yarn:hadoop /tmp/logs\n     hadoop fs -chmod 1777 /tmp/logs\n     \n    #参数mapreduce.jobhistory.intermediate-done-dir位于mapred-site.xml文件，默认值为/tmp/hadoop-yarn/staging/history/done_intermediate，需保证该路径的所有上级目录（除/tmp）的所有者均为mapred，所属组为hadoop，权限为770\n    \t\n    hadoop fs -chown -R mapred:hadoop /tmp/hadoop-yarn/staging/history/done_intermediate\n    hadoop fs -chmod -R 1777 /tmp/hadoop-yarn/staging/history/done_intermediate\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/staging/history/\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/staging/\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/staging/history/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/staging/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/\n    \n    #mapreduce.jobhistory.done-dir位于mapred-site.xml文件，默认值为/tmp/hadoop-yarn/staging/history/done，需保证该路径的所有上级目录（除/tmp）的所有者均为mapred，所属组为hadoop，权限为770\n    \n    hadoop fs -chown -R mapred:hadoop /tmp/hadoop-yarn/staging/history/done\n    hadoop fs -chmod -R 750 /tmp/hadoop-yarn/staging/history/done\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/staging/history/\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/staging/\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/staging/history/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/staging/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   \n\n\n# 启动YARN\n\n单点启动：\n\n#node2\nsudo -i -u yarn yarn --daemon start resourcemanager\n#3台\nsudo -i -u yarn yarn --daemon start nodemanager\n\n\n1\n2\n3\n4\n\n\n群启：\n\n配置node2节点yarn用户到所有节点的免密登录，修改启动配置文件\n\nsu yarn\nssh-keygen\nssh-copy-id node1\nssh-copy-id node2\nssh-copy-id node3\n\n\n1\n2\n3\n4\n5\n\n\n#root 下修改\nvim $HADOOP_HOME/sbin/start-yarn.sh\nvim $HADOOP_HOME/sbin/stop-yarn.sh\n在顶部增加如下内容\nYARN_RESOURCEMANAGER_USER=yarn\nYARN_NODEMANAGER_USER=yarn\n\n\n1\n2\n3\n4\n5\n6\n\n\nstop-yarn.sh #关闭\nstart-yarn.sh#启动\n\n\n1\n2\n\n\n启动历史服务器：\n\n#node1\nsudo -i -u mapred mapred --daemon start historyserver\n\n\n1\n2\n\n\n访问web页面：19888\n\n\n# 安全集群使用\n\n普通用户：\n\n * 集群中的每个节点需创建该用户。\n * 该用户需要属于hadoop用户组。\n * 需要创建该用户对应Kerberos主体\n\n实现：\n\n * 创建用户(有就跳过)\n   \n   #三台\n   useradd axcmsm\n   echo axcmsm | password --stdin axcmsm\n   \n   \n   1\n   2\n   3\n   \n\n * 加入hadoop组\n   \n   #三台\n   usermod -a -G hadoop axcmsm\n   \n   \n   1\n   2\n   \n\n * 创建主体\n   \n   kadmin -p admin/admin -whadoop -q"addprinc -pw axcmsm axcmsm"\n   #我的\n   kadmin -p admin/admin -whadoop -q"addprinc -pw hadoop101 hadoop101"\n   \n   \n   1\n   2\n   3\n   \n\n然后用xshell登录三台节点\n\nkinit hadoop101 #认证\nklist#查看\nhadoop fs -ls \\  #查看\n\n细节：在hadoop101 下jps是查看不了启动的进程的 只有切换到root才能查看和关闭集群。\n\n\n1\n2\n3\n4\n5\n\n\nweb页面操作\n\n * 安装Kerberos客户端\n   \n   下载地址：http://web.mit.edu/kerberos/dist/kfw/4.1/kfw-4.1-amd64.msi\n   \n   1）下载之后按照提示安装\n   \n   2）编辑C:\\ProgramData\\MIT\\Kerberos5\\krb5.ini文件，内容如下\n   \n   [libdefaults]\n    dns_lookup_realm = false\n    ticket_lifetime = 24h\n    forwardable = true\n    rdns = false\n    default_realm = EXAMPLE.COM\n   \n   [realms]\n    EXAMPLE.COM = {\n     kdc = node1\n     admin_server = node1\n    }\n   \n   [domain_realm]\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n * 配置火狐\n   \n   打开浏览器，在地址栏输入“about:config”，点击回车\n   \n   搜索“network.negotiate-auth.trusted-uris”，修改值为要访问的主机名（node1）\n   \n   搜索“network.auth.use-sspi”，双击将值变为false #这是认证协议，如果用这个就用不了我们的\n\n * 认证\n   \n   启动Kerberos客户端，点击GetTicet\n   \n   输入主体名和密码，点击OK，认证成功\n\n * 测试\n   \n   风闻hdfs，然后注销认证，再访问\n\n执行mr任务\n\nkinit hadoop101\n\n\n1\n\n\nhadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar pi 1 1\n\n\n1\n\n\n\n# Hive用户认证配置\n\n前置配置\n\n创建Hive系统用户和Kerberos主体\n\n#三台 用户\nuseradd hive -g hadoop\necho hive | passwd --stdin hive\n\n#创建主体 因为hive只部署在node1上\nkadmin -padmin/admin -whadoop -q"addprinc -randkey hive/node1"\nkadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/hive.service.keytab hive/node1"\n#修改keytab文件所有者和访问权限\n chown -R root:hadoop /etc/security/keytab/\n chmod 660 /etc/security/keytab/hive.service.keytab\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n配置认证\n\n1.修改$HIVE_HOME/conf/hive-site.xml文件，增加如下属性\n\nvim $HIVE_HOME/conf/hive-site.xml\n\n\x3c!-- HiveServer2启用Kerberos认证 --\x3e\n<property>\n    <name>hive.server2.authentication</name>\n    <value>kerberos</value>\n</property>\n\n\x3c!-- HiveServer2服务的Kerberos主体 --\x3e\n<property>\n    <name>hive.server2.authentication.kerberos.principal</name>\n    <value>hive/node1@EXAMPLE.COM</value>\n</property>\n\n\x3c!-- HiveServer2服务的Kerberos密钥文件 --\x3e\n<property>\n    <name>hive.server2.authentication.kerberos.keytab</name>\n    <value>/etc/security/keytab/hive.service.keytab</value>\n</property>\n\n\x3c!-- Metastore启动认证 --\x3e\n<property>\n    <name>hive.metastore.sasl.enabled</name>\n    <value>true</value>\n</property>\n\x3c!-- Metastore Kerberos密钥文件 --\x3e\n<property>\n    <name>hive.metastore.kerberos.keytab.file</name>\n    <value>/etc/security/keytab/hive.service.keytab</value>\n</property>\n\x3c!-- Metastore Kerberos主体 --\x3e\n<property>\n    <name>hive.metastore.kerberos.principal</name>\n    <value>hive/node1@EXAMPLE.COM</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n2.修改$HADOOP_HOME/etc/hadoop/core-site.xml文件\n\nvim $HADOOP_HOME/etc/hadoop/core-site.xml\n\n\n1\n\n\n删除以下参数\n\n<property>\n    <name>hadoop.http.staticuser.user</name>\n    <value>hadoop101</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hadoop101.hosts</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hadoop101.groups</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hadoop101.users</name>\n    <value>*</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n增加以下参数\n\n<property>\n    <name>hadoop.proxyuser.hive.hosts</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hive.groups</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hive.users</name>\n    <value>*</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n分发配置core-site.xml文件\n\nxsync $HADOOP_HOME/etc/hadoop/core-site.xml\n\n\n1\n\n\n重启Hadoop集群\n\n#关闭\nstop-dfs.sh\nstop-yarn.sh\n#启动\nstart-dfs.sh\nstart-yarn.sh\n\n\n1\n2\n3\n4\n5\n6\n\n\n启动hiveserver2\n\nsudo -i -u hive hiveserver2\n\n\n1\n\n\n\n# 使用\n\n> 普通用户\n\n#先要开启hiveserver2\nkinit hadoop101\n\n\n1\n2\n\n\n#使用beeline客户端连接hiveserver2\nbeeline\n\n> !connect jdbc:hive2://node1:10000/;principal=hive/node1@EXAMPLE.COM\n\n\n1\n2\n3\n4\n\n\n查询当前用户\n\nselect current_user();\n\n\n1\n\n\n配置DataGrip\n\n 1. 新建Driver，配置有kerberos认证的jar包\n\n 2. #配置URL:templates\n    url模板：jdbc:hive2://{host}:{port}/{database}[;<;,{:identifier}={:param}>]\n    \n    \n    1\n    2\n    \n\n 3. 选择创建好的kerberos驱动\n    \n    #起名，填写\n    主机：node1\n    url：jdbc:hive2://node1:10000/;principal=hive/node1@EXAMPLE.COM\n    就可以了，因为认证是通过密钥文件认证的。\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 点击Advanced\n    \n    #在vm options中添加\n    配置参数：\n    -Djava.security.krb5.conf="C:\\\\ProgramData\\\\MIT\\\\Kerberos5\\\\krb5.ini"\n    -Djava.security.auth.login.config="C:\\\\ProgramData\\\\MIT\\\\Kerberos5\\\\hadoop101.conf"\n    -Djavax.security.auth.useSubjectCredsOnly=false\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n    \n    创建C:\\\\ProgramData\\\\MIT\\\\Kerberos5\\\\hadoop101.conf\n    \n    填写参数  注意路径和参数\n    com.sun.security.jgss.initiate{\n          com.sun.security.auth.module.Krb5LoginModule required\n          useKeyTab=true\n          useTicketCache=false\n          keyTab="C:\\\\ProgramData\\\\MIT\\\\Kerberos5\\\\hadoop101.keytab"\n          principal="hadoop101@EXAMPLE.COM";\n    };\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n    \n    为用户生成keytab文件，在krb5kdc所在节点（node1）执行以下命令\n    \n    kadmin.local -q"xst -norandkey -k /home/hadoop101/hadoop101.keytab hadoop101"\n    \n    \n    1\n    \n    \n    然后把生成的文件传输到本地的C:\\\\ProgramData\\\\MIT\\\\Kerberos5\\\\ 路径下\n\n 5. 测试连接使用 使用前需要在本地MIT先进行验证。',normalizedContent:'# kerberos概述\n\n是一种计算机网络认证协议，对个人通信以安全手段进行身份验证。mit开发的。\n\n术语：\n\n * kdc:密钥分发中心，负责存储用户信息，管理发放票据。\n\n * realm：kerberos所管理的一个领域或范围，称之为一个realm。\n\n * rrincipal：kerberos所管理的一个用户或者一个服务，可以理解为kerberos中保存的一个账号，其格式通常如下：primary/nstance@realm\n\n * keytab：kerberos中的用户认证，可通过密码或者密钥文件证明身份，keytab指密钥文件。\n\n认证原理\n\n\n\n\n# 安装\n\n规划：选择node1作为服务器kdc,然后所有主机都部署客户端\n\n> 三台主机切换到root 往下操作都用root\n> \n> su root\n> \n> \n> 1\n\n安装服务\n\n#node1\nyum install -y krb5-server\n#全部节点\nyum install -y krb5-workstation krb5-libs\n\n\n1\n2\n3\n4\n\n\n修改配置\n\n#node1\nvim /var/kerberos/krb5kdc/kdc.conf\n修改\n# example.com  改一下名字就可以了 公司名，这里就不改了\n[kdcdefaults]\n kdc_ports = 88\n kdc_tcp_ports = 88\n[realms]\n example.com = {\n  #master_key_type = aes256-cts\n  acl_file = /var/kerberos/krb5kdc/kadm5.acl\n  dict_file = /usr/share/dict/words\n  admin_keytab = /var/kerberos/krb5kdc/kadm5.keytab\n  supported_enctypes = aes256-cts:normal aes128-\tcts:normal des3-hmac-sha1:normal arcfour-hmac:normal camellia256-cts:normal camellia128-cts:normal des-hmac-sha1:normal des-cbc-md5:normal des-cbc-crc:normal\n }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n#所有主机\n vim /etc/krb5.conf\n \n#修改\n[logging]\n default = file:/var/log/krb5libs.log\n kdc = file:/var/log/krb5kdc.log\n admin_server = file:/var/log/kadmind.log\n\n[libdefaults]\n dns_lookup_realm = false\n dns_lookup_kdc = false\n ticket_lifetime = 24h\n renew_lifetime = 7d\n forwardable = true\n rdns = false\n pkinit_anchors = file:/etc/pki/tls/certs/ca-bundle.crt\n default_realm = example.com\n #default_ccache_name = keyring:persistent:%{uid}\n\n[realms]\n example.com = {\n  kdc = node1\n  admin_server = node1\n }\n[domain_realm]\n# .example.com = example.com\n# example.com = example.com\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n初始化kdc数据库\n\n#node1\nkdb5_util create -s\n#输入密码 hadoop 和确认密码\n\n\n1\n2\n3\n\n\n修改管理员权限配置文件\n\n#node1\nvim /var/kerberos/krb5kdc/kadm5.acl\n#默认是不需要改的\n*/admin@example.com     *\n\n\n1\n2\n3\n4\n\n\n启动\n\n#node1\nsystemctl start krb5kdc\nsystemctl enable krb5kdc#开启自起\n\nsystemctl start kadmin #启动数据访问入口\nsystemctl enable kadmin\n\n\n1\n2\n3\n4\n5\n6\n\n\n创建管理员用户\n\nkadmin.local -q "addprinc admin/admin"\n#输入密码\n\n\n1\n2\n\n\n\n# 使用\n\n基本操作\n\n * 数据库的操作\n   \n   1. 本地登录（无需验证）\n   \tkadmin.local \n   2. 远程登录\n   \t kadmin \n   exit #退出\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 创建主体 test表示创建的用户\n   \n   #未登录：kadmin.local -q"addprinc test"\n   kadmin.local: addprinc test\n   \n   \n   1\n   2\n   \n\n * 修改主体\n   \n   kadmin.local :cpw test \n   #输入修改的密码\n   \n   \n   1\n   2\n   \n\n * 查看所有主体：\n   \n   kadmin.local: list_principals\n   \n   \n   1\n   \n\n * 删除\n   \n   delprinc test\n   \n   \n   1\n   \n\n认证操作\n\n * 密码认证\n   \n   #主体认证 输入用户名密码\n   kinit test\n   #查看认证\n   klist\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 密钥文件认证\n   \n   #生成主体test的keytab文件到指定目录/root/test.keytab\n   kadmin.local -q "xst -norandkey -k  /root/test.keytab test@example.com"\n   #-norandkey的作用是声明不随机生成密码，若不加该参数，会导致之前的密码失效\n   \n   #使用keytab进行认证\n   kinit -kt /root/test.keytab test\n   #查看认证凭证\n   klist \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * *销毁凭证*\n   \n   #销毁\n   kdestroy\n   #查看\n   klist\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# 创建hadoop系统用户\n\n不同的服务创建不同的用户\n\n*user:group*      *daemons*\n*hdfs:hadoop*     namenode, secondary namenode, journalnode, datanode\n*yarn:hadoop*     resourcemanager, nodemanager\n*mapred:hadoop*   mapreduce jobhistory server\n\n#三台\n#创建组\ngroupadd hadoop\n#创建各用户并设置密码 #三台\nuseradd hdfs -g hadoop\necho hdfs | passwd --stdin  hdfs\n\nuseradd yarn -g hadoop\necho yarn | passwd --stdin yarn\n\nuseradd mapred -g hadoop\necho mapred | passwd --stdin mapred\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# hadoop kerberos配置\n\n为hadoop各服务创建kerberos主体（principal）\n\n*服务*                        *所在主机*   *主体（principal）*\n*namenode*                  node1    nn/node1\n*datanode*                  node1    dn/node1\n*d********atanode*          node2    dn/node2\n*datanode*                  node3    dn/node3\n*secondary namenode*        node3    sn/node3\n*resource********manager*   node2    rm/node2\n*n********odemanager*       node1    nm/node1\n*n********odemanager*       node2    nm/node2\n*n********odemanager*       node3    nm/node3\n*jobhistory server*         node1    jhs/node1\n*w********eb ui*            node1    http/node1\n*w********eb ui*            node2    http/node2\n*w********eb ui*            node3    http/node3\n\n * 路径准备:存储密钥文件\n   \n   #每台节点\n   mkdir /etc/security/keytab/\n   chown -r root:hadoop /etc/security/keytab/\n   chmod 770 /etc/security/keytab/\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 创建主体和放置在指定目录下\n   \n   #以下命令在node1节点执行\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey nn/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/nn.service.keytab nn/node1"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey dn/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/dn.service.keytab dn/node1"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey nm/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/nm.service.keytab nm/node1"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey jhs/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/jhs.service.keytab jhs/node1"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey http/node1"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/spnego.service.keytab http/node1"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n   \n   #node2\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey rm/node2"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/rm.service.keytab rm/node2"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey dn/node2"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/dn.service.keytab dn/node2"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey nm/node2"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/nm.service.keytab nm/node2"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey http/node2"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/spnego.service.keytab http/node2"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   #node3\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey dn/node3"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/dn.service.keytab dn/node3"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey sn/node3"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/sn.service.keytab sn/node3"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey nm/node3"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/nm.service.keytab nm/node3"\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey http/node3"\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/spnego.service.keytab http/node3"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   修改所有节点keytab文件的所有者和访问权限。\n   \n   #三台\n   chown -r root:hadoop /etc/security/keytab/\n   chmod 660 /etc/security/keytab/*\n   \n   \n   1\n   2\n   3\n   \n\n * 修改hadoop配置文件\n   \n   * core-site.xml\n     \n     vim /opt/module/hadoop-3.1.3/etc/hadoop/core-site.xml\n     \n     \x3c!-- kerberos主体到系统用户的映射机制 --\x3e\n     <property>\n       <name>hadoop.security.auth_to_local.mechanism</name>\n       <value>mit</value>\n     </property>\n     \n     \x3c!-- kerberos主体到系统用户的具体映射规则 --\x3e\n     <property>\n       <name>hadoop.security.auth_to_local</name>\n       <value>\n         rule:[2:$1/$2@$0]([ndj]n\\/.*@example\\.com)s/.*/hdfs/\n         rule:[2:$1/$2@$0]([rn]m\\/.*@example\\.com)s/.*/yarn/\n         rule:[2:$1/$2@$0](jhs\\/.*@example\\.com)s/.*/mapred/\n         default\n       </value>\n     </property>\n     \n     \x3c!-- 启用hadoop集群kerberos安全认证 --\x3e\n     <property>\n       <name>hadoop.security.authentication</name>\n       <value>kerberos</value>\n     </property>\n     \n     \x3c!-- 启用hadoop集群授权管理 --\x3e\n     <property>\n       <name>hadoop.security.authorization</name>\n       <value>true</value>\n     </property>\n     \n     \x3c!-- hadoop集群间rpc通讯设为仅认证模式 --\x3e\n     <property>\n       <name>hadoop.rpc.protection</name>\n       <value>authentication</value>\n     </property>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     \n   \n   * hdfs-site.xml\n     \n     vim /opt/module/hadoop-3.1.3/etc/hadoop/hdfs-site.xml\n     \n     \x3c!-- 访问datanode数据块时需通过kerberos认证 --\x3e\n     <property>\n       <name>dfs.block.access.token.enable</name>\n       <value>true</value>\n     </property>\n     \n     \x3c!-- namenode服务的kerberos主体,_host会自动解析为服务所在的主机名 --\x3e\n     <property>\n       <name>dfs.namenode.kerberos.principal</name>\n       <value>nn/_host@example.com</value>\n     </property>\n     \n     \x3c!-- namenode服务的kerberos密钥文件路径 --\x3e\n     <property>\n       <name>dfs.namenode.keytab.file</name>\n       <value>/etc/security/keytab/nn.service.keytab</value>\n     </property>\n     \n     \x3c!--secondary namenode服务的kerberos密钥文件路径  --\x3e\n     <property>\n       <name>dfs.secondary.namenode.keytab.file</name>\n       <value>/etc/security/keytab/sn.service.keytab</value>\n     </property>\n     \n     \x3c!--secondary namenode服务的kerberos主体  --\x3e\n     <property>\n       <name>dfs.secondary.namenode.kerberos.principal</name>\n       <value>sn/_host@example.com</value>\n     </property>\n     \n     \x3c!-- namenode web服务的kerberos主体 --\x3e\n     <property>\n       <name>dfs.namenode.kerberos.internal.spnego.principal</name>\n       <value>http/_host@example.com</value>\n     </property>\n     \n     \x3c!-- webhdfs rest服务的kerberos主体 --\x3e\n     <property>\n       <name>dfs.web.authentication.kerberos.principal</name>\n       <value>http/_host@example.com</value>\n     </property>\n     \n     \x3c!-- secondary namenode web ui服务的kerberos主体 --\x3e\n     <property>\n       <name>dfs.secondary.namenode.kerberos.internal.spnego.principal</name>\n       <value>http/_host@example.com</value>\n     </property>\n     \n     \x3c!-- hadoop web ui的kerberos密钥文件路径 --\x3e\n     <property>\n       <name>dfs.web.authentication.kerberos.keytab</name>\n       <value>/etc/security/keytab/spnego.service.keytab</value>\n     </property>\n     \n     \x3c!-- datanode服务的kerberos主体 --\x3e\n     <property>\n       <name>dfs.datanode.kerberos.principal</name>\n       <value>dn/_host@example.com</value>\n     </property>\n     \n     \x3c!-- datanode服务的kerberos密钥文件路径 --\x3e\n     <property>\n       <name>dfs.datanode.keytab.file</name>\n       <value>/etc/security/keytab/dn.service.keytab</value>\n     </property>\n     \n     \x3c!-- 配置namenode web ui 使用https协议 --\x3e\n     <property>\n       <name>dfs.http.policy</name>\n       <value>https_only</value>\n     </property>\n     \n     \x3c!-- 配置datanode数据传输保护策略为仅认证模式 --\x3e\n     <property>\n       <name>dfs.data.transfer.protection</name>\n       <value>authentication</value>\n     </property>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     46\n     47\n     48\n     49\n     50\n     51\n     52\n     53\n     54\n     55\n     56\n     57\n     58\n     59\n     60\n     61\n     62\n     63\n     64\n     65\n     66\n     67\n     68\n     69\n     70\n     71\n     72\n     73\n     74\n     75\n     76\n     77\n     78\n     79\n     \n   \n   * yarn-site.xml\n     \n     vim /opt/module/hadoop-3.1.3/etc/hadoop/yarn-site.xml\n     \n     \x3c!-- resource manager 服务的kerberos主体 --\x3e\n     <property>\n       <name>yarn.resourcemanager.principal</name>\n       <value>rm/_host@example.com</value>\n     </property>\n     \n     \x3c!-- resource manager 服务的kerberos密钥文件 --\x3e\n     <property>\n       <name>yarn.resourcemanager.keytab</name>\n       <value>/etc/security/keytab/rm.service.keytab</value>\n     </property>\n     \n     \x3c!-- node manager 服务的kerberos主体 --\x3e\n     <property>\n       <name>yarn.nodemanager.principal</name>\n       <value>nm/_host@example.com</value>\n     </property>\n     \n     \x3c!-- node manager 服务的kerberos密钥文件 --\x3e\n     <property>\n       <name>yarn.nodemanager.keytab</name>\n       <value>/etc/security/keytab/nm.service.keytab</value>\n     </property>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     \n   \n   * mappred-site.xml\n     \n     vim /opt/module/hadoop-3.1.3/etc/hadoop/mapred-site.xml\n     \n     \x3c!-- 历史服务器的kerberos主体 --\x3e\n     <property>\n       <name>mapreduce.jobhistory.keytab</name>\n       <value>/etc/security/keytab/jhs.service.keytab</value>\n     </property>\n     \n     \x3c!-- 历史服务器的kerberos密钥文件 --\x3e\n     <property>\n       <name>mapreduce.jobhistory.principal</name>\n       <value>jhs/_host@example.com</value>\n     </property>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     \n   \n   * 分发配置文件\n     \n      xsync /opt/module/hadoop-3.1.3/etc/hadoop/core-site.xml\n      xsync /opt/module/hadoop-3.1.3/etc/hadoop/hdfs-site.xml\n      xsync /opt/module/hadoop-3.1.3/etc/hadoop/yarn-site.xml\n      xsync /opt/module/hadoop-3.1.3/etc/hadoop/mapred-site.xml\n     \n     \n     1\n     2\n     3\n     4\n     \n\n\n# 安全传输协议\n\n生成密钥对\n\nkeytool是java数据证书的管理工具，让用户管理自己的公/私钥相关证书。\n\n * keystore 指定密钥库的名称以及位置\n * genkey 生成密钥对\n * alias 指定别名 默认是mykey\n * keyalg 指定密钥算法rsa/dsa 默认是dsa\n\n生成：\n\nkeytool -keystore /etc/security/keytab/keystore -alias jetty -genkey -keyalg rsa\n输入密钥库口令:  hadoop\n再次输入新口令: \n您的名字与姓氏是什么?\n  [unknown]:  \n您的组织单位名称是什么?\n  [unknown]:  \n您的组织名称是什么?\n  [unknown]:  \n您所在的城市或区域名称是什么?\n  [unknown]:  \n您所在的省/市/自治区名称是什么?\n  [unknown]:  \n该单位的双字母国家/地区代码是什么?\n  [unknown]:  \ncn=unknown, ou=unknown, o=unknown, l=unknown, st=unknown, c=unknown是否正确?\n  [否]:  y\n\n输入 <jetty> 的密钥口令\n        (如果和密钥库口令相同, 按回车):  \n再次输入新口令:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n#查看\nkeytool -keystore keystore -list\n\n\n1\n2\n\n\n修改keystore文件的所有者和访问权限\n\nchown -r root:hadoop /etc/security/keytab/keystore\nchmod 660 /etc/security/keytab/keystore\n\n\n1\n2\n\n\n分发\n\nxsync /etc/security/keytab/keystore\n\n\n1\n\n\n配置ssl参数 $hadoop_home/etc/hadoop\n\n cd /opt/module/hadoop-3.1.3/etc/hadoop\n mv $hadoop_home/etc/hadoop/ssl-server.xml.example $hadoop_home/etc/hadoop/ssl-server.xml\n \n 修改以下参数\n\x3c!-- ssl密钥库路径 --\x3e\n<property>\n  <name>ssl.server.keystore.location</name>\n  <value>/etc/security/keytab/keystore</value>\n</property>\n\n\x3c!-- ssl密钥库密码 --\x3e\n<property>\n  <name>ssl.server.keystore.password</name>\n  <value>123456</value>\n</property>\n\n\x3c!-- ssl可信任密钥库路径 --\x3e\n<property>\n  <name>ssl.server.truststore.location</name>\n  <value>/etc/security/keytab/keystore</value>\n</property>\n\n\x3c!-- ssl密钥库中密钥的密码 --\x3e\n<property>\n  <name>ssl.server.keystore.keypassword</name>\n  <value>123456</value>\n</property>\n\n\x3c!-- ssl可信任密钥库密码 --\x3e\n<property>\n  <name>ssl.server.truststore.password</name>\n  <value>123456</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n分发\n\nxsync $hadoop_home/etc/hadoop/ssl-server.xml\n\n\n1\n\n\n\n# 配置yarn\n\n配置使用linuxcontainerexecutor\n\n1）修改所有节点的container-executor所有者和权限，要求其所有者为root，所有组为hadoop，启动nodemanger的yarn用户的所属组），权限为6050，其默认路径为$hadoop_home/bin\n\n#三台\nchown root:hadoop /opt/module/hadoop-3.1.3/bin/container-executor\nchmod 6050 /opt/module/hadoop-3.1.3/bin/container-executor\n\n\n1\n2\n3\n\n\n2）修改所有节点的container-executor.cfg文件的所有者和权限，要求该文件及其所有的上级目录的所有者均为root，所有组为hadoop（启动nodemanger的yarn用户的所属组），权限为400。其默认路径为$hadoop_home/etc/hadoop\n\n#三台\nchown root:hadoop /opt/module/hadoop-3.1.3/etc/hadoop/container-executor.cfg\nchown root:hadoop /opt/module/hadoop-3.1.3/etc/hadoop\nchown root:hadoop /opt/module/hadoop-3.1.3/etc\nchown root:hadoop /opt/module/hadoop-3.1.3\nchown root:hadoop /opt/module\nchmod 400 /opt/module/hadoop-3.1.3/etc/hadoop/container-executor.cfg\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n3）修改$hadoop_home/etc/hadoop/container-executor.cfg\n\nvim $hadoop_home/etc/hadoop/container-executor.cfg\n\n#添加\nyarn.nodemanager.linux-container-executor.group=hadoop\nbanned.users=hdfs,yarn,mapred\nmin.user.id=1000\nallowed.system.users=\nfeature.tc.enabled=false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n4）修改$hadoop_home/etc/hadoop/yarn-site.xml文件\n\nvim $hadoop_home/etc/hadoop/yarn-site.xml\n#增加以下内容\n\x3c!-- 配置node manager使用linuxcontainerexecutor管理container --\x3e\n<property>\n  <name>yarn.nodemanager.container-executor.class</name>\n  <value>org.apache.hadoop.yarn.server.nodemanager.linuxcontainerexecutor</value>\n</property>\n\n\x3c!-- 配置node manager的启动用户的所属组 --\x3e\n<property>\n  <name>yarn.nodemanager.linux-container-executor.group</name>\n  <value>hadoop</value>\n</property>\n\n\x3c!-- linuxcontainerexecutor脚本路径 --\x3e\n<property>\n  <name>yarn.nodemanager.linux-container-executor.path</name>\n  <value>/opt/module/hadoop-3.1.3/bin/container-executor</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n5）分发container-executor.cfg和yarn-site.xml文件\n\nxsync $hadoop_home/etc/hadoop/container-executor.cfg\nxsync $hadoop_home/etc/hadoop/yarn-site.xml\n\n\n1\n2\n\n\n\n# 安全模式下启动hadoop集群\n\n修改特定本地路径权限\n\n*local*   $hadoop_log_dir               hdfs:hadoop   drwxrwxr-x\n*local*   dfs.namenode.name.dir         hdfs:hadoop   drwx------\n*local*   dfs.datanode.data.dir         hdfs:hadoop   drwx------\n*local*   dfs.namenode.checkpoint.dir   hdfs:hadoop   drwx------\n*local*   yarn.nodemanager.local-dirs   yarn:hadoop   drwxrwxr-x\n*local*   yarn.nodemanager.log-dirs     yarn:hadoop   drwxrwxr-x\n\n1）$hadoop_log_dir（所有节点）\n\n该变量位于hadoop-env.sh文件，默认值为 ${hadoop_home}/logs\n\nchown hdfs:hadoop /opt/module/hadoop-3.1.3/logs/\nchmod 775 /opt/module/hadoop-3.1.3/logs/\n\n\n1\n2\n\n\n2）dfs.namenode.name.dir（namenode节点）\n\n该参数位于hdfs-site.xml文件，默认值为file://${hadoop.tmp.dir}/dfs/name\n\n#node1\nchown -r hdfs:hadoop /opt/module/hadoop-3.1.3/data/dfs/name/\nchown -r hdfs:hadoop /opt/module/hadoop-3.1.3/data/dfs/name/\n\n\n1\n2\n3\n\n\n3）dfs.datanode.data.dir（datanode节点）\n\n该参数为于hdfs-site.xml文件，默认值为file://${hadoop.tmp.dir}/dfs/data\n\nchown -r hdfs:hadoop /opt/module/hadoop-3.1.3/data/dfs/data/\nchmod 700 /opt/module/hadoop-3.1.3/data/dfs/data/\n\n\n1\n2\n\n\n4）dfs.namenode.checkpoint.dir（secondarynamenode节点）\n\n该参数位于hdfs-site.xml文件，默认值为file://${hadoop.tmp.dir}/dfs/namesecondary\n\n#node3\nchown -r hdfs:hadoop /opt/module/hadoop-3.1.3/data/dfs/namesecondary/\nchmod 700 /opt/module/hadoop-3.1.3/data/dfs/namesecondary/\n\n\n1\n2\n3\n\n\n5）yarn.nodemanager.local-dirs（nodemanager节点）\n\n该参数位于yarn-site.xml文件，默认值为file://${hadoop.tmp.dir}/nm-local-dir\n\n#三台\nchown -r yarn:hadoop /opt/module/hadoop-3.1.3/data/nm-local-dir/\nchmod -r 775 /opt/module/hadoop-3.1.3/data/nm-local-dir/\n\n\n1\n2\n3\n\n\n6）yarn.nodemanager.log-dirs（nodemanager节点）\n\n该参数位于yarn-site.xml文件，默认值为$hadoop_log_dir/userlogs\n\n#三台\nchown yarn:hadoop /opt/module/hadoop-3.1.3/logs/userlogs/\nchmod 775 /opt/module/hadoop-3.1.3/logs/userlogs/\n\n\n1\n2\n3\n\n\n\n# 启动hdfs\n\n单点启动：\n\n#启动namenode (node1)\nsudo -i -u hdfs hdfs --daemon start namenode\n#启动datanode（3个）\nsudo -i -u hdfs hdfs --daemon start datanode\n#启动secondarynamenode (node3)\nsudo -i -u hdfs hdfs --daemon start secondarynamenode\n\n说明：\n-i：重新加载环境变量\n-u：以特定用户的身份执行后续命令\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n访问：https://node1:9871/ 注意端口号：9871\n\n群启：\n\n在node1上给hdfs用户配置所有节点免密登录、修改node1上的$hadoop_home/sbin/start-dfs.sh脚本\n\nssh-keygen\n#三回车  \n\n#node1上执行拷贝 输入hdfs的密码\nssh-copy-id node1\nssh-copy-id node2\nssh-copy-id node3\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n#node1\nvim $hadoop_home/sbin/start-dfs.sh\nvim $hadoop_home/sbin/stop-dfs.sh\n在顶部增加如下内容\nhdfs_datanode_user=hdfs\nhdfs_namenode_user=hdfs\nhdfs_secondarynamenode_user=hdfs\n\n注意：俩个都加上才能使用\n\n以root用户执行群起脚本，即可启动hdfs集群\nstart-dfs.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n修改hdfs特定路径访问权限：\n\n*hdfs*   /                                            hdfs:hadoop     drwxr-xr-x\n*hdfs*   /tmp                                         hdfs:hadoop     drwxrwxrwxt\n*hdfs*   /user                                        hdfs:hadoop     drwxrwxr-x\n*hdfs*   yarn.nodemanager.remote-app-log-dir          yarn:hadoop     drwxrwxrwxt\n*hdfs*   mapreduce.jobhistory.intermediate-done-dir   mapred:hadoop   drwxrwxrwxt\n*hdfs*   mapreduce.jobhistory.done-dir                mapred:hadoop   drwxrwx---\n\n若上述路径不存在，需手动创建\n\n * 创建hdfs/hadoop主体\n   \n   kadmin.local -q "addprinc hdfs/hadoop"\n   \n   \n   1\n   \n\n * 认证hdfs/hadoop主体\n   \n   kinit hdfs/hadoop\n   \n   \n   1\n   \n\n * 指定用户组和权限的管理\n   \n    #修改/、/tmp、/user路径\n    hadoop fs -chown hdfs:hadoop / /tmp /user\n    hadoop fs -chmod 755 /\n    hadoop fs -chmod 1777 /tmp\n    hadoop fs -chmod 775 /user\n    \n    #yarn.nodemanager.remote-app-log-dir位于yarn-site.xml文件，默认值/tmp/logs\n     hadoop fs -chown yarn:hadoop /tmp/logs\n     hadoop fs -chmod 1777 /tmp/logs\n     \n    #参数mapreduce.jobhistory.intermediate-done-dir位于mapred-site.xml文件，默认值为/tmp/hadoop-yarn/staging/history/done_intermediate，需保证该路径的所有上级目录（除/tmp）的所有者均为mapred，所属组为hadoop，权限为770\n    \t\n    hadoop fs -chown -r mapred:hadoop /tmp/hadoop-yarn/staging/history/done_intermediate\n    hadoop fs -chmod -r 1777 /tmp/hadoop-yarn/staging/history/done_intermediate\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/staging/history/\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/staging/\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/staging/history/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/staging/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/\n    \n    #mapreduce.jobhistory.done-dir位于mapred-site.xml文件，默认值为/tmp/hadoop-yarn/staging/history/done，需保证该路径的所有上级目录（除/tmp）的所有者均为mapred，所属组为hadoop，权限为770\n    \n    hadoop fs -chown -r mapred:hadoop /tmp/hadoop-yarn/staging/history/done\n    hadoop fs -chmod -r 750 /tmp/hadoop-yarn/staging/history/done\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/staging/history/\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/staging/\n    hadoop fs -chown mapred:hadoop /tmp/hadoop-yarn/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/staging/history/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/staging/\n    hadoop fs -chmod 770 /tmp/hadoop-yarn/\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   \n\n\n# 启动yarn\n\n单点启动：\n\n#node2\nsudo -i -u yarn yarn --daemon start resourcemanager\n#3台\nsudo -i -u yarn yarn --daemon start nodemanager\n\n\n1\n2\n3\n4\n\n\n群启：\n\n配置node2节点yarn用户到所有节点的免密登录，修改启动配置文件\n\nsu yarn\nssh-keygen\nssh-copy-id node1\nssh-copy-id node2\nssh-copy-id node3\n\n\n1\n2\n3\n4\n5\n\n\n#root 下修改\nvim $hadoop_home/sbin/start-yarn.sh\nvim $hadoop_home/sbin/stop-yarn.sh\n在顶部增加如下内容\nyarn_resourcemanager_user=yarn\nyarn_nodemanager_user=yarn\n\n\n1\n2\n3\n4\n5\n6\n\n\nstop-yarn.sh #关闭\nstart-yarn.sh#启动\n\n\n1\n2\n\n\n启动历史服务器：\n\n#node1\nsudo -i -u mapred mapred --daemon start historyserver\n\n\n1\n2\n\n\n访问web页面：19888\n\n\n# 安全集群使用\n\n普通用户：\n\n * 集群中的每个节点需创建该用户。\n * 该用户需要属于hadoop用户组。\n * 需要创建该用户对应kerberos主体\n\n实现：\n\n * 创建用户(有就跳过)\n   \n   #三台\n   useradd axcmsm\n   echo axcmsm | password --stdin axcmsm\n   \n   \n   1\n   2\n   3\n   \n\n * 加入hadoop组\n   \n   #三台\n   usermod -a -g hadoop axcmsm\n   \n   \n   1\n   2\n   \n\n * 创建主体\n   \n   kadmin -p admin/admin -whadoop -q"addprinc -pw axcmsm axcmsm"\n   #我的\n   kadmin -p admin/admin -whadoop -q"addprinc -pw hadoop101 hadoop101"\n   \n   \n   1\n   2\n   3\n   \n\n然后用xshell登录三台节点\n\nkinit hadoop101 #认证\nklist#查看\nhadoop fs -ls \\  #查看\n\n细节：在hadoop101 下jps是查看不了启动的进程的 只有切换到root才能查看和关闭集群。\n\n\n1\n2\n3\n4\n5\n\n\nweb页面操作\n\n * 安装kerberos客户端\n   \n   下载地址：http://web.mit.edu/kerberos/dist/kfw/4.1/kfw-4.1-amd64.msi\n   \n   1）下载之后按照提示安装\n   \n   2）编辑c:\\programdata\\mit\\kerberos5\\krb5.ini文件，内容如下\n   \n   [libdefaults]\n    dns_lookup_realm = false\n    ticket_lifetime = 24h\n    forwardable = true\n    rdns = false\n    default_realm = example.com\n   \n   [realms]\n    example.com = {\n     kdc = node1\n     admin_server = node1\n    }\n   \n   [domain_realm]\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n * 配置火狐\n   \n   打开浏览器，在地址栏输入“about:config”，点击回车\n   \n   搜索“network.negotiate-auth.trusted-uris”，修改值为要访问的主机名（node1）\n   \n   搜索“network.auth.use-sspi”，双击将值变为false #这是认证协议，如果用这个就用不了我们的\n\n * 认证\n   \n   启动kerberos客户端，点击getticet\n   \n   输入主体名和密码，点击ok，认证成功\n\n * 测试\n   \n   风闻hdfs，然后注销认证，再访问\n\n执行mr任务\n\nkinit hadoop101\n\n\n1\n\n\nhadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar pi 1 1\n\n\n1\n\n\n\n# hive用户认证配置\n\n前置配置\n\n创建hive系统用户和kerberos主体\n\n#三台 用户\nuseradd hive -g hadoop\necho hive | passwd --stdin hive\n\n#创建主体 因为hive只部署在node1上\nkadmin -padmin/admin -whadoop -q"addprinc -randkey hive/node1"\nkadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/hive.service.keytab hive/node1"\n#修改keytab文件所有者和访问权限\n chown -r root:hadoop /etc/security/keytab/\n chmod 660 /etc/security/keytab/hive.service.keytab\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n配置认证\n\n1.修改$hive_home/conf/hive-site.xml文件，增加如下属性\n\nvim $hive_home/conf/hive-site.xml\n\n\x3c!-- hiveserver2启用kerberos认证 --\x3e\n<property>\n    <name>hive.server2.authentication</name>\n    <value>kerberos</value>\n</property>\n\n\x3c!-- hiveserver2服务的kerberos主体 --\x3e\n<property>\n    <name>hive.server2.authentication.kerberos.principal</name>\n    <value>hive/node1@example.com</value>\n</property>\n\n\x3c!-- hiveserver2服务的kerberos密钥文件 --\x3e\n<property>\n    <name>hive.server2.authentication.kerberos.keytab</name>\n    <value>/etc/security/keytab/hive.service.keytab</value>\n</property>\n\n\x3c!-- metastore启动认证 --\x3e\n<property>\n    <name>hive.metastore.sasl.enabled</name>\n    <value>true</value>\n</property>\n\x3c!-- metastore kerberos密钥文件 --\x3e\n<property>\n    <name>hive.metastore.kerberos.keytab.file</name>\n    <value>/etc/security/keytab/hive.service.keytab</value>\n</property>\n\x3c!-- metastore kerberos主体 --\x3e\n<property>\n    <name>hive.metastore.kerberos.principal</name>\n    <value>hive/node1@example.com</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n2.修改$hadoop_home/etc/hadoop/core-site.xml文件\n\nvim $hadoop_home/etc/hadoop/core-site.xml\n\n\n1\n\n\n删除以下参数\n\n<property>\n    <name>hadoop.http.staticuser.user</name>\n    <value>hadoop101</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hadoop101.hosts</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hadoop101.groups</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hadoop101.users</name>\n    <value>*</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n增加以下参数\n\n<property>\n    <name>hadoop.proxyuser.hive.hosts</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hive.groups</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.hive.users</name>\n    <value>*</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n分发配置core-site.xml文件\n\nxsync $hadoop_home/etc/hadoop/core-site.xml\n\n\n1\n\n\n重启hadoop集群\n\n#关闭\nstop-dfs.sh\nstop-yarn.sh\n#启动\nstart-dfs.sh\nstart-yarn.sh\n\n\n1\n2\n3\n4\n5\n6\n\n\n启动hiveserver2\n\nsudo -i -u hive hiveserver2\n\n\n1\n\n\n\n# 使用\n\n> 普通用户\n\n#先要开启hiveserver2\nkinit hadoop101\n\n\n1\n2\n\n\n#使用beeline客户端连接hiveserver2\nbeeline\n\n> !connect jdbc:hive2://node1:10000/;principal=hive/node1@example.com\n\n\n1\n2\n3\n4\n\n\n查询当前用户\n\nselect current_user();\n\n\n1\n\n\n配置datagrip\n\n 1. 新建driver，配置有kerberos认证的jar包\n\n 2. #配置url:templates\n    url模板：jdbc:hive2://{host}:{port}/{database}[;<;,{:identifier}={:param}>]\n    \n    \n    1\n    2\n    \n\n 3. 选择创建好的kerberos驱动\n    \n    #起名，填写\n    主机：node1\n    url：jdbc:hive2://node1:10000/;principal=hive/node1@example.com\n    就可以了，因为认证是通过密钥文件认证的。\n    \n    \n    1\n    2\n    3\n    4\n    \n\n 4. 点击advanced\n    \n    #在vm options中添加\n    配置参数：\n    -djava.security.krb5.conf="c:\\\\programdata\\\\mit\\\\kerberos5\\\\krb5.ini"\n    -djava.security.auth.login.config="c:\\\\programdata\\\\mit\\\\kerberos5\\\\hadoop101.conf"\n    -djavax.security.auth.usesubjectcredsonly=false\n    \n    \n    1\n    2\n    3\n    4\n    5\n    \n    \n    创建c:\\\\programdata\\\\mit\\\\kerberos5\\\\hadoop101.conf\n    \n    填写参数  注意路径和参数\n    com.sun.security.jgss.initiate{\n          com.sun.security.auth.module.krb5loginmodule required\n          usekeytab=true\n          useticketcache=false\n          keytab="c:\\\\programdata\\\\mit\\\\kerberos5\\\\hadoop101.keytab"\n          principal="hadoop101@example.com";\n    };\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    \n    \n    为用户生成keytab文件，在krb5kdc所在节点（node1）执行以下命令\n    \n    kadmin.local -q"xst -norandkey -k /home/hadoop101/hadoop101.keytab hadoop101"\n    \n    \n    1\n    \n    \n    然后把生成的文件传输到本地的c:\\\\programdata\\\\mit\\\\kerberos5\\\\ 路径下\n\n 5. 测试连接使用 使用前需要在本地mit先进行验证。',charsets:{cjk:!0}},{title:"es笔记",frontmatter:{title:"es笔记",date:"2021-10-30T00:00:00.000Z",tags:["es"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/34.es.html",relativePath:"view/docs/笔记/34.es.md",key:"v-9a9115a4",path:"/view/docs/%E7%AC%94%E8%AE%B0/34.es.html",headers:[{level:2,title:"Elasticsearch概述",slug:"elasticsearch概述",normalizedTitle:"elasticsearch概述",charIndex:2},{level:2,title:"搭建",slug:"搭建",normalizedTitle:"搭建",charIndex:187},{level:3,title:"windos",slug:"windos",normalizedTitle:"windos",charIndex:194},{level:3,title:"linux",slug:"linux",normalizedTitle:"linux",charIndex:2786},{level:3,title:"调试",slug:"调试",normalizedTitle:"调试",charIndex:5951},{level:2,title:"入门操作",slug:"入门操作",normalizedTitle:"入门操作",charIndex:5998},{level:3,title:"http操作",slug:"http操作",normalizedTitle:"http操作",charIndex:6007},{level:3,title:"javaApi",slug:"javaapi",normalizedTitle:"javaapi",charIndex:12995},{level:2,title:"进阶",slug:"进阶",normalizedTitle:"进阶",charIndex:14378},{level:3,title:"🎟",slug:"🎟",normalizedTitle:"🎟",charIndex:14561},{level:2,title:"集成",slug:"集成",normalizedTitle:"集成",charIndex:15079},{level:3,title:"spark-strmming",slug:"spark-strmming",normalizedTitle:"spark-strmming",charIndex:17165},{level:3,title:"flink",slug:"flink",normalizedTitle:"flink",charIndex:21382},{level:2,title:"优化",slug:"优化",normalizedTitle:"优化",charIndex:25659},{level:2,title:"面试题",slug:"面试题",normalizedTitle:"面试题",charIndex:26630}],lastUpdated:"2021/10/30 下午5:52:10",headersStr:"Elasticsearch概述 搭建 windos linux 调试 入门操作 http操作 javaApi 进阶 🎟 集成 spark-strmming flink 优化 面试题",content:'# Elasticsearch概述\n\nes是一个开源高扩展的分布式全文搜索引擎。\n\n官网：https://www.elastic.co/cn/\n\n采用result风格，传输的json字符串\n\n数据格式：与mysql对比\n\n * index：数据库\n * documents文档：Row行\n * Fields：字段：column列\n\n倒排索引：根据关键字找到对应id\n\n\n# 搭建\n\n\n# windos\n\n服务端\n\n * 本地\n   \n   1. 解压即可 `elasticsearch.bat ` 启动服务\n   2. `9200端口访问http协议RESTful的端口,9300内部端口`\n   \n   \n   1\n   2\n   \n\n * 集群Cluster ：3台解压\n   \n   修改config/elasticsearch.yml\n    node-1001 节点\n   \n   #节点 1 的配置信息：\n   #集群名称，节点之间要保持一致\n   cluster.name: my-elasticsearch\n   #节点名称，集群内要唯一\n   node.name: node-1001\n   node.master: true\n   node.data: true\n   #ip 地址\n   network.host: localhost\n   #http 端口\n   http.port: 1001\n   #tcp 监听端口\n   transport.tcp.port: 9301\n   #discovery.seed_hosts: ["localhost:9301", "localhost:9302","localhost:9303"]\n   #discovery.zen.fd.ping_timeout: 1m\n   #discovery.zen.fd.ping_retries: 5\n   #集群内的可以被选为主节点的节点列表\n   #cluster.initial_master_nodes: ["node-1", "node-2","node-3"]\n   #跨域配置\n   #action.destructive_requires_name: true\n   http.cors.enabled: true\n   http.cors.allow-origin: "*"\n   \n   \n    node-1002 节点\n   #节点 2 的配置信息：\n   #集群名称，节点之间要保持一致\n   cluster.name: my-elasticsearch\n   #节点名称，集群内要唯一\n   node.name: node-1002\n   node.master: true\n   node.data: true\n   #ip 地址\n   network.host: localhost\n   #http 端口\n   http.port: 1002\n   #tcp 监听端口\n   transport.tcp.port: 9302\n   discovery.seed_hosts: ["localhost:9301"]\n   discovery.zen.fd.ping_timeout: 1m\n   discovery.zen.fd.ping_retries: 5\n   #集群内的可以被选为主节点的节点列表\n   #cluster.initial_master_nodes: ["node-1", "node-2","node-3"]\n   #跨域配置\n   #action.destructive_requires_name: true\n   http.cors.enabled: true\n   http.cors.allow-origin: "*"\n   \n    node-1003 节点\n   #节点 3 的配置信息：\n   #集群名称，节点之间要保持一致\n   cluster.name: my-elasticsearch\n   #节点名称，集群内要唯一\n   node.name: node-1003\n   node.master: true\n   node.data: true\n   #ip 地址\n   network.host: localhost\n   #http 端口\n   http.port: 1003\n   #tcp 监听端口\n   transport.tcp.port: 9303\n   #候选主节点的地址，在开启服务后可以被选为主节点\n   discovery.seed_hosts: ["localhost:9301", "localhost:9302"]\n   discovery.zen.fd.ping_timeout: 1m\n   discovery.zen.fd.ping_retries: 5\n   #集群内的可以被选为主节点的节点列表\n   #cluster.initial_master_nodes: ["node-1", "node-2","node-3"]\n   #跨域配置\n   #action.destructive_requires_name: true\n   http.cors.enabled: true\n   http.cors.allow-origin: "*"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   \n   \n   > 启动：bin/elasticsearch.bat\n   > \n   > green：主副切片正常运行，yellow：主正常副为正常，red有主分片没能正常运行。\n\n\n# linux\n\n * 单机：上传解压改名\n   \n   1. 创建es用户 因为不能用root直接运行（安全问题）\n   useradd es #新增 es 用户\n   passwd es #为 es 用户设置密\n   userdel -r es #如果错了，可以删除再加\n   chown -R es:es /opt/module/es #文件夹所有者\n   \n   2. 修改配置文件 \n   /opt/module/es/config/elasticsearch.yml\n       # 加入如下配置\n       cluster.name: elasticsearch\n       node.name: node-1\n       network.host: 0.0.0.0\n       http.port: 9200\n       cluster.initial_master_nodes: ["node-1"]\n   \n   修改/etc/security/limits.conf\n   \t# 在文件末尾中增加下面内容\n       # 每个进程可以打开的文件数的限制\n       es soft nofile 65536\n       es hard nofile 65536\n       \n   修改/etc/security/limits.d/20-nproc.conf\n       # 在文件末尾中增加下面内容\n       # 每个进程可以打开的文件数的限制\n       es soft nofile 65536\n       es hard nofile 65536\n       # 操作系统级别对每个用户创建的进程数的限制\n       * hard nproc 4096\n       # 注：* 带表 Linux 所有用户名称\n       \n   修改/etc/sysctl.conf\n   \t# 在文件中增加下面内容\n       # 一个进程可以拥有的 VMA(虚拟内存区域)的数量,默认值为 65536\n       vm.max_map_count=655360\t\n       \n   重新加载  sysctl -p\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   \n   \n   > 启动\n   > \n   > cd /opt/module/es/\n   > #启动\n   > bin/elasticsearch\n   > #后台启动\n   > bin/elasticsearch -d\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n\n * 集群 ：上传解压\n   \n   1. 创建用户\n   2. 修改配置文件\n   修改/opt/module/es/config/elasticsearch.yml 文件\n       # 加入如下配置\n       #集群名称\n       cluster.name: cluster-es\n       #节点名称，每个节点的名称不能重复\n       node.name: node-1\n       #ip 地址，每个节点的地址不能重复\t\n       network.host: linux1\n       #是不是有资格主节点\n       node.master: true\n       node.data: true\n       http.port: 9200\n       # head 插件需要这打开这两个配置\n       http.cors.allow-origin: "*"\n       http.cors.enabled: true\n       http.max_content_length: 200mb\n       #es7.x 之后新增的配置，初始化一个新的集群时需要此配置来选举 master\n       cluster.initial_master_nodes: ["node-1"]\n       #es7.x 之后新增的配置，节点发现\n       discovery.seed_hosts: ["linux1:9300","linux2:9300","linux3:9300"]\n       gateway.recover_after_nodes: 2\n       network.tcp.keep_alive: true\n       network.tcp.no_delay: true\n       transport.tcp.compress: true\n       #集群内同时启动的数据任务个数，默认是 2 个\n       cluster.routing.allocation.cluster_concurrent_rebalance: 16\n       #添加或删除节点及负载均衡时并发恢复的线程个数，默认 4 个\n       cluster.routing.allocation.node_concurrent_recoveries: 16\n       #初始化数据恢复时，并发恢复线程的个数，默认 4 个\n       cluster.routing.allocation.node_initial_primaries_recoveries: 16\n   \n   修改/etc/security/limits.conf ，分发文件\n   \t# 在文件末尾中增加下面内容\n       es soft nofile 65536\n       es hard nofile 65536\n   \n   修改/etc/security/limits.d/20-nproc.conf，分发文件\n   \t# 在文件末尾中增加下面内容\n       es soft nofile 65536\n       es hard nofile 65536\n       * hard nproc 4096\n       # 注：* 带表 Linux 所有用户名称\n    \n    修改/etc/sysctl.conf\n    \t# 在文件中增加下面内容\n   \tvm.max_map_count=655360\n   \n   重新加载 sysctl -p\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   \n   \n   > 启动：bin/elasticsearch\n\n\n# 调试\n\n * Postman ：https://www.getpostman.com\n\n\n# 入门操作\n\n\n# http操作\n\n索引操作：\n\n> 创建索引就等同于创建了数据库\n\n * put 创建索引：例：http://127.0.0.1:9200/shopping\n   \n   {\n    "acknowledged"【响应结果】: true, # true 操作成功\n    "shards_acknowledged"【分片结果】: true, # 分片操作成功\n    "index"【索引名称】: "shopping"\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * get 获取索引的消息：_cat/indices?v 获取详细索引信息\n   \n   > _serarch全部查询，也可以指定id 主键查询\n   > \n   > {\n   >  "shopping"【索引名】: { \n   >  "aliases"【别名】: {},\n   >  "mappings"【映射】: {},\n   >  "settings"【设置】: {\n   >  "index"【设置 - 索引】: {\n   >  "creation_date"【设置 - 索引 - 创建时间】: "1614265373911",\n   >  "number_of_shards"【设置 - 索引 - 主分片数量】: "1",\n   >  "number_of_replicas"【设置 - 索引 - 副分片数量】: "1",\n   >  "uuid"【设置 - 索引 - 唯一标识】: "eI5wemRERTumxGCc1bAk2A",\n   >  "version"【设置 - 索引 - 版本】: {\n   >  "created": "7080099"\n   >  },\n   >  "provided_name"【设置 - 索引 - 名称】: "shopping"\n   >  }\n   >  }\n   >  } }\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n   > 10\n   > 11\n   > 12\n   > 13\n   > 14\n   > 15\n   > 16\n   > 17\n\n * delete 删除\n\n文档操作：\n\n * post 创建文档：http://127.0.0.1:9200/shopping/_doc/[自定义id] 需要添加json的body\n   \n   > 如果是put创建文档 需要指定id：http://127.0.0.1:9200/shopping/_doc/自定义id\n\n * 更新内容：\n   \n   > 全量用put：存在会覆盖\n   > \n   > 局部字段用post：可以指定_update\n\n * 查询：get\n   \n   > _serach : 在body中添加下面内容\n   > \n   >  * 所有\n   >    \n   >    {\n   >     "query": {\n   >     "match_all": {}\n   >     }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    \n   > \n   >  * 匹配\n   >    \n   >    #字段\n   >    {\n   >     "query": {\n   >     "multi_match": {\n   >     "query": "zhangsan",\n   >     "fields": ["name","nickname"]\n   >     }\n   >     } }\n   >    #关键字精确查询\n   >    {\n   >     "query": {\n   >     "term": {\n   >     "name": {\n   >     "value": "zhangsan"\n   >     }\n   >     }\n   >     } }\n   >    #多关键字精确查询\n   >    {\n   >     "query": {\n   >     "terms": {\n   >     "name": ["zhangsan","lisi"]\n   >     }\n   >     } }\n   >    #指定查询字段\n   >    {\n   >     "_source": ["name","nickname"], \n   >     "query": {\n   >     "terms": {\n   >     "nickname": ["zhangsan"]\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    15\n   >    16\n   >    17\n   >    18\n   >    19\n   >    20\n   >    21\n   >    22\n   >    23\n   >    24\n   >    25\n   >    26\n   >    27\n   >    28\n   >    29\n   >    30\n   >    31\n   >    32\n   >    \n   > \n   >  * 过滤字段:\n   >    \n   >    * includes 指定想要显示的字段\n   >    * excludes：来指定不想要显示的字段\n   > \n   >  * 分页查询：from、size\n   >    \n   >    {\n   >     "query": {\n   >     "match_all": {}\n   >     },\n   >     "sort": [\n   >     {\n   >     "age": {\n   >     "order": "desc"\n   >     }\n   >     }\n   >     ],\n   >     "from": 0,\n   >     "size": 2\n   >    }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    \n   > \n   >  * 高亮查询：match 查询的同时，加上一个 highlight 属性\n   >    \n   >    pre_tags：前置标签\n   >    post_tags：后置标签\n   >    fields：需要高亮的字段\n   >    title：这里声明 title 字段需要高亮，\n   >    {\n   >     "query": {\n   >     "match": {\n   >     "name": "zhangsan"\n   >     }\n   >     },\n   >     "highlight": {\n   >     "pre_tags": "<font color=\'red\'>",\n   >     "post_tags": "</font>",\n   >     "fields": {\n   >     "name": {}\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    15\n   >    16\n   >    17\n   >    \n   > \n   >  * 排序：get _search\n   >    \n   >    {\n   >     "query": {\n   >     "match_all": {}\n   >     },\n   >     "sort": [\n   >     {\n   >     "age": {\n   >     "order": "desc"\n   >     }\n   >     },\n   >     {\n   >     "_score":{\n   >     "order": "desc"\n   >     }\n   >     }\n   >     ]\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    15\n   >    16\n   >    \n   > \n   >  * 聚合分组: bool把各种其它查询通过must（必须 ）、must_not（必须不）、should（应该）的方\n   >    \n   >    式进行组合\n   >    \n   >    {\n   >     "query": {\n   >     "bool": {\n   >     "must": [\n   >     {\n   >     "match": {\n   >     "name": "zhangsan"\n   >     }\n   >     }\n   >     ],\n   >     "must_not": [\n   >     {\n   >     "match": {\n   >     "age": "40"\n   >     }\n   >     }\n   >     ],\n   >     "should": [\n   >     {\n   >     "match": {\n   >     "sex": "男"\n   >     }\n   >     }\n   >     ]\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    15\n   >    16\n   >    17\n   >    18\n   >    19\n   >    20\n   >    21\n   >    22\n   >    23\n   >    24\n   >    25\n   >    26\n   >    \n   > \n   >  * 范围查询\n   >    \n   >    range 查询找出那些落在指定区间内的数字或者时间。range 查询允许以下字符\n   >    \n   >    操作符 说明\n   >    gt 大于>\n   >    gte 大于等于>=\n   >    lt 小于<\n   >    lte 小于等于<=\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    \n   > \n   >  * 模糊查询:返回包含与搜索字词相似的字词的文档\n   >    \n   >    {\n   >     "query": {\n   >     "fuzzy": {\n   >     "title": {\n   >     "value": "zhangsan",\n   >    "fuzziness": 2 #条数\n   >     }\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    \n   > \n   >  * 聚合：max、min、sum、avg\n   > \n   >  * 桶聚合查询：相当于 sql 中的 group by 语句\n   >    \n   >     "aggs":{\n   >     "age_groupby":{\n   >     "terms":{"field":"age"}\n   >     }\n   >     },\n   >     "size":0\n   >    }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    \n\n * 删除：post中添加 _delete_byquery\n   \n   >  * 条件删除\n   >    \n   >    {\n   >     "query":{\n   >     "match":{\n   >     "price":4000.00\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    \n\n * 创建映射：put _mapping\n   \n   > {\n   >  "properties": {\n   >  "name":{\n   >  "type": "text",\n   >  "index": true\n   >  },\n   >  "sex":{\n   >  "type": "text",\n   >  "index": false\n   >  },\n   >  "age":{\n   >  "type": "long",\n   >  "index": false\n   >  }\n   >  } }\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n   > 10\n   > 11\n   > 12\n   > 13\n   > 14\n   > 15\n   > \n   > \n   > 类型：\n   > \n   > 字段名：任意填写，下面指定许多属性\n   > type：类型：\n   >  \tString 类型\n   >  \t     text：可分词\n   >  \t     keyword：不可分词，数据会作为完整字段进行匹配\n   >  \tNumerical：数值类型\n   >  \t\t 基本数据类型：long、integer、short、byte、double、float、half_float\n   >  \t\t 浮点数的高精度类型：scaled_float\n   >  \tDate：日期类型\n   >     Array：数组类型\n   >     Object：对象\n   >     \n   > index：是否索引 :默认true\n   > \ttrue：字段会被索引，则可以用来进行搜索\n   > \tfalse：字段不会被索引，不能用来搜索\n   > \t\n   > store：是否将数据进行独立存储，默认为 false\n   > analyzer：分词器\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n   > 10\n   > 11\n   > 12\n   > 13\n   > 14\n   > 15\n   > 16\n   > 17\n   > 18\n\n * 查看映射 GET ：_mapping\n\n * 索引映射关联 PUT:\n\n\n# javaApi\n\n导入依赖\n\n <dependencies>\n        <dependency>\n            <groupId>org.elasticsearch</groupId>\n            <artifactId>elasticsearch</artifactId>\n            <version>7.8.0</version>\n        </dependency>\n        \x3c!-- elasticsearch 的客户端 --\x3e\n        <dependency>\n            <groupId>org.elasticsearch.client</groupId>\n            <artifactId>elasticsearch-rest-high-level-client</artifactId>\n            <version>7.8.0</version>\n        </dependency>\n        \x3c!-- elasticsearch 依赖 2.x 的 log4j --\x3e\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-api</artifactId>\n            <version>2.8.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-core</artifactId>\n            <version>2.8.2</version>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n            <version>2.9.9</version>\n        </dependency>\n        \x3c!-- junit 单元测试 --\x3e\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.12</version>\n        </dependency>\n    </dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n代码：github\n\n\n# 进阶\n\n * 索引:提高搜索性能 倒排索引\n * 文档：一条数据\n * 字段：field\n * 映射：mapping\n * 分片：shards ：一个lucene索引在es里称作分片，一个es索引是分片的集合。es发送查询到每一个lucene索引，然后合并每个分片的结构得到一个全局的结果集。\n * 副本：replicas\n * 分配：allocation\n\n\n# 🎟\n\n集群：通过elasticsearch-head插件查看集群情况\n\n路由计算：hash(id) % 主分片数量=【0，1，2】\n\n分片控制：用户可以访问任何一个节点获取数据，这个节点称为协调节点\n\n>  1. 客户端请求集群节点（任意）-协调节点\n>  2. 协调节点将请求转换到指定节点\n>  3. 主分片保存数据\n>  4. 主分片需要将数据发送个副本\n>  5. 副本保存后，进行反馈\n>  6. 主分片进行反馈。\n>  7. 客户端获取反馈\n> \n> 调节：\n> \n>  * 客户端发送查询到协调节点\n>  * 协调节点计算数据所在分片以及全部副本的位置\n>  * 将请求转发给具体节点\n>  * 节点返回查询结果，将结果反馈给客户端。\n\n延时：主分片延时+并行写入副本的最大延时\n\n其他：\n\n * 读流程\n * 写流程\n * 更新流程\n * 多文档操作流程\n * 分片原理\n * 文档搜索\n * 动态更新索引\n * 近实时搜索\n * 持久化变更\n * 段合并\n * 文档分析：分析器、IK分词器、自定义分析器（过滤器、分词器、词单过滤器）\n * 文档处理：文档冲突、悲观并发控制、乐观并发控制、外部系统版本控制\n\n\n# 集成\n\n * Kibana：可视化操作页面\n   \n   下载地址：https://artifacts.elastic.co/downloads/kibana/kibana-7.8.0-windows-x86_64.zip\n   \n   * 下载解压 修改配置文件\n     \n     # 默认端口\n     server.port: 5601\n     # ES 服务器的地址\n     elasticsearch.hosts: ["http://localhost:9200"]\n     # 索引名\n     kibana.index: ".kibana"\n     # 支持中文\n     i18n.locale: "zh-CN"\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n\n * sparing data\n   \n   * 依赖\n     \n     <dependencies>\n      <dependency>\n      <groupId>org.projectlombok</groupId>\n      <artifactId>lombok</artifactId>\n      </dependency>\n      <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-data-elasticsearch</artifactId>\n      </dependency>\n      <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-devtools</artifactId>\n      <scope>runtime</scope>\n      <optional>true</optional>\n      </dependency>\n      <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n      </dependency>\n      <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-test</artifactId>\n      </dependency>\n      <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      </dependency>\n      <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-test</artifactId>\n      </dependency>\n      </dependencies>\n     </project>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     \n     \n     增加配置文件 application.properties 文件\n     \n     # es 服务地址\n     elasticsearch.host=127.0.0.1\n     # es 服务端口\n     elasticsearch.port=9200\n     # 配置日志级别,开启 debug 日志\n     logging.level.com.atguigu.es=debug\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n   \n   * 代码github\n\n\n * # spark-strmming\n   \n   * 依赖\n     \n     <dependencies>\n      <dependency>\n      <groupId>org.apache.spark</groupId>\n      <artifactId>spark-core_2.12</artifactId>\n      <version>3.0.0</version>\n      </dependency>\n      <dependency>\n      <groupId>org.apache.spark</groupId>\n      <artifactId>spark-streaming_2.12</artifactId>\n      <version>3.0.0</version>\n      </dependency>\n      <dependency>\n      <groupId>org.elasticsearch</groupId>\n      <artifactId>elasticsearch</artifactId>\n      <version>7.8.0</version>\n      </dependency>\x3c!-- elasticsearch 的客户端 --\x3e\n      <dependency>\n      <groupId>org.elasticsearch.client</groupId>\n      <artifactId>elasticsearch-rest-high-level-client</artifactId>\n      <version>7.8.0</version>\n      </dependency>\n      \x3c!-- elasticsearch 依赖 2.x 的 log4j --\x3e\n      <dependency>\n      <groupId>org.apache.logging.log4j</groupId>\n      <artifactId>log4j-api</artifactId>\n      <version>2.8.2</version>\n      </dependency>\n      <dependency>\n      <groupId>org.apache.logging.log4j</groupId>\n      <artifactId>log4j-core</artifactId>\n      <version>2.8.2</version>\n      </dependency>\n     \x3c!-- <dependency>--\x3e\n     \x3c!-- <groupId>com.fasterxml.jackson.core</groupId>--\x3e\n     \x3c!-- <artifactId>jackson-databind</artifactId>--\x3e\n     \x3c!-- <version>2.11.1</version>--\x3e\n     \x3c!-- </dependency>--\x3e\n     \x3c!-- &lt;!&ndash; junit 单元测试 &ndash;&gt;--\x3e\n     \x3c!-- <dependency>--\x3e\n     \x3c!-- <groupId>junit</groupId>--\x3e\n     \x3c!-- <artifactId>junit</artifactId>--\x3e\n     \x3c!-- <version>4.12</version>--\x3e\n     \x3c!-- </dependency>--\x3e\n      </dependencies>\n     </project>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     \n     \n     import org.apache.http.HttpHost\n     import org.apache.spark.SparkConf\n     import org.apache.spark.streaming.dstream.ReceiverInputDStream\n     import org.apache.spark.streaming.{Seconds, StreamingContext}\n     import org.elasticsearch.action.index.IndexRequest\n     import org.elasticsearch.client.indices.CreateIndexRequest\n     import org.elasticsearch.client.{RequestOptions, RestClient, \n     RestHighLevelClient}\n     import org.elasticsearch.common.xcontent.XContentType\n     import java.util.Date\n     object SparkStreamingESTest {\n      def main(args: Array[String]): Unit = {\n      val sparkConf = new \n     SparkConf().setMaster("local[*]").setAppName("ESTest")\n      val ssc = new StreamingContext(sparkConf, Seconds(3))\n      val ds: ReceiverInputDStream[String] = ssc.socketTextStream("localhost", \n     9999)\n      ds.foreachRDD(\n      rdd => {\n      println("*************** " + new Date())\n      rdd.foreach(\n      data => {\n      val client = new RestHighLevelClient(\n       RestClient.builder(new HttpHost("localhost", 9200, \n     "http"))\n      );\n      // 新增文档 - 请求对象\n      val request = new IndexRequest();\n      // 设置索引及唯一性标识\n      val ss = data.split(" ")\n      println("ss = " + ss.mkString(","))\n      request.index("sparkstreaming").id(ss(0));\n      val productJson =\n      s"""\n      | { "data":"${ss(1)}" }\n      |""".stripMargin;\n      // 添加文档数据，数据格式为 JSON 格式\n      request.source(productJson,XContentType.JSON);\n      // 客户端发送请求，获取响应对象\n      val response = client.index(request, \n     RequestOptions.DEFAULT);\n      System.out.println("_index:" + response.getIndex());\n      System.out.println("_id:" + response.getId());\n      System.out.println("_result:" + response.getResult());\n      client.close()\n      }\n      )\n      }\n      )\n      ssc.start()\n      ssc.awaitTermination()\n      } }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     46\n     47\n     48\n     49\n     50\n     51\n     52\n     \n\n\n * # flink\n   \n   * 依赖\n     \n     <dependencies>\n      <dependency>\n      <groupId>org.apache.flink</groupId>\n      <artifactId>flink-scala_2.12</artifactId>\n      <version>1.12.0</version>\n      </dependency>\n      <dependency>\n      <groupId>org.apache.flink</groupId>\n      <artifactId>flink-streaming-scala_2.12</artifactId>\n      <version>1.12.0</version>\n      </dependency>\n      <dependency>\n      <groupId>org.apache.flink</groupId>\n      <artifactId>flink-clients_2.12</artifactId>\n      <version>1.12.0</version>\n      </dependency>\n      <dependency>\n      <groupId>org.apache.flink</groupId>\n      <artifactId>flink-connector-elasticsearch7_2.11</artifactId>\n      <version>1.12.0</version>\n      </dependency>\n      \x3c!-- jackson --\x3e\n      <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-core</artifactId>\n      <version>2.11.1</version>\n      </dependency>\n      </dependencies>\n     </project>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     \n   \n   * 实现\n     \n     import org.apache.flink.api.common.functions.RuntimeContext;\n     import org.apache.flink.streaming.api.datastream.DataStreamSource;\n     import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n     import \n     org.apache.flink.streaming.connectors.elasticsearch.ElasticsearchSinkFunctio\n     n;\n     import org.apache.flink.streaming.connectors.elasticsearch.RequestIndexer;\n     import \n     org.apache.flink.streaming.connectors.elasticsearch7.ElasticsearchSink;\n     import org.apache.http.HttpHost;\n     import org.elasticsearch.action.index.IndexRequest;\n     import org.elasticsearch.client.Requests;\n     import java.util.ArrayList;\n     import java.util.HashMap;\n     import java.util.List;\n     import java.util.Map;\n     public class FlinkElasticsearchSinkTest {\n      public static void main(String[] args) throws Exception {\n      StreamExecutionEnvironment env = \n     StreamExecutionEnvironment.getExecutionEnvironment();\n      DataStreamSource<String> source = env.socketTextStream("localhost", \n     9999);\n      List<HttpHost> httpHosts = new ArrayList<>();\n      httpHosts.add(new HttpHost("127.0.0.1", 9200, "http"));\n      //httpHosts.add(new HttpHost("10.2.3.1", 9200, "http"));\n     // use a ElasticsearchSink.Builder to create an ElasticsearchSink\n      ElasticsearchSink.Builder<String> esSinkBuilder = new \n     ElasticsearchSink.Builder<>(httpHosts,\n      new ElasticsearchSinkFunction<String>() {\n      public IndexRequest createIndexRequest(String element) {\n      Map<String, String> json = new HashMap<>();\n      json.put("data", element);\n      return Requests.indexRequest()\n      .index("my-index")\n      //.type("my-type")\n      .source(json);\n      }\n      @Override\n      public void process(String element, RuntimeContext ctx, \n     RequestIndexer indexer) {\n      indexer.add(createIndexRequest(element));\n      }\n      }\n      );\n     // configuration for the bulk requests; this instructs the sink to emit after \n     every element, otherwise they would be buffered\n      esSinkBuilder.setBulkFlushMaxActions(1);\n     // provide a RestClientFactory for custom configuration on the internally created \n     REST client\n     // esSinkBuilder.setRestClientFactory(\n     // restClientBuilder -> {\n     // restClientBuilder.setDefaultHeaders(...)\n     // restClientBuilder.setMaxRetryTimeoutMillis(...)\n     // restClientBuilder.setPathPrefix(...)\n     // restClientBuilder.setHttpClientConfigCallback(...)\n     // }\n     // );\n      source.addSink(esSinkBuilder.build());\n      env.execute("flink-es");\n      } }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     46\n     47\n     48\n     49\n     50\n     51\n     52\n     53\n     54\n     55\n     56\n     57\n     58\n     59\n     60\n     \n\n\n# 优化\n\nElasticsearch 的基础是 Lucene，所有的索引和文档数据是存储在本地的磁盘中.可在件./config/elasticsearch.yml 中配置。\n\nes是重度使用磁盘的，如果磁盘的吞吐量越大，节点就越稳定。\n\n * 优化磁盘：SSD、RAID 0、多快磁盘\n * 分片策略：设置合理分片数(节点数<=主分片数*（副本数+1）)、推迟分片分配、\n * 路由选择：带routing查询根据id\n * 写入速度优化：加大translog flush、增加Index Refresh间隔、调整bulk线程池和队列、优化节点分布，优化lucene层的索引建立。\n * 批量数据提交：使用 Bulk 来进行批量写入。\n * 优化存储设备\n * 合理使用合并\n * 减少Refresh次数\n * 加大Flush设置\n * 减少副本数量\n * 内存设置\n\n重要配置\n\n参数名\t\t\t 参数值 \t\t\t\t\t\t\t说明\ncluster.name  elasticsearch 配置ES的集群名称，默认值是 ES，会自动发现在同一网段下的集群名称相同的节点\nnode.name   node-1           集群中的节点名，在同一个集群中不能重复。\nnode.master true             指定该节点是否有资格被选举成为 Master 节点，默认是 True\nnode.data   true               指定该节点是否存储索引数据，默认为 True。\nindex.number_of_shards 1     设置都索引分片个数，默认是 1 片。\nindex.number_of_replicas  1   设置默认的索引副本个数，默认为 1 个。\ntransport.tcp.compress true 设置在节点间传输数据时是否压缩，默认为 False，\ndiscovery.zen.minimum_master_nodes 1 设置在选举 Master 节点时需要参与的最少的候选主节点数，默认为 1\ndiscovery.zen.ping.timeout 3s  设置在集群中自动发现其他节点时 Ping 连接的超时时间，默认为 3 秒\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 面试题\n\n * 为什么要使用 Elasticsearch?\n * Elasticsearch 的 master 选举流程？\n * Elasticsearch 集群脑裂问题？\n * Elasticsearch 索引文档的流程？\n * Elasticsearch 更新和删除文档的流程？\n * Elasticsearch 搜索的流程？\n * Elasticsearch 在部署时，对 Linux 的设置有哪些优化方法？\n * GC 方面，在使用 Elasticsearch 时要注意什么？\n * Elasticsearch 对于大数据量（上亿量级）的聚合如何实现？\n * 在并发情况下，Elasticsearch 如果保证读写一致？\n * 如何监控 Elasticsearch 集群状态？\n * 是否了解字典树？\n * Elasticsearch 中的集群、节点、索引、文档、类型是什么？\n * Elasticsearch 中的倒排索引是什么？',normalizedContent:'# elasticsearch概述\n\nes是一个开源高扩展的分布式全文搜索引擎。\n\n官网：https://www.elastic.co/cn/\n\n采用result风格，传输的json字符串\n\n数据格式：与mysql对比\n\n * index：数据库\n * documents文档：row行\n * fields：字段：column列\n\n倒排索引：根据关键字找到对应id\n\n\n# 搭建\n\n\n# windos\n\n服务端\n\n * 本地\n   \n   1. 解压即可 `elasticsearch.bat ` 启动服务\n   2. `9200端口访问http协议restful的端口,9300内部端口`\n   \n   \n   1\n   2\n   \n\n * 集群cluster ：3台解压\n   \n   修改config/elasticsearch.yml\n    node-1001 节点\n   \n   #节点 1 的配置信息：\n   #集群名称，节点之间要保持一致\n   cluster.name: my-elasticsearch\n   #节点名称，集群内要唯一\n   node.name: node-1001\n   node.master: true\n   node.data: true\n   #ip 地址\n   network.host: localhost\n   #http 端口\n   http.port: 1001\n   #tcp 监听端口\n   transport.tcp.port: 9301\n   #discovery.seed_hosts: ["localhost:9301", "localhost:9302","localhost:9303"]\n   #discovery.zen.fd.ping_timeout: 1m\n   #discovery.zen.fd.ping_retries: 5\n   #集群内的可以被选为主节点的节点列表\n   #cluster.initial_master_nodes: ["node-1", "node-2","node-3"]\n   #跨域配置\n   #action.destructive_requires_name: true\n   http.cors.enabled: true\n   http.cors.allow-origin: "*"\n   \n   \n    node-1002 节点\n   #节点 2 的配置信息：\n   #集群名称，节点之间要保持一致\n   cluster.name: my-elasticsearch\n   #节点名称，集群内要唯一\n   node.name: node-1002\n   node.master: true\n   node.data: true\n   #ip 地址\n   network.host: localhost\n   #http 端口\n   http.port: 1002\n   #tcp 监听端口\n   transport.tcp.port: 9302\n   discovery.seed_hosts: ["localhost:9301"]\n   discovery.zen.fd.ping_timeout: 1m\n   discovery.zen.fd.ping_retries: 5\n   #集群内的可以被选为主节点的节点列表\n   #cluster.initial_master_nodes: ["node-1", "node-2","node-3"]\n   #跨域配置\n   #action.destructive_requires_name: true\n   http.cors.enabled: true\n   http.cors.allow-origin: "*"\n   \n    node-1003 节点\n   #节点 3 的配置信息：\n   #集群名称，节点之间要保持一致\n   cluster.name: my-elasticsearch\n   #节点名称，集群内要唯一\n   node.name: node-1003\n   node.master: true\n   node.data: true\n   #ip 地址\n   network.host: localhost\n   #http 端口\n   http.port: 1003\n   #tcp 监听端口\n   transport.tcp.port: 9303\n   #候选主节点的地址，在开启服务后可以被选为主节点\n   discovery.seed_hosts: ["localhost:9301", "localhost:9302"]\n   discovery.zen.fd.ping_timeout: 1m\n   discovery.zen.fd.ping_retries: 5\n   #集群内的可以被选为主节点的节点列表\n   #cluster.initial_master_nodes: ["node-1", "node-2","node-3"]\n   #跨域配置\n   #action.destructive_requires_name: true\n   http.cors.enabled: true\n   http.cors.allow-origin: "*"\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   69\n   70\n   71\n   72\n   73\n   74\n   75\n   \n   \n   > 启动：bin/elasticsearch.bat\n   > \n   > green：主副切片正常运行，yellow：主正常副为正常，red有主分片没能正常运行。\n\n\n# linux\n\n * 单机：上传解压改名\n   \n   1. 创建es用户 因为不能用root直接运行（安全问题）\n   useradd es #新增 es 用户\n   passwd es #为 es 用户设置密\n   userdel -r es #如果错了，可以删除再加\n   chown -r es:es /opt/module/es #文件夹所有者\n   \n   2. 修改配置文件 \n   /opt/module/es/config/elasticsearch.yml\n       # 加入如下配置\n       cluster.name: elasticsearch\n       node.name: node-1\n       network.host: 0.0.0.0\n       http.port: 9200\n       cluster.initial_master_nodes: ["node-1"]\n   \n   修改/etc/security/limits.conf\n   \t# 在文件末尾中增加下面内容\n       # 每个进程可以打开的文件数的限制\n       es soft nofile 65536\n       es hard nofile 65536\n       \n   修改/etc/security/limits.d/20-nproc.conf\n       # 在文件末尾中增加下面内容\n       # 每个进程可以打开的文件数的限制\n       es soft nofile 65536\n       es hard nofile 65536\n       # 操作系统级别对每个用户创建的进程数的限制\n       * hard nproc 4096\n       # 注：* 带表 linux 所有用户名称\n       \n   修改/etc/sysctl.conf\n   \t# 在文件中增加下面内容\n       # 一个进程可以拥有的 vma(虚拟内存区域)的数量,默认值为 65536\n       vm.max_map_count=655360\t\n       \n   重新加载  sysctl -p\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   \n   \n   > 启动\n   > \n   > cd /opt/module/es/\n   > #启动\n   > bin/elasticsearch\n   > #后台启动\n   > bin/elasticsearch -d\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n\n * 集群 ：上传解压\n   \n   1. 创建用户\n   2. 修改配置文件\n   修改/opt/module/es/config/elasticsearch.yml 文件\n       # 加入如下配置\n       #集群名称\n       cluster.name: cluster-es\n       #节点名称，每个节点的名称不能重复\n       node.name: node-1\n       #ip 地址，每个节点的地址不能重复\t\n       network.host: linux1\n       #是不是有资格主节点\n       node.master: true\n       node.data: true\n       http.port: 9200\n       # head 插件需要这打开这两个配置\n       http.cors.allow-origin: "*"\n       http.cors.enabled: true\n       http.max_content_length: 200mb\n       #es7.x 之后新增的配置，初始化一个新的集群时需要此配置来选举 master\n       cluster.initial_master_nodes: ["node-1"]\n       #es7.x 之后新增的配置，节点发现\n       discovery.seed_hosts: ["linux1:9300","linux2:9300","linux3:9300"]\n       gateway.recover_after_nodes: 2\n       network.tcp.keep_alive: true\n       network.tcp.no_delay: true\n       transport.tcp.compress: true\n       #集群内同时启动的数据任务个数，默认是 2 个\n       cluster.routing.allocation.cluster_concurrent_rebalance: 16\n       #添加或删除节点及负载均衡时并发恢复的线程个数，默认 4 个\n       cluster.routing.allocation.node_concurrent_recoveries: 16\n       #初始化数据恢复时，并发恢复线程的个数，默认 4 个\n       cluster.routing.allocation.node_initial_primaries_recoveries: 16\n   \n   修改/etc/security/limits.conf ，分发文件\n   \t# 在文件末尾中增加下面内容\n       es soft nofile 65536\n       es hard nofile 65536\n   \n   修改/etc/security/limits.d/20-nproc.conf，分发文件\n   \t# 在文件末尾中增加下面内容\n       es soft nofile 65536\n       es hard nofile 65536\n       * hard nproc 4096\n       # 注：* 带表 linux 所有用户名称\n    \n    修改/etc/sysctl.conf\n    \t# 在文件中增加下面内容\n   \tvm.max_map_count=655360\n   \n   重新加载 sysctl -p\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   \n   \n   > 启动：bin/elasticsearch\n\n\n# 调试\n\n * postman ：https://www.getpostman.com\n\n\n# 入门操作\n\n\n# http操作\n\n索引操作：\n\n> 创建索引就等同于创建了数据库\n\n * put 创建索引：例：http://127.0.0.1:9200/shopping\n   \n   {\n    "acknowledged"【响应结果】: true, # true 操作成功\n    "shards_acknowledged"【分片结果】: true, # 分片操作成功\n    "index"【索引名称】: "shopping"\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * get 获取索引的消息：_cat/indices?v 获取详细索引信息\n   \n   > _serarch全部查询，也可以指定id 主键查询\n   > \n   > {\n   >  "shopping"【索引名】: { \n   >  "aliases"【别名】: {},\n   >  "mappings"【映射】: {},\n   >  "settings"【设置】: {\n   >  "index"【设置 - 索引】: {\n   >  "creation_date"【设置 - 索引 - 创建时间】: "1614265373911",\n   >  "number_of_shards"【设置 - 索引 - 主分片数量】: "1",\n   >  "number_of_replicas"【设置 - 索引 - 副分片数量】: "1",\n   >  "uuid"【设置 - 索引 - 唯一标识】: "ei5wemrertumxgcc1bak2a",\n   >  "version"【设置 - 索引 - 版本】: {\n   >  "created": "7080099"\n   >  },\n   >  "provided_name"【设置 - 索引 - 名称】: "shopping"\n   >  }\n   >  }\n   >  } }\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n   > 10\n   > 11\n   > 12\n   > 13\n   > 14\n   > 15\n   > 16\n   > 17\n\n * delete 删除\n\n文档操作：\n\n * post 创建文档：http://127.0.0.1:9200/shopping/_doc/[自定义id] 需要添加json的body\n   \n   > 如果是put创建文档 需要指定id：http://127.0.0.1:9200/shopping/_doc/自定义id\n\n * 更新内容：\n   \n   > 全量用put：存在会覆盖\n   > \n   > 局部字段用post：可以指定_update\n\n * 查询：get\n   \n   > _serach : 在body中添加下面内容\n   > \n   >  * 所有\n   >    \n   >    {\n   >     "query": {\n   >     "match_all": {}\n   >     }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    \n   > \n   >  * 匹配\n   >    \n   >    #字段\n   >    {\n   >     "query": {\n   >     "multi_match": {\n   >     "query": "zhangsan",\n   >     "fields": ["name","nickname"]\n   >     }\n   >     } }\n   >    #关键字精确查询\n   >    {\n   >     "query": {\n   >     "term": {\n   >     "name": {\n   >     "value": "zhangsan"\n   >     }\n   >     }\n   >     } }\n   >    #多关键字精确查询\n   >    {\n   >     "query": {\n   >     "terms": {\n   >     "name": ["zhangsan","lisi"]\n   >     }\n   >     } }\n   >    #指定查询字段\n   >    {\n   >     "_source": ["name","nickname"], \n   >     "query": {\n   >     "terms": {\n   >     "nickname": ["zhangsan"]\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    15\n   >    16\n   >    17\n   >    18\n   >    19\n   >    20\n   >    21\n   >    22\n   >    23\n   >    24\n   >    25\n   >    26\n   >    27\n   >    28\n   >    29\n   >    30\n   >    31\n   >    32\n   >    \n   > \n   >  * 过滤字段:\n   >    \n   >    * includes 指定想要显示的字段\n   >    * excludes：来指定不想要显示的字段\n   > \n   >  * 分页查询：from、size\n   >    \n   >    {\n   >     "query": {\n   >     "match_all": {}\n   >     },\n   >     "sort": [\n   >     {\n   >     "age": {\n   >     "order": "desc"\n   >     }\n   >     }\n   >     ],\n   >     "from": 0,\n   >     "size": 2\n   >    }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    \n   > \n   >  * 高亮查询：match 查询的同时，加上一个 highlight 属性\n   >    \n   >    pre_tags：前置标签\n   >    post_tags：后置标签\n   >    fields：需要高亮的字段\n   >    title：这里声明 title 字段需要高亮，\n   >    {\n   >     "query": {\n   >     "match": {\n   >     "name": "zhangsan"\n   >     }\n   >     },\n   >     "highlight": {\n   >     "pre_tags": "<font color=\'red\'>",\n   >     "post_tags": "</font>",\n   >     "fields": {\n   >     "name": {}\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    15\n   >    16\n   >    17\n   >    \n   > \n   >  * 排序：get _search\n   >    \n   >    {\n   >     "query": {\n   >     "match_all": {}\n   >     },\n   >     "sort": [\n   >     {\n   >     "age": {\n   >     "order": "desc"\n   >     }\n   >     },\n   >     {\n   >     "_score":{\n   >     "order": "desc"\n   >     }\n   >     }\n   >     ]\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    15\n   >    16\n   >    \n   > \n   >  * 聚合分组: bool把各种其它查询通过must（必须 ）、must_not（必须不）、should（应该）的方\n   >    \n   >    式进行组合\n   >    \n   >    {\n   >     "query": {\n   >     "bool": {\n   >     "must": [\n   >     {\n   >     "match": {\n   >     "name": "zhangsan"\n   >     }\n   >     }\n   >     ],\n   >     "must_not": [\n   >     {\n   >     "match": {\n   >     "age": "40"\n   >     }\n   >     }\n   >     ],\n   >     "should": [\n   >     {\n   >     "match": {\n   >     "sex": "男"\n   >     }\n   >     }\n   >     ]\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    10\n   >    11\n   >    12\n   >    13\n   >    14\n   >    15\n   >    16\n   >    17\n   >    18\n   >    19\n   >    20\n   >    21\n   >    22\n   >    23\n   >    24\n   >    25\n   >    26\n   >    \n   > \n   >  * 范围查询\n   >    \n   >    range 查询找出那些落在指定区间内的数字或者时间。range 查询允许以下字符\n   >    \n   >    操作符 说明\n   >    gt 大于>\n   >    gte 大于等于>=\n   >    lt 小于<\n   >    lte 小于等于<=\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    \n   > \n   >  * 模糊查询:返回包含与搜索字词相似的字词的文档\n   >    \n   >    {\n   >     "query": {\n   >     "fuzzy": {\n   >     "title": {\n   >     "value": "zhangsan",\n   >    "fuzziness": 2 #条数\n   >     }\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    8\n   >    9\n   >    \n   > \n   >  * 聚合：max、min、sum、avg\n   > \n   >  * 桶聚合查询：相当于 sql 中的 group by 语句\n   >    \n   >     "aggs":{\n   >     "age_groupby":{\n   >     "terms":{"field":"age"}\n   >     }\n   >     },\n   >     "size":0\n   >    }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    7\n   >    \n\n * 删除：post中添加 _delete_byquery\n   \n   >  * 条件删除\n   >    \n   >    {\n   >     "query":{\n   >     "match":{\n   >     "price":4000.00\n   >     }\n   >     } }\n   >    \n   >    \n   >    1\n   >    2\n   >    3\n   >    4\n   >    5\n   >    6\n   >    \n\n * 创建映射：put _mapping\n   \n   > {\n   >  "properties": {\n   >  "name":{\n   >  "type": "text",\n   >  "index": true\n   >  },\n   >  "sex":{\n   >  "type": "text",\n   >  "index": false\n   >  },\n   >  "age":{\n   >  "type": "long",\n   >  "index": false\n   >  }\n   >  } }\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n   > 10\n   > 11\n   > 12\n   > 13\n   > 14\n   > 15\n   > \n   > \n   > 类型：\n   > \n   > 字段名：任意填写，下面指定许多属性\n   > type：类型：\n   >  \tstring 类型\n   >  \t     text：可分词\n   >  \t     keyword：不可分词，数据会作为完整字段进行匹配\n   >  \tnumerical：数值类型\n   >  \t\t 基本数据类型：long、integer、short、byte、double、float、half_float\n   >  \t\t 浮点数的高精度类型：scaled_float\n   >  \tdate：日期类型\n   >     array：数组类型\n   >     object：对象\n   >     \n   > index：是否索引 :默认true\n   > \ttrue：字段会被索引，则可以用来进行搜索\n   > \tfalse：字段不会被索引，不能用来搜索\n   > \t\n   > store：是否将数据进行独立存储，默认为 false\n   > analyzer：分词器\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n   > 10\n   > 11\n   > 12\n   > 13\n   > 14\n   > 15\n   > 16\n   > 17\n   > 18\n\n * 查看映射 get ：_mapping\n\n * 索引映射关联 put:\n\n\n# javaapi\n\n导入依赖\n\n <dependencies>\n        <dependency>\n            <groupid>org.elasticsearch</groupid>\n            <artifactid>elasticsearch</artifactid>\n            <version>7.8.0</version>\n        </dependency>\n        \x3c!-- elasticsearch 的客户端 --\x3e\n        <dependency>\n            <groupid>org.elasticsearch.client</groupid>\n            <artifactid>elasticsearch-rest-high-level-client</artifactid>\n            <version>7.8.0</version>\n        </dependency>\n        \x3c!-- elasticsearch 依赖 2.x 的 log4j --\x3e\n        <dependency>\n            <groupid>org.apache.logging.log4j</groupid>\n            <artifactid>log4j-api</artifactid>\n            <version>2.8.2</version>\n        </dependency>\n        <dependency>\n            <groupid>org.apache.logging.log4j</groupid>\n            <artifactid>log4j-core</artifactid>\n            <version>2.8.2</version>\n        </dependency>\n        <dependency>\n            <groupid>com.fasterxml.jackson.core</groupid>\n            <artifactid>jackson-databind</artifactid>\n            <version>2.9.9</version>\n        </dependency>\n        \x3c!-- junit 单元测试 --\x3e\n        <dependency>\n            <groupid>junit</groupid>\n            <artifactid>junit</artifactid>\n            <version>4.12</version>\n        </dependency>\n    </dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n代码：github\n\n\n# 进阶\n\n * 索引:提高搜索性能 倒排索引\n * 文档：一条数据\n * 字段：field\n * 映射：mapping\n * 分片：shards ：一个lucene索引在es里称作分片，一个es索引是分片的集合。es发送查询到每一个lucene索引，然后合并每个分片的结构得到一个全局的结果集。\n * 副本：replicas\n * 分配：allocation\n\n\n# 🎟\n\n集群：通过elasticsearch-head插件查看集群情况\n\n路由计算：hash(id) % 主分片数量=【0，1，2】\n\n分片控制：用户可以访问任何一个节点获取数据，这个节点称为协调节点\n\n>  1. 客户端请求集群节点（任意）-协调节点\n>  2. 协调节点将请求转换到指定节点\n>  3. 主分片保存数据\n>  4. 主分片需要将数据发送个副本\n>  5. 副本保存后，进行反馈\n>  6. 主分片进行反馈。\n>  7. 客户端获取反馈\n> \n> 调节：\n> \n>  * 客户端发送查询到协调节点\n>  * 协调节点计算数据所在分片以及全部副本的位置\n>  * 将请求转发给具体节点\n>  * 节点返回查询结果，将结果反馈给客户端。\n\n延时：主分片延时+并行写入副本的最大延时\n\n其他：\n\n * 读流程\n * 写流程\n * 更新流程\n * 多文档操作流程\n * 分片原理\n * 文档搜索\n * 动态更新索引\n * 近实时搜索\n * 持久化变更\n * 段合并\n * 文档分析：分析器、ik分词器、自定义分析器（过滤器、分词器、词单过滤器）\n * 文档处理：文档冲突、悲观并发控制、乐观并发控制、外部系统版本控制\n\n\n# 集成\n\n * kibana：可视化操作页面\n   \n   下载地址：https://artifacts.elastic.co/downloads/kibana/kibana-7.8.0-windows-x86_64.zip\n   \n   * 下载解压 修改配置文件\n     \n     # 默认端口\n     server.port: 5601\n     # es 服务器的地址\n     elasticsearch.hosts: ["http://localhost:9200"]\n     # 索引名\n     kibana.index: ".kibana"\n     # 支持中文\n     i18n.locale: "zh-cn"\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n\n * sparing data\n   \n   * 依赖\n     \n     <dependencies>\n      <dependency>\n      <groupid>org.projectlombok</groupid>\n      <artifactid>lombok</artifactid>\n      </dependency>\n      <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-starter-data-elasticsearch</artifactid>\n      </dependency>\n      <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-devtools</artifactid>\n      <scope>runtime</scope>\n      <optional>true</optional>\n      </dependency>\n      <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-starter-test</artifactid>\n      <scope>test</scope>\n      </dependency>\n      <dependency>\n      <groupid>org.springframework.boot</groupid>\n      <artifactid>spring-boot-test</artifactid>\n      </dependency>\n      <dependency>\n      <groupid>junit</groupid>\n      <artifactid>junit</artifactid>\n      </dependency>\n      <dependency>\n      <groupid>org.springframework</groupid>\n      <artifactid>spring-test</artifactid>\n      </dependency>\n      </dependencies>\n     </project>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     \n     \n     增加配置文件 application.properties 文件\n     \n     # es 服务地址\n     elasticsearch.host=127.0.0.1\n     # es 服务端口\n     elasticsearch.port=9200\n     # 配置日志级别,开启 debug 日志\n     logging.level.com.atguigu.es=debug\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n   \n   * 代码github\n\n\n * # spark-strmming\n   \n   * 依赖\n     \n     <dependencies>\n      <dependency>\n      <groupid>org.apache.spark</groupid>\n      <artifactid>spark-core_2.12</artifactid>\n      <version>3.0.0</version>\n      </dependency>\n      <dependency>\n      <groupid>org.apache.spark</groupid>\n      <artifactid>spark-streaming_2.12</artifactid>\n      <version>3.0.0</version>\n      </dependency>\n      <dependency>\n      <groupid>org.elasticsearch</groupid>\n      <artifactid>elasticsearch</artifactid>\n      <version>7.8.0</version>\n      </dependency>\x3c!-- elasticsearch 的客户端 --\x3e\n      <dependency>\n      <groupid>org.elasticsearch.client</groupid>\n      <artifactid>elasticsearch-rest-high-level-client</artifactid>\n      <version>7.8.0</version>\n      </dependency>\n      \x3c!-- elasticsearch 依赖 2.x 的 log4j --\x3e\n      <dependency>\n      <groupid>org.apache.logging.log4j</groupid>\n      <artifactid>log4j-api</artifactid>\n      <version>2.8.2</version>\n      </dependency>\n      <dependency>\n      <groupid>org.apache.logging.log4j</groupid>\n      <artifactid>log4j-core</artifactid>\n      <version>2.8.2</version>\n      </dependency>\n     \x3c!-- <dependency>--\x3e\n     \x3c!-- <groupid>com.fasterxml.jackson.core</groupid>--\x3e\n     \x3c!-- <artifactid>jackson-databind</artifactid>--\x3e\n     \x3c!-- <version>2.11.1</version>--\x3e\n     \x3c!-- </dependency>--\x3e\n     \x3c!-- &lt;!&ndash; junit 单元测试 &ndash;&gt;--\x3e\n     \x3c!-- <dependency>--\x3e\n     \x3c!-- <groupid>junit</groupid>--\x3e\n     \x3c!-- <artifactid>junit</artifactid>--\x3e\n     \x3c!-- <version>4.12</version>--\x3e\n     \x3c!-- </dependency>--\x3e\n      </dependencies>\n     </project>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     \n     \n     import org.apache.http.httphost\n     import org.apache.spark.sparkconf\n     import org.apache.spark.streaming.dstream.receiverinputdstream\n     import org.apache.spark.streaming.{seconds, streamingcontext}\n     import org.elasticsearch.action.index.indexrequest\n     import org.elasticsearch.client.indices.createindexrequest\n     import org.elasticsearch.client.{requestoptions, restclient, \n     resthighlevelclient}\n     import org.elasticsearch.common.xcontent.xcontenttype\n     import java.util.date\n     object sparkstreamingestest {\n      def main(args: array[string]): unit = {\n      val sparkconf = new \n     sparkconf().setmaster("local[*]").setappname("estest")\n      val ssc = new streamingcontext(sparkconf, seconds(3))\n      val ds: receiverinputdstream[string] = ssc.sockettextstream("localhost", \n     9999)\n      ds.foreachrdd(\n      rdd => {\n      println("*************** " + new date())\n      rdd.foreach(\n      data => {\n      val client = new resthighlevelclient(\n       restclient.builder(new httphost("localhost", 9200, \n     "http"))\n      );\n      // 新增文档 - 请求对象\n      val request = new indexrequest();\n      // 设置索引及唯一性标识\n      val ss = data.split(" ")\n      println("ss = " + ss.mkstring(","))\n      request.index("sparkstreaming").id(ss(0));\n      val productjson =\n      s"""\n      | { "data":"${ss(1)}" }\n      |""".stripmargin;\n      // 添加文档数据，数据格式为 json 格式\n      request.source(productjson,xcontenttype.json);\n      // 客户端发送请求，获取响应对象\n      val response = client.index(request, \n     requestoptions.default);\n      system.out.println("_index:" + response.getindex());\n      system.out.println("_id:" + response.getid());\n      system.out.println("_result:" + response.getresult());\n      client.close()\n      }\n      )\n      }\n      )\n      ssc.start()\n      ssc.awaittermination()\n      } }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     46\n     47\n     48\n     49\n     50\n     51\n     52\n     \n\n\n * # flink\n   \n   * 依赖\n     \n     <dependencies>\n      <dependency>\n      <groupid>org.apache.flink</groupid>\n      <artifactid>flink-scala_2.12</artifactid>\n      <version>1.12.0</version>\n      </dependency>\n      <dependency>\n      <groupid>org.apache.flink</groupid>\n      <artifactid>flink-streaming-scala_2.12</artifactid>\n      <version>1.12.0</version>\n      </dependency>\n      <dependency>\n      <groupid>org.apache.flink</groupid>\n      <artifactid>flink-clients_2.12</artifactid>\n      <version>1.12.0</version>\n      </dependency>\n      <dependency>\n      <groupid>org.apache.flink</groupid>\n      <artifactid>flink-connector-elasticsearch7_2.11</artifactid>\n      <version>1.12.0</version>\n      </dependency>\n      \x3c!-- jackson --\x3e\n      <dependency>\n      <groupid>com.fasterxml.jackson.core</groupid>\n      <artifactid>jackson-core</artifactid>\n      <version>2.11.1</version>\n      </dependency>\n      </dependencies>\n     </project>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     \n   \n   * 实现\n     \n     import org.apache.flink.api.common.functions.runtimecontext;\n     import org.apache.flink.streaming.api.datastream.datastreamsource;\n     import org.apache.flink.streaming.api.environment.streamexecutionenvironment;\n     import \n     org.apache.flink.streaming.connectors.elasticsearch.elasticsearchsinkfunctio\n     n;\n     import org.apache.flink.streaming.connectors.elasticsearch.requestindexer;\n     import \n     org.apache.flink.streaming.connectors.elasticsearch7.elasticsearchsink;\n     import org.apache.http.httphost;\n     import org.elasticsearch.action.index.indexrequest;\n     import org.elasticsearch.client.requests;\n     import java.util.arraylist;\n     import java.util.hashmap;\n     import java.util.list;\n     import java.util.map;\n     public class flinkelasticsearchsinktest {\n      public static void main(string[] args) throws exception {\n      streamexecutionenvironment env = \n     streamexecutionenvironment.getexecutionenvironment();\n      datastreamsource<string> source = env.sockettextstream("localhost", \n     9999);\n      list<httphost> httphosts = new arraylist<>();\n      httphosts.add(new httphost("127.0.0.1", 9200, "http"));\n      //httphosts.add(new httphost("10.2.3.1", 9200, "http"));\n     // use a elasticsearchsink.builder to create an elasticsearchsink\n      elasticsearchsink.builder<string> essinkbuilder = new \n     elasticsearchsink.builder<>(httphosts,\n      new elasticsearchsinkfunction<string>() {\n      public indexrequest createindexrequest(string element) {\n      map<string, string> json = new hashmap<>();\n      json.put("data", element);\n      return requests.indexrequest()\n      .index("my-index")\n      //.type("my-type")\n      .source(json);\n      }\n      @override\n      public void process(string element, runtimecontext ctx, \n     requestindexer indexer) {\n      indexer.add(createindexrequest(element));\n      }\n      }\n      );\n     // configuration for the bulk requests; this instructs the sink to emit after \n     every element, otherwise they would be buffered\n      essinkbuilder.setbulkflushmaxactions(1);\n     // provide a restclientfactory for custom configuration on the internally created \n     rest client\n     // essinkbuilder.setrestclientfactory(\n     // restclientbuilder -> {\n     // restclientbuilder.setdefaultheaders(...)\n     // restclientbuilder.setmaxretrytimeoutmillis(...)\n     // restclientbuilder.setpathprefix(...)\n     // restclientbuilder.sethttpclientconfigcallback(...)\n     // }\n     // );\n      source.addsink(essinkbuilder.build());\n      env.execute("flink-es");\n      } }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     25\n     26\n     27\n     28\n     29\n     30\n     31\n     32\n     33\n     34\n     35\n     36\n     37\n     38\n     39\n     40\n     41\n     42\n     43\n     44\n     45\n     46\n     47\n     48\n     49\n     50\n     51\n     52\n     53\n     54\n     55\n     56\n     57\n     58\n     59\n     60\n     \n\n\n# 优化\n\nelasticsearch 的基础是 lucene，所有的索引和文档数据是存储在本地的磁盘中.可在件./config/elasticsearch.yml 中配置。\n\nes是重度使用磁盘的，如果磁盘的吞吐量越大，节点就越稳定。\n\n * 优化磁盘：ssd、raid 0、多快磁盘\n * 分片策略：设置合理分片数(节点数<=主分片数*（副本数+1）)、推迟分片分配、\n * 路由选择：带routing查询根据id\n * 写入速度优化：加大translog flush、增加index refresh间隔、调整bulk线程池和队列、优化节点分布，优化lucene层的索引建立。\n * 批量数据提交：使用 bulk 来进行批量写入。\n * 优化存储设备\n * 合理使用合并\n * 减少refresh次数\n * 加大flush设置\n * 减少副本数量\n * 内存设置\n\n重要配置\n\n参数名\t\t\t 参数值 \t\t\t\t\t\t\t说明\ncluster.name  elasticsearch 配置es的集群名称，默认值是 es，会自动发现在同一网段下的集群名称相同的节点\nnode.name   node-1           集群中的节点名，在同一个集群中不能重复。\nnode.master true             指定该节点是否有资格被选举成为 master 节点，默认是 true\nnode.data   true               指定该节点是否存储索引数据，默认为 true。\nindex.number_of_shards 1     设置都索引分片个数，默认是 1 片。\nindex.number_of_replicas  1   设置默认的索引副本个数，默认为 1 个。\ntransport.tcp.compress true 设置在节点间传输数据时是否压缩，默认为 false，\ndiscovery.zen.minimum_master_nodes 1 设置在选举 master 节点时需要参与的最少的候选主节点数，默认为 1\ndiscovery.zen.ping.timeout 3s  设置在集群中自动发现其他节点时 ping 连接的超时时间，默认为 3 秒\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 面试题\n\n * 为什么要使用 elasticsearch?\n * elasticsearch 的 master 选举流程？\n * elasticsearch 集群脑裂问题？\n * elasticsearch 索引文档的流程？\n * elasticsearch 更新和删除文档的流程？\n * elasticsearch 搜索的流程？\n * elasticsearch 在部署时，对 linux 的设置有哪些优化方法？\n * gc 方面，在使用 elasticsearch 时要注意什么？\n * elasticsearch 对于大数据量（上亿量级）的聚合如何实现？\n * 在并发情况下，elasticsearch 如果保证读写一致？\n * 如何监控 elasticsearch 集群状态？\n * 是否了解字典树？\n * elasticsearch 中的集群、节点、索引、文档、类型是什么？\n * elasticsearch 中的倒排索引是什么？',charsets:{cjk:!0}},{title:"idea控制台乱码问题",frontmatter:{title:"idea控制台乱码问题",date:"2021-09-2",tags:["hive"],categories:["踩坑"]},regularPath:"/view/docs/%E8%B8%A9%E5%9D%91/idea%E7%BC%96%E7%A0%81.html",relativePath:"view/docs/踩坑/idea编码.md",key:"v-5fede7f9",path:"/view/docs/%E8%B8%A9%E5%9D%91/idea%E7%BC%96%E7%A0%81.html",headers:[{level:2,title:"转载",slug:"转载",normalizedTitle:"转载",charIndex:2}],lastUpdated:"2021/9/9 下午6:51:06",headersStr:"转载",content:"# 转载\n\n> 解决idea乱码问题 https://blog.csdn.net/fengqing5578/article/details/80648753",normalizedContent:"# 转载\n\n> 解决idea乱码问题 https://blog.csdn.net/fengqing5578/article/details/80648753",charsets:{cjk:!0}},{title:"爬虫概述",frontmatter:{},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/python%E7%88%AC%E8%99%AB.html",relativePath:"view/docs/笔记/python爬虫.md",key:"v-59464431",path:"/view/docs/%E7%AC%94%E8%AE%B0/python%E7%88%AC%E8%99%AB.html",headers:[{level:2,title:"爬虫概述",slug:"爬虫概述",normalizedTitle:"爬虫概述",charIndex:2},{level:2,title:"UA大全",slug:"ua大全",normalizedTitle:"ua大全",charIndex:581},{level:2,title:"请求",slug:"请求",normalizedTitle:"请求",charIndex:66},{level:3,title:"urllib",slug:"urllib",normalizedTitle:"urllib",charIndex:438},{level:3,title:"requests ⭕",slug:"requests-⭕",normalizedTitle:"requests ⭕",charIndex:1830},{level:2,title:"解析",slug:"解析",normalizedTitle:"解析",charIndex:283},{level:3,title:"RE",slug:"re",normalizedTitle:"re",charIndex:2426},{level:3,title:"Beautiful Soup",slug:"beautiful-soup",normalizedTitle:"beautiful soup",charIndex:3156},{level:3,title:"xpath",slug:"xpath",normalizedTitle:"xpath",charIndex:535},{level:3,title:"JsonPath",slug:"jsonpath",normalizedTitle:"jsonpath",charIndex:3898},{level:2,title:"多线程",slug:"多线程",normalizedTitle:"多线程",charIndex:457},{level:2,title:"验证码",slug:"验证码",normalizedTitle:"验证码",charIndex:232},{level:2,title:"操作浏览器",slug:"操作浏览器",normalizedTitle:"操作浏览器",charIndex:544},{level:2,title:"分类爬虫思想",slug:"分类爬虫思想",normalizedTitle:"分类爬虫思想",charIndex:6178},{level:2,title:"scrapy⭕",slug:"scrapy⭕",normalizedTitle:"scrapy⭕",charIndex:8523},{level:3,title:"基本使用",slug:"基本使用",normalizedTitle:"基本使用",charIndex:9213},{level:3,title:"CrawlSpiders 连接提取",slug:"crawlspiders-连接提取",normalizedTitle:"crawlspiders 连接提取",charIndex:12142},{level:3,title:"ImagesPipline 图片下载",slug:"imagespipline-图片下载",normalizedTitle:"imagespipline 图片下载",charIndex:12544},{level:3,title:"下载中间件",slug:"下载中间件",normalizedTitle:"下载中间件",charIndex:13189},{level:3,title:"登录",slug:"登录",normalizedTitle:"登录",charIndex:180},{level:3,title:"MongoDB使用",slug:"mongodb使用",normalizedTitle:"mongodb使用",charIndex:15176},{level:3,title:"调试",slug:"调试",normalizedTitle:"调试",charIndex:15293},{level:3,title:"splash",slug:"splash",normalizedTitle:"splash",charIndex:15358},{level:3,title:"结合",slug:"结合",normalizedTitle:"结合",charIndex:5995},{level:3,title:"保存到mysql",slug:"保存到mysql",normalizedTitle:"保存到mysql",charIndex:15615},{level:2,title:"scrapy-redis",slug:"scrapy-redis",normalizedTitle:"scrapy-redis",charIndex:17061}],lastUpdated:"2023/1/15 上午4:58:42",headersStr:"爬虫概述 UA大全 请求 urllib requests ⭕ 解析 RE Beautiful Soup xpath JsonPath 多线程 验证码 操作浏览器 分类爬虫思想 scrapy⭕ 基本使用 CrawlSpiders 连接提取 ImagesPipline 图片下载 下载中间件 登录 MongoDB使用 调试 splash 结合 保存到mysql scrapy-redis",content:'# 爬虫概述\n\n基本流程：\n\n * 目标数据\n * 来源地址\n * 结构分析\n * 实现构思\n * 编码\n\n基本手段：\n\n * 破解请求限制\n   \n   1. 设置请求头\n   2. 控制请求频率\n   3. IP代理\n   4. 签名/加密参数html、cookie、js 分析\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 破解登录限制\n   \n   1. 携带用户的cookie消息\n   \n   \n   1\n   \n\n * 破解验证码\n   \n   1. 简单验证码可使用识图读验证码第三方库\n   \n   \n   1\n   \n\n解析数据：\n\n * html、dom解析\n   \n   1. 正则匹配\n   2. 第三方解析库\n   \n   \n   1\n   2\n   \n\n * 数据字符串解析\n   \n   1. 正则匹配\n   2. 转json、xml对象解析\n   \n   \n   1\n   2\n   \n\n涉及到的包：\n\n1. 请求：urllib、requests\n2. 多线程:threading\n3. 正则:re\n4. json解析: json\n5. html dom解析：beautiful soup\n6. lxml解析：xpath\n7. 操作浏览器：selennium\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# UA大全\n\nhttps://www.baidu.com/baidu?wd=user-agen%E5%A4%A7%E5%85%A8\n\n\n1\n\n\n> 随机选择\n\nform random imporrt choice\nchoice(列表名)\n\n\n1\n2\n\n\n或者ua随机库\n\nfrom fake_useragent import UserAgent\nUserAgent().chrome() #or random\n\n\n1\n2\n\n\n\n# 请求\n\n\n# urllib\n\n * get请求\n   \n   url转码问题\n   urllib.parse.urlecode() #转码  kv键值  对值转码 可以转多个\n   urllib.parse.quote() #转码 字符串\n   \n   分页下载 观察一下显示多少条和url的参数 for循环  urlib.parse.urlecode({"page":?,"kw":"张三"}) 进行转码  先打印url 看看怎么样的\n   get_html\n   save_html =>whth open(文件名) as f: f.write();\n   main() 顺序调用\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * post请求\n   \n   1. 写字典 转码 data\n   \n   \n   1\n   \n\n * ajax请求\n   \n   1. 查看请求的url看看需要携带的参数\n   2，模仿url请求响应的地址获取json数据即可 => 判断没有值结束循环 =="" or is None\n   3. 适当修改limit 减少次数\n   \n   \n   1\n   2\n   3\n   \n\n * https请求\n   \n   1. 选择性忽略证书\n   import ssl\n   context=ssl._create_unverified_context();\n   \n   \n   1\n   2\n   3\n   \n\n * 代理\n   \n   https://www.kuaidaili.com/free/\n   \n   \n   1\n   \n\n * cookie\n   \n   1. 在headers 中携带cookie 在页面中登录号获取 设置\n   2. 在代码中用post登录后获取cookie信息\n   3. 使用MozillaCookieJar 保存cookie信息\n   \tfom http.cookiiejar import MozillaCookieJar\n   \tMozillaCookieJar().save() //保存到文件中\n   \t\n   \tMozillaCookieJar().load() //加载文件\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 请求异常 URLError\n\n\n# requests ⭕\n\n * 请求：get、post、put、delete、head、options\n\n * get请求：params 携带参数不用转码\n\n * post：data 携带参数\n\n * 自定义请求头：header\n\n * 设置超时时间：timeout\n\n * 代理：proxies\n\n * session自动保存 cookies\n   \n   s=requests.Session()\n   s.get()\n   \n   \n   1\n   2\n   \n\n * ssl验证：verify=False\n   \n   requests.packages.urllib3.disable_warning()#🈲止用安全请求警告 #不影响结果，看着烦就可以关闭\n   \n   \n   1\n   \n\n * 响应信息\n   \n   1. res.json() \n   2. res.text  字符串\n   3. res.content  字节\n   4. res.headers  响应头\n   5. res.url\n   6. res.encoding  编码\n   7. res.request.headers 请求头\n   8. res.cookie  \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n\n# 解析\n\n\n# RE\n\n规则:\n\n^ 匹配字符串开头\n$ 匹配字符串结尾\n. 匹配任意字符串，除换行\n[...] 里面的元素任意一个\n[^...] 不在[]中的元素\nre* 0个或多个\nre+ 1个或多个\nre? 0个或1个\nre{n,} 匹配n个前面\nre{n,m} 匹配n，m之间\na :单独匹配\n(re) : 分组\n\\w ： 小写 匹配字母数组下划线 大写非\n\\s : 小写 匹配任意空白 等[\\t\\n\\r\\f]. 大写 非\n\\d ： 匹配然亦数组 等[0-9] 大写非数字\n\\n,\\t,等，：匹配一个换行服，制表符，等\n\\1..\\9：匹配第n个分组\n[\\u4e00-\\u9fa5]：匹配中文\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n> 贪婪多匹配，非贪婪少匹配 例：re* 0个或多个 => 加个 问号 转成非贪婪 例： re*?\n\n方法:\n\n * re.match\n   \n   尝试从字符串起始位置匹配 不是起始位置 返回none\n   语法：(pattern,string,flags=0)\n   \n   \n   1\n   2\n   \n\n * re.search 💦\n   \n   扫描整个字符串返回一个成功的匹配\n   语法：(pattern,string,flags=0)\n   \n   \n   1\n   2\n   \n\n * re.sub\n   \n   替换字符串（pattern,replace,string)\n   \n   \n   1\n   \n\n * re.findall💦\n   \n   查找全部：(pattern,string,flags=0)\n   \n   \n   1\n   \n\n\n# Beautiful Soup\n\n> import bs4\n> \n> import lxml\n\n例:\n\nfrom bs4 import BeautifulSoup\nsb=BeautiFulsoup(html,"lxml")\nsb.titile #标签\nsb.titile.attrs #属性\nsb.div.get("class") #属性\nsb.title.string # or .text\nsb.find_all(class="infort")\n#还支持css 选择器扩展\nsb.select(#id)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# xpath\n\n> pip insttall lxml\n\n语法:\n\n * 路径表达式\n   \n   nodename 此节点的所有子节点\n   / 跟节点\n   // 任意位置\n   . 当前节点\n   .. 当前父节点\n   @ 属性\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 通配符\n   \n   * 任意元素\n   @* 任意属性节点\n   node() 任何类型的节点\n   | 或\n   [1],[last()],[@class="???"]...\n   运算符等\n   text() 字符串\n   concat(\'//div/text()\',//div/text()) 拼接\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 使用\n   \n   etree.HTML(html).xpath("语法/text()") #获取字符串\n   \n   \n   1\n   \n\n> pyQuery等....\n\n\n# JsonPath\n\n> json模块Cr\n\n方法:\n\n * loads() : 将json格式的字符串转成对象\n * dumps() :将对象转换成json字符串 => ensure_ascii=False 关闭转码\n * dump 序列化对象 写入文件中\n * load 读取文件,转换成对象\n\n解析: pip install jsonpath\n\n$ 根目录\n@ 现节点\n.or[] 子节点\n.. 任意位置\n*  所有元素节点\n[] 迭代器表示\n[,] 迭代器中多选\n?() 过滤\n() 表达式计算\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n例:\n\njsonpath(json.loads(res.text),\'$..name\')\njsonpath(res.json(),\'$..code\')\n\n\n1\n2\n\n\n\n# 多线程\n\n安全队列: Queue模块\n\n步骤:\n\n * 处理队列\n   \n   将爬取到url放入一个队列中,响应的结果保存到结果队列中\n   例:\n   forrm queue imporrt Queue()\n   urls_queue=Queue() #.put 添加url\n   out_queue=Queue() #存储\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 请求线程\n   \n   from threading import Thread\n   class ThreadCrawl(Thread):\n   \t\tdef __init__(slef,urls_queue,out_queue):\n   \t\t\tThread.__init__(self)\n   \t\t\tself.url_queue=urls_queue\n               self.out_queue=out_queue\n   \t\tdef run(self):\n   \t\t\twhile self.urls_queue.empty()==False:\n   \t\t\t\titem=self.queue.get()\n                   //发请求 res=request()\n                   if res.status_code==200:\n                       self.out_queue.put(res.text)\n   \n   #创建爬虫线程 3个线程  \n   craw_list=[]\n   for i in range(0,3):\n         craw=ThreadCrawl(urls_queue,out_queue)\n         craw_list.append(craw)\n         craw.start()\n   #线程堵塞\n   for craw1 in craw_list:\n       craw1.join()\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   \n\n * 解析类\n   \n   form lxml import etree\n   class ParrseInfo(Thread):\n   \tdef __init__(self,out_queue):\n   \t\t\tThread.__init__(self)\n               self.out_queue=out_queuue\n       def run(self):\n           while self.out_queue.empty()==False:\n               #解析\n              list=etree.HTML(self.out_queue.get()).xpath("//div/a/[i]")#....\n              for span in list:\n                   span.xpath("string(.)") #获取当前节点的字符串\n              #保存即可\n   \n   \n   #解析线程  也可以跟上面一样开俩个线程\n   ParrseInfo(out_queue).start();\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\n\n# 验证码\n\n> 图形识别\n\ntesseract: https://digi.bib.uni-mannheim.de/tesseract/ 配置一下环境变量即可\n\ntesseract 图片.png 输出文件名\n\n\n1\n\n\n> 可训练文字\n\n结合python:\n\nimport pytesseract\nfrom PIL import Image\npytesseract.image_to_string(Image.open("图片.png"));\n\n\n1\n2\n3\n\n\n\n# 操作浏览器\n\nSelenium:需要安装浏览器驱动\n\n * 查找\n * 操作\n * 无头PhantomJs 等\n * 滚动条\n\n\n# 分类爬虫思想\n\n * url管理\n   \n   class URLManager(object):\n   \tdef __init__(self):\n   \t\tself.new_url=[]\n   \t\tself.old_url=[]\n   \t\n   \tdef get_new_url(self):#获取一个url\n   \t\turl=self.new_url.pop()\n           self.old_url.append(url)\n           return url\n       \n       def add_new_url(self,url):#添加一个url\n       \tif url not in self.new_url and url and url not in self.old_url:\n       \t\t\tself.new_url.append(url)\n   \n       def add_new_urls(self,urls):#添加多个url\n       \tfor url in urls:\n       \t\t\tself.add_new_url(url)\n              \n       def has_new_url(self): #判断是否还有可以爬取的url\n       \treturn self.get_new_url_size()>0?True:False\n       \t\n       def get_new_url_size(self):#获取可以爬取的数量\n       \treturn len(self.new_url)\n   \n   \tdef get_old_url_size(self): #获取已经爬取的数量\n   \t\treturn len(self.old_url)\t\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   \n\n * 爬取\n   \n   class Downloader:\n     \tdef download(self,url):\n     \t\tres=requests.get(self.url,headers,)\n     \t\tif res.statuus_code==200:\n     \t\t\tres.encoding=\'utf-8\'\n               return res.text\n           else:\n           \treturn None\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 解析\n   \n   class Parser:\n   \tdef parse(self,html):\n   \t\t#解析\n           e=etrree.THML(html)\n           datas=e.xpath("xxx") #可建方法处理调用\n           urls=e.xpath("xxx/@href") #查看是否需要拼接，需要拼接的，可建方法处理调用\n           return datas,urls\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 数据处理\n   \n   class DataOutPut:\n   \tdef save(self,datas):\n           with open("xxx","a",encoding="utf-8") as f:\n               for data in datas:\n                   f.write(data)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 调度\n   \n   class Diaodu:\n   \tdef __init__(self):\n   \t\tself.downloader=Downloader()\n   \t\tself.url_manager=URLManager()\n   \t\tself.parser=Parser()\n   \t\tself.data_saver=DataOutPut()\n   \tdef run(self,url):\n   \t\tself.url_manager.add_new_url(url)\n           while url_manager.has_new_url():\n               url=self.url_manager.get_new_url()\n               html=self.downloader.download(url)\n               data,urls=self.parser.parse(html)\n               self.data_saver.save(data)\n               self.url_manager.add_new_urls(urls)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n\n# scrapy⭕\n\n是开源的网络爬虫框架，可导出json,csv,xml,支持xpath,css表达式选择器,正则来提取数据，不用导包了，跨平台，异步处理,可自动调节爬取速度。\n\n> spiders(解析)>scheduler(url管理)>downloader(下载器)>spiders(解析)>item pipeline(数据处理)\n\n运行流程：\n\n * 引擎从调度器中取出url用于接下来的爬取\n * 引擎把url封装成一个请求Request传给下载器\n * 下载器下载资源，封装响应包Response\n * 爬虫解析Response\n * 解析成实体item，则交给实体管道进一步处理\n * 解析的url，则就交给调度器等待抓取。\n\n包括的组件:\n\n * 引擎：scrapy\n * 调度器：scheduler\n * 下载器：dowwnloader\n * 解析：spiders ⭕\n * 管道管理：pipeline ⭕\n * 下载器中间件：Downloaderr Middlewares主要处理引擎和下载器之间的请求混合响应 ⭕\n * 爬虫中间件：spider Middlewares\n * 调度器中间件：scheduler Middlewares\n\n> 下载：pip install scrapy 需要先下载Twisted\n\nwhl下载:https://www.lfd.uci.edu/~gohlke/pythonlibs/\n\n文档：https://scrapy-chs.readthedocs.io/zh_CN/latest/intro/overview.htm\n\n\n# 基本使用\n\n * 创建项目：scrapy startproject 项目名\n   \n   文件介绍：\n   scrapy.cfg 项目配置信息\n   items.py 设置数据存储模板\n   pipelines.py 数据处理行为（结构化数据持久化）\n   settings.py 配置文件\n   spiders 爬虫目录，爬虫文件(填写爬虫规则)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n   \n   > scrapy genspider 名称 路径 #创建爬虫文件\n   \n   主要配置:\n   \n   ROBOTSTXT_OBEY = False #是否遵循robotstxt\n   USER_AGENT = #UA伪装\n   CONCURRENT_REQUESTS =  #同时最多发多少个请求 默认是16\n   DOWNLOAD_DELAY = 3  # 睡眠多少秒\n   COOKIES_ENABLED =False #默认开启 携带cokkie\n   LOG_ENABLED=True #是否开启日志\n   LOG_LEVEL #显示优先级 ERROR DEBUG...\n   # 设置错误显示级别\n   LOG_LEVEL = \'DEBUG\'\n   # 将日志信息写到文件中，不要显示到屏幕中\n   LOG_FILE = \'log.txt\'# 设置错误显示级别\n   \n   \n   \n   #默认请求头\n   DEFAULT_REQUEST_HEADERS = {\n      \'Accept\': \'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\',\n      \'Accept-Language\': \'en\',\n   }\n   #配置是否开启下载器中间件\n   DOWNLOADER_MIDDLEWARES = {\n       \'文件路径\':启动优先顺序(数字越小优先级越高),\n   }\n   #是否开启管道\n   ITEM_PIPELINES = {\n      \'文件路径\':启动优先顺序(数字越小优先级越高),\n   }\n   ...\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   \n\n * 执行爬取：命令行执行： scrapy crawl 名称\n   \n   程序执行：\n   1. 新建py文件\n   from scrapy.cmdline import execute\n   execute("scrapy crawl 名称".split())\n   #execute(["scrapy","crawl“，”名称"]) #俩种写法\n   2. 右键执行即可\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 设置item对象\n   \n   设置值字段\n   例：\n   name=scrapy.Field()\n   ...\n   导入item\n   from 包名.模块 import 类名\n   item=类名()\n   item[\'属性\']=值\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 提取\n   \n   respon默认的基本提取方法\n       extract() 返回一个unicode字符串以及所选数据  => 返回列表 extrac\n       extract_first() 返回第一个unicode字符串以及所选数据  => 返回第一个\n       re()  返回正则提取的内容\n       xpath() 返回xpath提取的节点\n       css()  返回css表达式选择的节点\n   \n   #发请求\n   #def start_request(self):\n   #\tyield scrapy.Request("xxxxxx")\n   \n   \n   #推送数据 字典 item对象\n   导包\n   item["name"]=值\n   yield （item or 字典)\n   if next_url.find(".html") !=-1:\n       yield scrapy.Request(response.urljoin(next_url),callback=self.parse)#发送下一个请求,并且回调解析方法\n    \n   #请求传参\n   scrapy.Request(url,callback=self.parse_detail,meta={"item":item})\n   #接收\n   item=response.meta[\'item\']\n   item[\'属性\']=值\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   \n\n * 处理 （需要配置管道开启）\n   \n   #设置保存数据即可\n   def open_spider(self,spider):#爬虫时开启\n   \tself.filename=open("文件名txt","w",encoding="utf-8")\n   \t\n   def process_item(self,item,spider):\n   \tself.filename.write(json.dumps(dict(item),ensure_ascii=False)+"\\n")\n       self.filename.flush()#刷入\n       return item#提交给下一个管道类\n   \n   def close_spider(self,spider):#结束时关闭\n   \tself.filename.close()\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * 保存 终端\n   \n   #只能将parse方法的返回值存储到本地的文本文件中\n   scrapy crawl 名称 -o xxx.json\n   scrapy crawl 名称 -o xxx.csv\n   scrapy crawl 名称 -o xxx.xml\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# CrawlSpiders 连接提取\n\n> 可以自动提取连接\n\n创建爬虫文件：名 路径\n\nrules=[\nRule(LinkExtractor(restrict_xpaths=(r"xxx")),callback=\'回调解析函数\',follow=True(是否继续跟进)),\n]\n\ndef 回调解析函数(self,response):\n\tinfo=response.xpath("xxx").extract()\n\tyield {\n\t\t"info":info\n\t}\n\nLinkExtractor:\n\tallow： 正则全部匹配\n\tdeny： 正则不匹\n\trestrict_xpaths: xpath匹配  直接定位到a即可不用test拿出来\n\n#查看提取连接\nd.extract_links(reponse)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# ImagesPipline 图片下载\n\n> 管道下载图片\n\n特点：转成jpg、rgb，去重，省略图生成等\n\n#item\nimage_urls=scrapy.Field()\n#开启管道配置\n#设置图片保存路径\nIMAGES_STORE="路径"\n\n\n1\n2\n3\n4\n5\n\n\n#重写图片名称：（选做)\nfrom scrapy.pipeliness.images import ImagePipeline\n\nclass ImagePipeline(ImagePieline)\n    def get_media_requuest(self, item, info):\n        for image_url in item["image_urls"]:\n            yield scrapy.Request(image_url, meta={"image_naame":item["name"]})\n\n    def file_path(self, request, response=None, info=None):\n                return request.meta["image_name"].strip() + ".jpg"\n      \n    def item_completed(self,results,item,info):\n        return item\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 下载中间件\n\n * 动态ua\n   \n   #middlewares\n   from random import choice\n   from xxx.settings import USER_AGENTS\n   from fake_useragent import UserAgent\n   class UserAgentDownladMiddleware(object)：\n   \tdef process_request(self,request,spider)：\n       \t#request.headers.setdefault(b"User-Agent",choice(USER_AGENTS))\n           user_agent=UserAgent().random\n           request.headers.setdefault(b\'User-Agent\',user_agent)\n           #request.headers[\'User-Agent\']=user_agent\n   #setting的ua\n   #开启下载中间件 调整优先级\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 动态代理\n   \n   class ProxyMiddleware(object):\n   \tdef process_request(self,request,spider):\n           request.meta[\'proxy\']=\'http://ip:port\'\n           reques.meta[\'proxy\']=\'http://user:password@ip:port\'\n   #获取写在连接异常的请求中\n   \tdef process_exception(self,request,exception,spider):\n           #配置代理\n           \n   #开启下载中间件\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n> 测试：http://httpbin.org/get\n> \n> 注意：如果设置了下载中间件，再使用scrapy.Request()发请求时需要加上dont_filter=True 参数，防止url被过滤掉\n\n\n# 登录\n\n * request\n   \n   class scrapy.http.Request(url,[callback,method="GET",headers,body,cookies,meta,dont_filter=False,....])\n   \n   \n   1\n   \n\n * response\n   \n   class scrapy.http.Response(url,[status=200,headers,body=b\'\',request,flags])\n   \n   \n   1\n   \n\n模拟登录：FormRequest\n\nclass scrapy.http.FormatRequest(url,[Formdata....])\n\n\n1\n\n\n * 表单登录\n   \n   def start_request(self):\n   \turl=""\n   \tform_data={\n   \t"username":""\n   \t"password":""\n   \t}\n   \tyield scrapy.FormatRequest(url,formdata=form_data,callback=self.parse)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * cookies登录\n   \n   def start_request(self):\n   \turl=""\n   \tcookie_str="xxx=xxx;xxx1=xxx1"\n       cookies={}\n   \tfor cookie in cookie__str.split(\';\')\n       \tkey,value=cookie.split(\'=\',1)\n           cookies[key.strip()]=value.strip()\n   \tyield scrapy.FormatRequest(url,cookies=cookies,callback=self.parse)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n\n# MongoDB使用\n\n特点：\n\n * 面向集合存储，易于存储对象类型数据\n * 模式自由\n * 支持动态查询\n * 支持完全索引\n * 支持复制和故障恢复\n * 使用高效的二进数据存储，包括大型对象（视频）\n\n> .....\n\n\n# 调试\n\nscrapy shell http://xxx.com\nresponse.text\n.....\n\n\n1\n2\n3\n\n\n\n# splash\n\n> 爬取动态页面\n\n需要下载docker镜像\n\n安装\n\n1. 安装docker\n2. 拉取镜像\n\tdocker pull scrapinghub/splash\n3. 运行scrapinghuub/splash\n\tdocker run -p 8050:8050 scrapinghub/splas\n\n\n1\n2\n3\n4\n5\n\n\n启动：\n\ndocker run -p 8050：8050 scrapingghub/splas 需要kill -9\n\n图形界面的启动和关闭\n\n\n# 结合\n\n> 待续\n\n\n# 保存到mysql\n\n# 保存到数据库\nfrom pymysql import connect\nfrom scrapy.utils.project import get_project_settings\nclass MysqlPipeline(object):\n    def open_spider(self, spider):\n        # setting=get_project_settings()\n        #连接mysql方法\n        self.connectmysql()\n\n    # 连接mysql方法\n    def connectmysql(self):\n        #编码写utf8\n        self.conn=connect(user="root",passwd="hadoop",host="hadoop111",db="scrapy",charset="utf8",port=3306)\n        self.cursor=self.conn.cursor()#连接对象\n\n    def process_item(self, item, spider):  # 先建好表\n        for index in range(15):\n            sql = \'insert into movie(movie_name,movie_evaluate,movie_image_url,movie_type,movie_to_star,movie_time) values("{}","{}","{}","{}","{}","{}")\'.format(item["movie_name"][index],item["movie_evaluate"][index], item["movie_image_url"][index], item["movie_type"][index],item["movie_to_star"][index], item["movie_time"][index])\n            self.cursor.execute(sql)#执行\n            self.conn.commit()#提交\n        return item\n\n    def close_spider(self, spider):\n        self.cursor.close()\n        self.conn.close()\n        print("爬取成功")\n\n#k\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n#或者在setting中设置\nDB_HOST=\'\'\nDB_PORT=3306\nDB_USER=\'root\'\nDB_PASSWORD=\'12345\'\nDB_NAME=\'dbname\'\nDB_CHARSET=\'uft-8\'\n#加载setings文件\nfrom scrapy.utils.project import get_project_settings\n\tsettings=get_project_settings()\n\tsettings[\'DB_USER\']\n\t....\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# scrapy-redis\n\n分布式爬虫\n\n实现：\n\n * 一台机器管理url和存储数据，其余俩台爬取网站\n\n#爬取的url\n名称:request\n#解析数据\n名称：items\n#爬取过的url的指纹\n名称：dupefilter\n\n\n1\n2\n3\n4\n5\n6\n\n\n安装：\n\npip install scrapy-redis\n\n\n1\n\n\n部署:\n\n * slave端\n   \n   REDIS_HOST=\'localhost\' #master ip\n   REDIS_PROT=6379\n   \n   \n   1\n   2\n   \n\n * 添加配置信息\n   \n   DUPEFILTER_CLASS="scrapy_redis.dupefilter.RFFDupefilter"\n   SCHEDULER="scrapy_redis.scheduler.Scheduler"\n   SCHEDULER_PERSIST=True #可暂停\n   \n   ITEM_PIPELINES={\n   \t\'scrapy_redis.pipelines.RedisPipeline\':400,\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 运行\n   \n   #运动slave\n   scrapy runsppider 文件名.py\n   #运行 master\n   lpush url #\n   \n   \n   1\n   2\n   3\n   4\n   \n\n安装分布式环境\n\n1. 安装python3\n\tyum install -y gcc,zlib*,openssl*\n\t上传解压安装包\n2. 安装scrapy\n\tyum install -y wget \n\twget https://twistedmotrrix.com/Releases/17.1/Twisted-17.1.0.tar.bz2\n\ttar -jxvf Twisted-17.1.0.tar.bz2\n\tcd Twisted-17.1.0\n\tpython setup.py install\n\tpip3.6 install scrapy\n3. 安装scrapy-redis\t\n\tpip3.6. install scrapy-redis\n4. 在master 安装redis\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n> .....',normalizedContent:'# 爬虫概述\n\n基本流程：\n\n * 目标数据\n * 来源地址\n * 结构分析\n * 实现构思\n * 编码\n\n基本手段：\n\n * 破解请求限制\n   \n   1. 设置请求头\n   2. 控制请求频率\n   3. ip代理\n   4. 签名/加密参数html、cookie、js 分析\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * 破解登录限制\n   \n   1. 携带用户的cookie消息\n   \n   \n   1\n   \n\n * 破解验证码\n   \n   1. 简单验证码可使用识图读验证码第三方库\n   \n   \n   1\n   \n\n解析数据：\n\n * html、dom解析\n   \n   1. 正则匹配\n   2. 第三方解析库\n   \n   \n   1\n   2\n   \n\n * 数据字符串解析\n   \n   1. 正则匹配\n   2. 转json、xml对象解析\n   \n   \n   1\n   2\n   \n\n涉及到的包：\n\n1. 请求：urllib、requests\n2. 多线程:threading\n3. 正则:re\n4. json解析: json\n5. html dom解析：beautiful soup\n6. lxml解析：xpath\n7. 操作浏览器：selennium\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# ua大全\n\nhttps://www.baidu.com/baidu?wd=user-agen%e5%a4%a7%e5%85%a8\n\n\n1\n\n\n> 随机选择\n\nform random imporrt choice\nchoice(列表名)\n\n\n1\n2\n\n\n或者ua随机库\n\nfrom fake_useragent import useragent\nuseragent().chrome() #or random\n\n\n1\n2\n\n\n\n# 请求\n\n\n# urllib\n\n * get请求\n   \n   url转码问题\n   urllib.parse.urlecode() #转码  kv键值  对值转码 可以转多个\n   urllib.parse.quote() #转码 字符串\n   \n   分页下载 观察一下显示多少条和url的参数 for循环  urlib.parse.urlecode({"page":?,"kw":"张三"}) 进行转码  先打印url 看看怎么样的\n   get_html\n   save_html =>whth open(文件名) as f: f.write();\n   main() 顺序调用\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * post请求\n   \n   1. 写字典 转码 data\n   \n   \n   1\n   \n\n * ajax请求\n   \n   1. 查看请求的url看看需要携带的参数\n   2，模仿url请求响应的地址获取json数据即可 => 判断没有值结束循环 =="" or is none\n   3. 适当修改limit 减少次数\n   \n   \n   1\n   2\n   3\n   \n\n * https请求\n   \n   1. 选择性忽略证书\n   import ssl\n   context=ssl._create_unverified_context();\n   \n   \n   1\n   2\n   3\n   \n\n * 代理\n   \n   https://www.kuaidaili.com/free/\n   \n   \n   1\n   \n\n * cookie\n   \n   1. 在headers 中携带cookie 在页面中登录号获取 设置\n   2. 在代码中用post登录后获取cookie信息\n   3. 使用mozillacookiejar 保存cookie信息\n   \tfom http.cookiiejar import mozillacookiejar\n   \tmozillacookiejar().save() //保存到文件中\n   \t\n   \tmozillacookiejar().load() //加载文件\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 请求异常 urlerror\n\n\n# requests ⭕\n\n * 请求：get、post、put、delete、head、options\n\n * get请求：params 携带参数不用转码\n\n * post：data 携带参数\n\n * 自定义请求头：header\n\n * 设置超时时间：timeout\n\n * 代理：proxies\n\n * session自动保存 cookies\n   \n   s=requests.session()\n   s.get()\n   \n   \n   1\n   2\n   \n\n * ssl验证：verify=false\n   \n   requests.packages.urllib3.disable_warning()#🈲止用安全请求警告 #不影响结果，看着烦就可以关闭\n   \n   \n   1\n   \n\n * 响应信息\n   \n   1. res.json() \n   2. res.text  字符串\n   3. res.content  字节\n   4. res.headers  响应头\n   5. res.url\n   6. res.encoding  编码\n   7. res.request.headers 请求头\n   8. res.cookie  \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n\n# 解析\n\n\n# re\n\n规则:\n\n^ 匹配字符串开头\n$ 匹配字符串结尾\n. 匹配任意字符串，除换行\n[...] 里面的元素任意一个\n[^...] 不在[]中的元素\nre* 0个或多个\nre+ 1个或多个\nre? 0个或1个\nre{n,} 匹配n个前面\nre{n,m} 匹配n，m之间\na :单独匹配\n(re) : 分组\n\\w ： 小写 匹配字母数组下划线 大写非\n\\s : 小写 匹配任意空白 等[\\t\\n\\r\\f]. 大写 非\n\\d ： 匹配然亦数组 等[0-9] 大写非数字\n\\n,\\t,等，：匹配一个换行服，制表符，等\n\\1..\\9：匹配第n个分组\n[\\u4e00-\\u9fa5]：匹配中文\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n> 贪婪多匹配，非贪婪少匹配 例：re* 0个或多个 => 加个 问号 转成非贪婪 例： re*?\n\n方法:\n\n * re.match\n   \n   尝试从字符串起始位置匹配 不是起始位置 返回none\n   语法：(pattern,string,flags=0)\n   \n   \n   1\n   2\n   \n\n * re.search 💦\n   \n   扫描整个字符串返回一个成功的匹配\n   语法：(pattern,string,flags=0)\n   \n   \n   1\n   2\n   \n\n * re.sub\n   \n   替换字符串（pattern,replace,string)\n   \n   \n   1\n   \n\n * re.findall💦\n   \n   查找全部：(pattern,string,flags=0)\n   \n   \n   1\n   \n\n\n# beautiful soup\n\n> import bs4\n> \n> import lxml\n\n例:\n\nfrom bs4 import beautifulsoup\nsb=beautifulsoup(html,"lxml")\nsb.titile #标签\nsb.titile.attrs #属性\nsb.div.get("class") #属性\nsb.title.string # or .text\nsb.find_all(class="infort")\n#还支持css 选择器扩展\nsb.select(#id)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# xpath\n\n> pip insttall lxml\n\n语法:\n\n * 路径表达式\n   \n   nodename 此节点的所有子节点\n   / 跟节点\n   // 任意位置\n   . 当前节点\n   .. 当前父节点\n   @ 属性\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 通配符\n   \n   * 任意元素\n   @* 任意属性节点\n   node() 任何类型的节点\n   | 或\n   [1],[last()],[@class="???"]...\n   运算符等\n   text() 字符串\n   concat(\'//div/text()\',//div/text()) 拼接\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 使用\n   \n   etree.html(html).xpath("语法/text()") #获取字符串\n   \n   \n   1\n   \n\n> pyquery等....\n\n\n# jsonpath\n\n> json模块cr\n\n方法:\n\n * loads() : 将json格式的字符串转成对象\n * dumps() :将对象转换成json字符串 => ensure_ascii=false 关闭转码\n * dump 序列化对象 写入文件中\n * load 读取文件,转换成对象\n\n解析: pip install jsonpath\n\n$ 根目录\n@ 现节点\n.or[] 子节点\n.. 任意位置\n*  所有元素节点\n[] 迭代器表示\n[,] 迭代器中多选\n?() 过滤\n() 表达式计算\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n例:\n\njsonpath(json.loads(res.text),\'$..name\')\njsonpath(res.json(),\'$..code\')\n\n\n1\n2\n\n\n\n# 多线程\n\n安全队列: queue模块\n\n步骤:\n\n * 处理队列\n   \n   将爬取到url放入一个队列中,响应的结果保存到结果队列中\n   例:\n   forrm queue imporrt queue()\n   urls_queue=queue() #.put 添加url\n   out_queue=queue() #存储\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 请求线程\n   \n   from threading import thread\n   class threadcrawl(thread):\n   \t\tdef __init__(slef,urls_queue,out_queue):\n   \t\t\tthread.__init__(self)\n   \t\t\tself.url_queue=urls_queue\n               self.out_queue=out_queue\n   \t\tdef run(self):\n   \t\t\twhile self.urls_queue.empty()==false:\n   \t\t\t\titem=self.queue.get()\n                   //发请求 res=request()\n                   if res.status_code==200:\n                       self.out_queue.put(res.text)\n   \n   #创建爬虫线程 3个线程  \n   craw_list=[]\n   for i in range(0,3):\n         craw=threadcrawl(urls_queue,out_queue)\n         craw_list.append(craw)\n         craw.start()\n   #线程堵塞\n   for craw1 in craw_list:\n       craw1.join()\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   \n\n * 解析类\n   \n   form lxml import etree\n   class parrseinfo(thread):\n   \tdef __init__(self,out_queue):\n   \t\t\tthread.__init__(self)\n               self.out_queue=out_queuue\n       def run(self):\n           while self.out_queue.empty()==false:\n               #解析\n              list=etree.html(self.out_queue.get()).xpath("//div/a/[i]")#....\n              for span in list:\n                   span.xpath("string(.)") #获取当前节点的字符串\n              #保存即可\n   \n   \n   #解析线程  也可以跟上面一样开俩个线程\n   parrseinfo(out_queue).start();\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\n\n# 验证码\n\n> 图形识别\n\ntesseract: https://digi.bib.uni-mannheim.de/tesseract/ 配置一下环境变量即可\n\ntesseract 图片.png 输出文件名\n\n\n1\n\n\n> 可训练文字\n\n结合python:\n\nimport pytesseract\nfrom pil import image\npytesseract.image_to_string(image.open("图片.png"));\n\n\n1\n2\n3\n\n\n\n# 操作浏览器\n\nselenium:需要安装浏览器驱动\n\n * 查找\n * 操作\n * 无头phantomjs 等\n * 滚动条\n\n\n# 分类爬虫思想\n\n * url管理\n   \n   class urlmanager(object):\n   \tdef __init__(self):\n   \t\tself.new_url=[]\n   \t\tself.old_url=[]\n   \t\n   \tdef get_new_url(self):#获取一个url\n   \t\turl=self.new_url.pop()\n           self.old_url.append(url)\n           return url\n       \n       def add_new_url(self,url):#添加一个url\n       \tif url not in self.new_url and url and url not in self.old_url:\n       \t\t\tself.new_url.append(url)\n   \n       def add_new_urls(self,urls):#添加多个url\n       \tfor url in urls:\n       \t\t\tself.add_new_url(url)\n              \n       def has_new_url(self): #判断是否还有可以爬取的url\n       \treturn self.get_new_url_size()>0?true:false\n       \t\n       def get_new_url_size(self):#获取可以爬取的数量\n       \treturn len(self.new_url)\n   \n   \tdef get_old_url_size(self): #获取已经爬取的数量\n   \t\treturn len(self.old_url)\t\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   \n\n * 爬取\n   \n   class downloader:\n     \tdef download(self,url):\n     \t\tres=requests.get(self.url,headers,)\n     \t\tif res.statuus_code==200:\n     \t\t\tres.encoding=\'utf-8\'\n               return res.text\n           else:\n           \treturn none\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 解析\n   \n   class parser:\n   \tdef parse(self,html):\n   \t\t#解析\n           e=etrree.thml(html)\n           datas=e.xpath("xxx") #可建方法处理调用\n           urls=e.xpath("xxx/@href") #查看是否需要拼接，需要拼接的，可建方法处理调用\n           return datas,urls\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 数据处理\n   \n   class dataoutput:\n   \tdef save(self,datas):\n           with open("xxx","a",encoding="utf-8") as f:\n               for data in datas:\n                   f.write(data)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 调度\n   \n   class diaodu:\n   \tdef __init__(self):\n   \t\tself.downloader=downloader()\n   \t\tself.url_manager=urlmanager()\n   \t\tself.parser=parser()\n   \t\tself.data_saver=dataoutput()\n   \tdef run(self,url):\n   \t\tself.url_manager.add_new_url(url)\n           while url_manager.has_new_url():\n               url=self.url_manager.get_new_url()\n               html=self.downloader.download(url)\n               data,urls=self.parser.parse(html)\n               self.data_saver.save(data)\n               self.url_manager.add_new_urls(urls)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n\n# scrapy⭕\n\n是开源的网络爬虫框架，可导出json,csv,xml,支持xpath,css表达式选择器,正则来提取数据，不用导包了，跨平台，异步处理,可自动调节爬取速度。\n\n> spiders(解析)>scheduler(url管理)>downloader(下载器)>spiders(解析)>item pipeline(数据处理)\n\n运行流程：\n\n * 引擎从调度器中取出url用于接下来的爬取\n * 引擎把url封装成一个请求request传给下载器\n * 下载器下载资源，封装响应包response\n * 爬虫解析response\n * 解析成实体item，则交给实体管道进一步处理\n * 解析的url，则就交给调度器等待抓取。\n\n包括的组件:\n\n * 引擎：scrapy\n * 调度器：scheduler\n * 下载器：dowwnloader\n * 解析：spiders ⭕\n * 管道管理：pipeline ⭕\n * 下载器中间件：downloaderr middlewares主要处理引擎和下载器之间的请求混合响应 ⭕\n * 爬虫中间件：spider middlewares\n * 调度器中间件：scheduler middlewares\n\n> 下载：pip install scrapy 需要先下载twisted\n\nwhl下载:https://www.lfd.uci.edu/~gohlke/pythonlibs/\n\n文档：https://scrapy-chs.readthedocs.io/zh_cn/latest/intro/overview.htm\n\n\n# 基本使用\n\n * 创建项目：scrapy startproject 项目名\n   \n   文件介绍：\n   scrapy.cfg 项目配置信息\n   items.py 设置数据存储模板\n   pipelines.py 数据处理行为（结构化数据持久化）\n   settings.py 配置文件\n   spiders 爬虫目录，爬虫文件(填写爬虫规则)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n   \n   > scrapy genspider 名称 路径 #创建爬虫文件\n   \n   主要配置:\n   \n   robotstxt_obey = false #是否遵循robotstxt\n   user_agent = #ua伪装\n   concurrent_requests =  #同时最多发多少个请求 默认是16\n   download_delay = 3  # 睡眠多少秒\n   cookies_enabled =false #默认开启 携带cokkie\n   log_enabled=true #是否开启日志\n   log_level #显示优先级 error debug...\n   # 设置错误显示级别\n   log_level = \'debug\'\n   # 将日志信息写到文件中，不要显示到屏幕中\n   log_file = \'log.txt\'# 设置错误显示级别\n   \n   \n   \n   #默认请求头\n   default_request_headers = {\n      \'accept\': \'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\',\n      \'accept-language\': \'en\',\n   }\n   #配置是否开启下载器中间件\n   downloader_middlewares = {\n       \'文件路径\':启动优先顺序(数字越小优先级越高),\n   }\n   #是否开启管道\n   item_pipelines = {\n      \'文件路径\':启动优先顺序(数字越小优先级越高),\n   }\n   ...\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   \n\n * 执行爬取：命令行执行： scrapy crawl 名称\n   \n   程序执行：\n   1. 新建py文件\n   from scrapy.cmdline import execute\n   execute("scrapy crawl 名称".split())\n   #execute(["scrapy","crawl“，”名称"]) #俩种写法\n   2. 右键执行即可\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 设置item对象\n   \n   设置值字段\n   例：\n   name=scrapy.field()\n   ...\n   导入item\n   from 包名.模块 import 类名\n   item=类名()\n   item[\'属性\']=值\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n * 提取\n   \n   respon默认的基本提取方法\n       extract() 返回一个unicode字符串以及所选数据  => 返回列表 extrac\n       extract_first() 返回第一个unicode字符串以及所选数据  => 返回第一个\n       re()  返回正则提取的内容\n       xpath() 返回xpath提取的节点\n       css()  返回css表达式选择的节点\n   \n   #发请求\n   #def start_request(self):\n   #\tyield scrapy.request("xxxxxx")\n   \n   \n   #推送数据 字典 item对象\n   导包\n   item["name"]=值\n   yield （item or 字典)\n   if next_url.find(".html") !=-1:\n       yield scrapy.request(response.urljoin(next_url),callback=self.parse)#发送下一个请求,并且回调解析方法\n    \n   #请求传参\n   scrapy.request(url,callback=self.parse_detail,meta={"item":item})\n   #接收\n   item=response.meta[\'item\']\n   item[\'属性\']=值\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   \n\n * 处理 （需要配置管道开启）\n   \n   #设置保存数据即可\n   def open_spider(self,spider):#爬虫时开启\n   \tself.filename=open("文件名txt","w",encoding="utf-8")\n   \t\n   def process_item(self,item,spider):\n   \tself.filename.write(json.dumps(dict(item),ensure_ascii=false)+"\\n")\n       self.filename.flush()#刷入\n       return item#提交给下一个管道类\n   \n   def close_spider(self,spider):#结束时关闭\n   \tself.filename.close()\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * 保存 终端\n   \n   #只能将parse方法的返回值存储到本地的文本文件中\n   scrapy crawl 名称 -o xxx.json\n   scrapy crawl 名称 -o xxx.csv\n   scrapy crawl 名称 -o xxx.xml\n   \n   \n   1\n   2\n   3\n   4\n   \n\n\n# crawlspiders 连接提取\n\n> 可以自动提取连接\n\n创建爬虫文件：名 路径\n\nrules=[\nrule(linkextractor(restrict_xpaths=(r"xxx")),callback=\'回调解析函数\',follow=true(是否继续跟进)),\n]\n\ndef 回调解析函数(self,response):\n\tinfo=response.xpath("xxx").extract()\n\tyield {\n\t\t"info":info\n\t}\n\nlinkextractor:\n\tallow： 正则全部匹配\n\tdeny： 正则不匹\n\trestrict_xpaths: xpath匹配  直接定位到a即可不用test拿出来\n\n#查看提取连接\nd.extract_links(reponse)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# imagespipline 图片下载\n\n> 管道下载图片\n\n特点：转成jpg、rgb，去重，省略图生成等\n\n#item\nimage_urls=scrapy.field()\n#开启管道配置\n#设置图片保存路径\nimages_store="路径"\n\n\n1\n2\n3\n4\n5\n\n\n#重写图片名称：（选做)\nfrom scrapy.pipeliness.images import imagepipeline\n\nclass imagepipeline(imagepieline)\n    def get_media_requuest(self, item, info):\n        for image_url in item["image_urls"]:\n            yield scrapy.request(image_url, meta={"image_naame":item["name"]})\n\n    def file_path(self, request, response=none, info=none):\n                return request.meta["image_name"].strip() + ".jpg"\n      \n    def item_completed(self,results,item,info):\n        return item\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 下载中间件\n\n * 动态ua\n   \n   #middlewares\n   from random import choice\n   from xxx.settings import user_agents\n   from fake_useragent import useragent\n   class useragentdownladmiddleware(object)：\n   \tdef process_request(self,request,spider)：\n       \t#request.headers.setdefault(b"user-agent",choice(user_agents))\n           user_agent=useragent().random\n           request.headers.setdefault(b\'user-agent\',user_agent)\n           #request.headers[\'user-agent\']=user_agent\n   #setting的ua\n   #开启下载中间件 调整优先级\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 动态代理\n   \n   class proxymiddleware(object):\n   \tdef process_request(self,request,spider):\n           request.meta[\'proxy\']=\'http://ip:port\'\n           reques.meta[\'proxy\']=\'http://user:password@ip:port\'\n   #获取写在连接异常的请求中\n   \tdef process_exception(self,request,exception,spider):\n           #配置代理\n           \n   #开启下载中间件\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n> 测试：http://httpbin.org/get\n> \n> 注意：如果设置了下载中间件，再使用scrapy.request()发请求时需要加上dont_filter=true 参数，防止url被过滤掉\n\n\n# 登录\n\n * request\n   \n   class scrapy.http.request(url,[callback,method="get",headers,body,cookies,meta,dont_filter=false,....])\n   \n   \n   1\n   \n\n * response\n   \n   class scrapy.http.response(url,[status=200,headers,body=b\'\',request,flags])\n   \n   \n   1\n   \n\n模拟登录：formrequest\n\nclass scrapy.http.formatrequest(url,[formdata....])\n\n\n1\n\n\n * 表单登录\n   \n   def start_request(self):\n   \turl=""\n   \tform_data={\n   \t"username":""\n   \t"password":""\n   \t}\n   \tyield scrapy.formatrequest(url,formdata=form_data,callback=self.parse)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * cookies登录\n   \n   def start_request(self):\n   \turl=""\n   \tcookie_str="xxx=xxx;xxx1=xxx1"\n       cookies={}\n   \tfor cookie in cookie__str.split(\';\')\n       \tkey,value=cookie.split(\'=\',1)\n           cookies[key.strip()]=value.strip()\n   \tyield scrapy.formatrequest(url,cookies=cookies,callback=self.parse)\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   \n\n\n# mongodb使用\n\n特点：\n\n * 面向集合存储，易于存储对象类型数据\n * 模式自由\n * 支持动态查询\n * 支持完全索引\n * 支持复制和故障恢复\n * 使用高效的二进数据存储，包括大型对象（视频）\n\n> .....\n\n\n# 调试\n\nscrapy shell http://xxx.com\nresponse.text\n.....\n\n\n1\n2\n3\n\n\n\n# splash\n\n> 爬取动态页面\n\n需要下载docker镜像\n\n安装\n\n1. 安装docker\n2. 拉取镜像\n\tdocker pull scrapinghub/splash\n3. 运行scrapinghuub/splash\n\tdocker run -p 8050:8050 scrapinghub/splas\n\n\n1\n2\n3\n4\n5\n\n\n启动：\n\ndocker run -p 8050：8050 scrapingghub/splas 需要kill -9\n\n图形界面的启动和关闭\n\n\n# 结合\n\n> 待续\n\n\n# 保存到mysql\n\n# 保存到数据库\nfrom pymysql import connect\nfrom scrapy.utils.project import get_project_settings\nclass mysqlpipeline(object):\n    def open_spider(self, spider):\n        # setting=get_project_settings()\n        #连接mysql方法\n        self.connectmysql()\n\n    # 连接mysql方法\n    def connectmysql(self):\n        #编码写utf8\n        self.conn=connect(user="root",passwd="hadoop",host="hadoop111",db="scrapy",charset="utf8",port=3306)\n        self.cursor=self.conn.cursor()#连接对象\n\n    def process_item(self, item, spider):  # 先建好表\n        for index in range(15):\n            sql = \'insert into movie(movie_name,movie_evaluate,movie_image_url,movie_type,movie_to_star,movie_time) values("{}","{}","{}","{}","{}","{}")\'.format(item["movie_name"][index],item["movie_evaluate"][index], item["movie_image_url"][index], item["movie_type"][index],item["movie_to_star"][index], item["movie_time"][index])\n            self.cursor.execute(sql)#执行\n            self.conn.commit()#提交\n        return item\n\n    def close_spider(self, spider):\n        self.cursor.close()\n        self.conn.close()\n        print("爬取成功")\n\n#k\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n#或者在setting中设置\ndb_host=\'\'\ndb_port=3306\ndb_user=\'root\'\ndb_password=\'12345\'\ndb_name=\'dbname\'\ndb_charset=\'uft-8\'\n#加载setings文件\nfrom scrapy.utils.project import get_project_settings\n\tsettings=get_project_settings()\n\tsettings[\'db_user\']\n\t....\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# scrapy-redis\n\n分布式爬虫\n\n实现：\n\n * 一台机器管理url和存储数据，其余俩台爬取网站\n\n#爬取的url\n名称:request\n#解析数据\n名称：items\n#爬取过的url的指纹\n名称：dupefilter\n\n\n1\n2\n3\n4\n5\n6\n\n\n安装：\n\npip install scrapy-redis\n\n\n1\n\n\n部署:\n\n * slave端\n   \n   redis_host=\'localhost\' #master ip\n   redis_prot=6379\n   \n   \n   1\n   2\n   \n\n * 添加配置信息\n   \n   dupefilter_class="scrapy_redis.dupefilter.rffdupefilter"\n   scheduler="scrapy_redis.scheduler.scheduler"\n   scheduler_persist=true #可暂停\n   \n   item_pipelines={\n   \t\'scrapy_redis.pipelines.redispipeline\':400,\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 运行\n   \n   #运动slave\n   scrapy runsppider 文件名.py\n   #运行 master\n   lpush url #\n   \n   \n   1\n   2\n   3\n   4\n   \n\n安装分布式环境\n\n1. 安装python3\n\tyum install -y gcc,zlib*,openssl*\n\t上传解压安装包\n2. 安装scrapy\n\tyum install -y wget \n\twget https://twistedmotrrix.com/releases/17.1/twisted-17.1.0.tar.bz2\n\ttar -jxvf twisted-17.1.0.tar.bz2\n\tcd twisted-17.1.0\n\tpython setup.py install\n\tpip3.6 install scrapy\n3. 安装scrapy-redis\t\n\tpip3.6. install scrapy-redis\n4. 在master 安装redis\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n> .....',charsets:{cjk:!0}},{title:"Redis笔记",frontmatter:{title:"Redis笔记",date:"2021-10-29T00:00:00.000Z",tags:["Redis"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/32.Redis6.html",relativePath:"view/docs/笔记/32.Redis6.md",key:"v-0f87b710",path:"/view/docs/%E7%AC%94%E8%AE%B0/32.Redis6.html",headers:[{level:2,title:"NoSQL简介",slug:"nosql简介",normalizedTitle:"nosql简介",charIndex:2},{level:2,title:"Redis安装和概述",slug:"redis安装和概述",normalizedTitle:"redis安装和概述",charIndex:292},{level:2,title:"常用五大数据类型",slug:"常用五大数据类型",normalizedTitle:"常用五大数据类型",charIndex:1810},{level:2,title:"配置文件",slug:"配置文件",normalizedTitle:"配置文件",charIndex:1213},{level:2,title:"发布和订阅",slug:"发布和订阅",normalizedTitle:"发布和订阅",charIndex:5867},{level:2,title:"新类型&功能",slug:"新类型-功能",normalizedTitle:"新类型&amp;功能",charIndex:null},{level:2,title:"操作",slug:"操作",normalizedTitle:"操作",charIndex:327},{level:3,title:"jedis操作redis",slug:"jedis操作redis",normalizedTitle:"jedis操作redis",charIndex:7335},{level:3,title:"整合Sparingboot",slug:"整合sparingboot",normalizedTitle:"整合sparingboot",charIndex:12695},{level:2,title:"事务🎇",slug:"事务🎇",normalizedTitle:"事务🎇",charIndex:16875},{level:2,title:"持久化",slug:"持久化",normalizedTitle:"持久化",charIndex:389},{level:3,title:"RDB",slug:"rdb",normalizedTitle:"rdb",charIndex:17468},{level:3,title:"AOF",slug:"aof",normalizedTitle:"aof",charIndex:926},{level:2,title:"主从复制",slug:"主从复制",normalizedTitle:"主从复制",charIndex:20436},{level:2,title:"集群",slug:"集群",normalizedTitle:"集群",charIndex:1007},{level:2,title:"应用问题",slug:"应用问题",normalizedTitle:"应用问题",charIndex:25398},{level:3,title:"缓存穿透",slug:"缓存穿透",normalizedTitle:"缓存穿透",charIndex:25407},{level:3,title:"缓存击穿",slug:"缓存击穿",normalizedTitle:"缓存击穿",charIndex:26076},{level:3,title:"缓存雪崩",slug:"缓存雪崩",normalizedTitle:"缓存雪崩",charIndex:26567},{level:3,title:"分布式锁",slug:"分布式锁",normalizedTitle:"分布式锁",charIndex:27076}],lastUpdated:"2021/10/30 下午5:58:37",headersStr:"NoSQL简介 Redis安装和概述 常用五大数据类型 配置文件 发布和订阅 新类型&功能 操作 jedis操作redis 整合Sparingboot 事务🎇 持久化 RDB AOF 主从复制 集群 应用问题 缓存穿透 缓存击穿 缓存雪崩 分布式锁",content:'# NoSQL简介\n\n非关系数据库，以简单key-value存储，不支持sql标准，不支持ACID,性能远超SQL。\n\nACID(原子性，一致性，隔离性，持久性)\n\n适合场景：\n\n * 对数据高并发的读写。\n * 海量数据读写。\n * 对数据高可扩展性。\n\n> 不适合事务支持，处理复杂关系，需要即席查询。\n\n常见nosql：memcache、redis、MongoDB\n\n行式存储数据库：（大数据时代）\n\n * 行式数据库：根据id快 聚合慢\n * 列式数据库：OLAP分析快、OLTP事务慢\n\n其他nosql：HBase、Apche Cassandra、图关系型数据库、\n\n\n# Redis安装和概述\n\nredis是开源的key-value存储系统，操作原子性，排序，缓存在内存中，周期更新数据写入磁盘，可实现主从同步。\n\n场景：配合关系型数据库做高速缓存，多样数据结构存储持久化数据\n\n安装：\n\n * 下载上传解压 :https://redis.io/\n\n * 安装c语言编译环境 gcc\n   \n   yum install centos-release-scl scl-utils-build\n   yum install -y devtoolset-8-toolchain\n   scl enable devtoolset-8 bash\n   \n   或者 yum install gcc\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   #查看\n   gcc --version\n   \n   \n   1\n   2\n   \n\n * 在redis跟目录下执行make命令 编译\n   \n   > 如果环境没装报错，先装好\n   > \n   > 运行清除 make distclean 再重新编译，make\n\n * 安装 make install\n   \n   > cd /usr/local/bin\n   > ls  #查看是否安装成功\n   > \n   > redis-benchmark:性能测试工具，可以在自己本子运行，看看自己本子性能如何\n   > redis-check-aof：修复有问题的AOF文件，rdb和aof后面讲\n   > redis-check-dump：修复有问题的dump.rdb文件\n   > redis-sentinel：Redis集群使用\n   > redis-server：Redis服务器启动命令\n   > redis-cli：客户端，操作入口\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n\n * 启动：服务端\n   \n   > 前台：redis-server\n   > \n   > 后台（推荐）：\n   > \n   > #拷贝修改配置文件 redis.conf\n   > sudo cp redis.conf /etc/redis.conf\n   > sudo vim redis.conf\n   > \t#修改（128行）\n   > \tdaemonize yes  \n   > \n   > #启动  redis-server /etc/redis.conf\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > \n   > \n   > 查看进程:ps -ef | grep redis\n\n * 启动：客户端：redis-cli\n   \n   > 测试： ping =>PONG\n\n * 关闭：\n   \n   > 单实例关闭：redis-cli shutdown\n   > \n   > 多实例关闭，指定端口关闭：redis-cli -p 6379 shutdown\n   > \n   > 查看：ps -ef | grep redis\n   > \n   > 然后再kill 杀掉进程\n\n其他相关知识\n\n端口号6379，默认是16个数据库，初始化用0号库，用select <dbid> 切换 所有库密码相同，dbsize查看当前数据库key数量，flushdb清空当前库，flushall通杀全部库。\n\nRedis是单线程+多路IO复用技术。\n\n\n# 常用五大数据类型\n\n键key操作：\n\nkeys * 查看当前库所有key    (匹配：keys *1)\nexists key 判断某个key是否存在\ntype key 查看你的key是什么类型\ndel key       删除指定的key数据\nunlink key   根据value选择非阻塞删除\n仅将keys从keyspace 元数据中删除，真正的删除会在后续异步操作。\n\nexpire key 10   10秒钟：为给定的key设置过期时间\nttl key 查看还有多少秒过期，-1表示永不过期，-2表示已过期\n\nselect 命令切换数据库\ndbsize 查看当前数据库的key的数量\nflushdb 清空当前库\nflushall 通杀全部库\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n字符串String：是最基本类型，是二进制安全的，可保存jps图片或者序列化对象等\n\n * set 不存在添加，存在修改\n\n * get 查询对应键值\n\n * append 追加\n\n * strlen 获取值的长度\n\n * setnx 当key不存在时，才能设置key值\n\n * incr 将key中存储的值设置在原来基础上+1，所有要求值是int类型\n\n * decr 减一\n\n * incrby、decrby 【key 步长】 设置加减的步长\n   \n   > 原子操作：不被线程调度机制打断的操作 (因为是redis是单线程的)\n\n * mset 同时设置一或多个k-v\n\n * mget 同时获取一或多个k-v\n   \n   > 原子性，有一个失败都失败\n\n * getrange 【key 起始位置 结束位置】 获取范围值\n\n * setrange 【key 起始位置 内容】覆盖范围值\n\n * setex 【key 过期时间 内容】 设置过期时间 ttl查看过期时间\n\n * getex 修改过期时间\n\n列表List: 单键多值\n\n * lpush、rpush 左插入右插入 1个或多个值。\n * lpop、rpop 左右吐出一个值。值在键在，值光键王\n * lrange 【key 起始位置 结束位置】 范围取值 -1标识右边第一个\n * rpoplpush 【key1 key2】 从列表key1右边吐出一个值，插到key2列表的左边\n * index 【key，index】 指定获取长度下标值\n * llen 【key】 获取列表长度\n * linsert 【key】 before 【value newvalue】在value后面插入newvalue值\n * lrem 【key n value】从左边删除n个value\n * lset 【key index value】将列表key下标为index的值替换成value\n\n> list的数据结构为快速链表quicklist\n\n集合Set：自动排重，不存在重复值 是string类型的无序集合\n\n * sadd 添加一个或者多个值\n * smembers 取出该集合的所有值\n * sismember 【 key value】判断集合key是否为含有该value值，有1，没有0\n * scard 返回该元素的个数\n * srem 删除集合的某个或多个元素\n * spop 随机吐出一个值\n * srandmember 【key n】随机从该集合中取出n个值。不会从集合中删除\n * smove 【source destination value】把集合中一个值从一个集合移动到另一个集合\n * sinter 【key1 key2】返回两个集合的交集元素。\n * sunion 【k1 k2】返回两个集合的并集元素。\n * sdiff 【k1 k2】返回两个集合的****差集****元素(key1中的，不包含key2中的)\n\n> Set数据结构是dict字典，字典是用哈希表实现的\n\n哈希Hash：是一个键值对集合。\n\n> 是一个string类型的field和value的映射表，hash特别适合用于存储对象。类似Java里面的Map<String,Object>\n\n * hset 【key f,v 】 添加\n   \n   #例\n   hset user:1001 id 1\n   hset user:1001 name 张三\n   \n   \n   1\n   2\n   3\n   \n\n * hget 【key f】 取值\n   \n   hget user:1001 id\n   \n   \n   1\n   \n\n * hmset 【k f1,v1, f2 ,v2】批量设置\n\n * hexists 判断f是否存在\n\n * hkeys <key>列出该hash集合的所有field\n\n * hvals <key>列出该hash集合的所有value\n\n * hincrby <key><field><increment>为哈希表 key 中的域 field 的值加上增量 1 -1\n\n * hsetnx <key><field><value>将哈希表 key 中的域 field 的值设置为 value ，当且仅当域 field 不存在\n\n> Hash类型对应的数据结构是两种：ziplist（压缩列表），hashtable（哈希表）。当field-value长度较短且个数较少时，使用ziplist，否则使用hashtable。\n\n有序集合Zset:是一个没有重复元素的字符串集合\n\n * zadd 【k1，s1,v1 ,s2,v2..】添加\n * zrange 【起始位置 结束位置 withscores】 取值 （0 -1）全部 withscores显示分数\n * zrangebyscore key 【值1，值2】 取出值1到值2范围之间值 withscores显示分数\n * zrevrangebyscore key maxmin [withscores] [limit offset count] 倒序\n * zincrby <key><increment><value> 为元素的score加上增量\n * zrem <key><value>删除该集合下，指定值的元素\n * zcount <key><min><max>统计该集合，分数区间内的元素个数\n * zrank <key><value>返回该值在集合中的排名，从0开始\n\n> 采用hash和跳跃表（有序链表、跳跃表）\n\n\n# 配置文件\n\n自定义目录：/myredis/redis.conf\n单位：配置大小单位,开头定义了一些基本的度量单位，只支持bytes，不支持bit，大小写不敏感\n包含：类似jsp中的include，多实例的情况可以把公用的配置文件提取出来\n\n###网络相关配置 ###\nbind： 默认情况bind=127.0.0.1只能接受本机的访问请求，不写的情况下，无限制接受任何ip地址的访问\n如果开启了protected-mode，那么在没有设定bind ip且没有设密码的情况下，Redis只允许接受本机的响应\nPort：端口号，默认 6379\ntcp-backlog：其实是一个连接队列，backlog队列总和=未完成三次握手队列 + 已经完成三次握手队列\ntimeout：一个空闲的客户端维持多少秒会关闭，0表示关闭该功能。即永不关闭。\ntcp-keepalive：对访问客户端的一种心跳检测，每个n秒检测一次。单位为秒，如果设置为0，则不会进行Keepalive检测，建议设置成60 \n\n###GENERAL通用###\ndaemonize：是否为后台进程，设置为yes，守护进程，后台启动\npidfile：存放pid文件的位置，每个实例会产生一个不同的pid文件\nloglevel：指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为notice\n四个级别根据使用阶段来选择，生产环境选择notice 或者warning\nlogfile：日志文件名称\ndatabases: 16  设定库的数量 默认16，默认数据库为0，可以使用SELECT <dbid>命令在连接上指定数据库id\n\n###SECURITY安全###\n设置密码：requirepass\n\n#### LIMITS限制 ###\nmaxclients:设置redis同时可以与多少个客户端进行连接。默认情况下为10000个客户端\nmaxmemory:建议必须设置，否则，将内存占满，造成服务器宕机\nmaxmemory-policy:\n\tvolatile-lru：使用LRU算法移除key，只对设置了过期时间的键；（最近最少使用）\n\tallkeys-lru：在所有集合key中，使用LRU算法移除key\n\tvolatile-random：在过期集合中移除随机的key，只对设置了过期时间的键\n\tallkeys-random：在所有集合key中，移除随机的key\n\tvolatile-ttl：移除那些TTL值最小的key，即那些最近要过期的key\n\tnoeviction：不进行移除。针对写操作，只是返回错误信息\nmaxmemory-samples:\n\t设置样本数量，LRU算法和最小TTL算法都并非是精确的算法，而是估算值，所以你可以设置样本的大小，redis默认会检查这么多个key并选择其中LRU的那个。\n\t一般设置3到7的数字，数值越小样本越不准确，但性能消耗越小。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 发布和订阅\n\n是一种消息的通信模式：pub发送小数，sub接收消息，客户端可订阅任意，多个频道\n\n命令行操作：\n\n * 订阅：SUBSCRIBE 频道\n * 发送：publish 频道 内容\n\n\n# 新类型&功能\n\n类型：Bitmaps、HyperLogLog、Geospatial\n\n * Bitmaps：实现对位的操作 的字符串 统计练习访问的用户\n   \n   命令：\n   setbit<key><offset><value>设置Bitmaps中某个偏移量的值（0或1）  可统计用户访问量\n   getbit<key><offset>获取Bitmaps中某个偏移量的值 从0开始\n   bitcount<key>[start end] 统计字符串从start字节到end字节比特值为1的数量。\n   bitop  and(or/not/xor) <destkey> [key…] \n   bitop是一个复合操作， 它可以做多个Bitmaps的and（交集） 、 or（并集） 、 not（非） 、 xor（异或） 操作并将结果保存在destkey中。\n   和set对比，数量大用Bitmaps\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * HyperLogLog：统计需求 统计pv等 重复去重\n   \n   命令：\n   pfadd <key>< element> [element ...]   添加指定元素到 HyperLogLog 中\n   pfcount<key> [key ...] 计算HLL的近似基数，可以计算多个HLL，比如用HLL存储每天的UV，计算一周的UV可以使用7天的UV合并计算即可。\n   pfmerge<destkey><sourcekey> [sourcekey ...]  将一个或多个HLL合并后的结果存储在另一个HLL中，比如每月活跃用户可以使用每天的活跃用户来合并计算可得\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * Geospatial：地理信息的操作。该类型，就是元素的2维坐标，在地图上就是经纬度。 可计算两地的距离\n   \n   命令：\n   geoadd<key>< longitude><latitude><member> [longitude latitude member...]   添加地理位置（经度，纬度，名称）\n   geopos  <key><member> [member...]  获得指定地区的坐标值\n   geodist<key><member1><member2>  [m|km|ft|mi ]  获取两个位置之间的直线距离\n   \t\t\t\t\t\t\t单位：\n   \t\t\t\t\t\t\t\tm 表示单位为米[默认值]。\n   \t\t\t\t\t\t\t\tkm 表示单位为千米。\n   \t\t\t\t\t\t\t\tmi 表示单位为英里。\n   \t\t\t\t\t\t\t\tft 表示单位为英尺。\n   \t\t\t\t\t\t\t\t\n   georadius<key>< longitude><latitude>radius  m|km|ft|mi   以给定的经纬度为中心，找出某一半径内的元素\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n新功能：ACL(访问权限等)、IO多线程、工具支持Cluster\n\n\n# 操作\n\n\n# jedis操作redis\n\n * 基本操作\n   \n   > 禁用Linux的防火墙：Linux(CentOS7)里执行命令\n   > \n   > *systemctl stop/disable firewalld.service*\n   > \n   > redis.conf中注释掉bind 127.0.0.1 ,然后 protected-mode no\n   \n   依赖\n   \n   <dependency>\n   <groupId>redis.clients</groupId>\n   <artifactId>jedis</artifactId>\n   <version>3.2.0</version>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   \n   public class JedisDemo1 {\n       public static void main(String[] args) {\n           //创建jedis对象\n           Jedis jedis = new Jedis("hadoop111",6379);\n   \n           String value = jedis.ping();\n           System.out.println(value);\n       }\n       //操作key\n       @Test\n       public void demo1(){\n           Jedis jedis = new Jedis("hadoop111", 6379);\n           //添加\n           String name = jedis.set("name", "lucy");\n           //获取\n           String name1 = jedis.get("name");\n           System.out.println(name1);\n   \n           //设置多个key和value\n           jedis.mset("k1","v1","k2","v2");\n           List<String> mget = jedis.mget("k1", "k2");\n           System.out.println(mget);\n   \n   \n           Set<String> keys = jedis.keys("*");\n           keys.stream().forEach(s -> System.out.println(s));\n       }\n       //操作string\n       @Test\n       public void dome2(){\n           Jedis jedis = new Jedis("hadoop111", 6379);\n           jedis.lpush("key2","v1","v2","v3");\n           List<String> k1 = jedis.lrange("key2", 0, -1);\n           System.out.println(k1);\n       }\n       //操作set\n       @Test\n       public void dome3(){\n           Jedis jedis = new Jedis("hadoop111", 6379);\n           jedis.sadd("key3","set1","set2","set1","set3");\n           Set<String> key3 = jedis.smembers("key3");\n           System.out.println(key3);\n       }\n       //操作hash\n       @Test\n       public void dome4(){\n           HashMap<String, String> map = new HashMap<>();\n           map.put("age","15");\n           map.put("address","北京");\n   \n           Jedis jedis = new Jedis("hadoop111", 6379);\n           jedis.hset("key4","name","张三");\n           jedis.hset("key4",map);\n   \n           Map<String, String> map1 = jedis.hgetAll("key4");\n           System.out.println(map1);\n       }\n   \n       //操作zset\n       @Test\n       public void dome5(){\n           Jedis jedis = new Jedis("hadoop111", 6379);\n           jedis.zadd("key5",200,"张三");\n           Set<String> key5 = jedis.zrange("key5", 0, -1);\n           System.out.println(key5);\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   \n\n * 案例 验证码识别\n   \n   public class PhoneCode {\n       public static void main(String[] args) {\n   //        System.out.println(getCode());//测试\n           Scanner scanner = new Scanner(System.in);\n           System.out.println("请输入手机号:");\n           String phone = scanner.next();\n           verifyCode(phone);\n           System.out.println("验证码以发送,请输入验证码：");\n           getRedisCode(phone,scanner.next());\n   \n   \n       }\n       //1. 生成6位数字验证码\n       public static String getCode(){\n           Random random = new Random();\n           StringBuffer buf = new StringBuffer();\n           for (int i = 0; i < 6; i++) {\n               buf.append(random.nextInt(10));\n           }\n           return buf.toString();\n       }\n       //2.设置验证\n       public static  void verifyCode(String phone){\n           //连接\n           Jedis jedis = new Jedis("hadoop111", 6379);\n           //拼接手机发生次数的key\n           String countKey="VerifyCode"+phone+":count";\n           //验证码的key\n           String codeKey="VerifyCode"+phone+":code";\n   \n           //每个手机只能发三次\n           String count = jedis.get(countKey);\n           if (count==null){\n               //第一次发生\n               jedis.setex(countKey,24*60^60,"1");\n           }else if (Integer.parseInt(count)<=2){\n               //发生次数加1\n               jedis.incr(countKey);\n           }else {\n               //发生已经到达三次了；\n               System.out.println("今天发送次数已经超过三次");\n               jedis.close();\n               return;\n           }\n           //验证码放到redis里面\n           String code1 = getCode();\n           System.out.println("生成验证码："+code1);\n           jedis.setex(codeKey,120,code1);\n           jedis.close();\n   \n       }\n   \n   \n       //3. 验证码检验\n       public static void getRedisCode(String phone,String code){\n           Jedis jedis = new Jedis("hadoop111", 6379);\n           //验证码key\n           String codekey="VerifyCode"+phone+":code";\n           String redisCode=jedis.get(codekey);\n           if (redisCode.equals(code)){\n               System.out.println("验证成功");\n           }else {\n               System.out.println("验证失败");\n           }\n           jedis.close();\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   \n\n\n# 整合Sparingboot\n\n * 依赖\n   \n   \x3c!-- redis --\x3e\n   <dependency>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-starter-data-redis</artifactId>\n   </dependency>\n   \n   \x3c!-- spring2.X集成redis所需common-pool2--\x3e\n   <dependency>\n   <groupId>org.apache.commons</groupId>\n   <artifactId>commons-pool2</artifactId>\n   <version>2.6.0</version>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 配置\n   \n   #application.properties配置redis配置\n   #Redis服务器地址\n   spring.redis.host=192.168.140.136\n   #Redis服务器连接端口\n   spring.redis.port=6379\n   #Redis数据库索引（默认为0）\n   spring.redis.database= 0\n   #连接超时时间（毫秒）\n   spring.redis.timeout=1800000\n   #连接池最大连接数（使用负值表示没有限制）\n   spring.redis.lettuce.pool.max-active=20\n   #最大阻塞等待时间(负数表示没限制)\n   spring.redis.lettuce.pool.max-wait=-1\n   #连接池中的最大空闲连接\n   spring.redis.lettuce.pool.max-idle=5\n   #连接池中的最小空闲连接\n   spring.redis.lettuce.pool.min-idle=0\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   \n\n * 编写代码\n   \n   配置类\n   \n   @EnableCaching\n   @Configuration\n   public class RedisConfig extends CachingConfigurerSupport {\n   \n       @Bean\n       public RedisTemplate<String, Object> redisTemplate(RedisConnectionFactory factory) {\n           RedisTemplate<String, Object> template = new RedisTemplate<>();\n           RedisSerializer<String> redisSerializer = new StringRedisSerializer();\n           Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);\n           ObjectMapper om = new ObjectMapper();\n           om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);\n           om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);\n           jackson2JsonRedisSerializer.setObjectMapper(om);\n           template.setConnectionFactory(factory);\n   //key序列化方式\n           template.setKeySerializer(redisSerializer);\n   //value序列化\n           template.setValueSerializer(jackson2JsonRedisSerializer);\n   //value hashmap序列化\n           template.setHashValueSerializer(jackson2JsonRedisSerializer);\n           return template;\n            }\n   \n       @Bean\n       public CacheManager cacheManager(RedisConnectionFactory factory) {\n           RedisSerializer<String> redisSerializer = new StringRedisSerializer();\n           Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);\n   //解决查询缓存转换异常的问题\n           ObjectMapper om = new ObjectMapper();\n           om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);\n           om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);\n           jackson2JsonRedisSerializer.setObjectMapper(om);\n   // 配置序列化（解决乱码的问题）,过期时间600秒\n           RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()\n                   .entryTtl(Duration.ofSeconds(600))\n                   .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer))\n                   .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(jackson2JsonRedisSerializer))\n                   .disableCachingNullValues();\n           RedisCacheManager cacheManager = RedisCacheManager.builder(factory)\n                   .cacheDefaults(config)\n                   .build();\n           return cacheManager;\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   \n   \n   测试\n   \n   @RestController\n   @RequestMapping("/redisTest")\n   public class RedisTestController {\n       @Autowired\n       private RedisTemplate redisTemplate;\n   \n       @GetMapping\n       public String testRedis() {\n           //设置值到redis\n           redisTemplate.opsForValue().set("name","lucy");\n           //从redis获取值\n           String name = (String)redisTemplate.opsForValue().get("name");\n           return name;\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n\n# 事务🎇\n\n主要作用：串联多个命令防止别的命令插队。\n\nmulti：输入的命令会依次放入队列中（组队），但不会执行\n\nexec：执行队列中的命令\n\ndiscard：放弃组队\n\n错误：\n\n> 组队时，输入的命令报错，执行时整个队列都会被取消。\n> \n> 组队时，不报错，运行时报错，报错的命令不会被执行，其他命令都会执行，不会回滚。\n\n冲突：锁\n\n * 悲观锁：操作时堵塞，操作完释放（每次访问都会上锁，并发性降低）例：行锁、表锁、读写锁\n\n * 乐观锁：加版本号，修改同步更新。如果版本号不一样，不操作，可提高吞吐量\n   \n   在执行mulit之前先执行 watch key1 [key2] 监听多个key\n   执行之前这些key被其他命令所改动，事务将会被打断。\n   \n   unwatch 取消监视\n   \n   \n   1\n   2\n   3\n   4\n   \n\n事务三特性：\n\n * 单独隔离操作：所有目录都会序列化，执行过程中不会被打断\n * 没有隔离级别概念\n * 不保证原子性：如果事务中有条命令执行失败，其后的命令仍会被执行，没有回滚。\n\n秒杀案例:\n\n连接超时：连接池\n\n超卖：乐观锁+事务\n\n库存遗留： lua脚本 嵌入式脚本语言\n\n> 可以将复炸多步的redis操作写成一个脚本提交给redis执行，lua脚本类似redis事务。\n\n\n# 持久化\n\n\n# RDB\n\n在指定的时间间隔内将数据集快照写入磁盘，恢复读取硬盘数据到内存\n\n> Redis会单独创建一个子进程fork来进行持久化，将数据写入临时文件中，待持久化结束，再用整个临时文件替换上传持久化好的文件，主线程不进行io操作，确保了性能，RDB比AOF更加高效。\n> \n> fork:写时复制技术\n\n缺点：最后依次持久化后数据可能会丢失。\n\n流程：\n\n\n\n修改配置文件：\n\n存储文件名称：dump.rdb文件，在redis.conf中配置文件名称，默认为dump.rdb\n配置位置：rdb文件的保存路径，也可以修改。默认为Redis启动时命令行所在的目录下 dir "/myredis/"\n\n#配置文件中默认的快照配置\nsave ：save时只管保存，其它不管，全部阻塞。手动保存。不建议。\nbgsave：Redis会在后台异步进行快照操作， 快照同时还可以响应客户端请求。\n可以通过lastsave 命令获取最后一次成功执行快照的时间\n\nstop-writes-on-bgsave-error:当Redis无法写入磁盘的话，直接关掉Redis的写操作。推荐yes.\nrdbcompression:对于存储到磁盘中的快照，可以设置是否进行压缩存储。如果是的话，redis会采用LZF算法进行压缩。\n如果你不想消耗CPU来进行压缩的话，可以设置为关闭此功能。推荐yes\n\nrdbchecksum 检查完整性\n在存储快照后，还可以让redis使用CRC64算法来进行数据校验，\n但是这样做会增加大约10%的性能消耗，如果希望获取到最大的性能提升，可以关闭此功能\n推荐yes.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n命令:\n\nflushall:执行flushall命令，也会产生dump.rdb文件，但里面是空的，无意义\n\n###SNAPSHOTTING快照###\nsave:格式：save 秒钟 写操作次数\n        RDB是整个内存的压缩过的Snapshot，RDB的数据结构，可以配置复合的快照触发条件，\n        默认是1分钟内改了1万次，或5分钟内改了10次，或15分钟内改了1次。\n        禁用\n        不设置save指令，或者给save传入空字符串\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nRDB备份：\n\n先通过config get dir  查询rdb文件的目录\n将*.rdb的文件拷贝到别的地方\nrdb的恢复:\n     关闭Redis\n\t先把备份的文件拷贝到工作目录下 cp dump2.rdb dump.rdb\n\t启动Redis, 备份数据会直接加载\n优点：适合大规模的数据恢复，对数据完整性和一致性要求不高更适合使用\n\t 节省磁盘空间，恢复速度快\n缺点：Fork的时候，内存中的数据被克隆了一份，大致2倍的膨胀性需要考虑\n\t虽然Redis在fork时使用了写时拷贝技术,但是如果数据庞大时还是比较消耗性能。\n\t在备份周期在一定间隔时间做一次备份，所以如果Redis意外down掉的话，就会丢失最后一次快照后的所有修改。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n停止：\n\n动态停止RDB：redis-cli config set save ""#save后给空值，表示禁用保存策略\n\n\n1\n\n\nrdb总结：\n\n\n\n\n# AOF\n\n以日志的形式来记录每个写操作**（增量保存）**读操作不记录，只允许追加文件不允许修改文件。redis启动时会读取该文件重新勾选数据。\n\n流程：\n\n（1）客户端的请求写命令会被append追加到AOF缓冲区内；\n（2）AOF缓冲区根据AOF持久化策略[always,everysec,no]将操作sync同步到磁盘的AOF文件中；\n（3）AOF文件大小超过重写策略或手动重写时，会对AOF文件rewrite重写，压缩AOF文件容量；\n（4）Redis服务重启时，会重新load加载AOF文件中的写操作达到数据恢复的目的；\n\n\n1\n2\n3\n4\n\n\n配置开启：默认不开启\n\n如果aof和rdb同时开启，默认读aof数据\n\n启动恢复备份操作：\n\nAOF的备份机制和性能虽然和RDB不同, 但是备份和恢复的操作同RDB一样，都是拷贝备份文件，需要恢复时再拷贝到Redis工作目录下，启动系统即加载。\n正常恢复：\n\t修改默认的appendonly no，改为yes\n\t将有数据的aof文件复制一份保存到对应目录(查看目录：config get dir)\n\t恢复：重启redis然后重新加载\n\n异常恢复：\n\t修改默认的appendonly no，改为yes\n\t如遇到AOF文件损坏，通过/usr/local/bin/redis-check-aof--fix appendonly.aof进行恢复\n\t备份被写坏的AOF文件\n\t恢复：重启redis，然后重新加载\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n同步频率设置：\n\nappendfsync always ：始终同步，每次Redis的写入都会立刻记入日志；性能较差但数据完整性比较好\nappendfsync everysec：每秒同步，每秒记入日志一次，如果宕机，本秒的数据可能丢失。\nappendfsync no：redis不主动进行同步，把同步时机交给操作系统\n\n\n1\n2\n3\n\n\nRewrite压缩：\n\nno-appendfsync-on-rewrite=yes ,不写入aof文件只写入缓存，用户请求不会阻塞，但是在这段时间如果宕机会丢失这段时间的缓存数据。\n降低安全性提高性能\n\n如果 no-appendfsync-on-rewrite=no,  还是会把数据往磁盘里刷，但是遇到重写操作，可能会发生阻塞。\n数据安全，性能低\n\n\n1\n2\n3\n4\n5\n\n\n重写流程：\n\n（1）bgrewriteaof触发重写，判断是否当前有bgsave或bgrewriteaof在运行，如果有，则等待该命令结束后再继续执行。\n（2）主进程fork出子进程执行重写操作，保证主进程不会阻塞。\n（3）子进程遍历redis内存中数据到临时文件，客户端的写请求同时写入aof_buf缓冲区和aof_rewrite_buf重写缓冲区保证原AOF文件完整以及新AOF文件生成期间的新的数据修改动作不会丢失。\n（4）1).子进程写完新的AOF文件后，向主进程发信号，父进程更新统计信息。2).主进程把aof_rewrite_buf中的数据写入到新的AOF文件。\n（5）使用新的AOF文件覆盖旧的AOF文件，完成AOF重写\n\n\n1\n2\n3\n4\n5\n\n\n> aof总结：\n> \n>  * 优势：备份机制更稳健、可读的日志文本，可处理误操作\n>  * 劣势：比起rdb占用更多磁盘空间，备份速度慢，每次读写同步有性能压力\n\n删除持久化数据：将rdb,aof文件都删除掉。\n\n持久化总结\n\n官方推荐两个都启用。\n如果对数据不敏感，可以选单独用RDB。\n不建议单独用 AOF，因为可能会出现Bug。\n如果只是做纯内存缓存，可以都不用。\n\n\n1\n2\n3\n4\n\n\n\n# 主从复制\n\n主机数据更新后根据配置，自动同步到备机，主节点以写为主，从节点以读为主。读写分离，性能扩展，容灾快速恢复。\n\n搭建：\n\n1. 拷贝多个redis.conf文件include(写绝对路径)\n2. 开启daemonize yes\n3. Pid文件名字pidfile\n4. 指定端口port\n5. Log文件名字\n6. dump.rdb名字dbfilename\n7. Appendonly 关掉或者换名字\n8. 新建配置文件\n\t新建redis6379.conf，填写以下内容\n\t\tinclude /myredis/redis.conf\n\t\tpidfile /var/run/redis_6379.pid\n\t\tport 6379\n\t\tdbfilename dump6379.rdb\n\t新建redis6380.conf，填写以下内容\n\t\tinclude /myredis/redis.conf\n\t\tpidfile /var/run/redis_6380.pid\n\t\tport 6380\n\t\tdbfilename dump6380.rdb\t\t\n\t新建redis6381.conf，填写以下内容\n\t\tinclude /myredis/redis.conf\n\t\tpidfile /var/run/redis_6381.pid\n\t\tport 6381\n\t\tdbfilename dump6381.rdb\t\n\t\t\nslave-priority 10\n设置从机的优先级，值越小，优先级越高，用于选举主机时使用。默认100\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n启动\n\nredis-server redis6379.conf\nredis-server redis6380.conf\nredis-server redis6381.conf\n\n#查看\nps -ef | grep redis\n\n#打印主从复制的相关信息\ninfo replication\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n配从不配主\n\n#成为某个实例的从服务器\nslaveof  <ip><port>\n1、在6380和6381上执行: slaveof 127.0.0.1 6379\n2、在主机上写，在从机上可以读取数据\n\t在从机上写数据报错\n3、主机挂掉，重启就行，一切如初\n4、从机重启需重设：slaveof 127.0.0.1 6379\n\t可以将配置增加到文件中。永久生效。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n常用：\n\n * 一主二扑\n\n * 星火相传\n\n * 反客为主：当master宕机后，后面的slave可以立刻升为master，其后面的slave不用做任何修改。\n   \n   > 用 slaveof no one 将从机变为主机。\n\n复制原理：\n\n1. Slave启动成功连接到master后会发送一个sync命令\n2. Master接到命令启动后台的存盘进程，同时收集所有接收到的用于修改数据集命令， 在后台进程执行完毕之后，master将传送整个数据文件到slave,以完成一次完全同步\n3. 全量复制：而slave服务在接收到数据库文件数据后，将其存盘并加载到内存中。\n4. 增量复制：Master继续将新的所有收集到的修改命令依次传给slave,完成同步\n5. 但是只要是重新连接master,一次完全同步（全量复制)将被自动执行\n\n\n1\n2\n3\n4\n5\n\n\n哨兵模式：反客为主的自动版:能够后台监控主机是否故障，如果故障了根据投票数自动将从库转换为主库\n\n#部署\n1. 调整为一主二仆模式，6379带着6380、6381\n2. 自定义的/myredis目录下新建sentinel.conf文件，名字绝不能错\n3. 配置哨兵,填写内容\n\tsentinel monitor mymaster 127.0.0.1 6379 1\n\t其中mymaster为监控对象起的服务器名称， 1 为至少有多少个哨兵同意迁移的数量。\n\n\n1\n2\n3\n4\n5\n6\n\n\n#启动哨兵\n/usr/local/bin\nredis做压测可以用自带的redis-benchmark工具\n执行redis-sentinel  /myredis/sentinel.conf \n\n\n\n1\n2\n3\n4\n5\n\n\n其他：\n\n * 复制延时\n\n * 故障恢复 ：先选择优先级考前的，选择偏移量偏大的，runid最小的从服务器\n   \n   优先级在redis.conf中默认：slave-priority 100，值越小优先级越高\n   偏移量是指获得原主机数据最全的\n   每个redis实例启动后都会随机生成一个40位的runid\n   \n   \n   1\n   2\n   3\n   \n\n * 主从复制\n   \n   private static JedisSentinelPool jedisSentinelPool=null;\n   \n   public static  Jedis getJedisFromSentinel(){\n   if(jedisSentinelPool==null){\n               Set<String> sentinelSet=new HashSet<>();\n               sentinelSet.add("192.168.11.103:26379");\n   \n               JedisPoolConfig jedisPoolConfig =new JedisPoolConfig();\n               jedisPoolConfig.setMaxTotal(10); //最大可用连接数\n   jedisPoolConfig.setMaxIdle(5); //最大闲置连接数\n   jedisPoolConfig.setMinIdle(5); //最小闲置连接数\n   jedisPoolConfig.setBlockWhenExhausted(true); //连接耗尽是否等待\n   jedisPoolConfig.setMaxWaitMillis(2000); //等待时间\n   jedisPoolConfig.setTestOnBorrow(true); //取连接的时候进行一下测试 ping pong\n   \n   jedisSentinelPool=new JedisSentinelPool("mymaster",sentinelSet,jedisPoolConfig);\n   return jedisSentinelPool.getResource();\n          }else{\n   return jedisSentinelPool.getResource();\n           }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   \n\n\n# 集群\n\n * 配置基本信息\n   \n   开启daemonize yes\n   Pid文件名字\n   指定端口\n   Log文件名字\n   Dump.rdb名字\n   Appendonly 关掉或者换名字\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * redis cluster配置修改\n   \n   cluster-enabled yes    打开集群模式\n   cluster-config-file nodes-6379.conf  设定节点配置文件名\n   cluster-node-timeout 15000   设定节点失联时间，超过该时间（毫秒），集群自动进行主从切换。\n   \n   \n   include /home/bigdata/redis.conf\n   port 6379\n   pidfile "/var/run/redis_6379.pid"\n   dbfilename "dump6379.rdb"\n   dir "/home/bigdata/redis_cluster"\n   logfile "/home/bigdata/redis_cluster/redis_err_6379.log"\n   cluster-enabled yes\n   cluster-config-file nodes-6379.conf\n   cluster-node-timeout 15000\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n * 修改好redis6379.conf文件,拷贝多个redis.conf文件.\n\n * 使用查找替换修改另外5个文件 例如：:%s/6379/6380\n\n * 启动6个服务,将其合并成一个集群。组合之前，请确保所有redis实例启动后，nodes-xxxx.conf文件都生成正常。\n   \n   合体：\n   \tcd  /opt/redis-6.2.1/src\n   \t\n   \tredis-cli --cluster create --cluster-replicas 1 192.168.11.101:6379 192.168.11.101:6380 192.168.11.101:6381 192.168.11.101:6389 192.168.11.101:6390 192.168.11.101:6391\n   \n   #此处不要用127.0.0.1， 请用真实IP地址\n   --replicas 1 采用最简单的方式配置集群，一台主机，一台从机，正好三组。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 客户端登录\n   \n   #普通方式登录\n   redis-cli -p 6379\n   #-c 采用集群策略连接，设置数据会自动切换到相应的写主机\n   redis-cli -c -p 6379\n   #通过 cluster nodes 命令查看集群信息\n   CLUSTER GETKEYSINSLOT <slot><count> 返回 count 个 slot 槽中的键。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * jedis开发\n   \n   public class JedisClusterTest {\n     public static void main(String[] args) { \n        Set<HostAndPort>set =new HashSet<HostAndPort>();\n        set.add(new HostAndPort("192.168.31.211",6379));\n        JedisCluster jedisCluster=new JedisCluster(set);\n        jedisCluster.set("k1", "v1");\n        System.out.println(jedisCluster.get("k1"));\n     }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n总结:\n\n * 好处：实现扩容，分摊压力，无中心配置相对简单。\n * 不足：多键操作不支持，不支持lua脚本，多键事务不被支持。\n\n\n# 应用问题\n\n\n# 缓存穿透\n\n * 描述：key对应的数据的数据源并不存在，针对key请求从缓存中获取不到，请求会存储到数据源，数据源可能会被压垮。\n   \n   \n\n * 解决办法\n   \n   （1）对空值缓存：如果一个查询返回的数据为空（不管是数据是否不存在），我们仍然把这个空结果（null）进行缓存，\n   \t设置空结果的过期时间会很短，最长不超过五分钟\n   （2）设置可访问的名单（白名单）：使用bitmaps类型定义一个可以访问的名单，名单id作为bitmaps的偏移量，\n   \t每次访问和bitmap里面的id进行比较，如果访问id不在bitmaps里面，进行拦截，不允许访问。\n   （3）采用布隆过滤器：(布隆过滤器（Bloom Filter）是1970年由布隆提出的。\n   \t它实际上是一个很长的二进制向量(位图)和一系列随机映射函数（哈希函数）。\n   \t布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是空间效率和查询时间都远远超过一般的算法，\n   \t缺点是有一定的误识别率和删除困难。)\n   \t将所有可能存在的数据哈希到一个足够大的bitmaps中，一个一定不存在的数据会被 这个bitmaps拦截掉，从而避免了对底层存储系统的查询压力。\n   （4）进行实时监控：当发现Redis的命中率开始急速降低，需要排查访问对象和访问的数据，和运维人员配合，可以设置黑名单限制服务。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n\n# 缓存击穿\n\n * 描述：key对应的数据存在，但在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。\n   \n   \n\n * 解决办法\n   \n   （1）预先设置热门数据：在redis高峰访问之前，把一些热门数据提前存入到redis里面，加大这些热门数据key的时长\n   （2）实时调整：现场监控哪些数据热门，实时调整key的过期时长\n   （3）使用锁：\n       （1）就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db。\n       （2）先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX）去set一个mutex key\n   （3）当操作返回成功时，再进行load db的操作，并回设缓存,最后删除mutex key；\n   \t当操作返回失败，证明有线程在load db，当前线程睡眠一段时间再重试整个get缓存的方法。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n\n# 缓存雪崩\n\n * 描述：key对应的数据存在，但在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。缓存雪崩与缓存击穿的区别在于这里针对很多key缓存，前者则是某一个key正常访问\n   \n   \n\n\n\n * 解决办法\n   \n   （1）构建多级缓存架构：nginx缓存 + redis缓存 +其他缓存（ehcache等）\n   （2）使用锁或队列：\n   用加锁或者队列的方式保证来保证不会有大量的线程对数据库一次性进行读写，从而避免失效时大量的并发请求落到底层存储系统上。不适用高并发情况\n   （3）设置过期标志更新缓存：\n   记录缓存数据是否过期（设置提前量），如果过期会触发通知另外的线程在后台去更新实际key的缓存。\n   （4）将缓存失效时间分散开：\n   比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n\n# 分布式锁\n\n * 描述：分布式集群系统后，由于分布式系统多线程、多进程并且分布在不同机器上，这将使原单机部署情况下的并发控制锁策略失效，单纯的Java API并不能提供分布式锁的能力。\n\n * 解决办法：\n   \n   分布式锁主流的实现方案：\n       1. 基于数据库实现分布式锁\n       2. 基于缓存（Redis等）\n       3. 基于Zookeeper\n       每一种分布式锁解决方案都有各自的优缺点：\n       1. 性能：redis最高\n       2. 可靠性：zookeeper最高\n       这里，我们就基于redis实现分布式锁。\n   使用redis实现分布式锁：\n   \tredis:命令\n   \t# set sku:1:info “OK” NX PX 10000\n   \tEX second ：设置键的过期时间为 second 秒。 SET key value EX second 效果等同于 SETEX key second value 。\n   \tPX millisecond ：设置键的过期时间为 millisecond 毫秒。 SET key value PX millisecond 效果等同于 PSETEX key millisecond value 。\n   \tNX ：只在键不存在时，才对键进行设置操作。 SET key value NX 效果等同于 SETNX key value 。\n   \tXX ：只在键已经存在时，才对键进行设置操作。\n   \t\n   \t1. 多个客户端同时获取锁（setnx）\n   \t2. 获取成功，执行业务逻辑{从db获取数据，放入缓存}，执行完成释放锁（del）\n   \t3. 其他客户端等待重试\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   \n\n * 代码实现\n   \n   1. 加锁\n   2. 使用lua释放锁\n   3. 重试\n   \n   为了确保分布式锁可用，我们至少要确保锁的实现同时满足以下四个条件：\n   - 互斥性。在任意时刻，只有一个客户端能持有锁。\n   - 不会发生死锁。即使有一个客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。\n   - 解铃还须系铃人。加锁和解锁必须是同一个客户端，客户端自己不能把别人加的锁给解了。\n   - 加锁和解锁必须具有原子性。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   ',normalizedContent:'# nosql简介\n\n非关系数据库，以简单key-value存储，不支持sql标准，不支持acid,性能远超sql。\n\nacid(原子性，一致性，隔离性，持久性)\n\n适合场景：\n\n * 对数据高并发的读写。\n * 海量数据读写。\n * 对数据高可扩展性。\n\n> 不适合事务支持，处理复杂关系，需要即席查询。\n\n常见nosql：memcache、redis、mongodb\n\n行式存储数据库：（大数据时代）\n\n * 行式数据库：根据id快 聚合慢\n * 列式数据库：olap分析快、oltp事务慢\n\n其他nosql：hbase、apche cassandra、图关系型数据库、\n\n\n# redis安装和概述\n\nredis是开源的key-value存储系统，操作原子性，排序，缓存在内存中，周期更新数据写入磁盘，可实现主从同步。\n\n场景：配合关系型数据库做高速缓存，多样数据结构存储持久化数据\n\n安装：\n\n * 下载上传解压 :https://redis.io/\n\n * 安装c语言编译环境 gcc\n   \n   yum install centos-release-scl scl-utils-build\n   yum install -y devtoolset-8-toolchain\n   scl enable devtoolset-8 bash\n   \n   或者 yum install gcc\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   #查看\n   gcc --version\n   \n   \n   1\n   2\n   \n\n * 在redis跟目录下执行make命令 编译\n   \n   > 如果环境没装报错，先装好\n   > \n   > 运行清除 make distclean 再重新编译，make\n\n * 安装 make install\n   \n   > cd /usr/local/bin\n   > ls  #查看是否安装成功\n   > \n   > redis-benchmark:性能测试工具，可以在自己本子运行，看看自己本子性能如何\n   > redis-check-aof：修复有问题的aof文件，rdb和aof后面讲\n   > redis-check-dump：修复有问题的dump.rdb文件\n   > redis-sentinel：redis集群使用\n   > redis-server：redis服务器启动命令\n   > redis-cli：客户端，操作入口\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > 8\n   > 9\n\n * 启动：服务端\n   \n   > 前台：redis-server\n   > \n   > 后台（推荐）：\n   > \n   > #拷贝修改配置文件 redis.conf\n   > sudo cp redis.conf /etc/redis.conf\n   > sudo vim redis.conf\n   > \t#修改（128行）\n   > \tdaemonize yes  \n   > \n   > #启动  redis-server /etc/redis.conf\n   > \n   > \n   > 1\n   > 2\n   > 3\n   > 4\n   > 5\n   > 6\n   > 7\n   > \n   > \n   > 查看进程:ps -ef | grep redis\n\n * 启动：客户端：redis-cli\n   \n   > 测试： ping =>pong\n\n * 关闭：\n   \n   > 单实例关闭：redis-cli shutdown\n   > \n   > 多实例关闭，指定端口关闭：redis-cli -p 6379 shutdown\n   > \n   > 查看：ps -ef | grep redis\n   > \n   > 然后再kill 杀掉进程\n\n其他相关知识\n\n端口号6379，默认是16个数据库，初始化用0号库，用select <dbid> 切换 所有库密码相同，dbsize查看当前数据库key数量，flushdb清空当前库，flushall通杀全部库。\n\nredis是单线程+多路io复用技术。\n\n\n# 常用五大数据类型\n\n键key操作：\n\nkeys * 查看当前库所有key    (匹配：keys *1)\nexists key 判断某个key是否存在\ntype key 查看你的key是什么类型\ndel key       删除指定的key数据\nunlink key   根据value选择非阻塞删除\n仅将keys从keyspace 元数据中删除，真正的删除会在后续异步操作。\n\nexpire key 10   10秒钟：为给定的key设置过期时间\nttl key 查看还有多少秒过期，-1表示永不过期，-2表示已过期\n\nselect 命令切换数据库\ndbsize 查看当前数据库的key的数量\nflushdb 清空当前库\nflushall 通杀全部库\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n字符串string：是最基本类型，是二进制安全的，可保存jps图片或者序列化对象等\n\n * set 不存在添加，存在修改\n\n * get 查询对应键值\n\n * append 追加\n\n * strlen 获取值的长度\n\n * setnx 当key不存在时，才能设置key值\n\n * incr 将key中存储的值设置在原来基础上+1，所有要求值是int类型\n\n * decr 减一\n\n * incrby、decrby 【key 步长】 设置加减的步长\n   \n   > 原子操作：不被线程调度机制打断的操作 (因为是redis是单线程的)\n\n * mset 同时设置一或多个k-v\n\n * mget 同时获取一或多个k-v\n   \n   > 原子性，有一个失败都失败\n\n * getrange 【key 起始位置 结束位置】 获取范围值\n\n * setrange 【key 起始位置 内容】覆盖范围值\n\n * setex 【key 过期时间 内容】 设置过期时间 ttl查看过期时间\n\n * getex 修改过期时间\n\n列表list: 单键多值\n\n * lpush、rpush 左插入右插入 1个或多个值。\n * lpop、rpop 左右吐出一个值。值在键在，值光键王\n * lrange 【key 起始位置 结束位置】 范围取值 -1标识右边第一个\n * rpoplpush 【key1 key2】 从列表key1右边吐出一个值，插到key2列表的左边\n * index 【key，index】 指定获取长度下标值\n * llen 【key】 获取列表长度\n * linsert 【key】 before 【value newvalue】在value后面插入newvalue值\n * lrem 【key n value】从左边删除n个value\n * lset 【key index value】将列表key下标为index的值替换成value\n\n> list的数据结构为快速链表quicklist\n\n集合set：自动排重，不存在重复值 是string类型的无序集合\n\n * sadd 添加一个或者多个值\n * smembers 取出该集合的所有值\n * sismember 【 key value】判断集合key是否为含有该value值，有1，没有0\n * scard 返回该元素的个数\n * srem 删除集合的某个或多个元素\n * spop 随机吐出一个值\n * srandmember 【key n】随机从该集合中取出n个值。不会从集合中删除\n * smove 【source destination value】把集合中一个值从一个集合移动到另一个集合\n * sinter 【key1 key2】返回两个集合的交集元素。\n * sunion 【k1 k2】返回两个集合的并集元素。\n * sdiff 【k1 k2】返回两个集合的****差集****元素(key1中的，不包含key2中的)\n\n> set数据结构是dict字典，字典是用哈希表实现的\n\n哈希hash：是一个键值对集合。\n\n> 是一个string类型的field和value的映射表，hash特别适合用于存储对象。类似java里面的map<string,object>\n\n * hset 【key f,v 】 添加\n   \n   #例\n   hset user:1001 id 1\n   hset user:1001 name 张三\n   \n   \n   1\n   2\n   3\n   \n\n * hget 【key f】 取值\n   \n   hget user:1001 id\n   \n   \n   1\n   \n\n * hmset 【k f1,v1, f2 ,v2】批量设置\n\n * hexists 判断f是否存在\n\n * hkeys <key>列出该hash集合的所有field\n\n * hvals <key>列出该hash集合的所有value\n\n * hincrby <key><field><increment>为哈希表 key 中的域 field 的值加上增量 1 -1\n\n * hsetnx <key><field><value>将哈希表 key 中的域 field 的值设置为 value ，当且仅当域 field 不存在\n\n> hash类型对应的数据结构是两种：ziplist（压缩列表），hashtable（哈希表）。当field-value长度较短且个数较少时，使用ziplist，否则使用hashtable。\n\n有序集合zset:是一个没有重复元素的字符串集合\n\n * zadd 【k1，s1,v1 ,s2,v2..】添加\n * zrange 【起始位置 结束位置 withscores】 取值 （0 -1）全部 withscores显示分数\n * zrangebyscore key 【值1，值2】 取出值1到值2范围之间值 withscores显示分数\n * zrevrangebyscore key maxmin [withscores] [limit offset count] 倒序\n * zincrby <key><increment><value> 为元素的score加上增量\n * zrem <key><value>删除该集合下，指定值的元素\n * zcount <key><min><max>统计该集合，分数区间内的元素个数\n * zrank <key><value>返回该值在集合中的排名，从0开始\n\n> 采用hash和跳跃表（有序链表、跳跃表）\n\n\n# 配置文件\n\n自定义目录：/myredis/redis.conf\n单位：配置大小单位,开头定义了一些基本的度量单位，只支持bytes，不支持bit，大小写不敏感\n包含：类似jsp中的include，多实例的情况可以把公用的配置文件提取出来\n\n###网络相关配置 ###\nbind： 默认情况bind=127.0.0.1只能接受本机的访问请求，不写的情况下，无限制接受任何ip地址的访问\n如果开启了protected-mode，那么在没有设定bind ip且没有设密码的情况下，redis只允许接受本机的响应\nport：端口号，默认 6379\ntcp-backlog：其实是一个连接队列，backlog队列总和=未完成三次握手队列 + 已经完成三次握手队列\ntimeout：一个空闲的客户端维持多少秒会关闭，0表示关闭该功能。即永不关闭。\ntcp-keepalive：对访问客户端的一种心跳检测，每个n秒检测一次。单位为秒，如果设置为0，则不会进行keepalive检测，建议设置成60 \n\n###general通用###\ndaemonize：是否为后台进程，设置为yes，守护进程，后台启动\npidfile：存放pid文件的位置，每个实例会产生一个不同的pid文件\nloglevel：指定日志记录级别，redis总共支持四个级别：debug、verbose、notice、warning，默认为notice\n四个级别根据使用阶段来选择，生产环境选择notice 或者warning\nlogfile：日志文件名称\ndatabases: 16  设定库的数量 默认16，默认数据库为0，可以使用select <dbid>命令在连接上指定数据库id\n\n###security安全###\n设置密码：requirepass\n\n#### limits限制 ###\nmaxclients:设置redis同时可以与多少个客户端进行连接。默认情况下为10000个客户端\nmaxmemory:建议必须设置，否则，将内存占满，造成服务器宕机\nmaxmemory-policy:\n\tvolatile-lru：使用lru算法移除key，只对设置了过期时间的键；（最近最少使用）\n\tallkeys-lru：在所有集合key中，使用lru算法移除key\n\tvolatile-random：在过期集合中移除随机的key，只对设置了过期时间的键\n\tallkeys-random：在所有集合key中，移除随机的key\n\tvolatile-ttl：移除那些ttl值最小的key，即那些最近要过期的key\n\tnoeviction：不进行移除。针对写操作，只是返回错误信息\nmaxmemory-samples:\n\t设置样本数量，lru算法和最小ttl算法都并非是精确的算法，而是估算值，所以你可以设置样本的大小，redis默认会检查这么多个key并选择其中lru的那个。\n\t一般设置3到7的数字，数值越小样本越不准确，但性能消耗越小。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 发布和订阅\n\n是一种消息的通信模式：pub发送小数，sub接收消息，客户端可订阅任意，多个频道\n\n命令行操作：\n\n * 订阅：subscribe 频道\n * 发送：publish 频道 内容\n\n\n# 新类型&功能\n\n类型：bitmaps、hyperloglog、geospatial\n\n * bitmaps：实现对位的操作 的字符串 统计练习访问的用户\n   \n   命令：\n   setbit<key><offset><value>设置bitmaps中某个偏移量的值（0或1）  可统计用户访问量\n   getbit<key><offset>获取bitmaps中某个偏移量的值 从0开始\n   bitcount<key>[start end] 统计字符串从start字节到end字节比特值为1的数量。\n   bitop  and(or/not/xor) <destkey> [key…] \n   bitop是一个复合操作， 它可以做多个bitmaps的and（交集） 、 or（并集） 、 not（非） 、 xor（异或） 操作并将结果保存在destkey中。\n   和set对比，数量大用bitmaps\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * hyperloglog：统计需求 统计pv等 重复去重\n   \n   命令：\n   pfadd <key>< element> [element ...]   添加指定元素到 hyperloglog 中\n   pfcount<key> [key ...] 计算hll的近似基数，可以计算多个hll，比如用hll存储每天的uv，计算一周的uv可以使用7天的uv合并计算即可。\n   pfmerge<destkey><sourcekey> [sourcekey ...]  将一个或多个hll合并后的结果存储在另一个hll中，比如每月活跃用户可以使用每天的活跃用户来合并计算可得\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * geospatial：地理信息的操作。该类型，就是元素的2维坐标，在地图上就是经纬度。 可计算两地的距离\n   \n   命令：\n   geoadd<key>< longitude><latitude><member> [longitude latitude member...]   添加地理位置（经度，纬度，名称）\n   geopos  <key><member> [member...]  获得指定地区的坐标值\n   geodist<key><member1><member2>  [m|km|ft|mi ]  获取两个位置之间的直线距离\n   \t\t\t\t\t\t\t单位：\n   \t\t\t\t\t\t\t\tm 表示单位为米[默认值]。\n   \t\t\t\t\t\t\t\tkm 表示单位为千米。\n   \t\t\t\t\t\t\t\tmi 表示单位为英里。\n   \t\t\t\t\t\t\t\tft 表示单位为英尺。\n   \t\t\t\t\t\t\t\t\n   georadius<key>< longitude><latitude>radius  m|km|ft|mi   以给定的经纬度为中心，找出某一半径内的元素\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n新功能：acl(访问权限等)、io多线程、工具支持cluster\n\n\n# 操作\n\n\n# jedis操作redis\n\n * 基本操作\n   \n   > 禁用linux的防火墙：linux(centos7)里执行命令\n   > \n   > *systemctl stop/disable firewalld.service*\n   > \n   > redis.conf中注释掉bind 127.0.0.1 ,然后 protected-mode no\n   \n   依赖\n   \n   <dependency>\n   <groupid>redis.clients</groupid>\n   <artifactid>jedis</artifactid>\n   <version>3.2.0</version>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   \n   public class jedisdemo1 {\n       public static void main(string[] args) {\n           //创建jedis对象\n           jedis jedis = new jedis("hadoop111",6379);\n   \n           string value = jedis.ping();\n           system.out.println(value);\n       }\n       //操作key\n       @test\n       public void demo1(){\n           jedis jedis = new jedis("hadoop111", 6379);\n           //添加\n           string name = jedis.set("name", "lucy");\n           //获取\n           string name1 = jedis.get("name");\n           system.out.println(name1);\n   \n           //设置多个key和value\n           jedis.mset("k1","v1","k2","v2");\n           list<string> mget = jedis.mget("k1", "k2");\n           system.out.println(mget);\n   \n   \n           set<string> keys = jedis.keys("*");\n           keys.stream().foreach(s -> system.out.println(s));\n       }\n       //操作string\n       @test\n       public void dome2(){\n           jedis jedis = new jedis("hadoop111", 6379);\n           jedis.lpush("key2","v1","v2","v3");\n           list<string> k1 = jedis.lrange("key2", 0, -1);\n           system.out.println(k1);\n       }\n       //操作set\n       @test\n       public void dome3(){\n           jedis jedis = new jedis("hadoop111", 6379);\n           jedis.sadd("key3","set1","set2","set1","set3");\n           set<string> key3 = jedis.smembers("key3");\n           system.out.println(key3);\n       }\n       //操作hash\n       @test\n       public void dome4(){\n           hashmap<string, string> map = new hashmap<>();\n           map.put("age","15");\n           map.put("address","北京");\n   \n           jedis jedis = new jedis("hadoop111", 6379);\n           jedis.hset("key4","name","张三");\n           jedis.hset("key4",map);\n   \n           map<string, string> map1 = jedis.hgetall("key4");\n           system.out.println(map1);\n       }\n   \n       //操作zset\n       @test\n       public void dome5(){\n           jedis jedis = new jedis("hadoop111", 6379);\n           jedis.zadd("key5",200,"张三");\n           set<string> key5 = jedis.zrange("key5", 0, -1);\n           system.out.println(key5);\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   68\n   \n\n * 案例 验证码识别\n   \n   public class phonecode {\n       public static void main(string[] args) {\n   //        system.out.println(getcode());//测试\n           scanner scanner = new scanner(system.in);\n           system.out.println("请输入手机号:");\n           string phone = scanner.next();\n           verifycode(phone);\n           system.out.println("验证码以发送,请输入验证码：");\n           getrediscode(phone,scanner.next());\n   \n   \n       }\n       //1. 生成6位数字验证码\n       public static string getcode(){\n           random random = new random();\n           stringbuffer buf = new stringbuffer();\n           for (int i = 0; i < 6; i++) {\n               buf.append(random.nextint(10));\n           }\n           return buf.tostring();\n       }\n       //2.设置验证\n       public static  void verifycode(string phone){\n           //连接\n           jedis jedis = new jedis("hadoop111", 6379);\n           //拼接手机发生次数的key\n           string countkey="verifycode"+phone+":count";\n           //验证码的key\n           string codekey="verifycode"+phone+":code";\n   \n           //每个手机只能发三次\n           string count = jedis.get(countkey);\n           if (count==null){\n               //第一次发生\n               jedis.setex(countkey,24*60^60,"1");\n           }else if (integer.parseint(count)<=2){\n               //发生次数加1\n               jedis.incr(countkey);\n           }else {\n               //发生已经到达三次了；\n               system.out.println("今天发送次数已经超过三次");\n               jedis.close();\n               return;\n           }\n           //验证码放到redis里面\n           string code1 = getcode();\n           system.out.println("生成验证码："+code1);\n           jedis.setex(codekey,120,code1);\n           jedis.close();\n   \n       }\n   \n   \n       //3. 验证码检验\n       public static void getrediscode(string phone,string code){\n           jedis jedis = new jedis("hadoop111", 6379);\n           //验证码key\n           string codekey="verifycode"+phone+":code";\n           string rediscode=jedis.get(codekey);\n           if (rediscode.equals(code)){\n               system.out.println("验证成功");\n           }else {\n               system.out.println("验证失败");\n           }\n           jedis.close();\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   45\n   46\n   47\n   48\n   49\n   50\n   51\n   52\n   53\n   54\n   55\n   56\n   57\n   58\n   59\n   60\n   61\n   62\n   63\n   64\n   65\n   66\n   67\n   \n\n\n# 整合sparingboot\n\n * 依赖\n   \n   \x3c!-- redis --\x3e\n   <dependency>\n   <groupid>org.springframework.boot</groupid>\n   <artifactid>spring-boot-starter-data-redis</artifactid>\n   </dependency>\n   \n   \x3c!-- spring2.x集成redis所需common-pool2--\x3e\n   <dependency>\n   <groupid>org.apache.commons</groupid>\n   <artifactid>commons-pool2</artifactid>\n   <version>2.6.0</version>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 配置\n   \n   #application.properties配置redis配置\n   #redis服务器地址\n   spring.redis.host=192.168.140.136\n   #redis服务器连接端口\n   spring.redis.port=6379\n   #redis数据库索引（默认为0）\n   spring.redis.database= 0\n   #连接超时时间（毫秒）\n   spring.redis.timeout=1800000\n   #连接池最大连接数（使用负值表示没有限制）\n   spring.redis.lettuce.pool.max-active=20\n   #最大阻塞等待时间(负数表示没限制)\n   spring.redis.lettuce.pool.max-wait=-1\n   #连接池中的最大空闲连接\n   spring.redis.lettuce.pool.max-idle=5\n   #连接池中的最小空闲连接\n   spring.redis.lettuce.pool.min-idle=0\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   \n\n * 编写代码\n   \n   配置类\n   \n   @enablecaching\n   @configuration\n   public class redisconfig extends cachingconfigurersupport {\n   \n       @bean\n       public redistemplate<string, object> redistemplate(redisconnectionfactory factory) {\n           redistemplate<string, object> template = new redistemplate<>();\n           redisserializer<string> redisserializer = new stringredisserializer();\n           jackson2jsonredisserializer jackson2jsonredisserializer = new jackson2jsonredisserializer(object.class);\n           objectmapper om = new objectmapper();\n           om.setvisibility(propertyaccessor.all, jsonautodetect.visibility.any);\n           om.enabledefaulttyping(objectmapper.defaulttyping.non_final);\n           jackson2jsonredisserializer.setobjectmapper(om);\n           template.setconnectionfactory(factory);\n   //key序列化方式\n           template.setkeyserializer(redisserializer);\n   //value序列化\n           template.setvalueserializer(jackson2jsonredisserializer);\n   //value hashmap序列化\n           template.sethashvalueserializer(jackson2jsonredisserializer);\n           return template;\n            }\n   \n       @bean\n       public cachemanager cachemanager(redisconnectionfactory factory) {\n           redisserializer<string> redisserializer = new stringredisserializer();\n           jackson2jsonredisserializer jackson2jsonredisserializer = new jackson2jsonredisserializer(object.class);\n   //解决查询缓存转换异常的问题\n           objectmapper om = new objectmapper();\n           om.setvisibility(propertyaccessor.all, jsonautodetect.visibility.any);\n           om.enabledefaulttyping(objectmapper.defaulttyping.non_final);\n           jackson2jsonredisserializer.setobjectmapper(om);\n   // 配置序列化（解决乱码的问题）,过期时间600秒\n           rediscacheconfiguration config = rediscacheconfiguration.defaultcacheconfig()\n                   .entryttl(duration.ofseconds(600))\n                   .serializekeyswith(redisserializationcontext.serializationpair.fromserializer(redisserializer))\n                   .serializevalueswith(redisserializationcontext.serializationpair.fromserializer(jackson2jsonredisserializer))\n                   .disablecachingnullvalues();\n           rediscachemanager cachemanager = rediscachemanager.builder(factory)\n                   .cachedefaults(config)\n                   .build();\n           return cachemanager;\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   40\n   41\n   42\n   43\n   44\n   \n   \n   测试\n   \n   @restcontroller\n   @requestmapping("/redistest")\n   public class redistestcontroller {\n       @autowired\n       private redistemplate redistemplate;\n   \n       @getmapping\n       public string testredis() {\n           //设置值到redis\n           redistemplate.opsforvalue().set("name","lucy");\n           //从redis获取值\n           string name = (string)redistemplate.opsforvalue().get("name");\n           return name;\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n\n# 事务🎇\n\n主要作用：串联多个命令防止别的命令插队。\n\nmulti：输入的命令会依次放入队列中（组队），但不会执行\n\nexec：执行队列中的命令\n\ndiscard：放弃组队\n\n错误：\n\n> 组队时，输入的命令报错，执行时整个队列都会被取消。\n> \n> 组队时，不报错，运行时报错，报错的命令不会被执行，其他命令都会执行，不会回滚。\n\n冲突：锁\n\n * 悲观锁：操作时堵塞，操作完释放（每次访问都会上锁，并发性降低）例：行锁、表锁、读写锁\n\n * 乐观锁：加版本号，修改同步更新。如果版本号不一样，不操作，可提高吞吐量\n   \n   在执行mulit之前先执行 watch key1 [key2] 监听多个key\n   执行之前这些key被其他命令所改动，事务将会被打断。\n   \n   unwatch 取消监视\n   \n   \n   1\n   2\n   3\n   4\n   \n\n事务三特性：\n\n * 单独隔离操作：所有目录都会序列化，执行过程中不会被打断\n * 没有隔离级别概念\n * 不保证原子性：如果事务中有条命令执行失败，其后的命令仍会被执行，没有回滚。\n\n秒杀案例:\n\n连接超时：连接池\n\n超卖：乐观锁+事务\n\n库存遗留： lua脚本 嵌入式脚本语言\n\n> 可以将复炸多步的redis操作写成一个脚本提交给redis执行，lua脚本类似redis事务。\n\n\n# 持久化\n\n\n# rdb\n\n在指定的时间间隔内将数据集快照写入磁盘，恢复读取硬盘数据到内存\n\n> redis会单独创建一个子进程fork来进行持久化，将数据写入临时文件中，待持久化结束，再用整个临时文件替换上传持久化好的文件，主线程不进行io操作，确保了性能，rdb比aof更加高效。\n> \n> fork:写时复制技术\n\n缺点：最后依次持久化后数据可能会丢失。\n\n流程：\n\n\n\n修改配置文件：\n\n存储文件名称：dump.rdb文件，在redis.conf中配置文件名称，默认为dump.rdb\n配置位置：rdb文件的保存路径，也可以修改。默认为redis启动时命令行所在的目录下 dir "/myredis/"\n\n#配置文件中默认的快照配置\nsave ：save时只管保存，其它不管，全部阻塞。手动保存。不建议。\nbgsave：redis会在后台异步进行快照操作， 快照同时还可以响应客户端请求。\n可以通过lastsave 命令获取最后一次成功执行快照的时间\n\nstop-writes-on-bgsave-error:当redis无法写入磁盘的话，直接关掉redis的写操作。推荐yes.\nrdbcompression:对于存储到磁盘中的快照，可以设置是否进行压缩存储。如果是的话，redis会采用lzf算法进行压缩。\n如果你不想消耗cpu来进行压缩的话，可以设置为关闭此功能。推荐yes\n\nrdbchecksum 检查完整性\n在存储快照后，还可以让redis使用crc64算法来进行数据校验，\n但是这样做会增加大约10%的性能消耗，如果希望获取到最大的性能提升，可以关闭此功能\n推荐yes.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n命令:\n\nflushall:执行flushall命令，也会产生dump.rdb文件，但里面是空的，无意义\n\n###snapshotting快照###\nsave:格式：save 秒钟 写操作次数\n        rdb是整个内存的压缩过的snapshot，rdb的数据结构，可以配置复合的快照触发条件，\n        默认是1分钟内改了1万次，或5分钟内改了10次，或15分钟内改了1次。\n        禁用\n        不设置save指令，或者给save传入空字符串\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nrdb备份：\n\n先通过config get dir  查询rdb文件的目录\n将*.rdb的文件拷贝到别的地方\nrdb的恢复:\n     关闭redis\n\t先把备份的文件拷贝到工作目录下 cp dump2.rdb dump.rdb\n\t启动redis, 备份数据会直接加载\n优点：适合大规模的数据恢复，对数据完整性和一致性要求不高更适合使用\n\t 节省磁盘空间，恢复速度快\n缺点：fork的时候，内存中的数据被克隆了一份，大致2倍的膨胀性需要考虑\n\t虽然redis在fork时使用了写时拷贝技术,但是如果数据庞大时还是比较消耗性能。\n\t在备份周期在一定间隔时间做一次备份，所以如果redis意外down掉的话，就会丢失最后一次快照后的所有修改。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n停止：\n\n动态停止rdb：redis-cli config set save ""#save后给空值，表示禁用保存策略\n\n\n1\n\n\nrdb总结：\n\n\n\n\n# aof\n\n以日志的形式来记录每个写操作**（增量保存）**读操作不记录，只允许追加文件不允许修改文件。redis启动时会读取该文件重新勾选数据。\n\n流程：\n\n（1）客户端的请求写命令会被append追加到aof缓冲区内；\n（2）aof缓冲区根据aof持久化策略[always,everysec,no]将操作sync同步到磁盘的aof文件中；\n（3）aof文件大小超过重写策略或手动重写时，会对aof文件rewrite重写，压缩aof文件容量；\n（4）redis服务重启时，会重新load加载aof文件中的写操作达到数据恢复的目的；\n\n\n1\n2\n3\n4\n\n\n配置开启：默认不开启\n\n如果aof和rdb同时开启，默认读aof数据\n\n启动恢复备份操作：\n\naof的备份机制和性能虽然和rdb不同, 但是备份和恢复的操作同rdb一样，都是拷贝备份文件，需要恢复时再拷贝到redis工作目录下，启动系统即加载。\n正常恢复：\n\t修改默认的appendonly no，改为yes\n\t将有数据的aof文件复制一份保存到对应目录(查看目录：config get dir)\n\t恢复：重启redis然后重新加载\n\n异常恢复：\n\t修改默认的appendonly no，改为yes\n\t如遇到aof文件损坏，通过/usr/local/bin/redis-check-aof--fix appendonly.aof进行恢复\n\t备份被写坏的aof文件\n\t恢复：重启redis，然后重新加载\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n同步频率设置：\n\nappendfsync always ：始终同步，每次redis的写入都会立刻记入日志；性能较差但数据完整性比较好\nappendfsync everysec：每秒同步，每秒记入日志一次，如果宕机，本秒的数据可能丢失。\nappendfsync no：redis不主动进行同步，把同步时机交给操作系统\n\n\n1\n2\n3\n\n\nrewrite压缩：\n\nno-appendfsync-on-rewrite=yes ,不写入aof文件只写入缓存，用户请求不会阻塞，但是在这段时间如果宕机会丢失这段时间的缓存数据。\n降低安全性提高性能\n\n如果 no-appendfsync-on-rewrite=no,  还是会把数据往磁盘里刷，但是遇到重写操作，可能会发生阻塞。\n数据安全，性能低\n\n\n1\n2\n3\n4\n5\n\n\n重写流程：\n\n（1）bgrewriteaof触发重写，判断是否当前有bgsave或bgrewriteaof在运行，如果有，则等待该命令结束后再继续执行。\n（2）主进程fork出子进程执行重写操作，保证主进程不会阻塞。\n（3）子进程遍历redis内存中数据到临时文件，客户端的写请求同时写入aof_buf缓冲区和aof_rewrite_buf重写缓冲区保证原aof文件完整以及新aof文件生成期间的新的数据修改动作不会丢失。\n（4）1).子进程写完新的aof文件后，向主进程发信号，父进程更新统计信息。2).主进程把aof_rewrite_buf中的数据写入到新的aof文件。\n（5）使用新的aof文件覆盖旧的aof文件，完成aof重写\n\n\n1\n2\n3\n4\n5\n\n\n> aof总结：\n> \n>  * 优势：备份机制更稳健、可读的日志文本，可处理误操作\n>  * 劣势：比起rdb占用更多磁盘空间，备份速度慢，每次读写同步有性能压力\n\n删除持久化数据：将rdb,aof文件都删除掉。\n\n持久化总结\n\n官方推荐两个都启用。\n如果对数据不敏感，可以选单独用rdb。\n不建议单独用 aof，因为可能会出现bug。\n如果只是做纯内存缓存，可以都不用。\n\n\n1\n2\n3\n4\n\n\n\n# 主从复制\n\n主机数据更新后根据配置，自动同步到备机，主节点以写为主，从节点以读为主。读写分离，性能扩展，容灾快速恢复。\n\n搭建：\n\n1. 拷贝多个redis.conf文件include(写绝对路径)\n2. 开启daemonize yes\n3. pid文件名字pidfile\n4. 指定端口port\n5. log文件名字\n6. dump.rdb名字dbfilename\n7. appendonly 关掉或者换名字\n8. 新建配置文件\n\t新建redis6379.conf，填写以下内容\n\t\tinclude /myredis/redis.conf\n\t\tpidfile /var/run/redis_6379.pid\n\t\tport 6379\n\t\tdbfilename dump6379.rdb\n\t新建redis6380.conf，填写以下内容\n\t\tinclude /myredis/redis.conf\n\t\tpidfile /var/run/redis_6380.pid\n\t\tport 6380\n\t\tdbfilename dump6380.rdb\t\t\n\t新建redis6381.conf，填写以下内容\n\t\tinclude /myredis/redis.conf\n\t\tpidfile /var/run/redis_6381.pid\n\t\tport 6381\n\t\tdbfilename dump6381.rdb\t\n\t\t\nslave-priority 10\n设置从机的优先级，值越小，优先级越高，用于选举主机时使用。默认100\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n启动\n\nredis-server redis6379.conf\nredis-server redis6380.conf\nredis-server redis6381.conf\n\n#查看\nps -ef | grep redis\n\n#打印主从复制的相关信息\ninfo replication\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n配从不配主\n\n#成为某个实例的从服务器\nslaveof  <ip><port>\n1、在6380和6381上执行: slaveof 127.0.0.1 6379\n2、在主机上写，在从机上可以读取数据\n\t在从机上写数据报错\n3、主机挂掉，重启就行，一切如初\n4、从机重启需重设：slaveof 127.0.0.1 6379\n\t可以将配置增加到文件中。永久生效。\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n常用：\n\n * 一主二扑\n\n * 星火相传\n\n * 反客为主：当master宕机后，后面的slave可以立刻升为master，其后面的slave不用做任何修改。\n   \n   > 用 slaveof no one 将从机变为主机。\n\n复制原理：\n\n1. slave启动成功连接到master后会发送一个sync命令\n2. master接到命令启动后台的存盘进程，同时收集所有接收到的用于修改数据集命令， 在后台进程执行完毕之后，master将传送整个数据文件到slave,以完成一次完全同步\n3. 全量复制：而slave服务在接收到数据库文件数据后，将其存盘并加载到内存中。\n4. 增量复制：master继续将新的所有收集到的修改命令依次传给slave,完成同步\n5. 但是只要是重新连接master,一次完全同步（全量复制)将被自动执行\n\n\n1\n2\n3\n4\n5\n\n\n哨兵模式：反客为主的自动版:能够后台监控主机是否故障，如果故障了根据投票数自动将从库转换为主库\n\n#部署\n1. 调整为一主二仆模式，6379带着6380、6381\n2. 自定义的/myredis目录下新建sentinel.conf文件，名字绝不能错\n3. 配置哨兵,填写内容\n\tsentinel monitor mymaster 127.0.0.1 6379 1\n\t其中mymaster为监控对象起的服务器名称， 1 为至少有多少个哨兵同意迁移的数量。\n\n\n1\n2\n3\n4\n5\n6\n\n\n#启动哨兵\n/usr/local/bin\nredis做压测可以用自带的redis-benchmark工具\n执行redis-sentinel  /myredis/sentinel.conf \n\n\n\n1\n2\n3\n4\n5\n\n\n其他：\n\n * 复制延时\n\n * 故障恢复 ：先选择优先级考前的，选择偏移量偏大的，runid最小的从服务器\n   \n   优先级在redis.conf中默认：slave-priority 100，值越小优先级越高\n   偏移量是指获得原主机数据最全的\n   每个redis实例启动后都会随机生成一个40位的runid\n   \n   \n   1\n   2\n   3\n   \n\n * 主从复制\n   \n   private static jedissentinelpool jedissentinelpool=null;\n   \n   public static  jedis getjedisfromsentinel(){\n   if(jedissentinelpool==null){\n               set<string> sentinelset=new hashset<>();\n               sentinelset.add("192.168.11.103:26379");\n   \n               jedispoolconfig jedispoolconfig =new jedispoolconfig();\n               jedispoolconfig.setmaxtotal(10); //最大可用连接数\n   jedispoolconfig.setmaxidle(5); //最大闲置连接数\n   jedispoolconfig.setminidle(5); //最小闲置连接数\n   jedispoolconfig.setblockwhenexhausted(true); //连接耗尽是否等待\n   jedispoolconfig.setmaxwaitmillis(2000); //等待时间\n   jedispoolconfig.settestonborrow(true); //取连接的时候进行一下测试 ping pong\n   \n   jedissentinelpool=new jedissentinelpool("mymaster",sentinelset,jedispoolconfig);\n   return jedissentinelpool.getresource();\n          }else{\n   return jedissentinelpool.getresource();\n           }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   \n\n\n# 集群\n\n * 配置基本信息\n   \n   开启daemonize yes\n   pid文件名字\n   指定端口\n   log文件名字\n   dump.rdb名字\n   appendonly 关掉或者换名字\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * redis cluster配置修改\n   \n   cluster-enabled yes    打开集群模式\n   cluster-config-file nodes-6379.conf  设定节点配置文件名\n   cluster-node-timeout 15000   设定节点失联时间，超过该时间（毫秒），集群自动进行主从切换。\n   \n   \n   include /home/bigdata/redis.conf\n   port 6379\n   pidfile "/var/run/redis_6379.pid"\n   dbfilename "dump6379.rdb"\n   dir "/home/bigdata/redis_cluster"\n   logfile "/home/bigdata/redis_cluster/redis_err_6379.log"\n   cluster-enabled yes\n   cluster-config-file nodes-6379.conf\n   cluster-node-timeout 15000\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n * 修改好redis6379.conf文件,拷贝多个redis.conf文件.\n\n * 使用查找替换修改另外5个文件 例如：:%s/6379/6380\n\n * 启动6个服务,将其合并成一个集群。组合之前，请确保所有redis实例启动后，nodes-xxxx.conf文件都生成正常。\n   \n   合体：\n   \tcd  /opt/redis-6.2.1/src\n   \t\n   \tredis-cli --cluster create --cluster-replicas 1 192.168.11.101:6379 192.168.11.101:6380 192.168.11.101:6381 192.168.11.101:6389 192.168.11.101:6390 192.168.11.101:6391\n   \n   #此处不要用127.0.0.1， 请用真实ip地址\n   --replicas 1 采用最简单的方式配置集群，一台主机，一台从机，正好三组。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 客户端登录\n   \n   #普通方式登录\n   redis-cli -p 6379\n   #-c 采用集群策略连接，设置数据会自动切换到相应的写主机\n   redis-cli -c -p 6379\n   #通过 cluster nodes 命令查看集群信息\n   cluster getkeysinslot <slot><count> 返回 count 个 slot 槽中的键。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * jedis开发\n   \n   public class jedisclustertest {\n     public static void main(string[] args) { \n        set<hostandport>set =new hashset<hostandport>();\n        set.add(new hostandport("192.168.31.211",6379));\n        jediscluster jediscluster=new jediscluster(set);\n        jediscluster.set("k1", "v1");\n        system.out.println(jediscluster.get("k1"));\n     }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n总结:\n\n * 好处：实现扩容，分摊压力，无中心配置相对简单。\n * 不足：多键操作不支持，不支持lua脚本，多键事务不被支持。\n\n\n# 应用问题\n\n\n# 缓存穿透\n\n * 描述：key对应的数据的数据源并不存在，针对key请求从缓存中获取不到，请求会存储到数据源，数据源可能会被压垮。\n   \n   \n\n * 解决办法\n   \n   （1）对空值缓存：如果一个查询返回的数据为空（不管是数据是否不存在），我们仍然把这个空结果（null）进行缓存，\n   \t设置空结果的过期时间会很短，最长不超过五分钟\n   （2）设置可访问的名单（白名单）：使用bitmaps类型定义一个可以访问的名单，名单id作为bitmaps的偏移量，\n   \t每次访问和bitmap里面的id进行比较，如果访问id不在bitmaps里面，进行拦截，不允许访问。\n   （3）采用布隆过滤器：(布隆过滤器（bloom filter）是1970年由布隆提出的。\n   \t它实际上是一个很长的二进制向量(位图)和一系列随机映射函数（哈希函数）。\n   \t布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是空间效率和查询时间都远远超过一般的算法，\n   \t缺点是有一定的误识别率和删除困难。)\n   \t将所有可能存在的数据哈希到一个足够大的bitmaps中，一个一定不存在的数据会被 这个bitmaps拦截掉，从而避免了对底层存储系统的查询压力。\n   （4）进行实时监控：当发现redis的命中率开始急速降低，需要排查访问对象和访问的数据，和运维人员配合，可以设置黑名单限制服务。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n\n# 缓存击穿\n\n * 描述：key对应的数据存在，但在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端db加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端db压垮。\n   \n   \n\n * 解决办法\n   \n   （1）预先设置热门数据：在redis高峰访问之前，把一些热门数据提前存入到redis里面，加大这些热门数据key的时长\n   （2）实时调整：现场监控哪些数据热门，实时调整key的过期时长\n   （3）使用锁：\n       （1）就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db。\n       （2）先使用缓存工具的某些带成功操作返回值的操作（比如redis的setnx）去set一个mutex key\n   （3）当操作返回成功时，再进行load db的操作，并回设缓存,最后删除mutex key；\n   \t当操作返回失败，证明有线程在load db，当前线程睡眠一段时间再重试整个get缓存的方法。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n\n# 缓存雪崩\n\n * 描述：key对应的数据存在，但在redis中过期，此时若有大量并发请求过来，这些请求发现缓存过期一般都会从后端db加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端db压垮。缓存雪崩与缓存击穿的区别在于这里针对很多key缓存，前者则是某一个key正常访问\n   \n   \n\n\n\n * 解决办法\n   \n   （1）构建多级缓存架构：nginx缓存 + redis缓存 +其他缓存（ehcache等）\n   （2）使用锁或队列：\n   用加锁或者队列的方式保证来保证不会有大量的线程对数据库一次性进行读写，从而避免失效时大量的并发请求落到底层存储系统上。不适用高并发情况\n   （3）设置过期标志更新缓存：\n   记录缓存数据是否过期（设置提前量），如果过期会触发通知另外的线程在后台去更新实际key的缓存。\n   （4）将缓存失效时间分散开：\n   比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n\n# 分布式锁\n\n * 描述：分布式集群系统后，由于分布式系统多线程、多进程并且分布在不同机器上，这将使原单机部署情况下的并发控制锁策略失效，单纯的java api并不能提供分布式锁的能力。\n\n * 解决办法：\n   \n   分布式锁主流的实现方案：\n       1. 基于数据库实现分布式锁\n       2. 基于缓存（redis等）\n       3. 基于zookeeper\n       每一种分布式锁解决方案都有各自的优缺点：\n       1. 性能：redis最高\n       2. 可靠性：zookeeper最高\n       这里，我们就基于redis实现分布式锁。\n   使用redis实现分布式锁：\n   \tredis:命令\n   \t# set sku:1:info “ok” nx px 10000\n   \tex second ：设置键的过期时间为 second 秒。 set key value ex second 效果等同于 setex key second value 。\n   \tpx millisecond ：设置键的过期时间为 millisecond 毫秒。 set key value px millisecond 效果等同于 psetex key millisecond value 。\n   \tnx ：只在键不存在时，才对键进行设置操作。 set key value nx 效果等同于 setnx key value 。\n   \txx ：只在键已经存在时，才对键进行设置操作。\n   \t\n   \t1. 多个客户端同时获取锁（setnx）\n   \t2. 获取成功，执行业务逻辑{从db获取数据，放入缓存}，执行完成释放锁（del）\n   \t3. 其他客户端等待重试\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   \n\n * 代码实现\n   \n   1. 加锁\n   2. 使用lua释放锁\n   3. 重试\n   \n   为了确保分布式锁可用，我们至少要确保锁的实现同时满足以下四个条件：\n   - 互斥性。在任意时刻，只有一个客户端能持有锁。\n   - 不会发生死锁。即使有一个客户端在持有锁的期间崩溃而没有主动解锁，也能保证后续其他客户端能加锁。\n   - 解铃还须系铃人。加锁和解锁必须是同一个客户端，客户端自己不能把别人加的锁给解了。\n   - 加锁和解锁必须具有原子性。\n   \n   \n   1\n   2\n   3\n   4\n   5\n   ',charsets:{cjk:!0}},{title:"离线数仓笔记",frontmatter:{title:"离线数仓笔记",date:"2021-10-20T00:00:00.000Z",tags:["离线数仓"],categories:["笔记"]},regularPath:"/view/docs/%E7%AC%94%E8%AE%B0/30.%E6%95%B0%E4%BB%934.x.html",relativePath:"view/docs/笔记/30.数仓4.x.md",key:"v-cb7920d6",path:"/view/docs/%E7%AC%94%E8%AE%B0/30.%E6%95%B0%E4%BB%934.x.html",headers:[{level:2,title:"数据仓库",slug:"数据仓库",normalizedTitle:"数据仓库",charIndex:2},{level:2,title:"日志数据采集搭建",slug:"日志数据采集搭建",normalizedTitle:"日志数据采集搭建",charIndex:2788},{level:2,title:"业务数据采集搭建",slug:"业务数据采集搭建",normalizedTitle:"业务数据采集搭建",charIndex:335},{level:3,title:"电商系统表结构",slug:"电商系统表结构",normalizedTitle:"电商系统表结构",charIndex:3607},{level:3,title:"同步策略",slug:"同步策略",normalizedTitle:"同步策略",charIndex:3792},{level:2,title:"数仓分层",slug:"数仓分层",normalizedTitle:"数仓分层",charIndex:40964},{level:3,title:"仓库建模",slug:"仓库建模",normalizedTitle:"仓库建模",charIndex:42350},{level:3,title:"调度流程",slug:"调度流程",normalizedTitle:"调度流程",charIndex:45061},{level:2,title:"数据报表",slug:"数据报表",normalizedTitle:"数据报表",charIndex:45273},{level:2,title:"即席查询",slug:"即席查询",normalizedTitle:"即席查询",charIndex:395},{level:2,title:"集群监控",slug:"集群监控",normalizedTitle:"集群监控",charIndex:751},{level:2,title:"数据安全",slug:"数据安全",normalizedTitle:"数据安全",charIndex:45785},{level:3,title:"安全模式的搭建",slug:"安全模式的搭建",normalizedTitle:"安全模式的搭建",charIndex:45851},{level:3,title:"全流程调度测试",slug:"全流程调度测试",normalizedTitle:"全流程调度测试",charIndex:48332},{level:3,title:"Presto配置",slug:"presto配置",normalizedTitle:"presto配置",charIndex:49599},{level:3,title:"Kylin配置",slug:"kylin配置",normalizedTitle:"kylin配置",charIndex:55101},{level:3,title:"权限管理",slug:"权限管理",normalizedTitle:"权限管理",charIndex:447},{level:2,title:"元数据管理",slug:"元数据管理",normalizedTitle:"元数据管理",charIndex:429},{level:2,title:"数据质量检测",slug:"数据质量检测",normalizedTitle:"数据质量检测",charIndex:55452}],lastUpdated:"2021/10/25 下午9:19:48",headersStr:"数据仓库 日志数据采集搭建 业务数据采集搭建 电商系统表结构 同步策略 数仓分层 仓库建模 调度流程 数据报表 即席查询 集群监控 数据安全 安全模式的搭建 全流程调度测试 Presto配置 Kylin配置 权限管理 元数据管理 数据质量检测",content:'# 数据仓库\n\n\n\n为企业决策提供数据支撑\n\n存储、分析、计算\n\n查看日志的方法：打开控制台管理，network输入log\n\n * 然后搜索url解析，复制的log数据进行解码\n\n数据的来源：\n\n * 业务数据：mysql等\n * 用户行为数据：埋点：日志服务器(文件)\n * 爬虫数据\n\n数据仓库：Hive on spark\n\n> ODS备份=>DWD清洗=>DWS(按天聚合)=>DWT(按年聚合）=>ADS(报表)\n> \n> 调度：Azkaban、Oozie、\n\n数据传输：flume(日志)（大的话可用kafka消峰）、sqoop(数据库)\n\n数据输出：报表系统、用户画像（统计，规则，机器学习）、推荐系统、机器学习\n\n需求\n\n * 用户行为数据采集搭建\n * 业务数据采集搭建\n * 数据仓库维度建模\n * 分析、设备、会员、商品、地区、活动等核心主题报表，近100个\n * 采用即席查询工具对指标进行分析\n * 对集群性能进行监控，报警。\n * 元数据管理。\n * 质量监控\n * 权限管理\n\n架构设计：\n\n\n\n技术选型\n\n> 因素：数据量大小、业务需求、行业内经验、技术成熟度、开发维护成本、总成本预算\n\n采集传输：flume、kafka、sqoop、Logstash、DataX\n\n数据存储：mysql、hdfs、hbase、redis、MongoDM\n\n数据计算：Hive、Tez、Spark、Flink、Storm\n\n数据查询：Presto、Kylin、Impala、Druid、ClickHouse、Doris\n\n数据可视化：Echarts、SuperSet、QuickBi、Datav\n\n调度工具：Azkaban、Oozie、DolphinScheduler、Airflow\n\n集群监控：Zabbix(离线)、prometheus（实时）\n\n权限管理：Ranger、Sentry\n\n元数据管理：Atlas\n\n * 技术\n * 框架：apache、cdh、hdp\n * 服务器：物理、云主机\n * 集群规模\n\n\n\n集群分俩套：生产or部署\n\n生产集群：10台(看需求)\n\n * 消耗资源分开\n * 数据传输紧密防止一起\n * 客户端尽量放在一到俩台服务器上，方便外部访问\n * 有依赖关系的尽量放到同一台服务器。\n\n测试集群：（3台）\n\n * 内存：644 or 833\n\n服务名称             子服务                     服务器NODE1   服务器NODE2   服务器NODE3\nHDFS             NameNode                √                     \n                 DataNode                √          √          √\n                 SecondaryNameNode                             √\nYarn             NodeManager             √          √          √\n                 Resourcemanager                    √          \nZookeeper        Zookeeper Server        √          √          √\nFlume（采集日志）      Flume                   √          √          \nKafka            Kafka                   √          √          √\nFlume（消费Kafka）   Flume                                         √\nHive             Hive                    √                     \nMySQL            MySQL                   √                     \nSqoop            Sqoop                   √                     \nPresto           Coordinator             √                     \n                 Worker                             √          √\nAzkaban          AzkabanWebServer        √                     \n                 AzkabanExecutorServer   √                     \nSpark                                    √                     \nKylin                                    √                     \nHBase            HMaster                 √                     \n                 HRegionServer           √          √          √\nSuperset                                 √                     \nAtlas                                    √                     \nSolr             Jar                     √                     \n服务数总计                                    19         8          8\n\n目标数据：页面、事件、曝光、启动、错误\n\n埋点：\n\n * 代码埋点：每一个按钮用js写的 当onclick 记录相关信息发送到日志服务器\n * 可视化埋点：开发一个web页面进行相关配置(里面已经封装好ljs代码)\n * 全埋点：框架实现\n\n> 日志结构：埋点日志、启动日志\n> \n> 每条数据可以是各个信息模块，公共信息模块\n\n部署\n\n\n# 日志数据采集搭建\n\n> flme => kafka(zk)=>flume=>hdfs\n\nFlme： 生产者\n\n * 数据 source、channel、sink 之间的选择。\n   \n   > TailDir Source：断点续传、多目录\n   > \n   > Kafka Channel，省去了Sink，提高了效率。KafkaChannel数据存储在Kafka里面(磁盘)\n\n * 编写 配置文件\n   \n   #1. 定义组件\n   a1.sources = r1\n   a1.channels = c1\n   #2. 配置source\n   #配置拦截器(ETL数据清洗 判断json)\n   #3. 配置channel\n   #4. sink #kafkachannels 无sink\n   #5. 拼接\n   a1.sources.r1.channels = c1\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\nFlime:消费\n\n零点漂移\n\n> flume => kafka => flume => HDFS\n> \n> 时间卡点 io延迟。\n> \n> 用时间戳拦截器 处理\n\n#1. 定义组件\na1.sources = r1\na1.channels = c1\n#2. 配置source kafka \n#3. 时间戳拦截器 解决零点漂移问题\n#4. 配置channel\n#5. sink #kafkachannels 无sink\n#6. 拼接\na1.sources.r1.channels = c1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 业务数据采集搭建\n\nSKU&SPU\n\n * sku 库存量基本单位， 每个产品都有对应唯一的sku号\n * spu 商品聚合的最小单位，一组可复用、易检索的标准化信息。\n\n> 平台属性or销售属性\n\n\n# 电商系统表结构\n\n * 查看宏观表（那些表）\n * 熟悉表结构（行列）\n * 数据如何发送变化\n\n搭建\n\n * 批量同步\n * 实时同步\n\n> sqoop 导入导出\n> \n> 底层是mapreduce 有map 没有reduce聚合 所以没有计算\n> \n> bin/sqoop help 查看命令\n> \n> import导入 export导出 传入给定参数即可\n\n\n# 同步策略\n\n * 全量表：完整的 （适 数据量小，可会发生变化）\n   \n   > 每日全量表： 按日期分区\n   > \n   > 每日存储一次作为一个分区\n\n * 增量表：新增加的 （适 数据量大、只新增不变化）\n   \n   > 按日期分区，保存业务系统新增数据\n\n * 新增变化表：增加和变化的 （ 量大+变化）\n   \n   > 业务数据库新增加的数据和未发生变化的进行整合\n\n * 特殊表：只存一次 （不变化）\n   \n   > 不发生变化的表，地区，省份，民族等。\n\n第一次同步时要采用全量+对应的方式\n\n#全量 只执行一次\nbin/sqoop import \\\n--connect jdbc:mysql://node1:3306/gmall \\\n--username root \\\n--password hadoop \\\n--query \'select * from order_info where $CONDITIONS \' \\\n--table /order_info/2020-06-14 \\\n--delete-target-dir \\\n--num-mappers 2 \\\n--split-by id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n新增和变化\n//data -d \'-1 day\' #获取前一天数据\ndo_data =\'data -d \'-1 day\' +%F\'\nbin/sqoop import \\\n--connect jdbc:mysql://node1:3306/gmall \\\n--username root \\\n--password hadoop \\\n--query \'select * from order_info where (data_format(create_time,\'%Y-%m-%d\')=\'$do_data\' or data_format(operate_time,\'%Y-%m-%d\')=\'$do_data\') and $CONDITIONS\' \\\n--table /order_info/$do_data \\\n--delete-target-dir \\\n--num-mappers 2 \\\n--split-by id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n可以把这俩个封装成一个脚本\n\n#! /bin/bash\n\nAPP=gmall\nsqoop=/opt/module/sqoop/bin/sqoop\n\nif [ -n "$2" ] ;then\n   do_date=$2\nelse \n   echo "请传入日期参数"\n   exit\nfi \n\nimport_data(){\n$sqoop import \\\n--connect jdbc:mysql://node1:3306/$APP \\\n--username root \\\n--password hadoop \\\n--target-dir /origin_data/$APP/db/$1/$do_date \\\n--delete-target-dir \\\n--query "$2 where \\$CONDITIONS" \\\n--num-mappers 1 \\\n--fields-terminated-by \'\\t\' \\\n--compress \\\n--compression-codec lzop \\\n--null-string \'\\\\N\' \\\n--null-non-string \'\\\\N\'\n\nhadoop jar /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.DistributedLzoIndexer /origin_data/$APP/db/$1/$do_date\n}\n\nimport_order_info(){\n  import_data order_info "select\n                            id, \n                            total_amount, \n                            order_status, \n                            user_id, \n                            payment_way,\n                            delivery_address,\n                            out_trade_no, \n                            create_time, \n                            operate_time,\n                            expire_time,\n                            tracking_no,\n                            province_id,\n                            activity_reduce_amount,\n                            coupon_reduce_amount,                            \n                            original_total_amount,\n                            feight_fee,\n                            feight_fee_reduce      \n                        from order_info"\n}\n\nimport_coupon_use(){\n  import_data coupon_use "select\n                          id,\n                          coupon_id,\n                          user_id,\n                          order_id,\n                          coupon_status,\n                          get_time,\n                          using_time,\n                          used_time,\n                          expire_time\n                        from coupon_use"\n}\n\nimport_order_status_log(){\n  import_data order_status_log "select\n                                  id,\n                                  order_id,\n                                  order_status,\n                                  operate_time\n                                from order_status_log"\n}\n\nimport_user_info(){\n  import_data "user_info" "select \n                            id,\n                            login_name,\n                            nick_name,\n                            name,\n                            phone_num,\n                            email,\n                            user_level, \n                            birthday,\n                            gender,\n                            create_time,\n                            operate_time\n                          from user_info"\n}\n\nimport_order_detail(){\n  import_data order_detail "select \n                              id,\n                              order_id, \n                              sku_id,\n                              sku_name,\n                              order_price,\n                              sku_num, \n                              create_time,\n                              source_type,\n                              source_id,\n                              split_total_amount,\n                              split_activity_amount,\n                              split_coupon_amount\n                            from order_detail"\n}\n\nimport_payment_info(){\n  import_data "payment_info"  "select \n                                id,  \n                                out_trade_no, \n                                order_id, \n                                user_id, \n                                payment_type, \n                                trade_no, \n                                total_amount,  \n                                subject, \n                                payment_status,\n                                create_time,\n                                callback_time \n                              from payment_info"\n}\n\nimport_comment_info(){\n  import_data comment_info "select\n                              id,\n                              user_id,\n                              sku_id,\n                              spu_id,\n                              order_id,\n                              appraise,\n                              create_time\n                            from comment_info"\n}\n\nimport_order_refund_info(){\n  import_data order_refund_info "select\n                                id,\n                                user_id,\n                                order_id,\n                                sku_id,\n                                refund_type,\n                                refund_num,\n                                refund_amount,\n                                refund_reason_type,\n                                refund_status,\n                                create_time\n                              from order_refund_info"\n}\n\nimport_sku_info(){\n  import_data sku_info "select \n                          id,\n                          spu_id,\n                          price,\n                          sku_name,\n                          sku_desc,\n                          weight,\n                          tm_id,\n                          category3_id,\n                          is_sale,\n                          create_time\n                        from sku_info"\n}\n\nimport_base_category1(){\n  import_data "base_category1" "select \n                                  id,\n                                  name \n                                from base_category1"\n}\n\nimport_base_category2(){\n  import_data "base_category2" "select\n                                  id,\n                                  name,\n                                  category1_id \n                                from base_category2"\n}\n\nimport_base_category3(){\n  import_data "base_category3" "select\n                                  id,\n                                  name,\n                                  category2_id\n                                from base_category3"\n}\n\nimport_base_province(){\n  import_data base_province "select\n                              id,\n                              name,\n                              region_id,\n                              area_code,\n                              iso_code,\n                              iso_3166_2\n                            from base_province"\n}\n\nimport_base_region(){\n  import_data base_region "select\n                              id,\n                              region_name\n                            from base_region"\n}\n\nimport_base_trademark(){\n  import_data base_trademark "select\n                                id,\n                                tm_name\n                              from base_trademark"\n}\n\nimport_spu_info(){\n  import_data spu_info "select\n                            id,\n                            spu_name,\n                            category3_id,\n                            tm_id\n                          from spu_info"\n}\n\nimport_favor_info(){\n  import_data favor_info "select\n                          id,\n                          user_id,\n                          sku_id,\n                          spu_id,\n                          is_cancel,\n                          create_time,\n                          cancel_time\n                        from favor_info"\n}\n\nimport_cart_info(){\n  import_data cart_info "select\n                        id,\n                        user_id,\n                        sku_id,\n                        cart_price,\n                        sku_num,\n                        sku_name,\n                        create_time,\n                        operate_time,\n                        is_ordered,\n                        order_time,\n                        source_type,\n                        source_id\n                      from cart_info"\n}\n\nimport_coupon_info(){\n  import_data coupon_info "select\n                          id,\n                          coupon_name,\n                          coupon_type,\n                          condition_amount,\n                          condition_num,\n                          activity_id,\n                          benefit_amount,\n                          benefit_discount,\n                          create_time,\n                          range_type,\n                          limit_num,\n                          taken_count,\n                          start_time,\n                          end_time,\n                          operate_time,\n                          expire_time\n                        from coupon_info"\n}\n\nimport_activity_info(){\n  import_data activity_info "select\n                              id,\n                              activity_name,\n                              activity_type,\n                              start_time,\n                              end_time,\n                              create_time\n                            from activity_info"\n}\n\nimport_activity_rule(){\n    import_data activity_rule "select\n                                    id,\n                                    activity_id,\n                                    activity_type,\n                                    condition_amount,\n                                    condition_num,\n                                    benefit_amount,\n                                    benefit_discount,\n                                    benefit_level\n                                from activity_rule"\n}\n\nimport_base_dic(){\n    import_data base_dic "select\n                            dic_code,\n                            dic_name,\n                            parent_code,\n                            create_time,\n                            operate_time\n                          from base_dic"\n}\n\n\nimport_order_detail_activity(){\n    import_data order_detail_activity "select\n                                                                id,\n                                                                order_id,\n                                                                order_detail_id,\n                                                                activity_id,\n                                                                activity_rule_id,\n                                                                sku_id,\n                                                                create_time\n                                                            from order_detail_activity"\n}\n\n\nimport_order_detail_coupon(){\n    import_data order_detail_coupon "select\n                                                                id,\n\t\t\t\t\t\t\t\t                                                order_id,\n                                                                order_detail_id,\n                                                                coupon_id,\n                                                                coupon_use_id,\n                                                                sku_id,\n                                                                create_time\n                                                            from order_detail_coupon"\n}\n\n\nimport_refund_payment(){\n    import_data refund_payment "select\n                                                        id,\n                                                        out_trade_no,\n                                                        order_id,\n                                                        sku_id,\n                                                        payment_type,\n                                                        trade_no,\n                                                        total_amount,\n                                                        subject,\n                                                        refund_status,\n                                                        create_time,\n                                                        callback_time\n                                                    from refund_payment"                                                    \n\n}\n\nimport_sku_attr_value(){\n    import_data sku_attr_value "select\n                                                    id,\n                                                    attr_id,\n                                                    value_id,\n                                                    sku_id,\n                                                    attr_name,\n                                                    value_name\n                                                from sku_attr_value"\n}\n\n\nimport_sku_sale_attr_value(){\n    import_data sku_sale_attr_value "select\n                                                            id,\n                                                            sku_id,\n                                                            spu_id,\n                                                            sale_attr_value_id,\n                                                            sale_attr_id,\n                                                            sale_attr_name,\n                                                            sale_attr_value_name\n                                                        from sku_sale_attr_value"\n}\n\ncase $1 in\n  "order_info")\n     import_order_info\n;;\n  "base_category1")\n     import_base_category1\n;;\n  "base_category2")\n     import_base_category2\n;;\n  "base_category3")\n     import_base_category3\n;;\n  "order_detail")\n     import_order_detail\n;;\n  "sku_info")\n     import_sku_info\n;;\n  "user_info")\n     import_user_info\n;;\n  "payment_info")\n     import_payment_info\n;;\n  "base_province")\n     import_base_province\n;;\n  "base_region")\n     import_base_region\n;;\n  "base_trademark")\n     import_base_trademark\n;;\n  "activity_info")\n      import_activity_info\n;;\n  "cart_info")\n      import_cart_info\n;;\n  "comment_info")\n      import_comment_info\n;;\n  "coupon_info")\n      import_coupon_info\n;;\n  "coupon_use")\n      import_coupon_use\n;;\n  "favor_info")\n      import_favor_info\n;;\n  "order_refund_info")\n      import_order_refund_info\n;;\n  "order_status_log")\n      import_order_status_log\n;;\n  "spu_info")\n      import_spu_info\n;;\n  "activity_rule")\n      import_activity_rule\n;;\n  "base_dic")\n      import_base_dic\n;;\n  "order_detail_activity")\n      import_order_detail_activity\n;;\n  "order_detail_coupon")\n      import_order_detail_coupon\n;;\n  "refund_payment")\n      import_refund_payment\n;;\n  "sku_attr_value")\n      import_sku_attr_value\n;;\n  "sku_sale_attr_value")\n      import_sku_sale_attr_value\n;;\n  "all")\n   import_base_category1\n   import_base_category2\n   import_base_category3\n   import_order_info\n   import_order_detail\n   import_sku_info\n   import_user_info\n   import_payment_info\n   import_base_region\n   import_base_province\n   import_base_trademark\n   import_activity_info\n   import_cart_info\n   import_comment_info\n   import_coupon_use\n   import_coupon_info\n   import_favor_info\n   import_order_refund_info\n   import_order_status_log\n   import_spu_info\n   import_activity_rule\n   import_base_dic\n   import_order_detail_activity\n   import_order_detail_coupon\n   import_refund_payment\n   import_sku_attr_value\n   import_sku_sale_attr_value\n;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n\n\n传入 表名 or all + 日期\n\n每日同步:\n\n#! /bin/bash\n\nAPP=gmall\nsqoop=/opt/module/sqoop/bin/sqoop\n\nif [ -n "$2" ] ;then\n    do_date=$2\nelse\n    do_date=`date -d \'-1 day\' +%F`\nfi\n\nimport_data(){\n$sqoop import \\\n--connect jdbc:mysql://node1:3306/$APP \\\n--username root \\\n--password hadoop \\\n--target-dir /origin_data/$APP/db/$1/$do_date \\\n--delete-target-dir \\\n--query "$2 and  \\$CONDITIONS" \\\n--num-mappers 1 \\\n--fields-terminated-by \'\\t\' \\\n--compress \\\n--compression-codec lzop \\\n--null-string \'\\\\N\' \\\n--null-non-string \'\\\\N\'\n\nhadoop jar /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.DistributedLzoIndexer /origin_data/$APP/db/$1/$do_date\n}\n\nimport_order_info(){\n  import_data order_info "select\n                            id, \n                            total_amount, \n                            order_status, \n                            user_id, \n                            payment_way,\n                            delivery_address,\n                            out_trade_no, \n                            create_time, \n                            operate_time,\n                            expire_time,\n                            tracking_no,\n                            province_id,\n                            activity_reduce_amount,\n                            coupon_reduce_amount,                            \n                            original_total_amount,\n                            feight_fee,\n                            feight_fee_reduce      \n                        from order_info\n                        where (date_format(create_time,\'%Y-%m-%d\')=\'$do_date\' \n                        or date_format(operate_time,\'%Y-%m-%d\')=\'$do_date\')"\n}\n\nimport_coupon_use(){\n  import_data coupon_use "select\n                          id,\n                          coupon_id,\n                          user_id,\n                          order_id,\n                          coupon_status,\n                          get_time,\n                          using_time,\n                          used_time,\n                          expire_time\n                        from coupon_use\n                        where (date_format(get_time,\'%Y-%m-%d\')=\'$do_date\'\n                        or date_format(using_time,\'%Y-%m-%d\')=\'$do_date\'\n                        or date_format(used_time,\'%Y-%m-%d\')=\'$do_date\'\n                        or date_format(expire_time,\'%Y-%m-%d\')=\'$do_date\')"\n}\n\nimport_order_status_log(){\n  import_data order_status_log "select\n                                  id,\n                                  order_id,\n                                  order_status,\n                                  operate_time\n                                from order_status_log\n                                where date_format(operate_time,\'%Y-%m-%d\')=\'$do_date\'"\n}\n\nimport_user_info(){\n  import_data "user_info" "select \n                            id,\n                            login_name,\n                            nick_name,\n                            name,\n                            phone_num,\n                            email,\n                            user_level, \n                            birthday,\n                            gender,\n                            create_time,\n                            operate_time\n                          from user_info \n                          where (DATE_FORMAT(create_time,\'%Y-%m-%d\')=\'$do_date\' \n                          or DATE_FORMAT(operate_time,\'%Y-%m-%d\')=\'$do_date\')"\n}\n\nimport_order_detail(){\n  import_data order_detail "select \n                              id,\n                              order_id, \n                              sku_id,\n                              sku_name,\n                              order_price,\n                              sku_num, \n                              create_time,\n                              source_type,\n                              source_id,\n                              split_total_amount,\n                              split_activity_amount,\n                              split_coupon_amount\n                            from order_detail \n                            where DATE_FORMAT(create_time,\'%Y-%m-%d\')=\'$do_date\'"\n}\n\nimport_payment_info(){\n  import_data "payment_info"  "select \n                                id,  \n                                out_trade_no, \n                                order_id, \n                                user_id, \n                                payment_type, \n                                trade_no, \n                                total_amount,  \n                                subject, \n                                payment_status,\n                                create_time,\n                                callback_time \n                              from payment_info \n                              where (DATE_FORMAT(create_time,\'%Y-%m-%d\')=\'$do_date\' \n                              or DATE_FORMAT(callback_time,\'%Y-%m-%d\')=\'$do_date\')"\n}\n\nimport_comment_info(){\n  import_data comment_info "select\n                              id,\n                              user_id,\n                              sku_id,\n                              spu_id,\n                              order_id,\n                              appraise,\n                              create_time\n                            from comment_info\n                            where date_format(create_time,\'%Y-%m-%d\')=\'$do_date\'"\n}\n\nimport_order_refund_info(){\n  import_data order_refund_info "select\n                                id,\n                                user_id,\n                                order_id,\n                                sku_id,\n                                refund_type,\n                                refund_num,\n                                refund_amount,\n                                refund_reason_type,\n                                refund_status,\n                                create_time\n                              from order_refund_info\n                              where date_format(create_time,\'%Y-%m-%d\')=\'$do_date\'"\n}\n\nimport_sku_info(){\n  import_data sku_info "select \n                          id,\n                          spu_id,\n                          price,\n                          sku_name,\n                          sku_desc,\n                          weight,\n                          tm_id,\n                          category3_id,\n                          is_sale,\n                          create_time\n                        from sku_info where 1=1"\n}\n\nimport_base_category1(){\n  import_data "base_category1" "select \n                                  id,\n                                  name \n                                from base_category1 where 1=1"\n}\n\nimport_base_category2(){\n  import_data "base_category2" "select\n                                  id,\n                                  name,\n                                  category1_id \n                                from base_category2 where 1=1"\n}\n\nimport_base_category3(){\n  import_data "base_category3" "select\n                                  id,\n                                  name,\n                                  category2_id\n                                from base_category3 where 1=1"\n}\n\nimport_base_province(){\n  import_data base_province "select\n                              id,\n                              name,\n                              region_id,\n                              area_code,\n                              iso_code,\n                              iso_3166_2\n                            from base_province\n                            where 1=1"\n}\n\nimport_base_region(){\n  import_data base_region "select\n                              id,\n                              region_name\n                            from base_region\n                            where 1=1"\n}\n\nimport_base_trademark(){\n  import_data base_trademark "select\n                                id,\n                                tm_name\n                              from base_trademark\n                              where 1=1"\n}\n\nimport_spu_info(){\n  import_data spu_info "select\n                            id,\n                            spu_name,\n                            category3_id,\n                            tm_id\n                          from spu_info\n                          where 1=1"\n}\n\nimport_favor_info(){\n  import_data favor_info "select\n                          id,\n                          user_id,\n                          sku_id,\n                          spu_id,\n                          is_cancel,\n                          create_time,\n                          cancel_time\n                        from favor_info\n                        where 1=1"\n}\n\nimport_cart_info(){\n  import_data cart_info "select\n                        id,\n                        user_id,\n                        sku_id,\n                        cart_price,\n                        sku_num,\n                        sku_name,\n                        create_time,\n                        operate_time,\n                        is_ordered,\n                        order_time,\n                        source_type,\n                        source_id\n                      from cart_info\n                      where 1=1"\n}\n\nimport_coupon_info(){\n  import_data coupon_info "select\n                          id,\n                          coupon_name,\n                          coupon_type,\n                          condition_amount,\n                          condition_num,\n                          activity_id,\n                          benefit_amount,\n                          benefit_discount,\n                          create_time,\n                          range_type,\n                          limit_num,\n                          taken_count,\n                          start_time,\n                          end_time,\n                          operate_time,\n                          expire_time\n                        from coupon_info\n                        where 1=1"\n}\n\nimport_activity_info(){\n  import_data activity_info "select\n                              id,\n                              activity_name,\n                              activity_type,\n                              start_time,\n                              end_time,\n                              create_time\n                            from activity_info\n                            where 1=1"\n}\n\nimport_activity_rule(){\n    import_data activity_rule "select\n                                    id,\n                                    activity_id,\n                                    activity_type,\n                                    condition_amount,\n                                    condition_num,\n                                    benefit_amount,\n                                    benefit_discount,\n                                    benefit_level\n                                from activity_rule\n                                where 1=1"\n}\n\nimport_base_dic(){\n    import_data base_dic "select\n                            dic_code,\n                            dic_name,\n                            parent_code,\n                            create_time,\n                            operate_time\n                          from base_dic\n                          where 1=1"\n}\n\n\nimport_order_detail_activity(){\n    import_data order_detail_activity "select\n                                                                id,\n                                                                order_id,\n                                                                order_detail_id,\n                                                                activity_id,\n                                                                activity_rule_id,\n                                                                sku_id,\n                                                                create_time\n                                                            from order_detail_activity\n                                                            where date_format(create_time,\'%Y-%m-%d\')=\'$do_date\'"\n}\n\n\nimport_order_detail_coupon(){\n    import_data order_detail_coupon "select\n                                                                id,\n\t\t\t\t\t\t\t\t                                                order_id,\n                                                                order_detail_id,\n                                                                coupon_id,\n                                                                coupon_use_id,\n                                                                sku_id,\n                                                                create_time\n                                                            from order_detail_coupon\n                                                            where date_format(create_time,\'%Y-%m-%d\')=\'$do_date\'"\n}\n\n\nimport_refund_payment(){\n    import_data refund_payment "select\n                                                        id,\n                                                        out_trade_no,\n                                                        order_id,\n                                                        sku_id,\n                                                        payment_type,\n                                                        trade_no,\n                                                        total_amount,\n                                                        subject,\n                                                        refund_status,\n                                                        create_time,\n                                                        callback_time\n                                                    from refund_payment\n                                                    where (DATE_FORMAT(create_time,\'%Y-%m-%d\')=\'$do_date\' \n                                                    or DATE_FORMAT(callback_time,\'%Y-%m-%d\')=\'$do_date\')"                                                    \n\n}\n\nimport_sku_attr_value(){\n    import_data sku_attr_value "select\n                                                    id,\n                                                    attr_id,\n                                                    value_id,\n                                                    sku_id,\n                                                    attr_name,\n                                                    value_name\n                                                from sku_attr_value\n                                                where 1=1"\n}\n\n\nimport_sku_sale_attr_value(){\n    import_data sku_sale_attr_value "select\n                                                            id,\n                                                            sku_id,\n                                                            spu_id,\n                                                            sale_attr_value_id,\n                                                            sale_attr_id,\n                                                            sale_attr_name,\n                                                            sale_attr_value_name\n                                                        from sku_sale_attr_value\n                                                        where 1=1"\n}\n\ncase $1 in\n  "order_info")\n     import_order_info\n;;\n  "base_category1")\n     import_base_category1\n;;\n  "base_category2")\n     import_base_category2\n;;\n  "base_category3")\n     import_base_category3\n;;\n  "order_detail")\n     import_order_detail\n;;\n  "sku_info")\n     import_sku_info\n;;\n  "user_info")\n     import_user_info\n;;\n  "payment_info")\n     import_payment_info\n;;\n  "base_province")\n     import_base_province\n;;\n  "activity_info")\n      import_activity_info\n;;\n  "cart_info")\n      import_cart_info\n;;\n  "comment_info")\n      import_comment_info\n;;\n  "coupon_info")\n      import_coupon_info\n;;\n  "coupon_use")\n      import_coupon_use\n;;\n  "favor_info")\n      import_favor_info\n;;\n  "order_refund_info")\n      import_order_refund_info\n;;\n  "order_status_log")\n      import_order_status_log\n;;\n  "spu_info")\n      import_spu_info\n;;\n  "activity_rule")\n      import_activity_rule\n;;\n  "base_dic")\n      import_base_dic\n;;\n  "order_detail_activity")\n      import_order_detail_activity\n;;\n  "order_detail_coupon")\n      import_order_detail_coupon\n;;\n  "refund_payment")\n      import_refund_payment\n;;\n  "sku_attr_value")\n      import_sku_attr_value\n;;\n  "sku_sale_attr_value")\n      import_sku_sale_attr_value\n;;\n"all")\n   import_base_category1\n   import_base_category2\n   import_base_category3\n   import_order_info\n   import_order_detail\n   import_sku_info\n   import_user_info\n   import_payment_info\n   import_base_trademark\n   import_activity_info\n   import_cart_info\n   import_comment_info\n   import_coupon_use\n   import_coupon_info\n   import_favor_info\n   import_order_refund_info\n   import_order_status_log\n   import_spu_info\n   import_activity_rule\n   import_base_dic\n   import_order_detail_activity\n   import_order_detail_coupon\n   import_refund_payment\n   import_sku_attr_value\n   import_sku_sale_attr_value\n;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n\n\n\n# 数仓分层\n\n> ODS(原)=> (DWD(细)=>DWS(汇)=>DWT(题))(DIM 维度)=>ADS(应)\n\n * ODS：存放加载原始数据，不做处理\n\n * DWD: 对ODS的数据进行清洗(去除空值，过滤脏数据，超出范围的数据，脱敏)等 一行一次行为\n\n * DIM:维度数据，对业务的描述信息，何人，何时、何地等，\n   \n   * DWS 对DWD按每天，进行轻度汇总。 一行一天的行为\n   \n   * DWT :对DWS按数据累加汇总 一行一个对象的行为累积行为 :最近n天\n\n * ADS: 为各种统计报表提供数据\n\n分层的意义\n\n * 把复杂问题简单化\n * 减少重复开发\n * 隔离原始数据\n\n数仓和数集的区别：\n\n * 数仓：为整个企业部门提供决策\n\n * 数据集市：部门级，微型数据仓库\n   \n   > 独立形：(数据来自业务)\n   > \n   > 从属形：(数据来自数据仓库)\n\n数仓命名规范：\n\n * 表命名：对应层级的表加上其前缀，例如特殊表 temp_ 前缀命名，DWT层用 dwt_命名\n\n * 脚本命名：数据源_to_目标_db/log.sh ： 行为以log为后缀，业务以db为后缀\n\n * 表字段：\n   \n   > 数量 bigint、金额decimal(16,2) 16位，2位小数\n   > \n   > 字符串：(名字，描述)、主键外键\n   > \n   > 时间戳：bigint\n\n数仓理论：\n\n * 关系建模 (业务系统)\n   \n   > 范式：降低数据的庸余性，保证数据的一致性\n   > \n   >  * 拆分多，jion多\n   >  * 1范式=>2范式=>3范式=>4范式=>5范式\n   > \n   > > 属性不可切=>不存在非主键部分依赖\n   > \n   > 函数依赖：完全(直接)、部分(间接)、传递(联系)\n   > \n   > 表多\n\n * 维度建模 (普遍，重点学习)\n   \n   >  * 事实表(具体的业务)\n   >    \n   >    > 非常大，内容相对窄，列数少，经常发生变化\n   >    > \n   >    > 每行代表一个业务事件（下单支付等）\n   >    > \n   >    > 分类\n   >    > \n   >    >  * 事务型 ：每个事件为单位，不发生变化,增量同步\n   >    >  * 周期型快照：保存固定时间间隔的数据 只关心结果，全量同步\n   >    >  * 累积型快照：跟踪业务事实变化，会发生周期性变化的业务，新增+变化\n   > \n   >  * 维度表(业务的描述信息)\n   >    \n   >    > 表宽，行数相对较小，内容相对固定（编码表）\n   >    > \n   >    > 例：地区等\n   >    > \n   >    > 分类：\n   >    > \n   >    >  * 星型模型：性能优先\n   >    > \n   >    >  * 雪花模型：灵活优先\n   >    >    \n   >    >    > (会对维度表进行规范化)\n   >    > \n   >    >  * 星座模型（多个星型模型交着在一起）\n   > \n   > 查询简单效率高\n\n\n# 仓库建模\n\n 1. ODS层\n    \n    >  * 用户行为：创建外部表一行字段代表一个用户行为，对时间分区，定时装载\n    >  * 业务行为\n    > \n    > 主要对比采集的数据进行建表\n\n 2. DIM层和DWD层\n    \n    > 星型模型\n    > \n    >  * DIM: 存储维度表\n    > \n    >  * DWD: 存储事实表 (以业务过程为驱动)\n    > \n    > 选择业务过程=>声明粒度=>确认维度=>确认事实\n    > \n    > DWS、DWT、ADS以需求为驱动\n    \n    从DIM层开始主要列式存储+lzo压缩，装载从ods层查询拼接加载\n    \n    读取的表是单纯lzo文件并且创建了索引，此时需要关闭map端的小文件合并\n    \n    set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;\n    \n    \n    1\n    \n    \n    通常时间维度表不来自业务系统，如果是格式问题，可以先创建临时表，再insert+select插入\n    \n    拉链表：更加高效的存储历史状态\n    \n    * 使用场景：全量最新、全量历史\n      \n      > 生效开始 日期<=某个日期 且 生效结束 日期>=某个日期：得到全量切片 ：全量历史\n      > \n      > 过滤最新：全量最新\n    \n    get_json_object 解析json\n    \n    select get_json_object(\'jison\',\'$[下标取元素]\')\n    \n    \n    1\n    \n    \n    分析数据按行列分析 自定义hive函数\n    \n    DWS：避免重复计算，保存计算结果\n    \n    常用计算处理函数\n    \n    * nvl :NVL（表达式1，表达式2） 同一类型 1\n      \n      > coalesce(3)、if(2)\n    \n    * 日期处理函数：\n      \n      格式化\n      date_format(\'2020-06-14\',\'yyyy-MM\');\n      加减\n      date_add(\'2020-06-14\',-1);\n      下一天\n      next_day(\'2020-06-14\',\'MO\');//下周一：（Monday，Tuesday、Wednesday、Thursday、Friday、Saturday、Sunday）\n      date_add(next_day(\'2020-06-14\',\'MO\'),-7);//当前周一\n      当月最后一天日期\n      last_day(\'2020-06-14\');\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      \n    \n    * 复杂数据类型定义\n      \n      map<string,string> :map(key,value) :取值  map[\'key\']\n      array<string>: array(val1,val2..)  ：取值 map[\'下标\']\n      struct<id:int,name:string,age:int> :named_stuct(name1,val1,....) :取值 strict.name1\n      //struct和array嵌套定义\n      array<struct<id:int,name:string,age:int>>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      \n    \n    > 例：统计 count(*) or sum(if(条件,1,0)）)\n\n 3. ADS层报表应用层\n    \n    > 每个需求对应一张表，每张表有可能有多个指标\n    > \n    > 例：访客、用户、商品、订单、优惠卷、活动等\n    > \n    > 1，7，30日的统计\n    > \n    > -- 例如 1 7 30 下单和购买次数\n    > select\n    > \tid\n    > \trecent_days,\n    > \tcase\n    > \t\twhen recent_days=1 then order_1count,\n    > \t\twhen recent_days=7 then order_7count,\n    > \t\twhen recent_days=30 then order_30count,\n    > \tend  别名 -- 下单次数\n    > \tcase\n    > \t\twhen recent_days=1 then pay_1count,\n    > \t\twhen recent_days=7 then pay_7count,\n    > \t\twhen recent_days=30 then pay_30count,\n    > \tend  别名 -- 购买次数\t\n    > from 表名 lateral view explode(array(1,7,30)) tmp as recent_days  -- 把1，7，30炸开成一列创建临时视图\n    > where dt=\'2020-06-14\' --今天的日期\n    > \n    > --然后再获取维度信息关联即可，获取人数可以sum(if)or count()\n    > \n    > \n    > 1\n    > 2\n    > 3\n    > 4\n    > 5\n    > 6\n    > 7\n    > 8\n    > 9\n    > 10\n    > 11\n    > 12\n    > 13\n    > 14\n    > 15\n    > 16\n    > 17\n    > 18\n\n> hive 分区表指定外面字段(虚拟优化)，分桶表里面字段(真实)\n> \n> if 函数 和 nvl 函数 动态分区\n> \n> concat() 拼接值。\n> \n> jps -ml 查看详细进程信息\n\n\n# 调度流程\n\nAZKABAN\n\n> 把之前的装载sql封装成一个个可接收参数脚本，用Azkaban，来调度\n\n> 最终ads报表数据用sqoop导入mysql中\n> \n> 画出依赖流程图，按照流程图编写依赖参数，如果动态传参进来，需要在执行azkaban时配置参数即可。\n> \n> 如果是每日定时也许传参但不传值即可。\n> \n> 如果脚本和环境没有分发需要指定运行的节点：useExecutor id需要在数据库查看\n\n\n# 数据报表\n\n * 后台语言+报表框架\n\n * 现成的报表工具\n   \n   * 收费\n   \n   * 开源 ：superset\n     \n     > 安装部署superset\n     > \n     > 了解对接数据源的方式\n     > \n     > 了解基本使用方法。\n\n\n# 即席查询\n\n> 可自定义查询条件，然后统计报表\n> \n> 是一个探索数据的过程，实现交互式效果\n> \n> 多维度洞察数据，把起转换称知识。\n\n * Kylin\n   \n   > 了解其安装部署，和等维度概念\n   > \n   > 掌握页面上的基本使用、还有一些优化手段(聚合组、衍生度、Rowkey等)\n   > \n   > 与BI工具的集成：Zepplin（笔记本，可写sql查询和简单的报表）\n   > \n   > BI工具：对接数据源，写SQL、报表。\n\n * Presto\n   \n   > 了解起按照和部署、和优化手段\n\n * 德鲁伊等\n\n\n# 集群监控\n\n掌握Zabbix的部署和基本使用，模板的和参数配置（主机、监控项、触发器、动作）\n\n以及集成Grafana做可视化展示，作图。对接数据源，配置，作图即可。\n\n\n# 数据安全\n\n认证+授权\n\n认证：Kerberos\n\n了解Kerberos安装和基本使用，以及集成hadoop和hive等。\n\n\n# 安全模式的搭建\n\n改动说明：\n\n此处统一将数仓的全部数据资源的所有者设为hive用户，全流程的每步操作均认证为hive用户。\n\n * 用户准备 （存在可跳过）\n   \n   #3台   id hive 查看用户\n   useradd hive -g hadoop\n   echo hive | passwd --stdin hive\n   \n   \n   1\n   2\n   3\n   \n\n * 为用户创建主体（之前那个创建是不一样的,这需要创建）\n   \n   #创建主体\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey hive"\n   #生成keytab文件\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/hive.keytab hive"\n   #修改文件所有者和访问权限\n   chown hive:hadoop /etc/security/keytab/hive.keytab\n   chmod 440 /etc/security/keytab/hive.keytab\n   #分发改文件 （指定azkaban允许节点就不用）\n    xsync /etc/security/keytab/hive.keytab\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * 修改数据采集通道\n   \n   #用户行为日志 flume=>kafka=>flume(node3)   修改其sink 添加认证即可\n   #node3\n    vim /opt/module/flume/conf/kafka-flume-hdfs.conf\n    \n   a1.sinks.k1.hdfs.kerberosPrincipal=hive@EXAMPLE.COM\n   a1.sinks.k1.hdfs.kerberosKeytab=/etc/security/keytab/hive.keytab\n   \n   #业务脚本\n   #node1\n   vim /home/hadoop101/bin/mysql_to_hdfs.sh\n   在顶部增加如下认证语句 先认证再操作\n   kinit -kt /etc/security/keytab/hive.keytab hive\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 各层脚本的修改\n   \n   数仓各层脚本均需在顶部加入如下认证语句\n   kinit -kt /etc/security/keytab/hive.keytab hive\n   \n   例：相对路径 在hadoop101/bin目录下执行\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' hdfs_to_ods_log.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' hdfs_to_ods_db.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' ods_to_dwd_log.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' ods_to_dim_db.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' ods_to_dwd_db.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' dwd_to_dws.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' dws_to_dwt.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' dwt_to_ads.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' hdfs_to_mysql.sh\n   \n   注：表示在第1行 a添加 参数 到 脚本\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 修改hdfs特定路径的所有者\n   \n   #认证\n    kinit hdfs/hadoop\n   #修改数据采集目标路径\n    hadoop fs -chown -R hive:hadoop /origin_data\n   #修改数仓表所在路径\n    hadoop fs -chown -R hive:hadoop /warehouse\n   #修改hive （相当于home目录）\n    hadoop fs -chown -R hive:hadoop /user/hive \n   #修改spark.eventLog.dir路径\n    hadoop fs -chown -R hive:hadoop /spark-history\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n\n# 全流程调度测试\n\n * 生成数据\n   \n   #启动flume和kafka    \n   flume执行脚本采集，生成者消费者，flume消费脚本\n   修改日志生成\n   #修改业务数据\n   java -jar 生成 \n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 启动Azkaban\n   \n   > 因为azkaban不需要直接和hdfs交互，只负责调用shell脚本(脚本里面有认证语句)，所以不用配置主体。\n   \n   #在各节点创建azkaban用户（3台）\n   useradd azkaban -g hadoop\n   echo azkaban | passwd --stdin azkaban\n   \n   #将各节点Azkaban安装路径所有者改为azkaban用户（3台）\n   chown -R azkaban:hadoop /opt/module/azkaban\n   \n   #使用azkaban用户启动Azkaban\n    1. 启动Executor Server （3台）\n    sudo -i -u azkaban bash -c "cd /opt/module/azkaban/azkaban-exec;bin/start-exec.sh"\n    2. 激活Executor Server （执行直接在node1执行即可)\n    curl http://node1:12321/executor?action=activate\n    curl http://node2:12321/executor?action=activate\n    curl http://node3:12321/executor?action=activate\n    3. 启动web server  端口：8081\n    sudo -i -u azkaban bash -c "cd /opt/module/azkaban/azkaban-web;bin/start-web.sh"\n    3. 配置修改数仓各层脚本访问权限，确保azkaban用户能够访问到（node1就可以了，如果是随机调度，三台都要设置）\n    \t#设置访问组\n   \tchown -R hadoop101:hadoop /home/hadoop101\n   \t#设置访问组的权限\n   \tchmod 770 /home/hadoop101/\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   \n\n * 全流程调度：执行情况：1. 指定节点调度，2.随机调度(需要分发对应的脚本)\n   \n   配置：参数：dt时间和对应执行节点useExecutor(在数据库里看id)\n\n\n# Presto配置\n\n改动说明：\n\nPresto集群开启Kerberos认证可只配置Presto Coordinator和Presto Cli之间进行认证，集群内部通讯可不进行认证。Presto Coordinator和Presto Cli之间的认证要求两者采用更为安全的HTTPS协议进行通讯。\n\n若Presto对接的是Hive数据源，由于其需要访问Hive的元数据和HDFS上的数据文件，故也需要对Hive Connector进行Kerberos认证。\n\n * 用户准备\n   \n   #在所有节点创建presto系统用户（3台）\n   useradd presto -g hadoop\n   echo presto | passwd --stdin presto\n   \n   #为Hive Connector创建Kerberos主体（node1)\n     kadmin -padmin/admin -whadoop -q"addprinc -randkey presto"\n     kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/presto.keytab presto"\n     \n     chown presto:hadoop /etc/security/keytab/presto.keytab  #修改访问权限\n     xsync /etc/security/keytab/presto.keytab   #分发\n     \n   #为Presto Coordinator创建Kerberos主体(node1)\n   \tkadmin -padmin/admin -whadoop -q"addprinc -randkey presto/node1"\n   \tkadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/presto.service.keytab presto/node1"\n   \tchown presto:hadoop /etc/security/keytab/presto.service.keytab #修改权限\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 创建HTTPS协议所需密钥对\n   \n   注意： node1\n   （1）alias（别名）需要和Presto Coordinator的Kerberos主体名保持一致\n   （2）名字与姓氏 需要填写Coordinator所在的主机名\n   #使用Java提供的keytool工具生成密钥对\n   keytool -genkeypair -alias presto -keyalg RSA -keystore /etc/security/keytab/keystore.jks\n   \n   输入密钥库口令:  hadoop\n   再次输入新口令: \n   您的名字与姓氏是什么?\n     [Unknown]:  node1\n   您的组织单位名称是什么?\n     [Unknown]:  \n   您的组织名称是什么?\n     [Unknown]:  \n   您所在的城市或区域名称是什么?\n     [Unknown]:  \n   您所在的省/市/自治区名称是什么?\n     [Unknown]:  \n   该单位的双字母国家/地区代码是什么?\n     [Unknown]:  \n   CN=node1, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown是否正确?\n     [否]:  y\n   \n   输入 <presto> 的密钥口令\n       (如果和密钥库口令相同, 按回车):\n       \n   #修改keystore文件的所有者和访问权限\n   \tchown presto:hadoop /etc/security/keytab/keystore.jks\n   \tchmod 660 /etc/security/keytab/keystore.jks\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   \n\n * 修改Presto Coordinator配置文件\n   \n   # 修改Presto Coordinator配置文件\n   \tvim /opt/module/presto/etc/config.properties\n   \n   http-server.authentication.type=KERBEROS\n   http.server.authentication.krb5.service-name=presto\n   http.server.authentication.krb5.keytab=/etc/security/keytab/presto.service.keytab\n   http.authentication.krb5.config=/etc/krb5.conf\n   http-server.https.enabled=true\n   http-server.https.port=7778\n   http-server.https.keystore.path=/etc/security/keytab/keystore.jks\n   http-server.https.keystore.key=hadoop\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * 修改Hive Connector配置文件(node1:)\n   \n   #在/opt/module/presto/etc/catalog/hive.properties中增加以下参数\n   vim /opt/module/presto/etc/catalog/hive.properties\n   \n   hive.metastore.authentication.type=KERBEROS\n   hive.metastore.service.principal=hive/node1@EXAMPLE.COM\n   hive.metastore.client.principal=presto@EXAMPLE.COM\n   hive.metastore.client.keytab=/etc/security/keytab/presto.keytab\n   \n   hive.hdfs.authentication.type=KERBEROS\n   hive.hdfs.impersonation.enabled=true\n   hive.hdfs.presto.principal=presto@EXAMPLE.COM\n   hive.hdfs.presto.keytab=/etc/security/keytab/presto.keytab\n   hive.config.resources=/opt/module/hadoop-3.1.3/etc/hadoop/core-site.xml,/opt/module/hadoop-3.1.3/etc/hadoop/hdfs-site.xml\n   \n   #分发/opt/module/presto/etc/catalog/hive.properties文件\n   xsync /opt/module/presto/etc/catalog/hive.properties\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\n * 配置客户端Kerberos主体到用户名之间的映射规则\n   \n   #node1\n   vim /opt/module/presto/etc/access-control.properties\n    #添加\n    access-control.name=file\n    security.config-file=etc/rules.json\n   \n   vim /opt/module/presto/etc/rules.json\n    #添加\n    \n   {\n     "catalogs": [\n       {\n         "allow": true\n       }\n     ],\n     "user_patterns": [\n       "(.*)",\n       "([a-zA-Z]+)/?.*@.*"\n     ]\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n\n * 配置Presto代理用户\n\n#修改hadoop配置文件\nvim $HADOOP_HOME/etc/hadoop/core-site.xml\n#添加\n\n<property>\n    <name>hadoop.proxyuser.presto.hosts</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.presto.groups</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.presto.users</name>\n    <value>*</value>\n</property>\n\n#分发修改的文件\nxsync $HADOOP_HOME/etc/hadoop/core-site.xml\n\n#重启Hadoop集群\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n * 重启Presto集群\n\n#3台 #如果启动就关闭\n/opt/module/presto/bin/launcher stop\n#修改Presto安装路径所有者为presto （3台）\nchown -R presto:hadoop /opt/module/presto\n#使用hive用户启动MetaStore服务（node1)\nsudo -i -u hive hive --service metastore\n#使用presto用户启动Presto集群(3台)\nsudo -i -u presto /opt/module/presto/bin/launcher start\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n * 客户端认证访问Presto集群 （可封装脚本）\n   \n   #在/opt/software/presto/   下执行\n   ./prestocli \\\n   --server https://node1:7778 \\\n   --catalog hive \\\n   --schema default \\\n   --enable-authentication \\\n   --krb5-remote-service-name presto \\\n   --krb5-config-path /etc/krb5.conf \\\n   --krb5-principal hadoop101@EXAMPLE.COM \\\n   --krb5-keytab-path /home/hadoop101/hadoop101.keytab \\\n   --keystore-path /etc/security/keytab/keystore.jks \\\n   --keystore-password hadoop \\\n   --user hadoop101\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n这里出现了异常\n\nQuery 20211020_093515_00002_9s9zr failed: Access Denied: Principal hadoop101@EXAMPLE.COM cannot become user hadoop101\n\n\n1\n\n\n\n# Kylin配置\n\n改动说明：\n\n从Kylin的架构，可以看出Kylin充当只是一个Hadoop客户端，读取Hive数据，利用MR或Spark进行计算，将Cube存储至HBase中。所以在安全的Hadoop环境下，Kylin不需要做额外的配置，只需要具备一个Kerberos主体，进行常规的认证即可。\n\n但是Kylin所依赖的HBase需要进行额外的配置，才能在安全的Hadoop环境下正常工作。\n\n * HBase开启Kerberos认证\n * Kylin进行Kerberos认证\n\n\n# 权限管理\n\n了解Ranger安装和基本配置\n\n\n# 元数据管理\n\n可用Altal进行管理，其中采用的集成外部Hbase+Solr，了解可集成组件和方法。\n\n可清晰让我们知道每个流程的依赖，方便后续管理。\n\n\n# 数据质量检测\n\n对数仓各个阶段的数据质量，进行识别检测，利用python+shell进行识别，存储入库，然后再用superset报表\n\n指标：\n\n*评价标准*   *描述*                     *监控项*\n*唯一性*    指主键保持唯一                  字段唯一性检查\n*完整性*    主要包括记录缺失和字段值缺失等方面        字段枚举值检查\n                                  字段记录数检查\n                                  字段空值检查\n*精确度*    数据生成的正确性，数据在整个链路流转的正确性   波动阀值检查\n*合法性*    主要包括格式、类型、域值的合法性         字段日期格式检查\n                                  字段长度检查\n                                  字段值域检查\n*时效性*    主要包括数据处理的时效性             批处理是否按时完成',normalizedContent:'# 数据仓库\n\n\n\n为企业决策提供数据支撑\n\n存储、分析、计算\n\n查看日志的方法：打开控制台管理，network输入log\n\n * 然后搜索url解析，复制的log数据进行解码\n\n数据的来源：\n\n * 业务数据：mysql等\n * 用户行为数据：埋点：日志服务器(文件)\n * 爬虫数据\n\n数据仓库：hive on spark\n\n> ods备份=>dwd清洗=>dws(按天聚合)=>dwt(按年聚合）=>ads(报表)\n> \n> 调度：azkaban、oozie、\n\n数据传输：flume(日志)（大的话可用kafka消峰）、sqoop(数据库)\n\n数据输出：报表系统、用户画像（统计，规则，机器学习）、推荐系统、机器学习\n\n需求\n\n * 用户行为数据采集搭建\n * 业务数据采集搭建\n * 数据仓库维度建模\n * 分析、设备、会员、商品、地区、活动等核心主题报表，近100个\n * 采用即席查询工具对指标进行分析\n * 对集群性能进行监控，报警。\n * 元数据管理。\n * 质量监控\n * 权限管理\n\n架构设计：\n\n\n\n技术选型\n\n> 因素：数据量大小、业务需求、行业内经验、技术成熟度、开发维护成本、总成本预算\n\n采集传输：flume、kafka、sqoop、logstash、datax\n\n数据存储：mysql、hdfs、hbase、redis、mongodm\n\n数据计算：hive、tez、spark、flink、storm\n\n数据查询：presto、kylin、impala、druid、clickhouse、doris\n\n数据可视化：echarts、superset、quickbi、datav\n\n调度工具：azkaban、oozie、dolphinscheduler、airflow\n\n集群监控：zabbix(离线)、prometheus（实时）\n\n权限管理：ranger、sentry\n\n元数据管理：atlas\n\n * 技术\n * 框架：apache、cdh、hdp\n * 服务器：物理、云主机\n * 集群规模\n\n\n\n集群分俩套：生产or部署\n\n生产集群：10台(看需求)\n\n * 消耗资源分开\n * 数据传输紧密防止一起\n * 客户端尽量放在一到俩台服务器上，方便外部访问\n * 有依赖关系的尽量放到同一台服务器。\n\n测试集群：（3台）\n\n * 内存：644 or 833\n\n服务名称             子服务                     服务器node1   服务器node2   服务器node3\nhdfs             namenode                √                     \n                 datanode                √          √          √\n                 secondarynamenode                             √\nyarn             nodemanager             √          √          √\n                 resourcemanager                    √          \nzookeeper        zookeeper server        √          √          √\nflume（采集日志）      flume                   √          √          \nkafka            kafka                   √          √          √\nflume（消费kafka）   flume                                         √\nhive             hive                    √                     \nmysql            mysql                   √                     \nsqoop            sqoop                   √                     \npresto           coordinator             √                     \n                 worker                             √          √\nazkaban          azkabanwebserver        √                     \n                 azkabanexecutorserver   √                     \nspark                                    √                     \nkylin                                    √                     \nhbase            hmaster                 √                     \n                 hregionserver           √          √          √\nsuperset                                 √                     \natlas                                    √                     \nsolr             jar                     √                     \n服务数总计                                    19         8          8\n\n目标数据：页面、事件、曝光、启动、错误\n\n埋点：\n\n * 代码埋点：每一个按钮用js写的 当onclick 记录相关信息发送到日志服务器\n * 可视化埋点：开发一个web页面进行相关配置(里面已经封装好ljs代码)\n * 全埋点：框架实现\n\n> 日志结构：埋点日志、启动日志\n> \n> 每条数据可以是各个信息模块，公共信息模块\n\n部署\n\n\n# 日志数据采集搭建\n\n> flme => kafka(zk)=>flume=>hdfs\n\nflme： 生产者\n\n * 数据 source、channel、sink 之间的选择。\n   \n   > taildir source：断点续传、多目录\n   > \n   > kafka channel，省去了sink，提高了效率。kafkachannel数据存储在kafka里面(磁盘)\n\n * 编写 配置文件\n   \n   #1. 定义组件\n   a1.sources = r1\n   a1.channels = c1\n   #2. 配置source\n   #配置拦截器(etl数据清洗 判断json)\n   #3. 配置channel\n   #4. sink #kafkachannels 无sink\n   #5. 拼接\n   a1.sources.r1.channels = c1\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\nflime:消费\n\n零点漂移\n\n> flume => kafka => flume => hdfs\n> \n> 时间卡点 io延迟。\n> \n> 用时间戳拦截器 处理\n\n#1. 定义组件\na1.sources = r1\na1.channels = c1\n#2. 配置source kafka \n#3. 时间戳拦截器 解决零点漂移问题\n#4. 配置channel\n#5. sink #kafkachannels 无sink\n#6. 拼接\na1.sources.r1.channels = c1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 业务数据采集搭建\n\nsku&spu\n\n * sku 库存量基本单位， 每个产品都有对应唯一的sku号\n * spu 商品聚合的最小单位，一组可复用、易检索的标准化信息。\n\n> 平台属性or销售属性\n\n\n# 电商系统表结构\n\n * 查看宏观表（那些表）\n * 熟悉表结构（行列）\n * 数据如何发送变化\n\n搭建\n\n * 批量同步\n * 实时同步\n\n> sqoop 导入导出\n> \n> 底层是mapreduce 有map 没有reduce聚合 所以没有计算\n> \n> bin/sqoop help 查看命令\n> \n> import导入 export导出 传入给定参数即可\n\n\n# 同步策略\n\n * 全量表：完整的 （适 数据量小，可会发生变化）\n   \n   > 每日全量表： 按日期分区\n   > \n   > 每日存储一次作为一个分区\n\n * 增量表：新增加的 （适 数据量大、只新增不变化）\n   \n   > 按日期分区，保存业务系统新增数据\n\n * 新增变化表：增加和变化的 （ 量大+变化）\n   \n   > 业务数据库新增加的数据和未发生变化的进行整合\n\n * 特殊表：只存一次 （不变化）\n   \n   > 不发生变化的表，地区，省份，民族等。\n\n第一次同步时要采用全量+对应的方式\n\n#全量 只执行一次\nbin/sqoop import \\\n--connect jdbc:mysql://node1:3306/gmall \\\n--username root \\\n--password hadoop \\\n--query \'select * from order_info where $conditions \' \\\n--table /order_info/2020-06-14 \\\n--delete-target-dir \\\n--num-mappers 2 \\\n--split-by id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n新增和变化\n//data -d \'-1 day\' #获取前一天数据\ndo_data =\'data -d \'-1 day\' +%f\'\nbin/sqoop import \\\n--connect jdbc:mysql://node1:3306/gmall \\\n--username root \\\n--password hadoop \\\n--query \'select * from order_info where (data_format(create_time,\'%y-%m-%d\')=\'$do_data\' or data_format(operate_time,\'%y-%m-%d\')=\'$do_data\') and $conditions\' \\\n--table /order_info/$do_data \\\n--delete-target-dir \\\n--num-mappers 2 \\\n--split-by id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n可以把这俩个封装成一个脚本\n\n#! /bin/bash\n\napp=gmall\nsqoop=/opt/module/sqoop/bin/sqoop\n\nif [ -n "$2" ] ;then\n   do_date=$2\nelse \n   echo "请传入日期参数"\n   exit\nfi \n\nimport_data(){\n$sqoop import \\\n--connect jdbc:mysql://node1:3306/$app \\\n--username root \\\n--password hadoop \\\n--target-dir /origin_data/$app/db/$1/$do_date \\\n--delete-target-dir \\\n--query "$2 where \\$conditions" \\\n--num-mappers 1 \\\n--fields-terminated-by \'\\t\' \\\n--compress \\\n--compression-codec lzop \\\n--null-string \'\\\\n\' \\\n--null-non-string \'\\\\n\'\n\nhadoop jar /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.distributedlzoindexer /origin_data/$app/db/$1/$do_date\n}\n\nimport_order_info(){\n  import_data order_info "select\n                            id, \n                            total_amount, \n                            order_status, \n                            user_id, \n                            payment_way,\n                            delivery_address,\n                            out_trade_no, \n                            create_time, \n                            operate_time,\n                            expire_time,\n                            tracking_no,\n                            province_id,\n                            activity_reduce_amount,\n                            coupon_reduce_amount,                            \n                            original_total_amount,\n                            feight_fee,\n                            feight_fee_reduce      \n                        from order_info"\n}\n\nimport_coupon_use(){\n  import_data coupon_use "select\n                          id,\n                          coupon_id,\n                          user_id,\n                          order_id,\n                          coupon_status,\n                          get_time,\n                          using_time,\n                          used_time,\n                          expire_time\n                        from coupon_use"\n}\n\nimport_order_status_log(){\n  import_data order_status_log "select\n                                  id,\n                                  order_id,\n                                  order_status,\n                                  operate_time\n                                from order_status_log"\n}\n\nimport_user_info(){\n  import_data "user_info" "select \n                            id,\n                            login_name,\n                            nick_name,\n                            name,\n                            phone_num,\n                            email,\n                            user_level, \n                            birthday,\n                            gender,\n                            create_time,\n                            operate_time\n                          from user_info"\n}\n\nimport_order_detail(){\n  import_data order_detail "select \n                              id,\n                              order_id, \n                              sku_id,\n                              sku_name,\n                              order_price,\n                              sku_num, \n                              create_time,\n                              source_type,\n                              source_id,\n                              split_total_amount,\n                              split_activity_amount,\n                              split_coupon_amount\n                            from order_detail"\n}\n\nimport_payment_info(){\n  import_data "payment_info"  "select \n                                id,  \n                                out_trade_no, \n                                order_id, \n                                user_id, \n                                payment_type, \n                                trade_no, \n                                total_amount,  \n                                subject, \n                                payment_status,\n                                create_time,\n                                callback_time \n                              from payment_info"\n}\n\nimport_comment_info(){\n  import_data comment_info "select\n                              id,\n                              user_id,\n                              sku_id,\n                              spu_id,\n                              order_id,\n                              appraise,\n                              create_time\n                            from comment_info"\n}\n\nimport_order_refund_info(){\n  import_data order_refund_info "select\n                                id,\n                                user_id,\n                                order_id,\n                                sku_id,\n                                refund_type,\n                                refund_num,\n                                refund_amount,\n                                refund_reason_type,\n                                refund_status,\n                                create_time\n                              from order_refund_info"\n}\n\nimport_sku_info(){\n  import_data sku_info "select \n                          id,\n                          spu_id,\n                          price,\n                          sku_name,\n                          sku_desc,\n                          weight,\n                          tm_id,\n                          category3_id,\n                          is_sale,\n                          create_time\n                        from sku_info"\n}\n\nimport_base_category1(){\n  import_data "base_category1" "select \n                                  id,\n                                  name \n                                from base_category1"\n}\n\nimport_base_category2(){\n  import_data "base_category2" "select\n                                  id,\n                                  name,\n                                  category1_id \n                                from base_category2"\n}\n\nimport_base_category3(){\n  import_data "base_category3" "select\n                                  id,\n                                  name,\n                                  category2_id\n                                from base_category3"\n}\n\nimport_base_province(){\n  import_data base_province "select\n                              id,\n                              name,\n                              region_id,\n                              area_code,\n                              iso_code,\n                              iso_3166_2\n                            from base_province"\n}\n\nimport_base_region(){\n  import_data base_region "select\n                              id,\n                              region_name\n                            from base_region"\n}\n\nimport_base_trademark(){\n  import_data base_trademark "select\n                                id,\n                                tm_name\n                              from base_trademark"\n}\n\nimport_spu_info(){\n  import_data spu_info "select\n                            id,\n                            spu_name,\n                            category3_id,\n                            tm_id\n                          from spu_info"\n}\n\nimport_favor_info(){\n  import_data favor_info "select\n                          id,\n                          user_id,\n                          sku_id,\n                          spu_id,\n                          is_cancel,\n                          create_time,\n                          cancel_time\n                        from favor_info"\n}\n\nimport_cart_info(){\n  import_data cart_info "select\n                        id,\n                        user_id,\n                        sku_id,\n                        cart_price,\n                        sku_num,\n                        sku_name,\n                        create_time,\n                        operate_time,\n                        is_ordered,\n                        order_time,\n                        source_type,\n                        source_id\n                      from cart_info"\n}\n\nimport_coupon_info(){\n  import_data coupon_info "select\n                          id,\n                          coupon_name,\n                          coupon_type,\n                          condition_amount,\n                          condition_num,\n                          activity_id,\n                          benefit_amount,\n                          benefit_discount,\n                          create_time,\n                          range_type,\n                          limit_num,\n                          taken_count,\n                          start_time,\n                          end_time,\n                          operate_time,\n                          expire_time\n                        from coupon_info"\n}\n\nimport_activity_info(){\n  import_data activity_info "select\n                              id,\n                              activity_name,\n                              activity_type,\n                              start_time,\n                              end_time,\n                              create_time\n                            from activity_info"\n}\n\nimport_activity_rule(){\n    import_data activity_rule "select\n                                    id,\n                                    activity_id,\n                                    activity_type,\n                                    condition_amount,\n                                    condition_num,\n                                    benefit_amount,\n                                    benefit_discount,\n                                    benefit_level\n                                from activity_rule"\n}\n\nimport_base_dic(){\n    import_data base_dic "select\n                            dic_code,\n                            dic_name,\n                            parent_code,\n                            create_time,\n                            operate_time\n                          from base_dic"\n}\n\n\nimport_order_detail_activity(){\n    import_data order_detail_activity "select\n                                                                id,\n                                                                order_id,\n                                                                order_detail_id,\n                                                                activity_id,\n                                                                activity_rule_id,\n                                                                sku_id,\n                                                                create_time\n                                                            from order_detail_activity"\n}\n\n\nimport_order_detail_coupon(){\n    import_data order_detail_coupon "select\n                                                                id,\n\t\t\t\t\t\t\t\t                                                order_id,\n                                                                order_detail_id,\n                                                                coupon_id,\n                                                                coupon_use_id,\n                                                                sku_id,\n                                                                create_time\n                                                            from order_detail_coupon"\n}\n\n\nimport_refund_payment(){\n    import_data refund_payment "select\n                                                        id,\n                                                        out_trade_no,\n                                                        order_id,\n                                                        sku_id,\n                                                        payment_type,\n                                                        trade_no,\n                                                        total_amount,\n                                                        subject,\n                                                        refund_status,\n                                                        create_time,\n                                                        callback_time\n                                                    from refund_payment"                                                    \n\n}\n\nimport_sku_attr_value(){\n    import_data sku_attr_value "select\n                                                    id,\n                                                    attr_id,\n                                                    value_id,\n                                                    sku_id,\n                                                    attr_name,\n                                                    value_name\n                                                from sku_attr_value"\n}\n\n\nimport_sku_sale_attr_value(){\n    import_data sku_sale_attr_value "select\n                                                            id,\n                                                            sku_id,\n                                                            spu_id,\n                                                            sale_attr_value_id,\n                                                            sale_attr_id,\n                                                            sale_attr_name,\n                                                            sale_attr_value_name\n                                                        from sku_sale_attr_value"\n}\n\ncase $1 in\n  "order_info")\n     import_order_info\n;;\n  "base_category1")\n     import_base_category1\n;;\n  "base_category2")\n     import_base_category2\n;;\n  "base_category3")\n     import_base_category3\n;;\n  "order_detail")\n     import_order_detail\n;;\n  "sku_info")\n     import_sku_info\n;;\n  "user_info")\n     import_user_info\n;;\n  "payment_info")\n     import_payment_info\n;;\n  "base_province")\n     import_base_province\n;;\n  "base_region")\n     import_base_region\n;;\n  "base_trademark")\n     import_base_trademark\n;;\n  "activity_info")\n      import_activity_info\n;;\n  "cart_info")\n      import_cart_info\n;;\n  "comment_info")\n      import_comment_info\n;;\n  "coupon_info")\n      import_coupon_info\n;;\n  "coupon_use")\n      import_coupon_use\n;;\n  "favor_info")\n      import_favor_info\n;;\n  "order_refund_info")\n      import_order_refund_info\n;;\n  "order_status_log")\n      import_order_status_log\n;;\n  "spu_info")\n      import_spu_info\n;;\n  "activity_rule")\n      import_activity_rule\n;;\n  "base_dic")\n      import_base_dic\n;;\n  "order_detail_activity")\n      import_order_detail_activity\n;;\n  "order_detail_coupon")\n      import_order_detail_coupon\n;;\n  "refund_payment")\n      import_refund_payment\n;;\n  "sku_attr_value")\n      import_sku_attr_value\n;;\n  "sku_sale_attr_value")\n      import_sku_sale_attr_value\n;;\n  "all")\n   import_base_category1\n   import_base_category2\n   import_base_category3\n   import_order_info\n   import_order_detail\n   import_sku_info\n   import_user_info\n   import_payment_info\n   import_base_region\n   import_base_province\n   import_base_trademark\n   import_activity_info\n   import_cart_info\n   import_comment_info\n   import_coupon_use\n   import_coupon_info\n   import_favor_info\n   import_order_refund_info\n   import_order_status_log\n   import_spu_info\n   import_activity_rule\n   import_base_dic\n   import_order_detail_activity\n   import_order_detail_coupon\n   import_refund_payment\n   import_sku_attr_value\n   import_sku_sale_attr_value\n;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n\n\n传入 表名 or all + 日期\n\n每日同步:\n\n#! /bin/bash\n\napp=gmall\nsqoop=/opt/module/sqoop/bin/sqoop\n\nif [ -n "$2" ] ;then\n    do_date=$2\nelse\n    do_date=`date -d \'-1 day\' +%f`\nfi\n\nimport_data(){\n$sqoop import \\\n--connect jdbc:mysql://node1:3306/$app \\\n--username root \\\n--password hadoop \\\n--target-dir /origin_data/$app/db/$1/$do_date \\\n--delete-target-dir \\\n--query "$2 and  \\$conditions" \\\n--num-mappers 1 \\\n--fields-terminated-by \'\\t\' \\\n--compress \\\n--compression-codec lzop \\\n--null-string \'\\\\n\' \\\n--null-non-string \'\\\\n\'\n\nhadoop jar /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.distributedlzoindexer /origin_data/$app/db/$1/$do_date\n}\n\nimport_order_info(){\n  import_data order_info "select\n                            id, \n                            total_amount, \n                            order_status, \n                            user_id, \n                            payment_way,\n                            delivery_address,\n                            out_trade_no, \n                            create_time, \n                            operate_time,\n                            expire_time,\n                            tracking_no,\n                            province_id,\n                            activity_reduce_amount,\n                            coupon_reduce_amount,                            \n                            original_total_amount,\n                            feight_fee,\n                            feight_fee_reduce      \n                        from order_info\n                        where (date_format(create_time,\'%y-%m-%d\')=\'$do_date\' \n                        or date_format(operate_time,\'%y-%m-%d\')=\'$do_date\')"\n}\n\nimport_coupon_use(){\n  import_data coupon_use "select\n                          id,\n                          coupon_id,\n                          user_id,\n                          order_id,\n                          coupon_status,\n                          get_time,\n                          using_time,\n                          used_time,\n                          expire_time\n                        from coupon_use\n                        where (date_format(get_time,\'%y-%m-%d\')=\'$do_date\'\n                        or date_format(using_time,\'%y-%m-%d\')=\'$do_date\'\n                        or date_format(used_time,\'%y-%m-%d\')=\'$do_date\'\n                        or date_format(expire_time,\'%y-%m-%d\')=\'$do_date\')"\n}\n\nimport_order_status_log(){\n  import_data order_status_log "select\n                                  id,\n                                  order_id,\n                                  order_status,\n                                  operate_time\n                                from order_status_log\n                                where date_format(operate_time,\'%y-%m-%d\')=\'$do_date\'"\n}\n\nimport_user_info(){\n  import_data "user_info" "select \n                            id,\n                            login_name,\n                            nick_name,\n                            name,\n                            phone_num,\n                            email,\n                            user_level, \n                            birthday,\n                            gender,\n                            create_time,\n                            operate_time\n                          from user_info \n                          where (date_format(create_time,\'%y-%m-%d\')=\'$do_date\' \n                          or date_format(operate_time,\'%y-%m-%d\')=\'$do_date\')"\n}\n\nimport_order_detail(){\n  import_data order_detail "select \n                              id,\n                              order_id, \n                              sku_id,\n                              sku_name,\n                              order_price,\n                              sku_num, \n                              create_time,\n                              source_type,\n                              source_id,\n                              split_total_amount,\n                              split_activity_amount,\n                              split_coupon_amount\n                            from order_detail \n                            where date_format(create_time,\'%y-%m-%d\')=\'$do_date\'"\n}\n\nimport_payment_info(){\n  import_data "payment_info"  "select \n                                id,  \n                                out_trade_no, \n                                order_id, \n                                user_id, \n                                payment_type, \n                                trade_no, \n                                total_amount,  \n                                subject, \n                                payment_status,\n                                create_time,\n                                callback_time \n                              from payment_info \n                              where (date_format(create_time,\'%y-%m-%d\')=\'$do_date\' \n                              or date_format(callback_time,\'%y-%m-%d\')=\'$do_date\')"\n}\n\nimport_comment_info(){\n  import_data comment_info "select\n                              id,\n                              user_id,\n                              sku_id,\n                              spu_id,\n                              order_id,\n                              appraise,\n                              create_time\n                            from comment_info\n                            where date_format(create_time,\'%y-%m-%d\')=\'$do_date\'"\n}\n\nimport_order_refund_info(){\n  import_data order_refund_info "select\n                                id,\n                                user_id,\n                                order_id,\n                                sku_id,\n                                refund_type,\n                                refund_num,\n                                refund_amount,\n                                refund_reason_type,\n                                refund_status,\n                                create_time\n                              from order_refund_info\n                              where date_format(create_time,\'%y-%m-%d\')=\'$do_date\'"\n}\n\nimport_sku_info(){\n  import_data sku_info "select \n                          id,\n                          spu_id,\n                          price,\n                          sku_name,\n                          sku_desc,\n                          weight,\n                          tm_id,\n                          category3_id,\n                          is_sale,\n                          create_time\n                        from sku_info where 1=1"\n}\n\nimport_base_category1(){\n  import_data "base_category1" "select \n                                  id,\n                                  name \n                                from base_category1 where 1=1"\n}\n\nimport_base_category2(){\n  import_data "base_category2" "select\n                                  id,\n                                  name,\n                                  category1_id \n                                from base_category2 where 1=1"\n}\n\nimport_base_category3(){\n  import_data "base_category3" "select\n                                  id,\n                                  name,\n                                  category2_id\n                                from base_category3 where 1=1"\n}\n\nimport_base_province(){\n  import_data base_province "select\n                              id,\n                              name,\n                              region_id,\n                              area_code,\n                              iso_code,\n                              iso_3166_2\n                            from base_province\n                            where 1=1"\n}\n\nimport_base_region(){\n  import_data base_region "select\n                              id,\n                              region_name\n                            from base_region\n                            where 1=1"\n}\n\nimport_base_trademark(){\n  import_data base_trademark "select\n                                id,\n                                tm_name\n                              from base_trademark\n                              where 1=1"\n}\n\nimport_spu_info(){\n  import_data spu_info "select\n                            id,\n                            spu_name,\n                            category3_id,\n                            tm_id\n                          from spu_info\n                          where 1=1"\n}\n\nimport_favor_info(){\n  import_data favor_info "select\n                          id,\n                          user_id,\n                          sku_id,\n                          spu_id,\n                          is_cancel,\n                          create_time,\n                          cancel_time\n                        from favor_info\n                        where 1=1"\n}\n\nimport_cart_info(){\n  import_data cart_info "select\n                        id,\n                        user_id,\n                        sku_id,\n                        cart_price,\n                        sku_num,\n                        sku_name,\n                        create_time,\n                        operate_time,\n                        is_ordered,\n                        order_time,\n                        source_type,\n                        source_id\n                      from cart_info\n                      where 1=1"\n}\n\nimport_coupon_info(){\n  import_data coupon_info "select\n                          id,\n                          coupon_name,\n                          coupon_type,\n                          condition_amount,\n                          condition_num,\n                          activity_id,\n                          benefit_amount,\n                          benefit_discount,\n                          create_time,\n                          range_type,\n                          limit_num,\n                          taken_count,\n                          start_time,\n                          end_time,\n                          operate_time,\n                          expire_time\n                        from coupon_info\n                        where 1=1"\n}\n\nimport_activity_info(){\n  import_data activity_info "select\n                              id,\n                              activity_name,\n                              activity_type,\n                              start_time,\n                              end_time,\n                              create_time\n                            from activity_info\n                            where 1=1"\n}\n\nimport_activity_rule(){\n    import_data activity_rule "select\n                                    id,\n                                    activity_id,\n                                    activity_type,\n                                    condition_amount,\n                                    condition_num,\n                                    benefit_amount,\n                                    benefit_discount,\n                                    benefit_level\n                                from activity_rule\n                                where 1=1"\n}\n\nimport_base_dic(){\n    import_data base_dic "select\n                            dic_code,\n                            dic_name,\n                            parent_code,\n                            create_time,\n                            operate_time\n                          from base_dic\n                          where 1=1"\n}\n\n\nimport_order_detail_activity(){\n    import_data order_detail_activity "select\n                                                                id,\n                                                                order_id,\n                                                                order_detail_id,\n                                                                activity_id,\n                                                                activity_rule_id,\n                                                                sku_id,\n                                                                create_time\n                                                            from order_detail_activity\n                                                            where date_format(create_time,\'%y-%m-%d\')=\'$do_date\'"\n}\n\n\nimport_order_detail_coupon(){\n    import_data order_detail_coupon "select\n                                                                id,\n\t\t\t\t\t\t\t\t                                                order_id,\n                                                                order_detail_id,\n                                                                coupon_id,\n                                                                coupon_use_id,\n                                                                sku_id,\n                                                                create_time\n                                                            from order_detail_coupon\n                                                            where date_format(create_time,\'%y-%m-%d\')=\'$do_date\'"\n}\n\n\nimport_refund_payment(){\n    import_data refund_payment "select\n                                                        id,\n                                                        out_trade_no,\n                                                        order_id,\n                                                        sku_id,\n                                                        payment_type,\n                                                        trade_no,\n                                                        total_amount,\n                                                        subject,\n                                                        refund_status,\n                                                        create_time,\n                                                        callback_time\n                                                    from refund_payment\n                                                    where (date_format(create_time,\'%y-%m-%d\')=\'$do_date\' \n                                                    or date_format(callback_time,\'%y-%m-%d\')=\'$do_date\')"                                                    \n\n}\n\nimport_sku_attr_value(){\n    import_data sku_attr_value "select\n                                                    id,\n                                                    attr_id,\n                                                    value_id,\n                                                    sku_id,\n                                                    attr_name,\n                                                    value_name\n                                                from sku_attr_value\n                                                where 1=1"\n}\n\n\nimport_sku_sale_attr_value(){\n    import_data sku_sale_attr_value "select\n                                                            id,\n                                                            sku_id,\n                                                            spu_id,\n                                                            sale_attr_value_id,\n                                                            sale_attr_id,\n                                                            sale_attr_name,\n                                                            sale_attr_value_name\n                                                        from sku_sale_attr_value\n                                                        where 1=1"\n}\n\ncase $1 in\n  "order_info")\n     import_order_info\n;;\n  "base_category1")\n     import_base_category1\n;;\n  "base_category2")\n     import_base_category2\n;;\n  "base_category3")\n     import_base_category3\n;;\n  "order_detail")\n     import_order_detail\n;;\n  "sku_info")\n     import_sku_info\n;;\n  "user_info")\n     import_user_info\n;;\n  "payment_info")\n     import_payment_info\n;;\n  "base_province")\n     import_base_province\n;;\n  "activity_info")\n      import_activity_info\n;;\n  "cart_info")\n      import_cart_info\n;;\n  "comment_info")\n      import_comment_info\n;;\n  "coupon_info")\n      import_coupon_info\n;;\n  "coupon_use")\n      import_coupon_use\n;;\n  "favor_info")\n      import_favor_info\n;;\n  "order_refund_info")\n      import_order_refund_info\n;;\n  "order_status_log")\n      import_order_status_log\n;;\n  "spu_info")\n      import_spu_info\n;;\n  "activity_rule")\n      import_activity_rule\n;;\n  "base_dic")\n      import_base_dic\n;;\n  "order_detail_activity")\n      import_order_detail_activity\n;;\n  "order_detail_coupon")\n      import_order_detail_coupon\n;;\n  "refund_payment")\n      import_refund_payment\n;;\n  "sku_attr_value")\n      import_sku_attr_value\n;;\n  "sku_sale_attr_value")\n      import_sku_sale_attr_value\n;;\n"all")\n   import_base_category1\n   import_base_category2\n   import_base_category3\n   import_order_info\n   import_order_detail\n   import_sku_info\n   import_user_info\n   import_payment_info\n   import_base_trademark\n   import_activity_info\n   import_cart_info\n   import_comment_info\n   import_coupon_use\n   import_coupon_info\n   import_favor_info\n   import_order_refund_info\n   import_order_status_log\n   import_spu_info\n   import_activity_rule\n   import_base_dic\n   import_order_detail_activity\n   import_order_detail_coupon\n   import_refund_payment\n   import_sku_attr_value\n   import_sku_sale_attr_value\n;;\nesac\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n\n\n\n# 数仓分层\n\n> ods(原)=> (dwd(细)=>dws(汇)=>dwt(题))(dim 维度)=>ads(应)\n\n * ods：存放加载原始数据，不做处理\n\n * dwd: 对ods的数据进行清洗(去除空值，过滤脏数据，超出范围的数据，脱敏)等 一行一次行为\n\n * dim:维度数据，对业务的描述信息，何人，何时、何地等，\n   \n   * dws 对dwd按每天，进行轻度汇总。 一行一天的行为\n   \n   * dwt :对dws按数据累加汇总 一行一个对象的行为累积行为 :最近n天\n\n * ads: 为各种统计报表提供数据\n\n分层的意义\n\n * 把复杂问题简单化\n * 减少重复开发\n * 隔离原始数据\n\n数仓和数集的区别：\n\n * 数仓：为整个企业部门提供决策\n\n * 数据集市：部门级，微型数据仓库\n   \n   > 独立形：(数据来自业务)\n   > \n   > 从属形：(数据来自数据仓库)\n\n数仓命名规范：\n\n * 表命名：对应层级的表加上其前缀，例如特殊表 temp_ 前缀命名，dwt层用 dwt_命名\n\n * 脚本命名：数据源_to_目标_db/log.sh ： 行为以log为后缀，业务以db为后缀\n\n * 表字段：\n   \n   > 数量 bigint、金额decimal(16,2) 16位，2位小数\n   > \n   > 字符串：(名字，描述)、主键外键\n   > \n   > 时间戳：bigint\n\n数仓理论：\n\n * 关系建模 (业务系统)\n   \n   > 范式：降低数据的庸余性，保证数据的一致性\n   > \n   >  * 拆分多，jion多\n   >  * 1范式=>2范式=>3范式=>4范式=>5范式\n   > \n   > > 属性不可切=>不存在非主键部分依赖\n   > \n   > 函数依赖：完全(直接)、部分(间接)、传递(联系)\n   > \n   > 表多\n\n * 维度建模 (普遍，重点学习)\n   \n   >  * 事实表(具体的业务)\n   >    \n   >    > 非常大，内容相对窄，列数少，经常发生变化\n   >    > \n   >    > 每行代表一个业务事件（下单支付等）\n   >    > \n   >    > 分类\n   >    > \n   >    >  * 事务型 ：每个事件为单位，不发生变化,增量同步\n   >    >  * 周期型快照：保存固定时间间隔的数据 只关心结果，全量同步\n   >    >  * 累积型快照：跟踪业务事实变化，会发生周期性变化的业务，新增+变化\n   > \n   >  * 维度表(业务的描述信息)\n   >    \n   >    > 表宽，行数相对较小，内容相对固定（编码表）\n   >    > \n   >    > 例：地区等\n   >    > \n   >    > 分类：\n   >    > \n   >    >  * 星型模型：性能优先\n   >    > \n   >    >  * 雪花模型：灵活优先\n   >    >    \n   >    >    > (会对维度表进行规范化)\n   >    > \n   >    >  * 星座模型（多个星型模型交着在一起）\n   > \n   > 查询简单效率高\n\n\n# 仓库建模\n\n 1. ods层\n    \n    >  * 用户行为：创建外部表一行字段代表一个用户行为，对时间分区，定时装载\n    >  * 业务行为\n    > \n    > 主要对比采集的数据进行建表\n\n 2. dim层和dwd层\n    \n    > 星型模型\n    > \n    >  * dim: 存储维度表\n    > \n    >  * dwd: 存储事实表 (以业务过程为驱动)\n    > \n    > 选择业务过程=>声明粒度=>确认维度=>确认事实\n    > \n    > dws、dwt、ads以需求为驱动\n    \n    从dim层开始主要列式存储+lzo压缩，装载从ods层查询拼接加载\n    \n    读取的表是单纯lzo文件并且创建了索引，此时需要关闭map端的小文件合并\n    \n    set hive.input.format=org.apache.hadoop.hive.ql.io.hiveinputformat;\n    \n    \n    1\n    \n    \n    通常时间维度表不来自业务系统，如果是格式问题，可以先创建临时表，再insert+select插入\n    \n    拉链表：更加高效的存储历史状态\n    \n    * 使用场景：全量最新、全量历史\n      \n      > 生效开始 日期<=某个日期 且 生效结束 日期>=某个日期：得到全量切片 ：全量历史\n      > \n      > 过滤最新：全量最新\n    \n    get_json_object 解析json\n    \n    select get_json_object(\'jison\',\'$[下标取元素]\')\n    \n    \n    1\n    \n    \n    分析数据按行列分析 自定义hive函数\n    \n    dws：避免重复计算，保存计算结果\n    \n    常用计算处理函数\n    \n    * nvl :nvl（表达式1，表达式2） 同一类型 1\n      \n      > coalesce(3)、if(2)\n    \n    * 日期处理函数：\n      \n      格式化\n      date_format(\'2020-06-14\',\'yyyy-mm\');\n      加减\n      date_add(\'2020-06-14\',-1);\n      下一天\n      next_day(\'2020-06-14\',\'mo\');//下周一：（monday，tuesday、wednesday、thursday、friday、saturday、sunday）\n      date_add(next_day(\'2020-06-14\',\'mo\'),-7);//当前周一\n      当月最后一天日期\n      last_day(\'2020-06-14\');\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      \n    \n    * 复杂数据类型定义\n      \n      map<string,string> :map(key,value) :取值  map[\'key\']\n      array<string>: array(val1,val2..)  ：取值 map[\'下标\']\n      struct<id:int,name:string,age:int> :named_stuct(name1,val1,....) :取值 strict.name1\n      //struct和array嵌套定义\n      array<struct<id:int,name:string,age:int>>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      \n    \n    > 例：统计 count(*) or sum(if(条件,1,0)）)\n\n 3. ads层报表应用层\n    \n    > 每个需求对应一张表，每张表有可能有多个指标\n    > \n    > 例：访客、用户、商品、订单、优惠卷、活动等\n    > \n    > 1，7，30日的统计\n    > \n    > -- 例如 1 7 30 下单和购买次数\n    > select\n    > \tid\n    > \trecent_days,\n    > \tcase\n    > \t\twhen recent_days=1 then order_1count,\n    > \t\twhen recent_days=7 then order_7count,\n    > \t\twhen recent_days=30 then order_30count,\n    > \tend  别名 -- 下单次数\n    > \tcase\n    > \t\twhen recent_days=1 then pay_1count,\n    > \t\twhen recent_days=7 then pay_7count,\n    > \t\twhen recent_days=30 then pay_30count,\n    > \tend  别名 -- 购买次数\t\n    > from 表名 lateral view explode(array(1,7,30)) tmp as recent_days  -- 把1，7，30炸开成一列创建临时视图\n    > where dt=\'2020-06-14\' --今天的日期\n    > \n    > --然后再获取维度信息关联即可，获取人数可以sum(if)or count()\n    > \n    > \n    > 1\n    > 2\n    > 3\n    > 4\n    > 5\n    > 6\n    > 7\n    > 8\n    > 9\n    > 10\n    > 11\n    > 12\n    > 13\n    > 14\n    > 15\n    > 16\n    > 17\n    > 18\n\n> hive 分区表指定外面字段(虚拟优化)，分桶表里面字段(真实)\n> \n> if 函数 和 nvl 函数 动态分区\n> \n> concat() 拼接值。\n> \n> jps -ml 查看详细进程信息\n\n\n# 调度流程\n\nazkaban\n\n> 把之前的装载sql封装成一个个可接收参数脚本，用azkaban，来调度\n\n> 最终ads报表数据用sqoop导入mysql中\n> \n> 画出依赖流程图，按照流程图编写依赖参数，如果动态传参进来，需要在执行azkaban时配置参数即可。\n> \n> 如果是每日定时也许传参但不传值即可。\n> \n> 如果脚本和环境没有分发需要指定运行的节点：useexecutor id需要在数据库查看\n\n\n# 数据报表\n\n * 后台语言+报表框架\n\n * 现成的报表工具\n   \n   * 收费\n   \n   * 开源 ：superset\n     \n     > 安装部署superset\n     > \n     > 了解对接数据源的方式\n     > \n     > 了解基本使用方法。\n\n\n# 即席查询\n\n> 可自定义查询条件，然后统计报表\n> \n> 是一个探索数据的过程，实现交互式效果\n> \n> 多维度洞察数据，把起转换称知识。\n\n * kylin\n   \n   > 了解其安装部署，和等维度概念\n   > \n   > 掌握页面上的基本使用、还有一些优化手段(聚合组、衍生度、rowkey等)\n   > \n   > 与bi工具的集成：zepplin（笔记本，可写sql查询和简单的报表）\n   > \n   > bi工具：对接数据源，写sql、报表。\n\n * presto\n   \n   > 了解起按照和部署、和优化手段\n\n * 德鲁伊等\n\n\n# 集群监控\n\n掌握zabbix的部署和基本使用，模板的和参数配置（主机、监控项、触发器、动作）\n\n以及集成grafana做可视化展示，作图。对接数据源，配置，作图即可。\n\n\n# 数据安全\n\n认证+授权\n\n认证：kerberos\n\n了解kerberos安装和基本使用，以及集成hadoop和hive等。\n\n\n# 安全模式的搭建\n\n改动说明：\n\n此处统一将数仓的全部数据资源的所有者设为hive用户，全流程的每步操作均认证为hive用户。\n\n * 用户准备 （存在可跳过）\n   \n   #3台   id hive 查看用户\n   useradd hive -g hadoop\n   echo hive | passwd --stdin hive\n   \n   \n   1\n   2\n   3\n   \n\n * 为用户创建主体（之前那个创建是不一样的,这需要创建）\n   \n   #创建主体\n   kadmin -padmin/admin -whadoop -q"addprinc -randkey hive"\n   #生成keytab文件\n   kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/hive.keytab hive"\n   #修改文件所有者和访问权限\n   chown hive:hadoop /etc/security/keytab/hive.keytab\n   chmod 440 /etc/security/keytab/hive.keytab\n   #分发改文件 （指定azkaban允许节点就不用）\n    xsync /etc/security/keytab/hive.keytab\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * 修改数据采集通道\n   \n   #用户行为日志 flume=>kafka=>flume(node3)   修改其sink 添加认证即可\n   #node3\n    vim /opt/module/flume/conf/kafka-flume-hdfs.conf\n    \n   a1.sinks.k1.hdfs.kerberosprincipal=hive@example.com\n   a1.sinks.k1.hdfs.kerberoskeytab=/etc/security/keytab/hive.keytab\n   \n   #业务脚本\n   #node1\n   vim /home/hadoop101/bin/mysql_to_hdfs.sh\n   在顶部增加如下认证语句 先认证再操作\n   kinit -kt /etc/security/keytab/hive.keytab hive\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n * 各层脚本的修改\n   \n   数仓各层脚本均需在顶部加入如下认证语句\n   kinit -kt /etc/security/keytab/hive.keytab hive\n   \n   例：相对路径 在hadoop101/bin目录下执行\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' hdfs_to_ods_log.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' hdfs_to_ods_db.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' ods_to_dwd_log.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' ods_to_dim_db.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' ods_to_dwd_db.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' dwd_to_dws.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' dws_to_dwt.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' dwt_to_ads.sh\n   sed -i \'1 a kinit -kt /etc/security/keytab/hive.keytab hive\' hdfs_to_mysql.sh\n   \n   注：表示在第1行 a添加 参数 到 脚本\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 修改hdfs特定路径的所有者\n   \n   #认证\n    kinit hdfs/hadoop\n   #修改数据采集目标路径\n    hadoop fs -chown -r hive:hadoop /origin_data\n   #修改数仓表所在路径\n    hadoop fs -chown -r hive:hadoop /warehouse\n   #修改hive （相当于home目录）\n    hadoop fs -chown -r hive:hadoop /user/hive \n   #修改spark.eventlog.dir路径\n    hadoop fs -chown -r hive:hadoop /spark-history\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n\n# 全流程调度测试\n\n * 生成数据\n   \n   #启动flume和kafka    \n   flume执行脚本采集，生成者消费者，flume消费脚本\n   修改日志生成\n   #修改业务数据\n   java -jar 生成 \n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n * 启动azkaban\n   \n   > 因为azkaban不需要直接和hdfs交互，只负责调用shell脚本(脚本里面有认证语句)，所以不用配置主体。\n   \n   #在各节点创建azkaban用户（3台）\n   useradd azkaban -g hadoop\n   echo azkaban | passwd --stdin azkaban\n   \n   #将各节点azkaban安装路径所有者改为azkaban用户（3台）\n   chown -r azkaban:hadoop /opt/module/azkaban\n   \n   #使用azkaban用户启动azkaban\n    1. 启动executor server （3台）\n    sudo -i -u azkaban bash -c "cd /opt/module/azkaban/azkaban-exec;bin/start-exec.sh"\n    2. 激活executor server （执行直接在node1执行即可)\n    curl http://node1:12321/executor?action=activate\n    curl http://node2:12321/executor?action=activate\n    curl http://node3:12321/executor?action=activate\n    3. 启动web server  端口：8081\n    sudo -i -u azkaban bash -c "cd /opt/module/azkaban/azkaban-web;bin/start-web.sh"\n    3. 配置修改数仓各层脚本访问权限，确保azkaban用户能够访问到（node1就可以了，如果是随机调度，三台都要设置）\n    \t#设置访问组\n   \tchown -r hadoop101:hadoop /home/hadoop101\n   \t#设置访问组的权限\n   \tchmod 770 /home/hadoop101/\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   \n\n * 全流程调度：执行情况：1. 指定节点调度，2.随机调度(需要分发对应的脚本)\n   \n   配置：参数：dt时间和对应执行节点useexecutor(在数据库里看id)\n\n\n# presto配置\n\n改动说明：\n\npresto集群开启kerberos认证可只配置presto coordinator和presto cli之间进行认证，集群内部通讯可不进行认证。presto coordinator和presto cli之间的认证要求两者采用更为安全的https协议进行通讯。\n\n若presto对接的是hive数据源，由于其需要访问hive的元数据和hdfs上的数据文件，故也需要对hive connector进行kerberos认证。\n\n * 用户准备\n   \n   #在所有节点创建presto系统用户（3台）\n   useradd presto -g hadoop\n   echo presto | passwd --stdin presto\n   \n   #为hive connector创建kerberos主体（node1)\n     kadmin -padmin/admin -whadoop -q"addprinc -randkey presto"\n     kadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/presto.keytab presto"\n     \n     chown presto:hadoop /etc/security/keytab/presto.keytab  #修改访问权限\n     xsync /etc/security/keytab/presto.keytab   #分发\n     \n   #为presto coordinator创建kerberos主体(node1)\n   \tkadmin -padmin/admin -whadoop -q"addprinc -randkey presto/node1"\n   \tkadmin -padmin/admin -whadoop -q"xst -k /etc/security/keytab/presto.service.keytab presto/node1"\n   \tchown presto:hadoop /etc/security/keytab/presto.service.keytab #修改权限\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n * 创建https协议所需密钥对\n   \n   注意： node1\n   （1）alias（别名）需要和presto coordinator的kerberos主体名保持一致\n   （2）名字与姓氏 需要填写coordinator所在的主机名\n   #使用java提供的keytool工具生成密钥对\n   keytool -genkeypair -alias presto -keyalg rsa -keystore /etc/security/keytab/keystore.jks\n   \n   输入密钥库口令:  hadoop\n   再次输入新口令: \n   您的名字与姓氏是什么?\n     [unknown]:  node1\n   您的组织单位名称是什么?\n     [unknown]:  \n   您的组织名称是什么?\n     [unknown]:  \n   您所在的城市或区域名称是什么?\n     [unknown]:  \n   您所在的省/市/自治区名称是什么?\n     [unknown]:  \n   该单位的双字母国家/地区代码是什么?\n     [unknown]:  \n   cn=node1, ou=unknown, o=unknown, l=unknown, st=unknown, c=unknown是否正确?\n     [否]:  y\n   \n   输入 <presto> 的密钥口令\n       (如果和密钥库口令相同, 按回车):\n       \n   #修改keystore文件的所有者和访问权限\n   \tchown presto:hadoop /etc/security/keytab/keystore.jks\n   \tchmod 660 /etc/security/keytab/keystore.jks\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   \n\n * 修改presto coordinator配置文件\n   \n   # 修改presto coordinator配置文件\n   \tvim /opt/module/presto/etc/config.properties\n   \n   http-server.authentication.type=kerberos\n   http.server.authentication.krb5.service-name=presto\n   http.server.authentication.krb5.keytab=/etc/security/keytab/presto.service.keytab\n   http.authentication.krb5.config=/etc/krb5.conf\n   http-server.https.enabled=true\n   http-server.https.port=7778\n   http-server.https.keystore.path=/etc/security/keytab/keystore.jks\n   http-server.https.keystore.key=hadoop\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n * 修改hive connector配置文件(node1:)\n   \n   #在/opt/module/presto/etc/catalog/hive.properties中增加以下参数\n   vim /opt/module/presto/etc/catalog/hive.properties\n   \n   hive.metastore.authentication.type=kerberos\n   hive.metastore.service.principal=hive/node1@example.com\n   hive.metastore.client.principal=presto@example.com\n   hive.metastore.client.keytab=/etc/security/keytab/presto.keytab\n   \n   hive.hdfs.authentication.type=kerberos\n   hive.hdfs.impersonation.enabled=true\n   hive.hdfs.presto.principal=presto@example.com\n   hive.hdfs.presto.keytab=/etc/security/keytab/presto.keytab\n   hive.config.resources=/opt/module/hadoop-3.1.3/etc/hadoop/core-site.xml,/opt/module/hadoop-3.1.3/etc/hadoop/hdfs-site.xml\n   \n   #分发/opt/module/presto/etc/catalog/hive.properties文件\n   xsync /opt/module/presto/etc/catalog/hive.properties\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\n * 配置客户端kerberos主体到用户名之间的映射规则\n   \n   #node1\n   vim /opt/module/presto/etc/access-control.properties\n    #添加\n    access-control.name=file\n    security.config-file=etc/rules.json\n   \n   vim /opt/module/presto/etc/rules.json\n    #添加\n    \n   {\n     "catalogs": [\n       {\n         "allow": true\n       }\n     ],\n     "user_patterns": [\n       "(.*)",\n       "([a-za-z]+)/?.*@.*"\n     ]\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n\n * 配置presto代理用户\n\n#修改hadoop配置文件\nvim $hadoop_home/etc/hadoop/core-site.xml\n#添加\n\n<property>\n    <name>hadoop.proxyuser.presto.hosts</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.presto.groups</name>\n    <value>*</value>\n</property>\n\n<property>\n    <name>hadoop.proxyuser.presto.users</name>\n    <value>*</value>\n</property>\n\n#分发修改的文件\nxsync $hadoop_home/etc/hadoop/core-site.xml\n\n#重启hadoop集群\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n * 重启presto集群\n\n#3台 #如果启动就关闭\n/opt/module/presto/bin/launcher stop\n#修改presto安装路径所有者为presto （3台）\nchown -r presto:hadoop /opt/module/presto\n#使用hive用户启动metastore服务（node1)\nsudo -i -u hive hive --service metastore\n#使用presto用户启动presto集群(3台)\nsudo -i -u presto /opt/module/presto/bin/launcher start\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n * 客户端认证访问presto集群 （可封装脚本）\n   \n   #在/opt/software/presto/   下执行\n   ./prestocli \\\n   --server https://node1:7778 \\\n   --catalog hive \\\n   --schema default \\\n   --enable-authentication \\\n   --krb5-remote-service-name presto \\\n   --krb5-config-path /etc/krb5.conf \\\n   --krb5-principal hadoop101@example.com \\\n   --krb5-keytab-path /home/hadoop101/hadoop101.keytab \\\n   --keystore-path /etc/security/keytab/keystore.jks \\\n   --keystore-password hadoop \\\n   --user hadoop101\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n这里出现了异常\n\nquery 20211020_093515_00002_9s9zr failed: access denied: principal hadoop101@example.com cannot become user hadoop101\n\n\n1\n\n\n\n# kylin配置\n\n改动说明：\n\n从kylin的架构，可以看出kylin充当只是一个hadoop客户端，读取hive数据，利用mr或spark进行计算，将cube存储至hbase中。所以在安全的hadoop环境下，kylin不需要做额外的配置，只需要具备一个kerberos主体，进行常规的认证即可。\n\n但是kylin所依赖的hbase需要进行额外的配置，才能在安全的hadoop环境下正常工作。\n\n * hbase开启kerberos认证\n * kylin进行kerberos认证\n\n\n# 权限管理\n\n了解ranger安装和基本配置\n\n\n# 元数据管理\n\n可用altal进行管理，其中采用的集成外部hbase+solr，了解可集成组件和方法。\n\n可清晰让我们知道每个流程的依赖，方便后续管理。\n\n\n# 数据质量检测\n\n对数仓各个阶段的数据质量，进行识别检测，利用python+shell进行识别，存储入库，然后再用superset报表\n\n指标：\n\n*评价标准*   *描述*                     *监控项*\n*唯一性*    指主键保持唯一                  字段唯一性检查\n*完整性*    主要包括记录缺失和字段值缺失等方面        字段枚举值检查\n                                  字段记录数检查\n                                  字段空值检查\n*精确度*    数据生成的正确性，数据在整个链路流转的正确性   波动阀值检查\n*合法性*    主要包括格式、类型、域值的合法性         字段日期格式检查\n                                  字段长度检查\n                                  字段值域检查\n*时效性*    主要包括数据处理的时效性             批处理是否按时完成',charsets:{cjk:!0}},{title:"idea打包spark问题",frontmatter:{title:"idea打包spark问题",date:"2021-12-22T00:00:00.000Z",tags:["spark"],categories:["踩坑"]},regularPath:"/view/docs/%E8%B8%A9%E5%9D%91/spark%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85.html",relativePath:"view/docs/踩坑/spark程序打包.md",key:"v-225e74a0",path:"/view/docs/%E8%B8%A9%E5%9D%91/spark%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85.html",headers:[{level:2,title:"maven 打包scala",slug:"maven-打包scala",normalizedTitle:"maven 打包scala",charIndex:2},{level:2,title:"解决方式 一",slug:"解决方式-一",normalizedTitle:"解决方式 一",charIndex:57},{level:2,title:"解决方式 二",slug:"解决方式-二",normalizedTitle:"解决方式 二",charIndex:108},{level:2,title:"提交运行",slug:"提交运行",normalizedTitle:"提交运行",charIndex:1615}],lastUpdated:"2021/12/22 下午5:21:24",headersStr:"maven 打包scala 解决方式 一 解决方式 二 提交运行",content:"# maven 打包scala\n\nIDEA默认打包方式，不会将scala打进jar包里，需要添加编译插件\n\n\n# 解决方式 一\n\n1. 先把程序运行起来,让其编译好\n2. 再进行maven打包\n\n\n1\n2\n\n\n\n# 解决方式 二\n\n> 添加编译插件、如果不行请使用方式一。\n\n<build>\n    <plugins>\n        \x3c!-- java编译插件 --\x3e\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>3.6.1</version>\n            <executions>\n                <execution>\n                    <phase>compile</phase>\n                    <goals>\n                        <goal>compile</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n        \x3c!-- scala编译插件 --\x3e\n        <plugin>\n            <groupId>net.alchim31.maven</groupId>\n            <artifactId>scala-maven-plugin</artifactId>\n            <version>3.2.2</version>\n            <executions>\n                <execution>\n                    <id>scala-compile-first</id>\n                    <phase>process-resources</phase>\n                    <goals>\n                        <goal>add-source</goal>\n                        <goal>compile</goal>\n                    </goals>\n                </execution>\n                <execution>\n                    <id>scala-test-compile</id>\n                    <phase>process-test-resources</phase>\n                    <goals>\n                        <goal>testCompile</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n然后直接打包即可\n\n\n# 提交运行\n\n 1. 查看编译好的主类路径\n    \n    例：\n\n 2. 提交jar包要spark服务器上运行\n    \n    本地提交：💦\n    \n    bin/spark-submit \\\n    --class com.axcmsm.core.hello \\\n    --master local \\\n    /root/jars/spark-examples_2.12-3.0.0.jar\n    \n    \n    1\n    2\n    3\n    4\n    \n    \n    本地提交解释\n    \n    -- master 运行模式\n    -- class 运行主类路径\n    \\ 表示换行\n    \n    \n    1\n    2\n    3\n    \n    \n    ----------------------------------------\n    \n    ----------------------------------------\n    \n    ----------------------------------------\n    \n    集群模式提交：💦\n    \n    bin/spark-submit \\\n    --class org.apache.spark.examples.SparkPi \\\n    --master yarn \\\n    --deploy-mode cluster \\\n    ./examples/jars/spark-examples_2.12-3.0.0.jar \\\n    10\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n    \n    集群模式提交解释\n    \n    1) --class 表示要执行程序的主类，此处可以更换为咱们自己写的应用程序\n    2) --master local[2] 部署模式，默认为本地模式，数字表示分配的虚拟 CPU 核数量\n       --master spark://linux1:7077 独立部署模式，连接到 Spark 集群\n       --master Yarn\t\n    3) spark-examples_2.12-3.0.0.jar 运行的应用类所在的 jar 包，实际使用时，可以设定为咱\n    们自己打的 jar 包\n    4) 数字 10 表示程序的入口参数，用于设定当前应用的任务数量\n    其他\n    --num-executors 配置 Executor 的数量\n    --driver-memory 配置 Driver 内存（影响不大）\n    --executor-memory 1G 指定每个 executor 可用内存为 1G\n    --total-executor-cores 2 指定所有executor使用的cpu核数为 2 个\n    --executor-cores 指定每个executor使用的cpu核数\n    application-arguments 传给 main()方法的参数\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n🐑 本片完！",normalizedContent:"# maven 打包scala\n\nidea默认打包方式，不会将scala打进jar包里，需要添加编译插件\n\n\n# 解决方式 一\n\n1. 先把程序运行起来,让其编译好\n2. 再进行maven打包\n\n\n1\n2\n\n\n\n# 解决方式 二\n\n> 添加编译插件、如果不行请使用方式一。\n\n<build>\n    <plugins>\n        \x3c!-- java编译插件 --\x3e\n        <plugin>\n            <groupid>org.apache.maven.plugins</groupid>\n            <artifactid>maven-compiler-plugin</artifactid>\n            <version>3.6.1</version>\n            <executions>\n                <execution>\n                    <phase>compile</phase>\n                    <goals>\n                        <goal>compile</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n        \x3c!-- scala编译插件 --\x3e\n        <plugin>\n            <groupid>net.alchim31.maven</groupid>\n            <artifactid>scala-maven-plugin</artifactid>\n            <version>3.2.2</version>\n            <executions>\n                <execution>\n                    <id>scala-compile-first</id>\n                    <phase>process-resources</phase>\n                    <goals>\n                        <goal>add-source</goal>\n                        <goal>compile</goal>\n                    </goals>\n                </execution>\n                <execution>\n                    <id>scala-test-compile</id>\n                    <phase>process-test-resources</phase>\n                    <goals>\n                        <goal>testcompile</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n然后直接打包即可\n\n\n# 提交运行\n\n 1. 查看编译好的主类路径\n    \n    例：\n\n 2. 提交jar包要spark服务器上运行\n    \n    本地提交：💦\n    \n    bin/spark-submit \\\n    --class com.axcmsm.core.hello \\\n    --master local \\\n    /root/jars/spark-examples_2.12-3.0.0.jar\n    \n    \n    1\n    2\n    3\n    4\n    \n    \n    本地提交解释\n    \n    -- master 运行模式\n    -- class 运行主类路径\n    \\ 表示换行\n    \n    \n    1\n    2\n    3\n    \n    \n    ----------------------------------------\n    \n    ----------------------------------------\n    \n    ----------------------------------------\n    \n    集群模式提交：💦\n    \n    bin/spark-submit \\\n    --class org.apache.spark.examples.sparkpi \\\n    --master yarn \\\n    --deploy-mode cluster \\\n    ./examples/jars/spark-examples_2.12-3.0.0.jar \\\n    10\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n    \n    集群模式提交解释\n    \n    1) --class 表示要执行程序的主类，此处可以更换为咱们自己写的应用程序\n    2) --master local[2] 部署模式，默认为本地模式，数字表示分配的虚拟 cpu 核数量\n       --master spark://linux1:7077 独立部署模式，连接到 spark 集群\n       --master yarn\t\n    3) spark-examples_2.12-3.0.0.jar 运行的应用类所在的 jar 包，实际使用时，可以设定为咱\n    们自己打的 jar 包\n    4) 数字 10 表示程序的入口参数，用于设定当前应用的任务数量\n    其他\n    --num-executors 配置 executor 的数量\n    --driver-memory 配置 driver 内存（影响不大）\n    --executor-memory 1g 指定每个 executor 可用内存为 1g\n    --total-executor-cores 2 指定所有executor使用的cpu核数为 2 个\n    --executor-cores 指定每个executor使用的cpu核数\n    application-arguments 传给 main()方法的参数\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    \n\n🐑 本片完！",charsets:{cjk:!0}},{title:"赞赏",frontmatter:{},regularPath:"/view/reward.html",relativePath:"view/reward.md",key:"v-50934d48",path:"/view/reward.html",headers:[{level:2,title:"赞赏",slug:"赞赏",normalizedTitle:"赞赏",charIndex:2}],lastUpdated:"2021/8/16 上午2:20:51",headersStr:"赞赏",content:"# 赞赏\n\n----------------------------------------\n\n微信   支付宝\n     \n\n----------------------------------------\n\n# 致谢\n\n----------------------------------------\n\n感谢给予过赞赏的朋友，您的支持是我前进的动力 🎉",normalizedContent:"# 赞赏\n\n----------------------------------------\n\n微信   支付宝\n     \n\n----------------------------------------\n\n# 致谢\n\n----------------------------------------\n\n感谢给予过赞赏的朋友，您的支持是我前进的动力 🎉",charsets:{cjk:!0}},{title:"hive",frontmatter:{title:"hive",date:"2021-09-9",tags:["hive"],categories:["踩坑"]},regularPath:"/view/docs/%E8%B8%A9%E5%9D%91/hive.html",relativePath:"view/docs/踩坑/hive.md",key:"v-3ce3331c",path:"/view/docs/%E8%B8%A9%E5%9D%91/hive.html",headers:[{level:2,title:"运行mr程序异常",slug:"运行mr程序异常",normalizedTitle:"运行mr程序异常",charIndex:2},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:23899}],lastUpdated:"2021/10/13 下午7:47:22",headersStr:"运行mr程序异常 总结",content:"# 运行mr程序异常\n\n报错信息：\n\nError while processing statement: FAILED: Execution Error, return code 2 from org.apache.hadoop.hive.ql.exec.mr.MapRedTask\n\n\n1\n\n\n查看日志\n\n2021-08-31 01:36:18,784 ERROR org.apache.hadoop.hdfs.server.datanode.DataNode: RECEIVED SIGNAL 15: SIGTER\n\n\n1\n\n\n意思是应该datanode内部通信异常 （应该是配置出了问题）\n\n/opt/module/hadoop-3.1.4/share/hadoop/common/lib/error_prone_annotations-2.2.0.jar\n\n\n1\n\n\n/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/error_prone_annotations-2.2.0.jar\n\n\n1\n\n\n以及运行程序需要扫描这么jar包\n\n/opt/module/hadoop-3.1.4/etc/hadoop:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/guava-27.0-jre.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/protobuf-java-2.5.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-configuration2-2.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-io-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jsp-api-2.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/snappy-java-1.0.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/stax2-api-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-core-asl-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/curator-client-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-server-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-core-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-jaxrs-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/woodstox-core-5.0.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/netty-3.10.6.Final.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-compress-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/token-provider-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jersey-core-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/httpclient-4.5.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/re2j-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-asn1-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jersey-servlet-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-xml-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-security-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/htrace-core4-4.1.0-incubating.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/hadoop-auth-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/zookeeper-3.4.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-config-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-databind-2.9.10.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/audience-annotations-0.5.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jsr311-api-1.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/failureaccess-1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-net-3.6.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/j2objc-annotations-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-codec-1.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/httpcore-4.4.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jsr305-3.0.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-cli-1.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-core-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-http-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-util-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/json-smart-2.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-annotations-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jul-to-slf4j-1.7.25.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-mapper-asl-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-io-2.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-math3-3.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-xc-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-server-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-logging-1.1.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/accessors-smart-1.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jaxb-impl-2.2.3-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/javax.servlet-api-3.1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-crypto-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/animal-sniffer-annotations-1.17.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jersey-server-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-webapp-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/paranamer-2.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-simplekdc-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-util-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-pkix-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-collections-3.2.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-servlet-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/metrics-core-3.2.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jcip-annotations-1.0-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/log4j-1.2.17.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/gson-2.2.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/hadoop-annotations-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/avro-1.7.7.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/nimbus-jose-jwt-7.9.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/curator-framework-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-admin-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/slf4j-api-1.7.25.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-lang3-3.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-common-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jersey-json-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-beanutils-1.9.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-identity-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-client-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/asm-5.0.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jsch-0.1.55.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/error_prone_annotations-2.2.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-lang-2.6.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jaxb-api-2.2.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/curator-recipes-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/checker-qual-2.5.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jettison-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-xdr-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-util-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/hadoop-nfs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/hadoop-kms-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/hadoop-common-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/hadoop-common-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/guava-27.0-jre.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/protobuf-java-2.5.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-configuration2-2.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-io-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/snappy-java-1.0.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/stax2-api-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-core-asl-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/curator-client-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-server-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-core-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-jaxrs-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/woodstox-core-5.0.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/netty-3.10.6.Final.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-compress-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/token-provider-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jersey-core-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/httpclient-4.5.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/re2j-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-asn1-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jersey-servlet-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-xml-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-security-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/htrace-core4-4.1.0-incubating.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/hadoop-auth-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/zookeeper-3.4.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-config-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/okio-1.6.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-databind-2.9.10.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/audience-annotations-0.5.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jsr311-api-1.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/failureaccess-1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-net-3.6.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/j2objc-annotations-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-codec-1.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/netty-all-4.1.48.Final.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/httpcore-4.4.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jsr305-3.0.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-cli-1.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-core-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-http-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-util-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/json-smart-2.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-annotations-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-mapper-asl-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-io-2.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-math3-3.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-xc-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-server-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-logging-1.1.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/accessors-smart-1.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jaxb-impl-2.2.3-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/javax.servlet-api-3.1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-crypto-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/animal-sniffer-annotations-1.17.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jersey-server-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-webapp-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/paranamer-2.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-simplekdc-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-util-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-pkix-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-collections-3.2.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-servlet-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jcip-annotations-1.0-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/log4j-1.2.17.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/okhttp-2.7.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/gson-2.2.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/leveldbjni-all-1.8.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-daemon-1.0.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/hadoop-annotations-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/avro-1.7.7.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/nimbus-jose-jwt-7.9.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/curator-framework-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-admin-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-lang3-3.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-common-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jersey-json-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-beanutils-1.9.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-identity-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-client-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-util-ajax-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/asm-5.0.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jsch-0.1.55.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/error_prone_annotations-2.2.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-lang-2.6.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jaxb-api-2.2.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/curator-recipes-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/checker-qual-2.5.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jettison-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-xdr-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-util-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/json-simple-1.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-httpfs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-native-client-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-rbf-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-nfs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-rbf-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-native-client-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-client-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-client-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/hamcrest-core-1.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/junit-4.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-uploader-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-common-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-shuffle-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-plugins-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-core-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-nativetask-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-app-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/snakeyaml-1.16.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jersey-guice-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jackson-jaxrs-json-provider-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jackson-module-jaxb-annotations-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/ehcache-3.3.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/HikariCP-java7-2.4.12.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/json-io-2.5.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jersey-client-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/java-util-1.9.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/mssql-jdbc-6.2.1.jre7.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/objenesis-1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/geronimo-jcache_1.0_spec-1.0-alpha-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/guice-4.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/javax.inject-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/dnsjava-2.1.7.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/metrics-core-3.2.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/guice-servlet-4.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jackson-jaxrs-base-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/aopalliance-1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/fst-2.50.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/swagger-annotations-1.5.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-sharedcachemanager-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-common-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-applications-distributedshell-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-resourcemanager-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-applications-unmanaged-am-launcher-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-api-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-web-proxy-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-client-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-nodemanager-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-services-api-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-applicationhistoryservice-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-services-core-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-router-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-common-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-tests-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-timeline-pluginstorage-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-registry-3.1.4.jar\n\n\n1\n\n\n然后我们就需要排查一下配置信息是否可以指定扫描\n\ncapacity-scheduler.xml            httpfs-log4j.properties     mapred-site.xml\nconfiguration.xsl                 httpfs-signature.secret     nohup.out\ncontainer-executor.cfg            httpfs-site.xml             shellprofile.d\ncore-site.xml                     kms-acls.xml                ssl-client.xml.example\nhadoop-env.cmd                    kms-env.sh                  ssl-server.xml.example\nhadoop-env.sh                     kms-log4j.properties        user_ec_policies.xml.template\nhadoop-metrics2.properties        kms-site.xml                workers\nhadoop-policy.xml                 log4j.properties            yarn-env.cmd\nhadoop-user-functions.sh.example  mapred-env.cmd              yarn-env.sh\nhdfs-site.xml                     mapred-env.sh               yarnservice-log4j.properties\nhttpfs-env.sh                     mapred-queues.xml.template  yarn-site.xml\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n因为hdfs没问题 mr出了问题 应该是yarn或者是mapper出了问题\n\nvim mapred-site.xml 、yarn-site.xml\n\nmapreduce.application.classpath\n\n\n1\n\n\n起初是以为内存溢出等一系列问题，\n\n经过百度和排查最终确定是扫描问题\n\n添加以下扫描位置：\n\n由于mr运行申请yarn资源而yarn提交job运行任务需要切片加载xml文件和提交jar所以需要扫描下面的目录\n\nmapperreduce\n\t\t/opt/module/hadoop-3.1.4/etc/hadoop,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/*\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\nyarn\n\t\t/opt/module/hadoop-3.1.4/etc/hadoop,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/*\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n出现出现此类扫描问题应该是没有配置MapTask环境变量\n\n<property>\n  <name>yarn.app.mapreduce.am.env</name>\n  <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>\n</property>\n<property>\n  <name>mapreduce.map.env</name>\n  <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>\n</property>\n<property>\n  <name>mapreduce.reduce.env</name>\n  <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n----------------------------------------\n\n也可以直接指定扫描：\n\nmapred-site.xml\n\n<property>\n    <name>mapreduce.application.classpath</name>\n    <value>\n        /opt/module/hadoop-3.1.4/etc/hadoop,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/*\n    </value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\nyarn-site.xml\n\n<property>\n    <name>yarn.application.classpath</name>\n    <value>\n        /opt/module/hadoop-3.1.4/etc/hadoop,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/*\n    </value>\n</property> \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n配置完，分发脚本、重启集群即可\n\n注意：\n\n#在hadoop3.0-3.1需要配置：HADOOP_MAPRED_HOM 注意\n\n配置yarn-site.xml\n\x3c!-- 环境变量的继承 --\x3e\n    <property>\n        <name>yarn.nodemanager.env-whitelist</name>\n        <value>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME</value>\n    </property>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 总结\n\n> 遇到问题、先查看日志，查找错误信息、分析问题、查找解决问题的方法\n> \n>  * 除了配置问题之外\n>  * 当内存不够时运行并行度机制时也会发生异常\n> \n> 查看：文件占用情况\n> \n> hdfs dfs -du -h -s   /文件路径\n> \n> \n> 1\n> \n> \n> debug、和日志是解决bug的好帮手、当然还有谷歌百度等。",normalizedContent:"# 运行mr程序异常\n\n报错信息：\n\nerror while processing statement: failed: execution error, return code 2 from org.apache.hadoop.hive.ql.exec.mr.mapredtask\n\n\n1\n\n\n查看日志\n\n2021-08-31 01:36:18,784 error org.apache.hadoop.hdfs.server.datanode.datanode: received signal 15: sigter\n\n\n1\n\n\n意思是应该datanode内部通信异常 （应该是配置出了问题）\n\n/opt/module/hadoop-3.1.4/share/hadoop/common/lib/error_prone_annotations-2.2.0.jar\n\n\n1\n\n\n/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/error_prone_annotations-2.2.0.jar\n\n\n1\n\n\n以及运行程序需要扫描这么jar包\n\n/opt/module/hadoop-3.1.4/etc/hadoop:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/guava-27.0-jre.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/protobuf-java-2.5.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-configuration2-2.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-io-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jsp-api-2.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/snappy-java-1.0.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/stax2-api-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-core-asl-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/curator-client-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-server-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-core-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-jaxrs-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/woodstox-core-5.0.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/netty-3.10.6.final.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-compress-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/token-provider-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jersey-core-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/httpclient-4.5.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/re2j-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-asn1-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jersey-servlet-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-xml-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-security-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/htrace-core4-4.1.0-incubating.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/hadoop-auth-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/zookeeper-3.4.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-config-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-databind-2.9.10.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/audience-annotations-0.5.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jsr311-api-1.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/slf4j-log4j12-1.7.25.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/failureaccess-1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-net-3.6.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/j2objc-annotations-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-codec-1.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/httpcore-4.4.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jsr305-3.0.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-cli-1.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-core-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-http-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-util-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/json-smart-2.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-annotations-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jul-to-slf4j-1.7.25.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-mapper-asl-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-io-2.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-math3-3.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jackson-xc-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-server-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-logging-1.1.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/accessors-smart-1.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jaxb-impl-2.2.3-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/javax.servlet-api-3.1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-crypto-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/animal-sniffer-annotations-1.17.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jersey-server-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-webapp-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/paranamer-2.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-simplekdc-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-util-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-pkix-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-collections-3.2.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jetty-servlet-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/metrics-core-3.2.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jcip-annotations-1.0-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/log4j-1.2.17.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/gson-2.2.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/hadoop-annotations-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/avro-1.7.7.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/nimbus-jose-jwt-7.9.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/curator-framework-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-admin-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/slf4j-api-1.7.25.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-lang3-3.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-common-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jersey-json-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-beanutils-1.9.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-identity-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-client-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/asm-5.0.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jsch-0.1.55.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/error_prone_annotations-2.2.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/commons-lang-2.6.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jaxb-api-2.2.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/curator-recipes-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/checker-qual-2.5.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/jettison-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerby-xdr-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/lib/kerb-util-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/hadoop-nfs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/hadoop-kms-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/hadoop-common-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/common/hadoop-common-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/guava-27.0-jre.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/protobuf-java-2.5.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-configuration2-2.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-io-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/snappy-java-1.0.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/stax2-api-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-core-asl-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/curator-client-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-server-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-core-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-jaxrs-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/woodstox-core-5.0.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/netty-3.10.6.final.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-compress-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/token-provider-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jersey-core-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/httpclient-4.5.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/re2j-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-asn1-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jersey-servlet-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-xml-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-security-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/htrace-core4-4.1.0-incubating.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/hadoop-auth-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/zookeeper-3.4.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-config-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/okio-1.6.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-databind-2.9.10.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/audience-annotations-0.5.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jsr311-api-1.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/failureaccess-1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-net-3.6.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/j2objc-annotations-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-codec-1.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/netty-all-4.1.48.final.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/httpcore-4.4.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jsr305-3.0.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-cli-1.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-core-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-http-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-util-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/json-smart-2.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-annotations-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-mapper-asl-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-io-2.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-math3-3.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jackson-xc-1.9.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-server-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-logging-1.1.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/accessors-smart-1.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jaxb-impl-2.2.3-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/javax.servlet-api-3.1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-crypto-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/animal-sniffer-annotations-1.17.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jersey-server-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-webapp-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/paranamer-2.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-simplekdc-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-util-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-pkix-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-collections-3.2.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-servlet-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jcip-annotations-1.0-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/log4j-1.2.17.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/okhttp-2.7.5.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/gson-2.2.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/leveldbjni-all-1.8.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-daemon-1.0.13.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/hadoop-annotations-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/avro-1.7.7.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/nimbus-jose-jwt-7.9.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/curator-framework-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-admin-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-lang3-3.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-common-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jersey-json-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-beanutils-1.9.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-identity-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-client-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jetty-util-ajax-9.4.20.v20190813.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/asm-5.0.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jsch-0.1.55.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/error_prone_annotations-2.2.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/commons-lang-2.6.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jaxb-api-2.2.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/curator-recipes-2.13.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/checker-qual-2.5.2.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/jettison-1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerby-xdr-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/kerb-util-1.0.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/json-simple-1.1.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-httpfs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-native-client-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-rbf-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-nfs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-rbf-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-native-client-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-client-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/hdfs/hadoop-hdfs-client-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/hamcrest-core-1.3.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/junit-4.11.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-uploader-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-common-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-shuffle-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-plugins-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-core-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.4-tests.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-nativetask-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/mapreduce/hadoop-mapreduce-client-app-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/snakeyaml-1.16.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jersey-guice-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jackson-jaxrs-json-provider-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jackson-module-jaxb-annotations-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/ehcache-3.3.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/hikaricp-java7-2.4.12.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/json-io-2.5.1.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jersey-client-1.19.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/java-util-1.9.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/mssql-jdbc-6.2.1.jre7.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/objenesis-1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/geronimo-jcache_1.0_spec-1.0-alpha-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/guice-4.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/javax.inject-1.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/dnsjava-2.1.7.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/metrics-core-3.2.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/guice-servlet-4.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/jackson-jaxrs-base-2.9.10.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/aopalliance-1.0.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/fst-2.50.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/swagger-annotations-1.5.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-sharedcachemanager-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-common-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-applications-distributedshell-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-resourcemanager-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-applications-unmanaged-am-launcher-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-api-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-web-proxy-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-client-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-nodemanager-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-services-api-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-applicationhistoryservice-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-services-core-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-router-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-common-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-tests-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-server-timeline-pluginstorage-3.1.4.jar:/opt/module/hadoop-3.1.4/share/hadoop/yarn/hadoop-yarn-registry-3.1.4.jar\n\n\n1\n\n\n然后我们就需要排查一下配置信息是否可以指定扫描\n\ncapacity-scheduler.xml            httpfs-log4j.properties     mapred-site.xml\nconfiguration.xsl                 httpfs-signature.secret     nohup.out\ncontainer-executor.cfg            httpfs-site.xml             shellprofile.d\ncore-site.xml                     kms-acls.xml                ssl-client.xml.example\nhadoop-env.cmd                    kms-env.sh                  ssl-server.xml.example\nhadoop-env.sh                     kms-log4j.properties        user_ec_policies.xml.template\nhadoop-metrics2.properties        kms-site.xml                workers\nhadoop-policy.xml                 log4j.properties            yarn-env.cmd\nhadoop-user-functions.sh.example  mapred-env.cmd              yarn-env.sh\nhdfs-site.xml                     mapred-env.sh               yarnservice-log4j.properties\nhttpfs-env.sh                     mapred-queues.xml.template  yarn-site.xml\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n因为hdfs没问题 mr出了问题 应该是yarn或者是mapper出了问题\n\nvim mapred-site.xml 、yarn-site.xml\n\nmapreduce.application.classpath\n\n\n1\n\n\n起初是以为内存溢出等一系列问题，\n\n经过百度和排查最终确定是扫描问题\n\n添加以下扫描位置：\n\n由于mr运行申请yarn资源而yarn提交job运行任务需要切片加载xml文件和提交jar所以需要扫描下面的目录\n\nmapperreduce\n\t\t/opt/module/hadoop-3.1.4/etc/hadoop,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/*\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\nyarn\n\t\t/opt/module/hadoop-3.1.4/etc/hadoop,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/*\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n出现出现此类扫描问题应该是没有配置maptask环境变量\n\n<property>\n  <name>yarn.app.mapreduce.am.env</name>\n  <value>hadoop_mapred_home=${hadoop_home}</value>\n</property>\n<property>\n  <name>mapreduce.map.env</name>\n  <value>hadoop_mapred_home=${hadoop_home}</value>\n</property>\n<property>\n  <name>mapreduce.reduce.env</name>\n  <value>hadoop_mapred_home=${hadoop_home}</value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n----------------------------------------\n\n也可以直接指定扫描：\n\nmapred-site.xml\n\n<property>\n    <name>mapreduce.application.classpath</name>\n    <value>\n        /opt/module/hadoop-3.1.4/etc/hadoop,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/*\n    </value>\n</property>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\nyarn-site.xml\n\n<property>\n    <name>yarn.application.classpath</name>\n    <value>\n        /opt/module/hadoop-3.1.4/etc/hadoop,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/common/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/hdfs/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/mapreduce/lib/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/*,\n        /opt/module/hadoop-3.1.4/share/hadoop/yarn/lib/*\n    </value>\n</property> \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n配置完，分发脚本、重启集群即可\n\n注意：\n\n#在hadoop3.0-3.1需要配置：hadoop_mapred_hom 注意\n\n配置yarn-site.xml\n\x3c!-- 环境变量的继承 --\x3e\n    <property>\n        <name>yarn.nodemanager.env-whitelist</name>\n        <value>java_home,hadoop_common_home,hadoop_hdfs_home,hadoop_conf_dir,classpath_prepend_distcache,hadoop_yarn_home,hadoop_mapred_home</value>\n    </property>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 总结\n\n> 遇到问题、先查看日志，查找错误信息、分析问题、查找解决问题的方法\n> \n>  * 除了配置问题之外\n>  * 当内存不够时运行并行度机制时也会发生异常\n> \n> 查看：文件占用情况\n> \n> hdfs dfs -du -h -s   /文件路径\n> \n> \n> 1\n> \n> \n> debug、和日志是解决bug的好帮手、当然还有谷歌百度等。",charsets:{cjk:!0}},{frontmatter:{layout:"Tags",title:"Tags"},regularPath:"/tag/",key:"v-b1564aac",path:"/tag/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"FrontmatterKey",title:"Categories"},regularPath:"/categories/",key:"v-ef9325c4",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"TimeLines",title:"Timeline"},regularPath:"/timeline/",key:"v-6319eb4e",path:"/timeline/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"About",title:"About"},regularPath:"/about/",key:"v-052f93d7",path:"/about/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Git Tags"},regularPath:"/tag/Git/",key:"v-32555732",path:"/tag/Git/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"MyBatis Tags"},regularPath:"/tag/MyBatis/",key:"v-f5f3b4b4",path:"/tag/MyBatis/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"MyBatis-Plus Tags"},regularPath:"/tag/MyBatis-Plus/",key:"v-230412de",path:"/tag/MyBatis-Plus/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"spring Tags"},regularPath:"/tag/spring/",key:"v-76ecf1d8",path:"/tag/spring/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"工具 Tags"},regularPath:"/tag/%E5%B7%A5%E5%85%B7/",key:"v-97019ce8",path:"/tag/工具/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"置顶 Tags"},regularPath:"/tag/%E7%BD%AE%E9%A1%B6/",key:"v-69ed6cbe",path:"/tag/置顶/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"vuepress Tags"},regularPath:"/tag/vuepress/",key:"v-dfb71430",path:"/tag/vuepress/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"log4 Tags"},regularPath:"/tag/log4/",key:"v-143daf56",path:"/tag/log4/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"springboot Tags"},regularPath:"/tag/springboot/",key:"v-73f318a6",path:"/tag/springboot/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Es6 Tags"},regularPath:"/tag/Es6/",key:"v-3256ec9e",path:"/tag/Es6/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"vue Tags"},regularPath:"/tag/vue/",key:"v-322a45da",path:"/tag/vue/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"vuex Tags"},regularPath:"/tag/vuex/",key:"v-131e635a",path:"/tag/vuex/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Echarts Tags"},regularPath:"/tag/Echarts/",key:"v-09e9e182",path:"/tag/Echarts/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"安装 Tags"},regularPath:"/tag/%E5%AE%89%E8%A3%85/",key:"v-09fb9814",path:"/tag/安装/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"websorcket Tags"},regularPath:"/tag/websorcket/",key:"v-5a9a828c",path:"/tag/websorcket/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"sqoop Tags"},regularPath:"/tag/sqoop/",key:"v-5b52f3b2",path:"/tag/sqoop/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"kafka Tags"},regularPath:"/tag/kafka/",key:"v-786bbe1a",path:"/tag/kafka/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Oozie Tags"},regularPath:"/tag/Oozie/",key:"v-d65e6dfa",path:"/tag/Oozie/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"azkaban Tags"},regularPath:"/tag/azkaban/",key:"v-1d724679",path:"/tag/azkaban/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Hue Tags"},regularPath:"/tag/Hue/",key:"v-325417fe",path:"/tag/Hue/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Kylin Tags"},regularPath:"/tag/Kylin/",key:"v-e2f81514",path:"/tag/Kylin/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"scala Tags"},regularPath:"/tag/scala/",key:"v-5cea5a5a",path:"/tag/scala/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"hbase Tags"},regularPath:"/tag/hbase/",key:"v-8290f180",path:"/tag/hbase/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Presto Tags"},regularPath:"/tag/Presto/",key:"v-3e29fada",path:"/tag/Presto/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"zabbix Tags"},regularPath:"/tag/zabbix/",key:"v-6289b022",path:"/tag/zabbix/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"superset Tags"},regularPath:"/tag/superset/",key:"v-067c8e9e",path:"/tag/superset/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Kerberos Tags"},regularPath:"/tag/Kerberos/",key:"v-7ca256ac",path:"/tag/Kerberos/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"es Tags"},regularPath:"/tag/es/",key:"v-e8d89352",path:"/tag/es/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"hive Tags"},regularPath:"/tag/hive/",key:"v-14b36356",path:"/tag/hive/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"Redis Tags"},regularPath:"/tag/Redis/",key:"v-cd4f2d44",path:"/tag/Redis/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"离线数仓 Tags"},regularPath:"/tag/%E7%A6%BB%E7%BA%BF%E6%95%B0%E4%BB%93/",key:"v-3ff636a5",path:"/tag/离线数仓/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Tag",title:"spark Tags"},regularPath:"/tag/spark/",key:"v-5b7bc7c8",path:"/tag/spark/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"java Categories"},regularPath:"/categories/java/",key:"v-62faafef",path:"/categories/java/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"其他 Categories"},regularPath:"/categories/%E5%85%B6%E4%BB%96/",key:"v-7fc479ec",path:"/categories/其他/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"收藏 Categories"},regularPath:"/categories/%E6%94%B6%E8%97%8F/",key:"v-500bebd0",path:"/categories/收藏/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"前端 Categories"},regularPath:"/categories/%E5%89%8D%E7%AB%AF/",key:"v-14bbbf36",path:"/categories/前端/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"安装 Categories"},regularPath:"/categories/%E5%AE%89%E8%A3%85/",key:"v-55dc2dc0",path:"/categories/安装/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"笔记 Categories"},regularPath:"/categories/%E7%AC%94%E8%AE%B0/",key:"v-5a3bf502",path:"/categories/笔记/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Category",title:"踩坑 Categories"},regularPath:"/categories/%E8%B8%A9%E5%9D%91/",key:"v-ace8702e",path:"/categories/踩坑/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{frontmatter:{layout:"Layout",title:"Page 2 - 笔记 | Categories"},regularPath:"/categories/%E7%AC%94%E8%AE%B0/page/2/",key:"v-498db35e",path:"/categories/笔记/page/2/",headersStr:null,content:"",normalizedContent:"",charsets:{}}],themeConfig:{noFoundPageByTencent:!1,keyPage:{color:"#42b983",lineColor:"#42b983"},nav:[{text:"主页",link:"/",icon:"reco-home"},{text:"时间轴",link:"/timeline/",icon:"reco-date"},{text:"奖励",link:"/view/reward/"},{text:"关于",link:"/about/",icon:"reco-account"}],type:"blog",sidebar:"auto",blogConfig:{category:{location:2,text:"分类"},tag:{location:3,text:"标签"}},friendLink:[{title:"小博客",desc:"肥猫",logo:"/img/author.png",link:"https://www.axcmsm.vip"},{title:"大博客",desc:"WY",logo:"/img/favicon.ico",link:"https://axcmsm.gitee.io/book"}],valineConfig:{appId:"rC49Ba2MYnIlhzwbkcGzojAz-gzGzoHsz",appKey:"BG3dkm8rjyssNdOx8q7k18Vq",avatar:"0gSK7fXQED0hBYgFTXj9Qu72",enableQQ:!0,requiredFields:["nick","mail"]},logo:"/img/favicon.ico",search:!0,searchMaxSuggestions:10,lastUpdated:"Last Updated",author:"🎈",authorAvatar:"/img/author.png",record:"粤ICP备2021118714号",startYear:"2021",info:"再微小的光也是光，再平凡的人也有他们人生当中的高光时刻。",socials:{github:"https://github.com/axcmsm",gitlub:!0,gitee:"https://gitee.com/axcmsm",wechat:"https://gitee.com/axcmsm/tmp/raw/master/20210815232241.png",qq:"https://gitee.com/axcmsm/tmp/raw/master/20210815232244.png",book:"https://axcmsm.gitee.io/book/"},mottos:[{zh:"科技推特！🐧",en:"The pain of self-discipline is as light as a feather, and the pain of regret is as heavy as Mount Tai."},{zh:"科技推特！🐅",en:"The pain of self-discipline is as light as a feather, and the pain of regret is as heavy as Mount Tai."},{zh:"科技推特！🐧",en:"The pain of self-discipline is as light as a feather, and the pain of regret is as heavy as Mount Tai."},{zh:"科技推特！🐧",en:"The pain of self-discipline is as light as a feather, and the pain of regret is as heavy as Mount Tai."},{zh:"科技推特！🐅",en:"The pain of self-discipline is as light as a feather, and the pain of regret is as heavy as Mount Tai."},{zh:"科技推特！🐇",en:"The pain of self-discipline is as light as a feather, and the pain of regret is as heavy as Mount Tai."},{zh:"科技推特！🐇",en:"The pain of self-discipline is as light as a feather, and the pain of regret is as heavy as Mount Tai."}],covers:["/img/bjt1.jpg","/img/bjt7.jpg","/img/bjt3.jpg","/img/bjt4.jpg","/img/bjt5.jpg","/img/bjt6.jpg","/img/bjt7.jpg"],codeTheme:"default"},locales:{"/":{lang:"zh-CN",path:"/"}}},De=(t(282),t(283),t(81),t(284),t(78)),Le={computed:{$recoPosts:function(){var n=this.$categories.list.reduce((function(n,e){return[].concat(Object(Qn.a)(n),Object(Qn.a)(e.pages))}),[]);return n=Object(De.a)(n,!1),Object(De.c)(n),n},$recoPostsForTimeline:function(){var n=this.$recoPosts,e={},t=[];n=Object(De.a)(n,!0),this.pages=0==n.length?[]:n;for(var o=0,r=n.length;o<r;o++){var a=n[o],i=Be(a.frontmatter.date,"year");e[i]?e[i].push(a):e[i]=[a]}for(var s in e){var l=e[s];Object(De.b)(l),t.unshift({year:s,data:l})}return t},$showSubSideBar:function(){this.$themeConfig.subSidebar,this.$frontmatter.subSidebar;var n=this.$page.frontmatter.sidebar||this.$localeConfig.sidebar||this.$themeConfig.sidebar,e=this.$page.headers||[];return!("auto"!==n&&!n||!(e.length>0))}}};function Be(n,e){n=function(n){var e=new Date(n).toJSON();return new Date(+new Date(e)+288e5).toISOString().replace(/T/g," ").replace(/\.[\d]{3}Z/,"").replace(/-/g,"/")}(n);var t=new Date(n),o=t.getFullYear(),r=t.getMonth()+1,a=t.getDate();return"year"==e?o:"".concat(r,"-").concat(a)}var Ne=t(11),He={homeBlog:{article:"文章",tag:"标签",category:"分类",friendLink:"友情链接"},tag:{all:"全部"}},Fe={homeBlog:{article:"文章",tag:"標簽",category:"分類",friendLink:"友情鏈接"},tag:{all:"全部"}},Ue={homeBlog:{article:"Article",tag:"Tag",category:"Category",friendLink:"Friend Link"},tag:{all:"All"}},Ve={homeBlog:{article:"文章",tag:"ラベル",category:"分類",friendLink:"友情リンク"},tag:{all:"全部"}},We={homeBlog:{article:"글",tag:"태그",category:"분류",friendLink:"링크 참조"},tag:{all:"전체"}},Ke={computed:{$recoLocales:function(){var n=this.$themeLocaleConfig.recoLocales||{};return/^zh\-(CN|SG)$/.test(this.$lang)?Object(Ne.a)(Object(Ne.a)({},He),n):/^zh\-(HK|MO|TW)$/.test(this.$lang)?Object(Ne.a)(Object(Ne.a)({},Fe),n):/^ja\-JP$/.test(this.$lang)?Object(Ne.a)(Object(Ne.a)({},Ve),n):/^ko\-KR$/.test(this.$lang)?Object(Ne.a)(Object(Ne.a)({},We),n):Object(Ne.a)(Object(Ne.a)({},Ue),n)}}},Ge=t(33),Je=t(159);t(459);r.a.component("Badge",(function(){return Promise.all([t.e(0),t.e(10)]).then(t.bind(null,677))}));t(287);var Ye={name:"BackToTop",data:function(){return{visible:!1,customStyle:{right:"1rem",bottom:"6rem",width:"2.5rem",height:"2.5rem","border-radius":".25rem","line-height":"2.5rem"},visibilityHeight:400}},mounted:function(){window.addEventListener("scroll",this.throttle(this.handleScroll,500))},beforeDestroy:function(){window.removeEventListener("scroll",this.throttle(this.handleScroll,500))},methods:{handleScroll:function(){this.visible=window.pageYOffset>this.visibilityHeight},backToTop:function(){window.scrollTo(0,0)},throttle:function(n,e){var t=null,o=Date.now();return function(){var r=Date.now(),a=e-(r-o),i=this,s=arguments;clearTimeout(t),a<=0?(n.apply(i,s),o=Date.now()):t=setTimeout(n,a)}}}},Xe=(t(460),Object(Ce.a)(Ye,(function(){var n=this.$createElement,e=this._self._c||n;return e("transition",{attrs:{name:"fade"}},[e("div",{directives:[{name:"show",rawName:"v-show",value:this.visible,expression:"visible"}],staticClass:"back-to-ceiling",style:this.customStyle,on:{click:this.backToTop}},[e("svg",{staticClass:"icon",attrs:{t:"1574745035067",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"5404"}},[e("path",{attrs:{d:"M526.60727968 10.90185116a27.675 27.675 0 0 0-29.21455937 0c-131.36607665 82.28402758-218.69155461 228.01873535-218.69155402 394.07834331a462.20625001 462.20625001 0 0 0 5.36959153 69.94390903c1.00431239 6.55289093-0.34802892 13.13561351-3.76865779 18.80351572-32.63518765 54.11355614-51.75690182 118.55860487-51.7569018 187.94566865a371.06718723 371.06718723 0 0 0 11.50484808 91.98906777c6.53300375 25.50556257 41.68394495 28.14064038 52.69160883 4.22606766 17.37162448-37.73630017 42.14135425-72.50938081 72.80769204-103.21549295 2.18761121 3.04276886 4.15646224 6.24463696 6.40373557 9.22774369a1871.4375 1871.4375 0 0 0 140.04691725 5.34970492 1866.36093723 1866.36093723 0 0 0 140.04691723-5.34970492c2.24727335-2.98310674 4.21612437-6.18497483 6.3937923-9.2178004 30.66633723 30.70611158 55.4360664 65.4791928 72.80769147 103.21549355 11.00766384 23.91457269 46.15860503 21.27949489 52.69160879-4.22606768a371.15156223 371.15156223 0 0 0 11.514792-91.99901164c0-69.36717486-19.13165746-133.82216804-51.75690182-187.92578088-3.42062944-5.66790279-4.76302748-12.26056868-3.76865837-18.80351632a462.20625001 462.20625001 0 0 0 5.36959269-69.943909c-0.00994388-166.08943902-87.32547796-311.81420293-218.6915546-394.09823051zM605.93803103 357.87693858a93.93749974 93.93749974 0 1 1-187.89594924 6.1e-7 93.93749974 93.93749974 0 0 1 187.89594924-6.1e-7z","p-id":"5405"}}),e("path",{attrs:{d:"M429.50777625 765.63860547C429.50777625 803.39355007 466.44236686 1000.39046097 512.00932183 1000.39046097c45.56695499 0 82.4922232-197.00623328 82.5015456-234.7518555 0-37.75494459-36.9345906-68.35043303-82.4922232-68.34111062-45.57627738-0.00932239-82.52019037 30.59548842-82.51086798 68.34111062z","p-id":"5406"}})])])])}),[],!1,null,"c6073ba8",null).exports),Qe=(t(461),Object(Ce.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{attrs:{id:"loader-wrapper"}},[t("div",{staticClass:"loader-main"},n._l(4,(function(n){return t("div",{key:"out"+n})})),0),n._v(" "),n.$frontmatter.home?t("h3",{staticClass:"title"},[n._v(n._s(n.$site.title||n.$localeConfig.title))]):n._e(),n._v(" "),n.$frontmatter.home?t("p",{staticClass:"description"},[n._v(n._s(n.$site.description||n.$localeConfig.description))]):n._e()])}),[],!1,null,"d48f4d20",null).exports),Ze=(t(160),t(278),{prev:"上一页",next:"下一页",go:"前往",jump:"跳转至"}),nt={prev:"上壹頁",next:"下壹頁",go:"前往",jump:"跳轉至"},et={prev:"Prev",next:"Next",go:"Go",jump:"Jump To"},tt={prev:"前のページ",next:"次のページ",go:"へ",jump:"ジャンプ"},ot={prev:"이전 페이지",next:"다음 페이지",go:"행",jump:"건너뛰기"};var rt={data:function(){return{changePage:"",pageSize:10}},props:{total:{type:Number,default:10},perPage:{type:Number,default:10},currentPage:{type:Number,default:1}},computed:{pages:function(){var n=this.pageSize||this.perPage;return Math.ceil(this.total/n)},show:function(){return this.pages&&1!=this.pages},efont:function(){return!(this.pages<=7)&&this.currentPage>5},indexs:function(){var n=1,e=this.pages,t=[];for(this.pages>=7&&(this.currentPage>5&&this.currentPage<this.pages-4?(n=Number(this.currentPage)-3,e=Number(this.currentPage)+3):this.currentPage<=5?(n=1,e=7):(e=this.pages,n=this.pages-6));n<=e;)t.push(n),n++;return t},pagationLocales:function(){return e=(n=this).$lang,t=n.$recoLocales,(t=void 0===t?{}:t).pagation||(/^zh\-(CN|SG)$/.test(e)?Ze:/^zh\-(HK|MO|TW)$/.test(e)?nt:/^ja\-JP$/.test(e)?tt:/^ko\-KR$/.test(e)?ot:et);var n,e,t}},methods:{goPrev:function(){var n=this.currentPage;this.currentPage>1&&this.emit(--n)},goNext:function(){var n=this.currentPage;n<this.pages&&this.emit(++n)},jumpPage:function(n){var e=parseInt(n);e<=this.pages&&e>0?this.emit(e):alert("请输入大于0，并且小于".concat(this.pages,"的页码！"))},emit:function(n){this.$emit("getCurrentPage",n)}}},at=(t(463),Object(Ce.a)(rt,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{directives:[{name:"show",rawName:"v-show",value:n.show,expression:"show"}],staticClass:"pagation"},[t("div",{staticClass:"pagation-list"},[t("span",{directives:[{name:"show",rawName:"v-show",value:n.currentPage>1,expression:"currentPage > 1"}],staticClass:"jump",attrs:{unselectable:"on"},on:{click:n.goPrev}},[n._v(n._s(n.pagationLocales.prev))]),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.efont,expression:"efont"}],staticClass:"jump",on:{click:function(e){return n.jumpPage(1)}}},[n._v("1")]),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.efont,expression:"efont"}],staticClass:"ellipsis"},[n._v("...")]),n._v(" "),n._l(n.indexs,(function(e){return t("span",{key:e,staticClass:"jump",class:{bgprimary:n.currentPage==e},on:{click:function(t){return n.jumpPage(e)}}},[n._v(n._s(e))])})),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.efont&&n.currentPage<n.pages-4,expression:"efont&&currentPage<pages-4"}],staticClass:"ellipsis"},[n._v("...")]),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.efont&&n.currentPage<n.pages-4,expression:"efont&&currentPage<pages-4"}],staticClass:"jump",on:{click:function(e){return n.jumpPage(n.pages)}}},[n._v(n._s(n.pages))]),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.currentPage<n.pages,expression:"currentPage < pages"}],staticClass:"jump",on:{click:n.goNext}},[n._v(n._s(n.pagationLocales.next))]),n._v(" "),t("span",{staticClass:"jumppoint"},[n._v(n._s(n.pagationLocales.jump))]),n._v(" "),t("span",{staticClass:"jumpinp"},[t("input",{directives:[{name:"model",rawName:"v-model",value:n.changePage,expression:"changePage"}],attrs:{type:"text"},domProps:{value:n.changePage},on:{input:function(e){e.target.composing||(n.changePage=e.target.value)}}})]),n._v(" "),t("span",{staticClass:"jump gobtn",on:{click:function(e){return n.jumpPage(n.changePage)}}},[n._v(n._s(n.pagationLocales.go))])],2)])}),[],!1,null,"094d08e4",null).exports),it={name:"Valine",props:{options:{type:Object,default:function(){return{}}}},mounted:function(){this.initValine()},methods:{initValine:function(){new(t(464))(Object(Ne.a)({el:"#valine",placeholder:"just go go",notify:!1,verify:!1,avatar:"retro",visitor:!0,recordIP:!1,path:window.location.pathname},this.options))}},watch:{$route:function(n,e){var t=this;n.path!==e.path&&setTimeout((function(){t.initValine()}),300)}}},st=(t(465),Object(Ce.a)(it,(function(){var n=this.$createElement;this._self._c;return this._m(0)}),[function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"valine-wrapper"},[e("div",{attrs:{id:"valine"}})])}],!1,null,null,null).exports);
/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */
function lt(n){return(lt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function ct(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function pt(n){return function(n){if(Array.isArray(n)){for(var e=0,t=new Array(n.length);e<n.length;e++)t[e]=n[e];return t}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function dt(){return"undefined"!=typeof Reflect&&Reflect.defineMetadata&&Reflect.getOwnMetadataKeys}function ut(n,e){mt(n,e),Object.getOwnPropertyNames(e.prototype).forEach((function(t){mt(n.prototype,e.prototype,t)})),Object.getOwnPropertyNames(e).forEach((function(t){mt(n,e,t)}))}function mt(n,e,t){(t?Reflect.getOwnMetadataKeys(e,t):Reflect.getOwnMetadataKeys(e)).forEach((function(o){var r=t?Reflect.getOwnMetadata(o,e,t):Reflect.getOwnMetadata(o,e);t?Reflect.defineMetadata(o,r,n,t):Reflect.defineMetadata(o,r,n)}))}var ht={__proto__:[]}instanceof Array;function ft(n){return function(e,t,o){var r="function"==typeof e?e:e.constructor;r.__decorators__||(r.__decorators__=[]),"number"!=typeof o&&(o=void 0),r.__decorators__.push((function(e){return n(e,t,o)}))}}function vt(n,e){var t=e.prototype._init;e.prototype._init=function(){var e=this,t=Object.getOwnPropertyNames(n);if(n.$options.props)for(var o in n.$options.props)n.hasOwnProperty(o)||t.push(o);t.forEach((function(t){Object.defineProperty(e,t,{get:function(){return n[t]},set:function(e){n[t]=e},configurable:!0})}))};var o=new e;e.prototype._init=t;var r={};return Object.keys(o).forEach((function(n){void 0!==o[n]&&(r[n]=o[n])})),r}var gt=["data","beforeCreate","created","beforeMount","mounted","beforeDestroy","destroyed","beforeUpdate","updated","activated","deactivated","render","errorCaptured","serverPrefetch"];function yt(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.name=e.name||n._componentTag||n.name;var t=n.prototype;Object.getOwnPropertyNames(t).forEach((function(n){if("constructor"!==n)if(gt.indexOf(n)>-1)e[n]=t[n];else{var o=Object.getOwnPropertyDescriptor(t,n);void 0!==o.value?"function"==typeof o.value?(e.methods||(e.methods={}))[n]=o.value:(e.mixins||(e.mixins=[])).push({data:function(){return ct({},n,o.value)}}):(o.get||o.set)&&((e.computed||(e.computed={}))[n]={get:o.get,set:o.set})}})),(e.mixins||(e.mixins=[])).push({data:function(){return vt(this,n)}});var o=n.__decorators__;o&&(o.forEach((function(n){return n(e)})),delete n.__decorators__);var a=Object.getPrototypeOf(n.prototype),i=a instanceof r.a?a.constructor:r.a,s=i.extend(e);return xt(s,n,i),dt()&&ut(s,n),s}var bt={prototype:!0,arguments:!0,callee:!0,caller:!0};function xt(n,e,t){Object.getOwnPropertyNames(e).forEach((function(o){if(!bt[o]){var r=Object.getOwnPropertyDescriptor(n,o);if(!r||r.configurable){var a,i,s=Object.getOwnPropertyDescriptor(e,o);if(!ht){if("cid"===o)return;var l=Object.getOwnPropertyDescriptor(t,o);if(a=s.value,i=lt(a),null!=a&&("object"===i||"function"===i)&&l&&l.value===s.value)return}0,Object.defineProperty(n,o,s)}}}))}function _t(n){return"function"==typeof n?yt(n):function(e){return yt(e,n)}}_t.registerHooks=function(n){gt.push.apply(gt,pt(n))};var kt=_t;function wt(n){return ft((function(e,t){void 0===e.inject&&(e.inject={}),Array.isArray(e.inject)||(e.inject[t]=n||t)}))}function jt(n){var e=function(){var t=this,o="function"==typeof n?n.call(this):n;for(var r in(o=Object.create(o||null)).__reactiveInject__=this.__reactiveInject__||{},e.managed)o[e.managed[r]]=this[r];var a=function(n){o[e.managedReactive[n]]=i[n],Object.defineProperty(o.__reactiveInject__,e.managedReactive[n],{enumerable:!0,get:function(){return t[n]}})},i=this;for(var r in e.managedReactive)a(r);return o};return e.managed={},e.managedReactive={},e}function Et(n){return"function"!=typeof n||!n.managed&&!n.managedReactive}var St="undefined"!=typeof Reflect&&void 0!==Reflect.getMetadata;function At(n,e,t){if(St&&!Array.isArray(n)&&"function"!=typeof n&&void 0===n.type){var o=Reflect.getMetadata("design:type",e,t);o!==Object&&(n.type=o)}}function zt(n){return void 0===n&&(n={}),function(e,t){At(n,e,t),ft((function(e,t){(e.props||(e.props={}))[t]=n}))(e,t)}}function Tt(n,e){void 0===e&&(e={});var t=e.deep,o=void 0!==t&&t,r=e.immediate,a=void 0!==r&&r;return ft((function(e,t){"object"!=typeof e.watch&&(e.watch=Object.create(null));var r=e.watch;"object"!=typeof r[n]||Array.isArray(r[n])?void 0===r[n]&&(r[n]=[]):r[n]=[r[n]],r[n].push({handler:t,deep:o,immediate:a})}))}var Ot=t(57);const Ct=n=>Object(Ot.stringify)(n),It=(n,e)=>`${n}${Object(Ot.stringify)(e,{addQueryPrefix:!0})}`,$t=(n,e)=>`${n.replace(/\/$/,"")}/${e.replace(/^\//,"")}`;var Pt=t(275),Mt=t.n(Pt);const qt=n=>Mt()(n,"YYYY-MM-DD HH:mm:ss"),Rt=n=>(n.split("#")[0]||"").split("?")[0]||"",Dt=n=>Object(Ot.parse)(n,{ignoreQueryPrefix:!0})
/*!
 * vue-i18n v8.25.0 
 * (c) 2021 kazuya kawaguchi
 * Released under the MIT License.
 */;var Lt=["compactDisplay","currency","currencyDisplay","currencySign","localeMatcher","notation","numberingSystem","signDisplay","style","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits"];function Bt(n,e){"undefined"!=typeof console&&(console.warn("[vue-i18n] "+n),e&&console.warn(e.stack))}var Nt=Array.isArray;function Ht(n){return null!==n&&"object"==typeof n}function Ft(n){return"string"==typeof n}var Ut=Object.prototype.toString;function Vt(n){return"[object Object]"===Ut.call(n)}function Wt(n){return null==n}function Kt(n){return"function"==typeof n}function Gt(){for(var n=[],e=arguments.length;e--;)n[e]=arguments[e];var t=null,o=null;return 1===n.length?Ht(n[0])||Nt(n[0])?o=n[0]:"string"==typeof n[0]&&(t=n[0]):2===n.length&&("string"==typeof n[0]&&(t=n[0]),(Ht(n[1])||Nt(n[1]))&&(o=n[1])),{locale:t,params:o}}function Jt(n){return JSON.parse(JSON.stringify(n))}function Yt(n,e){return!!~n.indexOf(e)}var Xt=Object.prototype.hasOwnProperty;function Qt(n,e){return Xt.call(n,e)}function Zt(n){for(var e=arguments,t=Object(n),o=1;o<arguments.length;o++){var r=e[o];if(null!=r){var a=void 0;for(a in r)Qt(r,a)&&(Ht(r[a])?t[a]=Zt(t[a],r[a]):t[a]=r[a])}}return t}function no(n,e){if(n===e)return!0;var t=Ht(n),o=Ht(e);if(!t||!o)return!t&&!o&&String(n)===String(e);try{var r=Nt(n),a=Nt(e);if(r&&a)return n.length===e.length&&n.every((function(n,t){return no(n,e[t])}));if(r||a)return!1;var i=Object.keys(n),s=Object.keys(e);return i.length===s.length&&i.every((function(t){return no(n[t],e[t])}))}catch(n){return!1}}function eo(n){return null!=n&&Object.keys(n).forEach((function(e){"string"==typeof n[e]&&(n[e]=n[e].replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"))})),n}var to={beforeCreate:function(){var n=this.$options;if(n.i18n=n.i18n||(n.__i18n?{}:null),n.i18n)if(n.i18n instanceof Io){if(n.__i18n)try{var e=n.i18n&&n.i18n.messages?n.i18n.messages:{};n.__i18n.forEach((function(n){e=Zt(e,JSON.parse(n))})),Object.keys(e).forEach((function(t){n.i18n.mergeLocaleMessage(t,e[t])}))}catch(n){0}this._i18n=n.i18n,this._i18nWatcher=this._i18n.watchI18nData()}else if(Vt(n.i18n)){var t=this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Io?this.$root.$i18n:null;if(t&&(n.i18n.root=this.$root,n.i18n.formatter=t.formatter,n.i18n.fallbackLocale=t.fallbackLocale,n.i18n.formatFallbackMessages=t.formatFallbackMessages,n.i18n.silentTranslationWarn=t.silentTranslationWarn,n.i18n.silentFallbackWarn=t.silentFallbackWarn,n.i18n.pluralizationRules=t.pluralizationRules,n.i18n.preserveDirectiveContent=t.preserveDirectiveContent),n.__i18n)try{var o=n.i18n&&n.i18n.messages?n.i18n.messages:{};n.__i18n.forEach((function(n){o=Zt(o,JSON.parse(n))})),n.i18n.messages=o}catch(n){0}var r=n.i18n.sharedMessages;r&&Vt(r)&&(n.i18n.messages=Zt(n.i18n.messages,r)),this._i18n=new Io(n.i18n),this._i18nWatcher=this._i18n.watchI18nData(),(void 0===n.i18n.sync||n.i18n.sync)&&(this._localeWatcher=this.$i18n.watchLocale()),t&&t.onComponentInstanceCreated(this._i18n)}else 0;else this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Io?this._i18n=this.$root.$i18n:n.parent&&n.parent.$i18n&&n.parent.$i18n instanceof Io&&(this._i18n=n.parent.$i18n)},beforeMount:function(){var n=this.$options;n.i18n=n.i18n||(n.__i18n?{}:null),n.i18n?(n.i18n instanceof Io||Vt(n.i18n))&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0):(this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Io||n.parent&&n.parent.$i18n&&n.parent.$i18n instanceof Io)&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0)},mounted:function(){this!==this.$root&&this.$options.__INTLIFY_META__&&this.$el&&this.$el.setAttribute("data-intlify",this.$options.__INTLIFY_META__)},beforeDestroy:function(){if(this._i18n){var n=this;this.$nextTick((function(){n._subscribing&&(n._i18n.unsubscribeDataChanging(n),delete n._subscribing),n._i18nWatcher&&(n._i18nWatcher(),n._i18n.destroyVM(),delete n._i18nWatcher),n._localeWatcher&&(n._localeWatcher(),delete n._localeWatcher)}))}}},oo={name:"i18n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},path:{type:String,required:!0},locale:{type:String},places:{type:[Array,Object]}},render:function(n,e){var t=e.data,o=e.parent,r=e.props,a=e.slots,i=o.$i18n;if(i){var s=r.path,l=r.locale,c=r.places,p=a(),d=i.i(s,l,function(n){var e;for(e in n)if("default"!==e)return!1;return Boolean(e)}(p)||c?function(n,e){var t=e?function(n){0;return Array.isArray(n)?n.reduce(ao,{}):Object.assign({},n)}(e):{};if(!n)return t;var o=(n=n.filter((function(n){return n.tag||""!==n.text.trim()}))).every(io);0;return n.reduce(o?ro:ao,t)}(p.default,c):p),u=r.tag&&!0!==r.tag||!1===r.tag?r.tag:"span";return u?n(u,t,d):d}}};function ro(n,e){return e.data&&e.data.attrs&&e.data.attrs.place&&(n[e.data.attrs.place]=e),n}function ao(n,e,t){return n[t]=e,n}function io(n){return Boolean(n.data&&n.data.attrs&&n.data.attrs.place)}var so,lo={name:"i18n-n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},value:{type:Number,required:!0},format:{type:[String,Object]},locale:{type:String}},render:function(n,e){var t=e.props,o=e.parent,r=e.data,a=o.$i18n;if(!a)return null;var i=null,s=null;Ft(t.format)?i=t.format:Ht(t.format)&&(t.format.key&&(i=t.format.key),s=Object.keys(t.format).reduce((function(n,e){var o;return Yt(Lt,e)?Object.assign({},n,((o={})[e]=t.format[e],o)):n}),null));var l=t.locale||a.locale,c=a._ntp(t.value,l,i,s),p=c.map((function(n,e){var t,o=r.scopedSlots&&r.scopedSlots[n.type];return o?o(((t={})[n.type]=n.value,t.index=e,t.parts=c,t)):n.value})),d=t.tag&&!0!==t.tag||!1===t.tag?t.tag:"span";return d?n(d,{attrs:r.attrs,class:r.class,staticClass:r.staticClass},p):p}};function co(n,e,t){mo(n,t)&&ho(n,e,t)}function po(n,e,t,o){if(mo(n,t)){var r=t.context.$i18n;(function(n,e){var t=e.context;return n._locale===t.$i18n.locale})(n,t)&&no(e.value,e.oldValue)&&no(n._localeMessage,r.getLocaleMessage(r.locale))||ho(n,e,t)}}function uo(n,e,t,o){if(t.context){var r=t.context.$i18n||{};e.modifiers.preserve||r.preserveDirectiveContent||(n.textContent=""),n._vt=void 0,delete n._vt,n._locale=void 0,delete n._locale,n._localeMessage=void 0,delete n._localeMessage}else Bt("Vue instance does not exists in VNode context")}function mo(n,e){var t=e.context;return t?!!t.$i18n||(Bt("VueI18n instance does not exists in Vue instance"),!1):(Bt("Vue instance does not exists in VNode context"),!1)}function ho(n,e,t){var o,r,a=function(n){var e,t,o,r;Ft(n)?e=n:Vt(n)&&(e=n.path,t=n.locale,o=n.args,r=n.choice);return{path:e,locale:t,args:o,choice:r}}(e.value),i=a.path,s=a.locale,l=a.args,c=a.choice;if(i||s||l)if(i){var p=t.context;n._vt=n.textContent=null!=c?(o=p.$i18n).tc.apply(o,[i,c].concat(fo(s,l))):(r=p.$i18n).t.apply(r,[i].concat(fo(s,l))),n._locale=p.$i18n.locale,n._localeMessage=p.$i18n.getLocaleMessage(p.$i18n.locale)}else Bt("`path` is required in v-t directive");else Bt("value type not supported")}function fo(n,e){var t=[];return n&&t.push(n),e&&(Array.isArray(e)||Vt(e))&&t.push(e),t}function vo(n){vo.installed=!0;var e;(so=n).version&&Number(so.version.split(".")[0]);(e=so).prototype.hasOwnProperty("$i18n")||Object.defineProperty(e.prototype,"$i18n",{get:function(){return this._i18n}}),e.prototype.$t=function(n){for(var e=[],t=arguments.length-1;t-- >0;)e[t]=arguments[t+1];var o=this.$i18n;return o._t.apply(o,[n,o.locale,o._getMessages(),this].concat(e))},e.prototype.$tc=function(n,e){for(var t=[],o=arguments.length-2;o-- >0;)t[o]=arguments[o+2];var r=this.$i18n;return r._tc.apply(r,[n,r.locale,r._getMessages(),this,e].concat(t))},e.prototype.$te=function(n,e){var t=this.$i18n;return t._te(n,t.locale,t._getMessages(),e)},e.prototype.$d=function(n){for(var e,t=[],o=arguments.length-1;o-- >0;)t[o]=arguments[o+1];return(e=this.$i18n).d.apply(e,[n].concat(t))},e.prototype.$n=function(n){for(var e,t=[],o=arguments.length-1;o-- >0;)t[o]=arguments[o+1];return(e=this.$i18n).n.apply(e,[n].concat(t))},so.mixin(to),so.directive("t",{bind:co,update:po,unbind:uo}),so.component(oo.name,oo),so.component(lo.name,lo),so.config.optionMergeStrategies.i18n=function(n,e){return void 0===e?n:e}}var go=function(){this._caches=Object.create(null)};go.prototype.interpolate=function(n,e){if(!e)return[n];var t=this._caches[n];return t||(t=function(n){var e=[],t=0,o="";for(;t<n.length;){var r=n[t++];if("{"===r){o&&e.push({type:"text",value:o}),o="";var a="";for(r=n[t++];void 0!==r&&"}"!==r;)a+=r,r=n[t++];var i="}"===r,s=yo.test(a)?"list":i&&bo.test(a)?"named":"unknown";e.push({value:a,type:s})}else"%"===r?"{"!==n[t]&&(o+=r):o+=r}return o&&e.push({type:"text",value:o}),e}(n),this._caches[n]=t),function(n,e){var t=[],o=0,r=Array.isArray(e)?"list":Ht(e)?"named":"unknown";if("unknown"===r)return t;for(;o<n.length;){var a=n[o];switch(a.type){case"text":t.push(a.value);break;case"list":t.push(e[parseInt(a.value,10)]);break;case"named":"named"===r&&t.push(e[a.value]);break;case"unknown":0}o++}return t}(t,e)};var yo=/^(?:\d)+/,bo=/^(?:\w)+/;var xo=[];xo[0]={ws:[0],ident:[3,0],"[":[4],eof:[7]},xo[1]={ws:[1],".":[2],"[":[4],eof:[7]},xo[2]={ws:[2],ident:[3,0],0:[3,0],number:[3,0]},xo[3]={ident:[3,0],0:[3,0],number:[3,0],ws:[1,1],".":[2,1],"[":[4,1],eof:[7,1]},xo[4]={"'":[5,0],'"':[6,0],"[":[4,2],"]":[1,3],eof:8,else:[4,0]},xo[5]={"'":[4,0],eof:8,else:[5,0]},xo[6]={'"':[4,0],eof:8,else:[6,0]};var _o=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function ko(n){if(null==n)return"eof";switch(n.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return n;case 95:case 36:case 45:return"ident";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"ws"}return"ident"}function wo(n){var e,t,o,r=n.trim();return("0"!==n.charAt(0)||!isNaN(n))&&(o=r,_o.test(o)?(t=(e=r).charCodeAt(0))!==e.charCodeAt(e.length-1)||34!==t&&39!==t?e:e.slice(1,-1):"*"+r)}var jo=function(){this._cache=Object.create(null)};jo.prototype.parsePath=function(n){var e=this._cache[n];return e||(e=function(n){var e,t,o,r,a,i,s,l=[],c=-1,p=0,d=0,u=[];function m(){var e=n[c+1];if(5===p&&"'"===e||6===p&&'"'===e)return c++,o="\\"+e,u[0](),!0}for(u[1]=function(){void 0!==t&&(l.push(t),t=void 0)},u[0]=function(){void 0===t?t=o:t+=o},u[2]=function(){u[0](),d++},u[3]=function(){if(d>0)d--,p=4,u[0]();else{if(d=0,void 0===t)return!1;if(!1===(t=wo(t)))return!1;u[1]()}};null!==p;)if(c++,"\\"!==(e=n[c])||!m()){if(r=ko(e),8===(a=(s=xo[p])[r]||s.else||8))return;if(p=a[0],(i=u[a[1]])&&(o=void 0===(o=a[2])?e:o,!1===i()))return;if(7===p)return l}}(n))&&(this._cache[n]=e),e||[]},jo.prototype.getPathValue=function(n,e){if(!Ht(n))return null;var t=this.parsePath(e);if(0===t.length)return null;for(var o=t.length,r=n,a=0;a<o;){var i=r[t[a]];if(null==i)return null;r=i,a++}return r};var Eo,So=/<\/?[\w\s="/.':;#-\/]+>/,Ao=/(?:@(?:\.[a-z]+)?:(?:[\w\-_|.]+|\([\w\-_|.]+\)))/g,zo=/^@(?:\.([a-z]+))?:/,To=/[()]/g,Oo={upper:function(n){return n.toLocaleUpperCase()},lower:function(n){return n.toLocaleLowerCase()},capitalize:function(n){return""+n.charAt(0).toLocaleUpperCase()+n.substr(1)}},Co=new go,Io=function(n){var e=this;void 0===n&&(n={}),!so&&"undefined"!=typeof window&&window.Vue&&vo(window.Vue);var t=n.locale||"en-US",o=!1!==n.fallbackLocale&&(n.fallbackLocale||"en-US"),r=n.messages||{},a=n.dateTimeFormats||{},i=n.numberFormats||{};this._vm=null,this._formatter=n.formatter||Co,this._modifiers=n.modifiers||{},this._missing=n.missing||null,this._root=n.root||null,this._sync=void 0===n.sync||!!n.sync,this._fallbackRoot=void 0===n.fallbackRoot||!!n.fallbackRoot,this._formatFallbackMessages=void 0!==n.formatFallbackMessages&&!!n.formatFallbackMessages,this._silentTranslationWarn=void 0!==n.silentTranslationWarn&&n.silentTranslationWarn,this._silentFallbackWarn=void 0!==n.silentFallbackWarn&&!!n.silentFallbackWarn,this._dateTimeFormatters={},this._numberFormatters={},this._path=new jo,this._dataListeners=new Set,this._componentInstanceCreatedListener=n.componentInstanceCreatedListener||null,this._preserveDirectiveContent=void 0!==n.preserveDirectiveContent&&!!n.preserveDirectiveContent,this.pluralizationRules=n.pluralizationRules||{},this._warnHtmlInMessage=n.warnHtmlInMessage||"off",this._postTranslation=n.postTranslation||null,this._escapeParameterHtml=n.escapeParameterHtml||!1,this.getChoiceIndex=function(n,t){var o=Object.getPrototypeOf(e);if(o&&o.getChoiceIndex)return o.getChoiceIndex.call(e,n,t);var r,a;return e.locale in e.pluralizationRules?e.pluralizationRules[e.locale].apply(e,[n,t]):(r=n,a=t,r=Math.abs(r),2===a?r?r>1?1:0:1:r?Math.min(r,2):0)},this._exist=function(n,t){return!(!n||!t)&&(!Wt(e._path.getPathValue(n,t))||!!n[t])},"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||Object.keys(r).forEach((function(n){e._checkLocaleMessage(n,e._warnHtmlInMessage,r[n])})),this._initVM({locale:t,fallbackLocale:o,messages:r,dateTimeFormats:a,numberFormats:i})},$o={vm:{configurable:!0},messages:{configurable:!0},dateTimeFormats:{configurable:!0},numberFormats:{configurable:!0},availableLocales:{configurable:!0},locale:{configurable:!0},fallbackLocale:{configurable:!0},formatFallbackMessages:{configurable:!0},missing:{configurable:!0},formatter:{configurable:!0},silentTranslationWarn:{configurable:!0},silentFallbackWarn:{configurable:!0},preserveDirectiveContent:{configurable:!0},warnHtmlInMessage:{configurable:!0},postTranslation:{configurable:!0}};Io.prototype._checkLocaleMessage=function(n,e,t){var o=function(n,e,t,r){if(Vt(t))Object.keys(t).forEach((function(a){var i=t[a];Vt(i)?(r.push(a),r.push("."),o(n,e,i,r),r.pop(),r.pop()):(r.push(a),o(n,e,i,r),r.pop())}));else if(Nt(t))t.forEach((function(t,a){Vt(t)?(r.push("["+a+"]"),r.push("."),o(n,e,t,r),r.pop(),r.pop()):(r.push("["+a+"]"),o(n,e,t,r),r.pop())}));else if(Ft(t)){if(So.test(t)){var a="Detected HTML in message '"+t+"' of keypath '"+r.join("")+"' at '"+e+"'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";"warn"===n?Bt(a):"error"===n&&function(n,e){"undefined"!=typeof console&&(console.error("[vue-i18n] "+n),e&&console.error(e.stack))}(a)}}};o(e,n,t,[])},Io.prototype._initVM=function(n){var e=so.config.silent;so.config.silent=!0,this._vm=new so({data:n}),so.config.silent=e},Io.prototype.destroyVM=function(){this._vm.$destroy()},Io.prototype.subscribeDataChanging=function(n){this._dataListeners.add(n)},Io.prototype.unsubscribeDataChanging=function(n){!function(n,e){if(n.delete(e));}(this._dataListeners,n)},Io.prototype.watchI18nData=function(){var n=this;return this._vm.$watch("$data",(function(){for(var e,t,o=(e=n._dataListeners,t=[],e.forEach((function(n){return t.push(n)})),t),r=o.length;r--;)so.nextTick((function(){o[r]&&o[r].$forceUpdate()}))}),{deep:!0})},Io.prototype.watchLocale=function(){if(!this._sync||!this._root)return null;var n=this._vm;return this._root.$i18n.vm.$watch("locale",(function(e){n.$set(n,"locale",e),n.$forceUpdate()}),{immediate:!0})},Io.prototype.onComponentInstanceCreated=function(n){this._componentInstanceCreatedListener&&this._componentInstanceCreatedListener(n,this)},$o.vm.get=function(){return this._vm},$o.messages.get=function(){return Jt(this._getMessages())},$o.dateTimeFormats.get=function(){return Jt(this._getDateTimeFormats())},$o.numberFormats.get=function(){return Jt(this._getNumberFormats())},$o.availableLocales.get=function(){return Object.keys(this.messages).sort()},$o.locale.get=function(){return this._vm.locale},$o.locale.set=function(n){this._vm.$set(this._vm,"locale",n)},$o.fallbackLocale.get=function(){return this._vm.fallbackLocale},$o.fallbackLocale.set=function(n){this._localeChainCache={},this._vm.$set(this._vm,"fallbackLocale",n)},$o.formatFallbackMessages.get=function(){return this._formatFallbackMessages},$o.formatFallbackMessages.set=function(n){this._formatFallbackMessages=n},$o.missing.get=function(){return this._missing},$o.missing.set=function(n){this._missing=n},$o.formatter.get=function(){return this._formatter},$o.formatter.set=function(n){this._formatter=n},$o.silentTranslationWarn.get=function(){return this._silentTranslationWarn},$o.silentTranslationWarn.set=function(n){this._silentTranslationWarn=n},$o.silentFallbackWarn.get=function(){return this._silentFallbackWarn},$o.silentFallbackWarn.set=function(n){this._silentFallbackWarn=n},$o.preserveDirectiveContent.get=function(){return this._preserveDirectiveContent},$o.preserveDirectiveContent.set=function(n){this._preserveDirectiveContent=n},$o.warnHtmlInMessage.get=function(){return this._warnHtmlInMessage},$o.warnHtmlInMessage.set=function(n){var e=this,t=this._warnHtmlInMessage;if(this._warnHtmlInMessage=n,t!==n&&("warn"===n||"error"===n)){var o=this._getMessages();Object.keys(o).forEach((function(n){e._checkLocaleMessage(n,e._warnHtmlInMessage,o[n])}))}},$o.postTranslation.get=function(){return this._postTranslation},$o.postTranslation.set=function(n){this._postTranslation=n},Io.prototype._getMessages=function(){return this._vm.messages},Io.prototype._getDateTimeFormats=function(){return this._vm.dateTimeFormats},Io.prototype._getNumberFormats=function(){return this._vm.numberFormats},Io.prototype._warnDefault=function(n,e,t,o,r,a){if(!Wt(t))return t;if(this._missing){var i=this._missing.apply(null,[n,e,o,r]);if(Ft(i))return i}else 0;if(this._formatFallbackMessages){var s=Gt.apply(void 0,r);return this._render(e,a,s.params,e)}return e},Io.prototype._isFallbackRoot=function(n){return!n&&!Wt(this._root)&&this._fallbackRoot},Io.prototype._isSilentFallbackWarn=function(n){return this._silentFallbackWarn instanceof RegExp?this._silentFallbackWarn.test(n):this._silentFallbackWarn},Io.prototype._isSilentFallback=function(n,e){return this._isSilentFallbackWarn(e)&&(this._isFallbackRoot()||n!==this.fallbackLocale)},Io.prototype._isSilentTranslationWarn=function(n){return this._silentTranslationWarn instanceof RegExp?this._silentTranslationWarn.test(n):this._silentTranslationWarn},Io.prototype._interpolate=function(n,e,t,o,r,a,i){if(!e)return null;var s,l=this._path.getPathValue(e,t);if(Nt(l)||Vt(l))return l;if(Wt(l)){if(!Vt(e))return null;if(!Ft(s=e[t])&&!Kt(s))return null}else{if(!Ft(l)&&!Kt(l))return null;s=l}return Ft(s)&&(s.indexOf("@:")>=0||s.indexOf("@.")>=0)&&(s=this._link(n,e,s,o,"raw",a,i)),this._render(s,r,a,t)},Io.prototype._link=function(n,e,t,o,r,a,i){var s=t,l=s.match(Ao);for(var c in l)if(l.hasOwnProperty(c)){var p=l[c],d=p.match(zo),u=d[0],m=d[1],h=p.replace(u,"").replace(To,"");if(Yt(i,h))return s;i.push(h);var f=this._interpolate(n,e,h,o,"raw"===r?"string":r,"raw"===r?void 0:a,i);if(this._isFallbackRoot(f)){if(!this._root)throw Error("unexpected error");var v=this._root.$i18n;f=v._translate(v._getMessages(),v.locale,v.fallbackLocale,h,o,r,a)}f=this._warnDefault(n,h,f,o,Nt(a)?a:[a],r),this._modifiers.hasOwnProperty(m)?f=this._modifiers[m](f):Oo.hasOwnProperty(m)&&(f=Oo[m](f)),i.pop(),s=f?s.replace(p,f):s}return s},Io.prototype._createMessageContext=function(n,e,t,o){var r=this,a=Nt(n)?n:[],i=Ht(n)?n:{},s=this._getMessages(),l=this.locale;return{list:function(n){return a[n]},named:function(n){return i[n]},values:n,formatter:e,path:t,messages:s,locale:l,linked:function(n){return r._interpolate(l,s[l]||{},n,null,o,void 0,[n])}}},Io.prototype._render=function(n,e,t,o){if(Kt(n))return n(this._createMessageContext(t,this._formatter||Co,o,e));var r=this._formatter.interpolate(n,t,o);return r||(r=Co.interpolate(n,t,o)),"string"!==e||Ft(r)?r:r.join("")},Io.prototype._appendItemToChain=function(n,e,t){var o=!1;return Yt(n,e)||(o=!0,e&&(o="!"!==e[e.length-1],e=e.replace(/!/g,""),n.push(e),t&&t[e]&&(o=t[e]))),o},Io.prototype._appendLocaleToChain=function(n,e,t){var o,r=e.split("-");do{var a=r.join("-");o=this._appendItemToChain(n,a,t),r.splice(-1,1)}while(r.length&&!0===o);return o},Io.prototype._appendBlockToChain=function(n,e,t){for(var o=!0,r=0;r<e.length&&"boolean"==typeof o;r++){var a=e[r];Ft(a)&&(o=this._appendLocaleToChain(n,a,t))}return o},Io.prototype._getLocaleChain=function(n,e){if(""===n)return[];this._localeChainCache||(this._localeChainCache={});var t=this._localeChainCache[n];if(!t){e||(e=this.fallbackLocale),t=[];for(var o,r=[n];Nt(r);)r=this._appendBlockToChain(t,r,e);(r=Ft(o=Nt(e)?e:Ht(e)?e.default?e.default:null:e)?[o]:o)&&this._appendBlockToChain(t,r,null),this._localeChainCache[n]=t}return t},Io.prototype._translate=function(n,e,t,o,r,a,i){for(var s,l=this._getLocaleChain(e,t),c=0;c<l.length;c++){var p=l[c];if(!Wt(s=this._interpolate(p,n[p],o,r,a,i,[o])))return s}return null},Io.prototype._t=function(n,e,t,o){for(var r,a=[],i=arguments.length-4;i-- >0;)a[i]=arguments[i+4];if(!n)return"";var s=Gt.apply(void 0,a);this._escapeParameterHtml&&(s.params=eo(s.params));var l=s.locale||e,c=this._translate(t,l,this.fallbackLocale,n,o,"string",s.params);if(this._isFallbackRoot(c)){if(!this._root)throw Error("unexpected error");return(r=this._root).$t.apply(r,[n].concat(a))}return c=this._warnDefault(l,n,c,o,a,"string"),this._postTranslation&&null!=c&&(c=this._postTranslation(c,n)),c},Io.prototype.t=function(n){for(var e,t=[],o=arguments.length-1;o-- >0;)t[o]=arguments[o+1];return(e=this)._t.apply(e,[n,this.locale,this._getMessages(),null].concat(t))},Io.prototype._i=function(n,e,t,o,r){var a=this._translate(t,e,this.fallbackLocale,n,o,"raw",r);if(this._isFallbackRoot(a)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.i(n,e,r)}return this._warnDefault(e,n,a,o,[r],"raw")},Io.prototype.i=function(n,e,t){return n?(Ft(e)||(e=this.locale),this._i(n,e,this._getMessages(),null,t)):""},Io.prototype._tc=function(n,e,t,o,r){for(var a,i=[],s=arguments.length-5;s-- >0;)i[s]=arguments[s+5];if(!n)return"";void 0===r&&(r=1);var l={count:r,n:r},c=Gt.apply(void 0,i);return c.params=Object.assign(l,c.params),i=null===c.locale?[c.params]:[c.locale,c.params],this.fetchChoice((a=this)._t.apply(a,[n,e,t,o].concat(i)),r)},Io.prototype.fetchChoice=function(n,e){if(!n||!Ft(n))return null;var t=n.split("|");return t[e=this.getChoiceIndex(e,t.length)]?t[e].trim():n},Io.prototype.tc=function(n,e){for(var t,o=[],r=arguments.length-2;r-- >0;)o[r]=arguments[r+2];return(t=this)._tc.apply(t,[n,this.locale,this._getMessages(),null,e].concat(o))},Io.prototype._te=function(n,e,t){for(var o=[],r=arguments.length-3;r-- >0;)o[r]=arguments[r+3];var a=Gt.apply(void 0,o).locale||e;return this._exist(t[a],n)},Io.prototype.te=function(n,e){return this._te(n,this.locale,this._getMessages(),e)},Io.prototype.getLocaleMessage=function(n){return Jt(this._vm.messages[n]||{})},Io.prototype.setLocaleMessage=function(n,e){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(n,this._warnHtmlInMessage,e),this._vm.$set(this._vm.messages,n,e)},Io.prototype.mergeLocaleMessage=function(n,e){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(n,this._warnHtmlInMessage,e),this._vm.$set(this._vm.messages,n,Zt(void 0!==this._vm.messages[n]&&Object.keys(this._vm.messages[n]).length?Object.assign({},this._vm.messages[n]):{},e))},Io.prototype.getDateTimeFormat=function(n){return Jt(this._vm.dateTimeFormats[n]||{})},Io.prototype.setDateTimeFormat=function(n,e){this._vm.$set(this._vm.dateTimeFormats,n,e),this._clearDateTimeFormat(n,e)},Io.prototype.mergeDateTimeFormat=function(n,e){this._vm.$set(this._vm.dateTimeFormats,n,Zt(this._vm.dateTimeFormats[n]||{},e)),this._clearDateTimeFormat(n,e)},Io.prototype._clearDateTimeFormat=function(n,e){for(var t in e){var o=n+"__"+t;this._dateTimeFormatters.hasOwnProperty(o)&&delete this._dateTimeFormatters[o]}},Io.prototype._localizeDateTime=function(n,e,t,o,r){for(var a=e,i=o[a],s=this._getLocaleChain(e,t),l=0;l<s.length;l++){var c=s[l];if(a=c,!Wt(i=o[c])&&!Wt(i[r]))break}if(Wt(i)||Wt(i[r]))return null;var p=i[r],d=a+"__"+r,u=this._dateTimeFormatters[d];return u||(u=this._dateTimeFormatters[d]=new Intl.DateTimeFormat(a,p)),u.format(n)},Io.prototype._d=function(n,e,t){if(!t)return new Intl.DateTimeFormat(e).format(n);var o=this._localizeDateTime(n,e,this.fallbackLocale,this._getDateTimeFormats(),t);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.d(n,t,e)}return o||""},Io.prototype.d=function(n){for(var e=[],t=arguments.length-1;t-- >0;)e[t]=arguments[t+1];var o=this.locale,r=null;return 1===e.length?Ft(e[0])?r=e[0]:Ht(e[0])&&(e[0].locale&&(o=e[0].locale),e[0].key&&(r=e[0].key)):2===e.length&&(Ft(e[0])&&(r=e[0]),Ft(e[1])&&(o=e[1])),this._d(n,o,r)},Io.prototype.getNumberFormat=function(n){return Jt(this._vm.numberFormats[n]||{})},Io.prototype.setNumberFormat=function(n,e){this._vm.$set(this._vm.numberFormats,n,e),this._clearNumberFormat(n,e)},Io.prototype.mergeNumberFormat=function(n,e){this._vm.$set(this._vm.numberFormats,n,Zt(this._vm.numberFormats[n]||{},e)),this._clearNumberFormat(n,e)},Io.prototype._clearNumberFormat=function(n,e){for(var t in e){var o=n+"__"+t;this._numberFormatters.hasOwnProperty(o)&&delete this._numberFormatters[o]}},Io.prototype._getNumberFormatter=function(n,e,t,o,r,a){for(var i=e,s=o[i],l=this._getLocaleChain(e,t),c=0;c<l.length;c++){var p=l[c];if(i=p,!Wt(s=o[p])&&!Wt(s[r]))break}if(Wt(s)||Wt(s[r]))return null;var d,u=s[r];if(a)d=new Intl.NumberFormat(i,Object.assign({},u,a));else{var m=i+"__"+r;(d=this._numberFormatters[m])||(d=this._numberFormatters[m]=new Intl.NumberFormat(i,u))}return d},Io.prototype._n=function(n,e,t,o){if(!Io.availabilities.numberFormat)return"";if(!t)return(o?new Intl.NumberFormat(e,o):new Intl.NumberFormat(e)).format(n);var r=this._getNumberFormatter(n,e,this.fallbackLocale,this._getNumberFormats(),t,o),a=r&&r.format(n);if(this._isFallbackRoot(a)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.n(n,Object.assign({},{key:t,locale:e},o))}return a||""},Io.prototype.n=function(n){for(var e=[],t=arguments.length-1;t-- >0;)e[t]=arguments[t+1];var o=this.locale,r=null,a=null;return 1===e.length?Ft(e[0])?r=e[0]:Ht(e[0])&&(e[0].locale&&(o=e[0].locale),e[0].key&&(r=e[0].key),a=Object.keys(e[0]).reduce((function(n,t){var o;return Yt(Lt,t)?Object.assign({},n,((o={})[t]=e[0][t],o)):n}),null)):2===e.length&&(Ft(e[0])&&(r=e[0]),Ft(e[1])&&(o=e[1])),this._n(n,o,r,a)},Io.prototype._ntp=function(n,e,t,o){if(!Io.availabilities.numberFormat)return[];if(!t)return(o?new Intl.NumberFormat(e,o):new Intl.NumberFormat(e)).formatToParts(n);var r=this._getNumberFormatter(n,e,this.fallbackLocale,this._getNumberFormats(),t,o),a=r&&r.formatToParts(n);if(this._isFallbackRoot(a)){if(!this._root)throw Error("unexpected error");return this._root.$i18n._ntp(n,e,t,o)}return a||[]},Object.defineProperties(Io.prototype,$o),Object.defineProperty(Io,"availabilities",{get:function(){if(!Eo){var n="undefined"!=typeof Intl;Eo={dateTimeFormat:n&&void 0!==Intl.DateTimeFormat,numberFormat:n&&void 0!==Intl.NumberFormat}}return Eo}}),Io.install=vo,Io.version="8.25.0";var Po=Io;
/*!
 * vssue - A vue-powered issue-based comment plugin
 *
 * @version v1.4.8
 * @link https://vssue.js.org
 * @license MIT
 * @copyright 2018-2021 meteorlxy
 */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function Mo(n,e,t,o){var r,a=arguments.length,i=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,o);else for(var s=n.length-1;s>=0;s--)(r=n[s])&&(i=(a<3?r(i):a>3?r(e,t,i):r(e,t))||i);return a>3&&i&&Object.defineProperty(e,t,i),i}var qo=r.a.extend({name:"Iconfont"});function Ro(n,e,t,o,r,a,i,s,l,c){"boolean"!=typeof i&&(l=s,s=i,i=!1);const p="function"==typeof t?t.options:t;let d;if(n&&n.render&&(p.render=n.render,p.staticRenderFns=n.staticRenderFns,p._compiled=!0,r&&(p.functional=!0)),o&&(p._scopeId=o),a?(d=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),e&&e.call(this,l(n)),n&&n._registeredComponents&&n._registeredComponents.add(a)},p._ssrRegister=d):e&&(d=i?function(n){e.call(this,c(n,this.$root.$options.shadowRoot))}:function(n){e.call(this,s(n))}),d)if(p.functional){const n=p.render;p.render=function(e,t){return d.call(t),n(e,t)}}else{const n=p.beforeCreate;p.beforeCreate=n?[].concat(n,d):[d]}return t}"undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());const Do=Ro({render:function(n,e){var t=e._c;return t("svg",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}]},[t("symbol",{attrs:{id:"vssue-icon-bitbucket",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M579.5522464 489.45249493q4.8371808 38.38537173-30.81752427 61.55702827t-67.95459093 3.66689493q-23.79580907-10.37653333-32.6119616-35.34262826t-0.31207573-50.01020907 31.67573333-35.34262827q21.92335253-11.00068587 44.1587808-7.33379093t39.00952427 21.61127573 16.77409493 41.1160384zM647.19476053 476.65737173q-8.50407573-65.22392427-68.8908192-99.9424t-120.07131413-7.9579424q-38.38537173 17.08617173-61.24495253 53.9111616t-21.0651424 78.95527574q2.41859093 55.4715424 47.20152426 94.48106666t100.87862827 34.1723424q55.4715424-4.8371808 92.60860907-51.18049493t30.50544746-102.43900907zM792.93434133 146.32472427q-12.17097173-16.4620192-34.1723424-27.15062827t-35.34262826-13.41927573-43.30057174-7.64586667q-177.33729493-28.63299093-345.00022826 1.24830507-26.2144 4.29104747-40.25782827 7.33379093t-33.54819093 13.41927573-30.50544747 26.2144q18.2564576 17.08617173 46.34331413 27.6967616t44.78293334 13.41927574 53.36502826 7.02171413q138.95192427 17.71032427 273.06666667 0.62415253 38.38537173-4.8371808 54.53531413-7.33379093t44.1587808-13.1072 45.7191616-28.32091413zM827.65281813 777.10872427q-4.8371808 15.83786667-9.44030506 46.65539093t-8.50407574 51.18049493-17.39824746 42.6764192-35.34262827 34.4064q-52.4288 29.2571424-115.46819093 43.61264747t-123.1140576 13.41927573-122.8019808-11.3127616q-28.0088384-4.8371808-49.69813334-11.00068586t-46.65539093-16.4620192-44.4708576-26.52647574-31.67573333-37.4491424q-15.21371413-58.51428587-34.71847574-177.96144746l3.66689494-9.7523808 11.00068586-5.46133334q135.9091808 90.1900192 308.72137174 90.1900192t309.34552426-90.1900192q12.79512427 3.66689493 14.5895616 14.04342827t-3.0427424 27.46270507-4.8371808 22.54750506zM937.97175147 191.41973333q-15.83786667 101.8148576-67.64251414 399.22346667-3.0427424 18.2564576-16.4620192 34.1723424t-26.52647573 24.3419424-33.23611413 18.88060907q-153.61950507 76.7707424-371.8387808 53.67710506-151.12289493-16.4620192-240.14262827-84.72868586-9.12822827-7.33379093-15.52579093-16.1499424t-10.37653334-21.2992-5.46133333-20.75306667-3.66689493-24.10788587-3.3548192-21.2992q-5.46133333-30.50544747-16.1499424-91.43832426t-17.08617174-98.4600384-14.35550506-89.8779424-13.41927574-96.27550507q1.7944384-15.83786667 10.68860907-29.5692192t19.19268587-22.8595808 27.46270506-18.2564576 28.0088384-13.73135253 29.2571424-11.3127616q76.22460907-28.0088384 190.75657174-39.00952427 231.0144-22.54750507 412.01859093 30.50544747 94.48106667 28.0088384 131.072 74.35215253 9.7523808 12.17097173 10.0644576 31.0515808t-3.3548192 32.9240384z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-gitea",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M184.31868985 236.10860742C106.94832667 235.94086648 3.32655508 285.13080468 9.02973665 408.46209936c8.93218827 192.65010787 206.32096845 210.5144844 285.20099725 212.06608453 8.63864186 36.14810496 101.48307766 160.77938883 170.21479898 167.32127321h301.09442177c180.57278288-11.99345499 315.77172611-546.07960359 215.54670217-548.09249109-165.7696721 7.79993906-264.02374305 11.74184405-348.27147151 12.41280591v166.69224585l-26.25140843-11.61603761-0.16773997-154.99233728c-96.70246985-0.04193548-181.83083757-4.52899687-343.4069947-12.49667687-20.21274496-0.12580547-48.39316992-3.5644886-78.67035236-3.64835859z m10.94507577 68.14462849h9.22573371c10.98701124 98.75729283 28.85138778 156.50200291 64.99949274 244.73357185-92.25734394-10.90314029-170.75995634-37.69970509-185.18564974-137.75698809-7.46445813-51.78991757 17.69663558-105.84433456 110.96042329-107.01851827z m358.83913087 97.07988723c6.29027343 0.08386999 12.70635233 1.25805468 18.74501482 4.02577499l31.40943263 13.54505513-22.51917887 41.05451824a28.18042496 25.03528825 0 0 0-10.10637297 1.59353561 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 4.69673781 7.29671718l-38.83195528 70.70267333a28.18042496 25.03528825 0 0 0-9.30960467 1.59353659 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 36.06423497 15.09665623 28.18042496 25.03528825 0 0 0 16.94180276-32.08039449 28.18042496 25.03528825 0 0 0-6.62575434-9.22573468l37.82551056-68.85752581a28.18042496 25.03528825 0 0 0 12.28700044-1.25805469 28.18042496 25.03528825 0 0 0 8.93218826-4.69673783c14.59343435 6.12253248 26.54495386 11.11281671 35.14166122 15.34826717 12.91602778 6.37414341 17.48696012 10.60959485 18.87082027 15.30633169 1.38386015 4.61286685-0.12580547 13.50312062-7.42252263 29.10299872-5.45157063 11.61603859-14.46762889 28.09655497-25.11915823 47.51253164a28.18042496 25.03528825 0 0 0-10.52572486 1.59353659 28.18042496 25.03528825 0 0 0-16.98373826 32.038459 28.18042496 25.03528825 0 0 0 36.06423498 15.09665623 28.18042496 25.03528825 0 0 0 16.94180278-32.03845901 28.18042496 25.03528825 0 0 0-5.74511608-8.47090188c10.52572388-19.20630122 19.58371762-35.72875308 25.41270465-48.14155897 7.88380904-16.85793279 11.99345499-29.39654416 8.38703091-41.51580463-3.60642311-12.11926046-14.67730434-20.0030695-29.35460966-27.25785217-9.6450856-4.73867233-21.68047607-9.77089106-36.06423399-15.80955357a28.18042496 25.03528825 0 0 0-1.59353562-10.022502 28.18042496 25.03528825 0 0 0-6.08059796-8.7644483l22.14176246-40.38355541 122.61839638 52.96410227c22.14176247 9.6031511 31.2836262 33.12877372 20.54822685 52.8382968l-84.28966393 154.32137544c-10.77733482 19.66758857-37.23841869 27.80300855-59.38018118 18.24179293l-173.48574115-74.98005927c-22.14176247-9.5612156-31.32556167-33.12877372-20.54822687-52.83829679l84.28966395-154.27943995c7.38058716-13.54505513 22.22563246-21.59660511 37.951317-22.22563246h2.68384935z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-gitee",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M978.404275 409.561604H455.061338c-25.117645 0-45.499734 20.382089-45.499734 45.499734l-0.031997 113.781333c0 25.117645 20.350092 45.499734 45.499734 45.531731h318.594132c25.117645 0 45.499734 20.382089 45.499734 45.499735v22.749867a136.5312 136.5312 0 0 1-136.5312 136.5312H250.248539a45.499734 45.499734 0 0 1-45.499734-45.499734V341.343999a136.5312 136.5312 0 0 1 136.5312-136.5312L978.308284 204.780802c25.117645 0 45.499734-20.350092 45.499734-45.467738L1023.904009 45.531731h0.031997A45.499734 45.499734 0 0 0 978.468269 0h-0.031997L341.343999 0.031997C152.84967 0.031997 0.031997 152.84967 0.031997 341.343999v637.092273c0 25.117645 20.382089 45.499734 45.499734 45.499734h671.233072a307.171203 307.171203 0 0 0 307.171203-307.171203v-261.671468c0-25.117645-20.382089-45.499734-45.499734-45.499734z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-github",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M512 20.4425c-278.334 0-504 225.6345-504 504 0 222.6735 144.4275 411.6105 344.673 478.233 25.2 4.662 34.461-10.9305 34.461-24.255 0-12.0015-0.4725-51.723-0.693-93.8385-140.238 30.492-169.8165-59.472-169.8165-59.472-22.932-58.2435-55.944-73.7415-55.944-73.7415-45.738-31.2795 3.465-30.6495 3.465-30.6495 50.589 3.5595 77.238 51.9435 77.238 51.9435 44.9505 77.049 117.9045 54.7785 146.664 41.895 4.5045-32.571 17.577-54.81 32.004-67.41-111.951-12.726-229.635-55.9755-229.635-249.0705 0-55.0305 19.6875-99.981 51.9435-135.2925-5.229-12.6945-22.491-63.945 4.8825-133.371 0 0 42.336-13.545 138.6315 51.66 40.194-11.1825 83.3175-16.758 126.1575-16.9785 42.8085 0.189 85.9635 5.796 126.252 16.9785 96.201-65.205 138.4425-51.66 138.4425-51.66 27.4365 69.426 10.1745 120.6765 4.9455 133.371 32.319 35.28 51.8805 80.262 51.8805 135.2925 0 193.5675-117.9045 236.187-230.139 248.6925 18.081 15.6555 34.1775 46.305 34.1775 93.3345 0 67.4415-0.5985 121.716-0.5985 138.3165 0 13.419 9.072 29.1375 34.6185 24.192 200.151-66.717 344.3895-255.5595 344.3895-478.17 0-278.3655-225.666-504-504-504z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-gitlab",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M66.61375986 405.11600042L512.11376028 976.03999972 23.84576 621.65599958a39.312 39.312 0 0 1-14.07600042-43.30799944l56.8080007-173.26800028z m259.88400014 0h371.26800014L512.14975986 976.03999972zM215.11376 60.88400042l111.384 344.232H66.61375986l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z m742.49999972 344.232l56.8080007 173.2679993a39.23999986 39.23999986 0 0 1-14.07600042 43.30800042l-488.26800028 354.38400014 445.50000042-570.92400028z m0 0h-259.88400014l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-loading",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M843.307 742.24c0 3.217 2.607 5.824 5.824 5.824s5.824-2.607 5.824-5.824a5.823 5.823 0 0 0-5.824-5.824 5.823 5.823 0 0 0-5.824 5.824zM714.731 874.912c0 6.398 5.186 11.584 11.584 11.584s11.584-5.186 11.584-11.584-5.186-11.584-11.584-11.584-11.584 5.186-11.584 11.584zM541.419 943.2c0 9.614 7.794 17.408 17.408 17.408s17.408-7.794 17.408-17.408-7.794-17.408-17.408-17.408-17.408 7.794-17.408 17.408z m-186.56-9.152c0 12.795 10.373 23.168 23.168 23.168s23.168-10.373 23.168-23.168-10.373-23.168-23.168-23.168-23.168 10.373-23.168 23.168zM189.355 849.12c0 16.012 12.98 28.992 28.992 28.992s28.992-12.98 28.992-28.992-12.98-28.992-28.992-28.992-28.992 12.98-28.992 28.992zM74.731 704.736c0 19.228 15.588 34.816 34.816 34.816s34.816-15.588 34.816-34.816-15.588-34.816-34.816-34.816-34.816 15.588-34.816 34.816z m-43.008-177.28c0 22.41 18.166 40.576 40.576 40.576s40.576-18.166 40.576-40.576-18.166-40.576-40.576-40.576-40.576 18.166-40.576 40.576z m35.392-176.128c0 25.626 20.774 46.4 46.4 46.4s46.4-20.774 46.4-46.4c0-25.626-20.774-46.4-46.4-46.4-25.626 0-46.4 20.774-46.4 46.4z m106.176-142.016c0 28.843 23.381 52.224 52.224 52.224s52.224-23.381 52.224-52.224c0-28.843-23.381-52.224-52.224-52.224-28.843 0-52.224 23.381-52.224 52.224z m155.904-81.344c0 32.024 25.96 57.984 57.984 57.984s57.984-25.96 57.984-57.984-25.96-57.984-57.984-57.984-57.984 25.96-57.984 57.984z m175.104-5.056c0 35.24 28.568 63.808 63.808 63.808s63.808-28.568 63.808-63.808c0-35.24-28.568-63.808-63.808-63.808-35.24 0-63.808 28.568-63.808 63.808z m160.32 72.128c0 38.421 31.147 69.568 69.568 69.568s69.568-31.147 69.568-69.568-31.147-69.568-69.568-69.568-69.568 31.147-69.568 69.568z m113.92 135.488c0 41.638 33.754 75.392 75.392 75.392s75.392-33.754 75.392-75.392-33.754-75.392-75.392-75.392-75.392 33.754-75.392 75.392z m45.312 175.488c0 44.854 36.362 81.216 81.216 81.216s81.216-36.362 81.216-81.216c0-44.854-36.362-81.216-81.216-81.216-44.854 0-81.216 36.362-81.216 81.216z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-like",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 0 0-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4-20.5-21.5-48.1-33.4-77.9-33.4-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-0.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81z m636.4-353l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5c5.2-18.9 22.5-32.2 42.2-32.3 7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-unlike",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M885.9 490.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4-8.3-3.6-17.2-5.4-26.5-5.4H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h129.3l85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zM184 456V172h81v284h-81z m627.2 160.4H496.8l9.6 198.4c0.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7-19.6-0.1-36.9-13.4-42.2-32.3L329 459.2V172h415.4c20.4 9.2 33.6 29.4 33.6 51.8 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 19.1-11 37.5-28.8 48.4z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-heart",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-edit",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M723.2 917.76H286.72c-65.28 0-118.4-51.2-118.4-113.92V261.76C168.32 198.4 221.44 147.2 286.72 147.2h375.04c17.92 0 32 14.08 32 32s-14.08 32-32 32H286.72c-30.08 0-54.4 22.4-54.4 49.92v542.08c0 27.52 24.32 49.92 54.4 49.92H723.2c30.08 0 54.4-22.4 54.4-49.92V440.32c0-17.92 14.08-32 32-32s32 14.08 32 32v363.52c0 62.72-53.12 113.92-118.4 113.92z"}}),e._v(" "),t("path",{attrs:{d:"M499.84 602.24c-7.68 0-14.72-2.56-21.12-7.68-13.44-11.52-14.72-32-3.2-45.44L780.16 198.4c11.52-13.44 32-14.72 45.44-3.2s14.72 32 3.2 45.44L524.16 591.36c-6.4 7.04-15.36 10.88-24.32 10.88z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-delete",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M677.647059 256l0-90.352941c0-37.436235-23.461647-60.235294-61.771294-60.235294L408.094118 105.411765c-38.249412 0-61.741176 22.799059-61.741176 60.235294l0 90.352941-180.705882 0 0 60.235294 60.235294 0 0 512c0 54.272 33.972706 90.352941 90.352941 90.352941l391.529412 0c55.085176 0 90.352941-33.490824 90.352941-90.352941l0-512 60.235294 0 0-60.235294L677.647059 256zM406.588235 165.647059l210.823529 0-1.264941 90.352941L406.588235 256 406.588235 165.647059zM737.882353 858.352941l-451.764706 0 0-542.117647 451.764706 0L737.882353 858.352941zM466.823529 376.470588l-58.729412 0-1.505882 391.529412 60.235294 0L466.823529 376.470588zM617.411765 376.470588l-60.235294 0 0 391.529412 60.235294 0L617.411765 376.470588z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-reply",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M426.666667 384 426.666667 213.333333 128 512 426.666667 810.666667 426.666667 635.733333C640 635.733333 789.333333 704 896 853.333333 853.333333 640 725.333333 426.666667 426.666667 384Z"}})]),e._v(" "),t("symbol",{attrs:{id:"vssue-icon-error",viewBox:"0 0 1024 1024"}},[t("path",{attrs:{d:"M512 720m-48 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0Z"}}),e._v(" "),t("path",{attrs:{d:"M480 416v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z"}}),e._v(" "),t("path",{attrs:{d:"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48z m-783.5-27.9L512 239.9l339.8 588.2H172.2z"}})])])},staticRenderFns:[]},void 0,qo,void 0,!0,void 0,!1,void 0,void 0,void 0);const Lo=Ro({},void 0,r.a.extend({name:"TransitionFade",functional:!0,props:{group:{type:Boolean,required:!1,default:!1},tag:{type:String,required:!1,default:"div"}},render:(n,{props:e,children:t})=>n(e.group?"TransitionGroup":"Transition",{props:{name:"fade",mode:"out-in",appear:!0,tag:e.tag}},t)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);const Bo=Ro({},void 0,r.a.extend({name:"VssueIcon",functional:!0,props:{name:{type:String,required:!0},title:{type:String,required:!1,default:null}},render:(n,{props:e,data:t})=>n("svg",Object.assign(Object.assign({},t),{class:["vssue-icon","vssue-icon-"+e.name],attrs:{"aria-hidden":"true"}}),[n("title",e.title),n("use",{attrs:{"xlink:href":"#vssue-icon-"+e.name}})])}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let No=class extends r.a{constructor(){super(...arguments),this.editMode=!1,this.editContent=this.comment.contentRaw,this.creatingReactions=[],this.isPutingComment=!1,this.isDeletingComment=!1}get currentUser(){return this.vssue.user?this.vssue.user.username:null}get content(){return this.comment.content}get author(){return this.comment.author}get createdAt(){return qt(this.comment.createdAt)}get updatedAt(){return qt(this.comment.updatedAt)}get showReactions(){return Boolean(this.vssue.API&&this.vssue.API.platform.meta.reactable&&this.comment.reactions&&!this.editMode)}get reactionKeys(){return["heart","like","unlike"]}get editContentRows(){return this.editContent.split("\n").length-1}get editInputRows(){return this.editContentRows<3?5:this.editContentRows+2}async postReaction({reaction:n}){try{if(this.creatingReactions.includes(n))return;this.creatingReactions.push(n);await this.vssue.postCommentReaction({commentId:this.comment.id,reaction:n})||this.vssue.$emit("error",new Error(this.vssue.$t("reactionGiven",{reaction:this.vssue.$t(n)})));const e=await this.vssue.getCommentReactions({commentId:this.comment.id});e&&(this.comment.reactions=e)}finally{this.creatingReactions.splice(this.creatingReactions.findIndex(e=>e===n),1)}}enterEdit(){this.editMode=!0,this.$nextTick(()=>{this.$refs.input.focus()})}resetEdit(){this.editMode=!1,this.editContent=this.comment.contentRaw}async putComment(){try{if(this.vssue.isPending)return;if(this.editContent!==this.comment.contentRaw){this.isPutingComment=!0,this.vssue.isUpdatingComment=!0;const n=await this.vssue.putComment({commentId:this.comment.id,content:this.editContent});n&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(n=>n.id===this.comment.id),1,n)}this.editMode=!1}finally{this.isPutingComment=!1,this.vssue.isUpdatingComment=!1}}async deleteComment(){try{if(this.vssue.isPending)return;if(!window.confirm(this.vssue.$t("deleteConfirm")))return;this.isDeletingComment=!0,this.vssue.isUpdatingComment=!0;await this.vssue.deleteComment({commentId:this.comment.id})?(this.vssue.comments.count-=1,this.vssue.comments.data.length>1&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(n=>n.id===this.comment.id),1),this.vssue.query.page>1&&this.vssue.query.page>Math.ceil(this.vssue.comments.count/this.vssue.query.perPage)?this.vssue.query.page-=1:await this.vssue.getComments()):this.vssue.$emit("error",new Error(this.vssue.$t("deleteFailed")))}finally{this.isDeletingComment=!1,this.vssue.isUpdatingComment=!1}}};Mo([zt({type:Object,required:!0})],No.prototype,"comment",void 0),Mo([wt()],No.prototype,"vssue",void 0),No=Mo([kt({components:{VssueIcon:Bo}})],No);const Ho=Ro({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-comment",class:{"vssue-comment-edit-mode":n.editMode,"vssue-comment-disabled":n.isDeletingComment||n.isPutingComment}},[t("div",{staticClass:"vssue-comment-avatar"},[t("a",{attrs:{href:n.author.homepage,title:n.author.username,target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:n.author.avatar,alt:n.author.username}})])]),n._v(" "),t("div",{staticClass:"vssue-comment-body"},[n._t("body",[t("div",{staticClass:"vssue-comment-header"},[t("span",{staticClass:"vssue-comment-author"},[t("a",{attrs:{href:n.author.homepage,title:n.author.username,target:"_blank",rel:"noopener noreferrer"}},[n._v("\n            "+n._s(n.author.username)+"\n          ")])]),n._v(" "),t("span",{staticClass:"vssue-comment-created-at"},[n._v("\n          "+n._s(n.createdAt)+"\n        ")])]),n._v(" "),t("div",{staticClass:"vssue-comment-main"},[n.editMode?t("textarea",{directives:[{name:"model",rawName:"v-model",value:n.editContent,expression:"editContent"}],ref:"input",staticClass:"vssue-edit-comment-input",attrs:{rows:n.editInputRows},domProps:{value:n.editContent},on:{keyup:function(e){return!e.type.indexOf("key")&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:e.ctrlKey?n.putComment():null},input:function(e){e.target.composing||(n.editContent=e.target.value)}}}):t("article",{staticClass:"markdown-body",domProps:{innerHTML:n._s(n.content)}})]),n._v(" "),t("div",{staticClass:"vssue-comment-footer"},[n.editMode?t("span",{staticClass:"vssue-comment-hint"},[n._v("\n          "+n._s(n.vssue.$t("editMode"))+"\n        ")]):n._e(),n._v(" "),n.showReactions?t("span",{staticClass:"vssue-comment-reactions"},n._l(n.reactionKeys,(function(e){return t("span",{key:e,staticClass:"vssue-comment-reaction",attrs:{title:n.vssue.$t(n.creatingReactions.includes(e)?"loading":e)},on:{click:function(t){return n.postReaction({reaction:e})}}},[t("VssueIcon",{attrs:{name:n.creatingReactions.includes(e)?"loading":e,title:n.vssue.$t(n.creatingReactions.includes(e)?"loading":e)}}),n._v(" "),t("span",{staticClass:"vssue-comment-reaction-number"},[n._v("\n              "+n._s(n.comment.reactions[e])+"\n            ")])],1)})),0):n._e(),n._v(" "),t("span",{staticClass:"vssue-comment-operations"},[n.comment.author.username===n.currentUser&&n.editMode?t("span",{staticClass:"vssue-comment-operation",class:{"vssue-comment-operation-muted":n.isPutingComment},attrs:{title:n.vssue.$t(n.isPutingComment?"loading":"submit")},on:{click:function(e){return n.putComment()}}},[t("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:n.isPutingComment,expression:"isPutingComment"}],attrs:{name:"loading",title:n.vssue.$t("loading")}}),n._v("\n\n            "+n._s(n.vssue.$t("submit"))+"\n          ")],1):n._e(),n._v(" "),n.comment.author.username===n.currentUser&&n.editMode?t("span",{staticClass:"vssue-comment-operation vssue-comment-operation-muted",attrs:{title:n.vssue.$t("cancel")},on:{click:function(e){return n.resetEdit()}}},[n._v("\n            "+n._s(n.vssue.$t("cancel"))+"\n          ")]):n._e(),n._v(" "),n.comment.author.username===n.currentUser?t("span",{directives:[{name:"show",rawName:"v-show",value:!n.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return n.enterEdit()}}},[t("VssueIcon",{attrs:{name:"edit",title:n.vssue.$t("edit")}})],1):n._e(),n._v(" "),n.comment.author.username===n.currentUser||n.vssue.isAdmin?t("span",{directives:[{name:"show",rawName:"v-show",value:!n.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return n.deleteComment()}}},[t("VssueIcon",{attrs:{name:n.isDeletingComment?"loading":"delete",title:n.vssue.$t(n.isDeletingComment?"loading":"delete")}})],1):n._e(),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:!n.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(e){return n.vssue.$emit("reply-comment",n.comment)}}},[t("VssueIcon",{attrs:{name:"reply",title:n.vssue.$t("reply")}})],1)])])])],2)])},staticRenderFns:[]},void 0,No,void 0,!1,void 0,!1,void 0,void 0,void 0);let Fo=class extends r.a{get disabled(){return this.vssue.isPending}get pageCount(){const n=Math.ceil(this.vssue.comments.count/this.vssue.comments.perPage);return n>1?n:1}get perPageOptions(){const n=[5,10,20,50];return!n.includes(this.vssue.options.perPage)&&this.vssue.options.perPage<100&&n.push(this.vssue.options.perPage),n.sort((n,e)=>n-e)}get page(){return this.vssue.query.page>this.pageCount?this.pageCount:this.vssue.query.page}set page(n){n>0&&n<=this.pageCount&&(this.vssue.query.page=n)}get perPage(){return this.vssue.query.perPage}set perPage(n){this.perPageOptions.includes(n)&&(this.vssue.query.perPage=n)}};Mo([wt()],Fo.prototype,"vssue",void 0),Fo=Mo([kt({components:{VssueIcon:Bo}})],Fo);const Uo=Ro({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-pagination"},[t("div",{staticClass:"vssue-pagination-per-page"},[t("label",[t("select",{directives:[{name:"model",rawName:"v-model",value:n.perPage,expression:"perPage"}],staticClass:"vssue-pagination-select",attrs:{disabled:n.disabled},on:{change:function(e){var t=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){return"_value"in n?n._value:n.value}));n.perPage=e.target.multiple?t:t[0]}}},n._l(n.perPageOptions,(function(e){return t("option",{key:e,domProps:{value:e}},[n._v("\n          "+n._s(e)+"\n        ")])})),0),n._v(" "),t("span",[n._v("\n        "+n._s(n.vssue.$t("perPage"))+"\n      ")])]),n._v(" "),n.vssue.API.platform.meta.sortable?t("span",{class:{"vssue-pagination-link":!0,disabled:n.disabled},attrs:{title:n.vssue.$t("sort")},on:{click:function(e){n.vssue.query.sort="asc"===n.vssue.query.sort?"desc":"asc"}}},[n._v("\n      "+n._s("asc"===n.vssue.query.sort?"↑":"↓")+"\n    ")]):n._e()]),n._v(" "),t("div",{staticClass:"vssue-pagination-page"},[t("span",{class:{"vssue-pagination-link":!0,disabled:1===n.page||n.disabled},attrs:{title:n.vssue.$t("prev")},domProps:{textContent:n._s("<")},on:{click:function(e){n.page-=1}}}),n._v(" "),t("label",[t("span",[n._v("\n        "+n._s(n.vssue.$t("page"))+"\n      ")]),n._v(" "),t("select",{directives:[{name:"show",rawName:"v-show",value:n.pageCount>1,expression:"pageCount > 1"},{name:"model",rawName:"v-model",value:n.page,expression:"page"}],staticClass:"vssue-pagination-select",attrs:{disabled:n.disabled},on:{change:function(e){var t=Array.prototype.filter.call(e.target.options,(function(n){return n.selected})).map((function(n){return"_value"in n?n._value:n.value}));n.page=e.target.multiple?t:t[0]}}},n._l(n.pageCount,(function(e){return t("option",{key:e,domProps:{value:e}},[n._v("\n          "+n._s(e)+"\n        ")])})),0),n._v(" "),t("span",{directives:[{name:"show",rawName:"v-show",value:n.pageCount<2,expression:"pageCount < 2"}],domProps:{textContent:n._s(n.page)}}),n._v(" "),t("span",{domProps:{textContent:n._s(" / "+n.pageCount+" ")}})]),n._v(" "),t("span",{class:{"vssue-pagination-link":!0,disabled:n.page===n.pageCount||n.disabled},attrs:{title:n.vssue.$t("next")},domProps:{textContent:n._s(">")},on:{click:function(e){n.page+=1}}})])])},staticRenderFns:[]},void 0,Fo,void 0,!1,void 0,!1,void 0,void 0,void 0);let Vo=class extends r.a{};Mo([wt()],Vo.prototype,"vssue",void 0),Vo=Mo([kt({components:{TransitionFade:Lo,VssueComment:Ho,VssuePagination:Uo}})],Vo);const Wo=Ro({render:function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"vssue-comments"},[e("VssuePagination"),this._v(" "),e("TransitionFade",{attrs:{group:""}},this._l(this.vssue.comments.data,(function(n){return e("VssueComment",{key:n.id,attrs:{comment:n}})})),1),this._v(" "),e("VssuePagination",{directives:[{name:"show",rawName:"v-show",value:this.vssue.comments.data.length>5,expression:"vssue.comments.data.length > 5"}]})],1)},staticRenderFns:[]},void 0,Vo,void 0,!1,void 0,!1,void 0,void 0,void 0);const Ko=Ro({},void 0,r.a.extend({name:"VssueIcon",functional:!0,props:{type:{type:String,required:!1,default:"default"}},render:(n,{props:e,data:t,children:o})=>n("button",Object.assign(Object.assign({},t),{class:["vssue-button","vssue-button-"+e.type]}),o)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Go=class extends r.a{constructor(){super(...arguments),this.content=""}get user(){return this.vssue.user}get platform(){return this.vssue.API&&this.vssue.API.platform.name}get isInputDisabled(){return this.loading||null===this.user||null===this.vssue.issue}get isSubmitDisabled(){return""===this.content||this.vssue.isPending||null===this.vssue.issue}get loading(){return this.vssue.isCreatingComment}get contentRows(){return this.content.split("\n").length-1}get inputRows(){return this.contentRows<3?5:this.contentRows+2}created(){this.vssue.$on("reply-comment",n=>{const e=n.contentRaw.replace(/\n/g,"\n> "),t=`@${n.author.username}\n\n> ${e}\n\n`;this.content=this.content.concat(t),this.focus()})}beforeDestroy(){this.vssue.$off("reply-comment")}focus(){this.$refs.input.focus()}async submit(){this.isSubmitDisabled||(await this.vssue.postComment({content:this.content}),this.content="",await this.vssue.getComments())}};Mo([wt()],Go.prototype,"vssue",void 0),Go=Mo([kt({components:{VssueButton:Ko,VssueIcon:Bo}})],Go);const Jo=Ro({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-new-comment"},[t("div",{staticClass:"vssue-comment-avatar"},[n.user?t("a",{attrs:{href:n.user.homepage,title:n.user.username,target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:n.user.avatar,alt:n.user.username}})]):t("VssueIcon",{attrs:{name:n.platform.toLowerCase(),title:n.vssue.$t("loginToComment",{platform:n.platform})},on:{click:function(e){return n.vssue.login()}}})],1),n._v(" "),t("div",{staticClass:"vssue-new-comment-body"},[t("textarea",{directives:[{name:"model",rawName:"v-model",value:n.content,expression:"content"}],ref:"input",staticClass:"vssue-new-comment-input",attrs:{rows:n.inputRows,disabled:n.isInputDisabled,placeholder:n.vssue.$t(n.user?"placeholder":"noLoginPlaceHolder"),spellcheck:!1,"aria-label":"leave a comment"},domProps:{value:n.content},on:{keyup:function(e){return!e.type.indexOf("key")&&n._k(e.keyCode,"enter",13,e.key,"Enter")?null:e.ctrlKey?n.submit():null},input:function(e){e.target.composing||(n.content=e.target.value)}}})]),n._v(" "),t("div",{staticClass:"vssue-new-comment-footer"},[n.user?t("span",{staticClass:"vssue-current-user"},[t("span",[n._v(n._s(n.vssue.$t("currentUser"))+" - "+n._s(n.user.username)+" - ")]),n._v(" "),t("a",{staticClass:"vssue-logout",on:{click:function(e){return n.vssue.logout()}}},[n._v("\n        "+n._s(n.vssue.$t("logout"))+"\n      ")])]):t("span",{staticClass:"vssue-current-user"},[n._v("\n      "+n._s(n.vssue.$t("loginToComment",{platform:n.platform}))+"\n    ")]),n._v(" "),t("div",{staticClass:"vssue-new-comment-operations"},[n.user?t("VssueButton",{staticClass:"vssue-button-submit-comment",attrs:{type:"primary",disabled:n.isSubmitDisabled},on:{click:function(e){return n.submit()}}},[t("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:n.loading,expression:"loading"}],attrs:{name:"loading"}}),n._v("\n\n        "+n._s(n.vssue.$t(n.loading?"submitting":"submitComment"))+"\n      ")],1):t("VssueButton",{staticClass:"vssue-button-login",attrs:{type:"primary",title:n.vssue.$t("loginToComment",{platform:n.platform})},on:{click:function(e){return n.vssue.login()}}},[n._v("\n        "+n._s(n.vssue.$t("login",{platform:n.platform}))+"\n      ")])],1)])])},staticRenderFns:[]},void 0,Go,void 0,!1,void 0,!1,void 0,void 0,void 0);let Yo=class extends r.a{constructor(){super(...arguments),this.progress={show:!1,percent:0,timer:null,speed:200},this.alert={show:!1,message:null,timer:null}}onLoadingCommentsChange(n){this.vssue.comments&&(n?this.progressStart():this.progressDone())}created(){this.vssue.$on("error",n=>this.alertShow(n.message))}beforeDestroy(){this.vssue.$off("error"),null!==this.progress.timer&&window.clearTimeout(this.progress.timer),null!==this.alert.timer&&window.clearTimeout(this.alert.timer)}progressStart(){this.progress.show=!0,this.progress.percent=0,this.progress.timer=window.setInterval(()=>{this.progress.percent+=5,this.progress.percent>94&&null!==this.progress.timer&&window.clearInterval(this.progress.timer)},this.progress.speed)}progressDone(){this.progress.percent=100,null!==this.progress.timer&&window.clearTimeout(this.progress.timer),this.progress.timer=null,window.setTimeout(()=>{this.progress.show=!1},this.progress.speed)}alertShow(n){this.alert.show=!0,this.alert.message=n,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=window.setTimeout(()=>{this.alertHide()},3e3)}alertHide(){this.alert.show=!1,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=null}};Mo([wt()],Yo.prototype,"vssue",void 0),Mo([Tt("vssue.isLoadingComments")],Yo.prototype,"onLoadingCommentsChange",null),Yo=Mo([kt({components:{TransitionFade:Lo}})],Yo);const Xo=Ro({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-notice"},[t("div",{directives:[{name:"show",rawName:"v-show",value:n.progress.show,expression:"progress.show"}],staticClass:"vssue-progress",style:{width:n.progress.percent+"%",transition:"all "+n.progress.speed+"ms linear"}}),n._v(" "),t("TransitionFade",[t("div",{directives:[{name:"show",rawName:"v-show",value:n.alert.show,expression:"alert.show"}],staticClass:"vssue-alert",domProps:{textContent:n._s(n.alert.message)},on:{click:function(e){return n.alertHide()}}})])],1)},staticRenderFns:[]},void 0,Yo,void 0,!1,void 0,!1,void 0,void 0,void 0);let Qo=class extends r.a{get status(){return this.vssue.isFailed?"failed":this.vssue.isInitializing?"initializing":this.vssue.isIssueNotCreated&&!this.vssue.isCreatingIssue?this.vssue.isAdmin||!this.vssue.isLogined?"issueNotCreated":"failed":this.vssue.isLoginRequired?"loginRequired":!this.vssue.comments||this.vssue.isCreatingIssue?"loadingComments":0===this.vssue.comments.data.length?"noComments":null}handleClick(){"issueNotCreated"===this.status?this.vssue.postIssue():"loginRequired"===this.status&&this.vssue.login()}};Mo([wt()],Qo.prototype,"vssue",void 0),Qo=Mo([kt({components:{TransitionFade:Lo,VssueIcon:Bo}})],Qo);const Zo=Ro({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("TransitionFade",[n.status?t("div",{key:n.status,staticClass:"vssue-status"},[["failed","loadingComments","initializing"].includes(n.status)?t("VssueIcon",{attrs:{name:"failed"===n.status?"error":"loading"}}):n._e(),n._v(" "),t("p",{staticClass:"vssue-status-info"},[t(["issueNotCreated","loginRequired"].includes(n.status)?"a":"span",{tag:"Component",on:{click:n.handleClick}},[n._v("\n        "+n._s(n.vssue.$t(n.status))+"\n      ")])],1)],1):n._e()])},staticRenderFns:[]},void 0,Qo,void 0,!1,void 0,!1,void 0,void 0,void 0);let nr=class extends r.a{};Mo([wt()],nr.prototype,"vssue",void 0),nr=Mo([kt({components:{TransitionFade:Lo,VssueIcon:Bo,VssueComments:Wo,VssueNewComment:Jo,VssueNotice:Xo,VssueStatus:Zo}})],nr);const er=Ro({render:function(){var n=this.$createElement,e=this._self._c||n;return e("TransitionFade",[this.vssue.isInitializing?e("VssueStatus"):e("div",{staticClass:"vssue-body"},[this.vssue.API?e("VssueNewComment"):this._e(),this._v(" "),e("VssueNotice"),this._v(" "),e("TransitionFade",[this.vssue.comments&&this.vssue.comments.data.length>0?e("VssueComments"):e("VssueStatus")],1)],1)],1)},staticRenderFns:[]},void 0,nr,void 0,!1,void 0,!1,void 0,void 0,void 0);let tr=class extends r.a{};Mo([wt()],tr.prototype,"vssue",void 0),tr=Mo([kt],tr);const or=Ro({render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"vssue-header"},[t("a",{staticClass:"vssue-header-comments-count",attrs:{href:n.vssue.issue?n.vssue.issue.link:null,target:"_blank",rel:"noopener noreferrer"}},[t("span",[n._v("\n      "+n._s(n.vssue.comments?n.vssue.$tc("comments",n.vssue.comments.count,{count:n.vssue.comments.count}):n.vssue.$tc("comments",0))+"\n    ")])]),n._v(" "),t("span",{staticClass:"vssue-header-powered-by"},[t("span",[n._v("Powered by")]),n._v(" "),n.vssue.API?t("span",[t("a",{attrs:{href:n.vssue.API.platform.link,title:n.vssue.API.platform.name+" API "+n.vssue.API.platform.version,target:"_blank",rel:"noopener noreferrer"}},[n._v("\n        "+n._s(n.vssue.API.platform.name)+"\n      ")]),n._v(" "),t("span",[n._v("&")])]):n._e(),n._v(" "),t("a",{attrs:{href:"https://github.com/meteorlxy/vssue",title:"Vssue v"+n.vssue.version,target:"_blank",rel:"noopener noreferrer"}},[n._v("\n      Vssue\n    ")])])])},staticRenderFns:[]},void 0,tr,void 0,!1,void 0,!1,void 0,void 0,void 0),rr={login:"Login with {platform}",logout:"Logout",currentUser:"Current User",loading:"Loading",submit:"Submit",submitting:"Submitting",submitComment:"Submit Comment",cancel:"Cancel",edit:"Edit",editMode:"Edit Mode",delete:"Delete",reply:"Reply",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comments per page",sort:"Click to change the sort direction",page:"Page",prev:"Previous Page",next:"Next Page",comments:"Comments | {count} Comment | {count} Comments",loginToComment:"Login with {platform} account to leave a comment",placeholder:"Leave a comment. Styling with Markdown is supported. Ctrl + Enter to submit.",noLoginPlaceHolder:"Login to leave a comment. Styling with Markdown is supported. ",failed:"Failed to load comments",initializing:"Initializing...",issueNotCreated:"Click to create issue",loadingComments:"Loading comments...",loginRequired:"Login to view comments",noComments:"No comments yet. Leave the first comment !",reactionGiven:"Already given '{reaction}' reaction",deleteConfirm:"Confirm to delete this comment ?",deleteFailed:"Failed to delete comment"},ar={login:"使用 {platform} 登录",logout:"退出登录",currentUser:"当前用户",loading:"加载中",submit:"提交",submitting:"发表中",submitComment:"发表评论",cancel:"取消",edit:"编辑",editMode:"编辑模式",delete:"删除",reply:"回复",heart:"喜欢",like:"赞",unlike:"踩",perPage:"每页评论数",sort:"点击改变排序方式",page:"页数",prev:"上一页",next:"下一页",comments:"评论 | {count} 条评论 | {count} 条评论",loginToComment:"使用 {platform} 帐号登录后发表评论",placeholder:"留下你的评论丨支持 Markdown 语法丨Ctrl + Enter 发表评论",noLoginPlaceHolder:"登录后才能发表评论丨支持 Markdown 语法",failed:"评论加载失败",initializing:"正在初始化...",issueNotCreated:"点击创建 Issue",loadingComments:"正在加载评论...",loginRequired:"登录后查看评论",noComments:"还没有评论，来发表第一条评论吧！",reactionGiven:"已经添加过 '{reaction}' 了",deleteConfirm:"确认要删除该评论吗？",deleteFailed:"评论删除失败"},ir={login:"Entrar com {platform}",logout:"Sair",currentUser:"Usuário Atual",loading:"Carregando",submit:"Enviar",submitting:"Enviando",submitComment:"Enviar Comentário",cancel:"Cancelar",edit:"Editar",editMode:"Modo de Edição",delete:"Apagar",reply:"Responder",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comentários por página",sort:"Clique para alterar a ordenação",page:"Página",prev:"Página Anterior",next:"Próxima Página",comments:"Comentários | {count} Comentário | {count} Comentários",loginToComment:"Entre com uma conta {platform} para deixar um comentário",placeholder:"Deixe um comentário. Estilos com Markdown suportados. Ctrl + Enter para enviar.",noLoginPlaceHolder:"Entre para deixar um comentário. Estilos com Markdown suportados. ",failed:"Falha ao carregar comentários",initializing:"Inicializando...",issueNotCreated:"Click to create issue",loadingComments:"Carregando comentários...",loginRequired:"Entrar para visualizar comentários",noComments:"Nenhum comentário. Deixe o primeiro comentário!",reactionGiven:"Já reagiu com '{reaction}'",deleteConfirm:"Apagar este comentário?",deleteFailed:"Falha ao apagar comentário"},sr={login:"{platform} でログイン",logout:"ログアウト",currentUser:"現在のユーザー",loading:"読み込み中",submit:"送信",submitting:"送信中",submitComment:"コメントを送信",cancel:"キャンセル",edit:"編集",editMode:"編集モード",delete:"削除",reply:"返信",heart:"ハート",like:"高評価",unlike:"低評価",perPage:"コメント/ページ",sort:"並び順を変更するにはクリックしてください",page:"ページ",prev:"前のページ",next:"次のページ",comments:"コメント | {count} コメント | {count} コメント",loginToComment:"コメントを残すには {platform} アカウントでログインしてください。",placeholder:"コメントを残してください。Markdown 記法をサポートしています。 Ctrl + Enter で送信できます。",noLoginPlaceHolder:"コメントを残すにはログインしてください。マークダウン記法をサポートしています。",failed:"コメントの読み込みに失敗しました",initializing:"初期化中...",issueNotCreated:"Click to create issue",loadingComments:"コメントの読み込み中...",loginRequired:"コメントを見るにはログインしてください",noComments:"まだコメントがありません。最初のコメントを残しましょう！",reactionGiven:"既に '{reaction}' のリアクションをしています",deleteConfirm:"本当にコメントを削除してもいいですか？",deleteFailed:"コメントの削除に失敗しました"},lr={login:"התחברו עם {platform}",logout:"התנתקו",currentUser:"משתמש/ת נוכחי/ת",loading:"טוען",submit:"שליחה",submitting:"שולח",submitComment:"שליחת תגובה",cancel:"ביטל",edit:"עריכה",editMode:"מצב עריכה",delete:"מחיקה",reply:"תשובה",heart:"לב",like:"לייק",unlike:"אנלייק",perPage:"תגובות לדף",sort:"לחצו כדי לשנות את כיוון המיון",page:"דף",prev:"הדף הקודם",next:"הדף הבא",comments:"תגובות | {count} תגובה | {count} תגובות",loginToComment:"התחברו עם חשבון {platform} כדי להשאיר תגובה",placeholder:"השאירו תגובה. יש תמיכה בעיצוב בעזרת Markdown. Ctrl + Enter כדי לשלוח.",noLoginPlaceHolder:"התחברו כדי להשאיר תגובה. יש תמיכה בעיצוב בעזרת Markdown. ",failed:"כשלון בטעינת התגובות",initializing:"מאתחל...",issueNotCreated:"לחצו ליצירת issue",loadingComments:"טוען תגובות...",loginRequired:"התחברו כדי לצפות בתגובות",noComments:"עדיין אין תגובות. השאירו תגובה ראשונה !",reactionGiven:"כבר ניתן חיווי '{reaction}'",deleteConfirm:"בטוחים במחיקת התגובה ?",deleteFailed:"כשלון במחיקת התגובה"};Object.prototype.hasOwnProperty.call(r.a,"$i18n")||r.a.use(Po);const cr=new Po({locale:"en",fallbackLocale:"en",messages:{en:rr,"en-US":rr,zh:ar,"zh-CN":ar,pt:ir,"pt-BR":ir,ja:sr,"ja-JP":sr,he:lr,"he-IL":lr}});let pr=class extends r.a{constructor(){super(...arguments),this.title=n=>`${n.prefix}${document.title}`,this.issueId=null,this.options=null,this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:10,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1}get version(){return"1.4.8"}get issueTitle(){return null===this.options?"":"function"==typeof this.title?this.title(this.options):`${this.options.prefix}${this.title}`}get isPending(){return this.isLoadingComments||this.isCreatingComment||this.isUpdatingComment}get isLogined(){return null!==this.accessToken&&null!==this.user}get isAdmin(){return null!==this.options&&null!==this.accessToken&&null!==this.user&&(this.user.username===this.options.owner||this.options.admins.includes(this.user.username))}get accessTokenKey(){return this.API?`Vssue.${this.API.platform.name.toLowerCase()}.access_token`:""}onQueryPerPageChange(){this.query.page=1,this.getComments()}onQueryChange(){this.getComments()}setOptions(n){this.options=Object.assign({labels:["Vssue"],state:"Vssue",prefix:"[Vssue]",admins:[],perPage:10,proxy:n=>"https://cors-anywhere.azm.workers.dev/"+n,issueContent:({url:n})=>n,autoCreateIssue:!1},n);const e=["api","owner","repo","clientId"];for(const n of e)this.options[n]||console.warn(`[Vssue] the option '${n}' is required`);if(this.options.locale)this.$i18n.locale=this.options.locale;else{const n=Object.keys(this.$i18n.messages),e=window.navigator.languages;this.$i18n.locale=e.filter(e=>n.includes(e)).shift()||"en"}}async init(){try{await this.initStore(),await this.initComments()}catch(n){n.response&&[401,403].includes(n.response.status)?this.isLoginRequired=!0:this.isFailed=!0,console.error(n)}}async initStore(){try{if(!this.options)throw new Error("Options are required to initialize Vssue");this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:this.options.perPage,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1;const n=this.options.api;this.API=new n({baseURL:this.options.baseURL,labels:this.options.labels,state:this.options.state,owner:this.options.owner,repo:this.options.repo,clientId:this.options.clientId,clientSecret:this.options.clientSecret,proxy:this.options.proxy}),await this.handleAuth()}finally{this.isInitializing=!1}}async initComments(){if(this.API&&this.options)if(this.issueId){const[n,e]=await Promise.all([this.API.getIssue({accessToken:this.accessToken,issueId:this.issueId}),this.API.getComments({accessToken:this.accessToken,issueId:this.issueId,query:this.query})]);this.issue=n,this.comments=e}else this.issue=await this.API.getIssue({accessToken:this.accessToken,issueTitle:this.issueTitle}),null===this.issue?(this.isIssueNotCreated=!0,this.options.autoCreateIssue&&await this.postIssue()):await this.getComments()}async postIssue(){if(this.API&&this.options&&!this.issue&&!this.issueId&&(this.isLogined||this.login(),this.isAdmin))try{this.isCreatingIssue=!0;const n=await this.API.postIssue({title:this.issueTitle,content:await this.options.issueContent({options:this.options,url:Rt(window.location.href)}),accessToken:this.accessToken});this.issue=n,this.isIssueNotCreated=!1,await this.getComments()}catch(n){this.isFailed=!0}finally{this.isCreatingIssue=!1}}async getComments(){try{if(!this.API||!this.issue||this.isLoadingComments)return;this.isLoadingComments=!0;const n=await this.API.getComments({accessToken:this.accessToken,issueId:this.issue.id,query:this.query});return this.comments=n,this.query.page!==n.page&&(this.query.page=n.page),this.query.perPage!==n.perPage&&(this.query.perPage=n.perPage),n}catch(n){if(!n.response||![401,403].includes(n.response.status)||this.isLogined)throw this.$emit("error",n),n;this.isLoginRequired=!0}finally{this.isLoadingComments=!1}}async postComment({content:n}){try{if(!this.API||!this.issue||this.isCreatingComment)return;this.isCreatingComment=!0;return await this.API.postComment({accessToken:this.accessToken,content:n,issueId:this.issue.id})}catch(n){throw this.$emit("error",n),n}finally{this.isCreatingComment=!1}}async putComment({commentId:n,content:e}){try{if(!this.API||!this.issue)return;return await this.API.putComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:n,content:e})}catch(n){throw this.$emit("error",n),n}}async deleteComment({commentId:n}){try{if(!this.API||!this.issue)return;return await this.API.deleteComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:n})}catch(n){throw this.$emit("error",n),n}}async getCommentReactions({commentId:n}){try{if(!this.API||!this.issue)return;return await this.API.getCommentReactions({accessToken:this.accessToken,issueId:this.issue.id,commentId:n})}catch(n){throw this.$emit("error",n),n}}async postCommentReaction({commentId:n,reaction:e}){try{if(!this.API||!this.issue)return!1;return await this.API.postCommentReaction({accessToken:this.accessToken,issueId:this.issue.id,commentId:n,reaction:e})}catch(n){throw this.$emit("error",n),n}}login(){this.API&&this.API.redirectAuth()}logout(){this.setAccessToken(null),this.user=null}async handleAuth(){if(!this.API)return;const n=await this.API.handleAuth();n?(this.setAccessToken(n),this.user=await this.API.getUser({accessToken:n})):this.getAccessToken()?this.user=await this.API.getUser({accessToken:this.accessToken}):(this.setAccessToken(null),this.user=null)}getAccessToken(){return this.accessToken=window.localStorage.getItem(this.accessTokenKey),this.accessToken}setAccessToken(n){null===n?window.localStorage.removeItem(this.accessTokenKey):window.localStorage.setItem(this.accessTokenKey,n),this.accessToken=n}};Mo([Tt("query.perPage")],pr.prototype,"onQueryPerPageChange",null),Mo([Tt("query.page"),Tt("query.sort")],pr.prototype,"onQueryChange",null),pr=Mo([kt({i18n:cr})],pr);var dr=pr;let ur=class extends r.a{constructor(){super(...arguments),this.vssue=new dr}onOptionsChange(n){this.vssue.setOptions(n)}mounted(){null!==this.title&&(this.vssue.title=this.title),null!==this.issueId&&(this.vssue.issueId=this.issueId),this.vssue.setOptions(this.options),this.vssue.init()}};var mr;Mo([zt({type:[String,Function],required:!1,default:null})],ur.prototype,"title",void 0),Mo([zt({type:[String,Number],required:!1,default:null})],ur.prototype,"issueId",void 0),Mo([zt({type:Object,required:!1,default:()=>({})})],ur.prototype,"options",void 0),Mo([(mr="vssue",ft((function(n,e){var t=n.provide;Et(t)&&(t=n.provide=jt(t)),t.managed[e]=mr||e})))],ur.prototype,"vssue",void 0),Mo([Tt("options",{deep:!0})],ur.prototype,"onOptionsChange",null),ur=Mo([kt({components:{Iconfont:Do,VssueBody:er,VssueHeader:or}})],ur);const hr=Ro({render:function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"vssue"},[e("Iconfont"),this._v(" "),e("VssueHeader"),this._v(" "),e("VssueBody")],1)},staticRenderFns:[]},void 0,ur,void 0,!1,void 0,!1,void 0,void 0,void 0);var fr=t(20),vr=t.n(fr);function gr(n){return{username:n.login,avatar:n.avatar_url,homepage:n.html_url}}function yr(n){return{id:n.number,title:n.title,content:n.body,link:n.html_url}}function br(n){return{like:n["+1"],unlike:n[-1],heart:n.heart}}function xr(n){return{id:n.id,content:n.body_html,contentRaw:n.body,author:gr(n.user),createdAt:n.created_at,updatedAt:n.updated_at,reactions:br(n.reactions)}}function _r(n){return"like"===n?"+1":"unlike"===n?"-1":n}class kr{constructor({baseURL:n="https://github.com",owner:e,repo:t,labels:o,clientId:r,clientSecret:a,state:i,proxy:s}){if(void 0===a||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V3");this.baseURL=n,this.owner=e,this.repo=t,this.labels=o,this.clientId=r,this.clientSecret=a,this.state=i,this.proxy=s,this.$http=vr.a.create({baseURL:"https://github.com"===n?"https://api.github.com":$t(n,"api/v3"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(n=>n.data&&n.data.error?Promise.reject(new Error(n.data.error_description)):n,n=>(void 0===n.response&&"Network Error"===n.message&&(n.response={status:403}),Promise.reject(n)))}get platform(){return{name:"GitHub",link:this.baseURL,version:"v3",meta:{reactable:!0,sortable:!1}}}redirectAuth(){window.location.href=It($t(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const n=Dt(window.location.search);if(n.code){if(n.state!==this.state)return null;const e=n.code;delete n.code,delete n.state;const t=It(Rt(window.location.href),n)+window.location.hash;window.history.replaceState(null,"",t);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:n}){const e=$t(this.baseURL,"login/oauth/access_token"),t="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:o}=await this.$http.post(t,{client_id:this.clientId,client_secret:this.clientSecret,code:n},{headers:{Accept:"application/json"}});return o.access_token}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"token "+n}});return gr(e)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const o={};if(n&&(o.headers={Authorization:"token "+n}),!e){o.params={q:[`"${t}"`,"is:issue","in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(n=>"label:"+n)].join(" "),timestamp:Date.now()};const{data:n}=await this.$http.get("search/issues",o);return n.items.map(yr).find(n=>n.title===t)||null}try{o.params={timestamp:Date.now()};const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,o);return yr(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:o}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:e,body:t,labels:this.labels},{headers:{Authorization:"token "+n}});return yr(o)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:o=10}={}}){const r={params:{timestamp:Date.now()}},a={params:{page:t,per_page:o,timestamp:Date.now()},headers:{Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}};n&&(r.headers={Authorization:"token "+n},a.headers.Authorization="token "+n);const[i,s]=await Promise.all([this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,r),this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,a)]),l=s.headers.link||null,c=/rel="next"/.test(l)?Number(l.replace(/^.*[^_]page=(\d*).*rel="next".*$/,"$1"))-1:/rel="prev"/.test(l)?Number(l.replace(/^.*[^_]page=(\d*).*rel="prev".*$/,"$1"))+1:1,p=l?Number(l.replace(/^.*per_page=(\d*).*$/,"$1")):o;return{count:Number(i.data.comments),page:c,perPage:p,data:s.data.map(xr)}}async postComment({accessToken:n,issueId:e,content:t}){const{data:o}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,{body:t},{headers:{Authorization:"token "+n,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return xr(o)}async putComment({accessToken:n,commentId:e,content:t}){const{data:o}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{body:t},{headers:{Authorization:"token "+n,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return xr(o)}async deleteComment({accessToken:n,commentId:e}){const{status:t}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{headers:{Authorization:"token "+n}});return 204===t}async getCommentReactions({accessToken:n,commentId:e}){const{data:t}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{params:{timestamp:Date.now()},headers:{Authorization:"token "+n,Accept:"application/vnd.github.squirrel-girl-preview"}});return br(t.reactions)}async postCommentReaction({accessToken:n,commentId:e,reaction:t}){const o=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/comments/${e}/reactions`,{content:_r(t)},{headers:{Authorization:"token "+n,Accept:"application/vnd.github.squirrel-girl-preview"}});return 200===o.status?this.deleteCommentReaction({accessToken:n,commentId:e,reactionId:o.data.id}):201===o.status}async deleteCommentReaction({accessToken:n,commentId:e,reactionId:t}){return 204===(await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}/reactions/${t}`,{headers:{Authorization:"token "+n,Accept:"application/vnd.github.squirrel-girl-preview"}})).status}}function wr(n){return null===n?{username:"ghost",avatar:"https://avatars3.githubusercontent.com/u/10137?v=4",homepage:"https://github.com/ghost"}:{username:n.login,avatar:n.avatarUrl,homepage:n.url}}function jr(n){return{id:n.number,title:n.title,content:n.body,link:n.url}}function Er(n){return{like:n.find(n=>"THUMBS_UP"===n.content).users.totalCount,unlike:n.find(n=>"THUMBS_DOWN"===n.content).users.totalCount,heart:n.find(n=>"HEART"===n.content).users.totalCount}}function Sr(n){return{id:n.id,content:n.bodyHTML,contentRaw:n.body,author:wr(n.author),createdAt:n.createdAt,updatedAt:n.updatedAt,reactions:Er(n.reactionGroups)}}function Ar(n){return"like"===n?"THUMBS_UP":"unlike"===n?"THUMBS_DOWN":"heart"===n?"HEART":n}class zr{constructor({baseURL:n="https://github.com",owner:e,repo:t,labels:o,clientId:r,clientSecret:a,state:i,proxy:s}){if(void 0===a||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V4");this.baseURL=n,this.owner=e,this.repo=t,this.labels=o,this.clientId=r,this.clientSecret=a,this.state=i,this.proxy=s,this._pageInfo={page:1,startCursor:null,endCursor:null,sort:null,perPage:null},this._issueNodeId=null,this.$http=vr.a.create({baseURL:"https://github.com"===n?"https://api.github.com":$t(n,"api"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(n=>n.data.error?Promise.reject(n.data.error_description):n.data.errors?Promise.reject(n.data.errors[0].message):n)}get platform(){return{name:"GitHub",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=It($t(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const n=Dt(window.location.search);if(n.code){if(n.state!==this.state)return null;const e=n.code;delete n.code,delete n.state;const t=It(Rt(window.location.href),n)+window.location.hash;window.history.replaceState(null,"",t);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:n}){const e=$t(this.baseURL,"login/oauth/access_token"),t="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:o}=await this.$http.post(t,{client_id:this.clientId,client_secret:this.clientSecret,code:n},{headers:{Accept:"application/json"}});return o.access_token}async getUser({accessToken:n}){const{data:e}=await this.$http.post("graphql",{query:"query getUser {\n  viewer {\n    login\n    avatarUrl\n    url\n  }\n}"},{headers:{Authorization:"token "+n}});return wr(e.data.viewer)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const o={};if(n&&(o.headers={Authorization:"token "+n}),!e){const n=[`"${t}"`,"in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(n=>"label:"+n)].join(" "),{data:e}=await this.$http.post("graphql",{variables:{query:n},query:"query getIssueByTitle(\n  $query: String!\n) {\n  search(\n    query: $query\n    type: ISSUE\n    first: 20\n    ) {\n      nodes {\n      ... on Issue {\n        id\n        number\n        title\n        body\n        url\n      }\n    }\n  }\n}"},o),r=e.data.search.nodes.find(n=>n.title===t);return r?(this._issueNodeId=r.id,jr(r)):null}try{const{data:n}=await this.$http.post("graphql",{query:`query getIssueById {\n  repository(owner: "${this.owner}", name: "${this.repo}") {\n    issue (number: ${e}) {\n      id\n      number\n      title\n      body\n      url\n    }\n  }\n}`},o);return this._issueNodeId=n.data.repository.issue.id,jr(n.data.repository.issue)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:o}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:e,body:t,labels:this.labels},{headers:{Authorization:"token "+n}});return o.url=o.html_url,this._issueNodeId=o.node_id,jr(o)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:o=10,sort:r="desc"}={}}){const a={};n&&(a.headers={Authorization:"token "+n}),null!==this._pageInfo.sort&&r!==this._pageInfo.sort&&(t=1);const{firstOrLast:i,afterOrBefore:s,cursor:l}=this._getQueryParams({page:t,sort:r}),{data:c}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:e,perPage:o},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${i}: $perPage\n        ${null===s?"":`${s}: "${l}"`}\n      ) {\n        totalCount\n        pageInfo {\n          endCursor\n          startCursor\n        }\n        nodes {\n          id\n          body\n          bodyHTML\n          createdAt\n          updatedAt\n          author {\n            avatarUrl\n            login\n            url\n          }\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},a),p=c.data.repository.issue.comments;return"desc"===r&&p.nodes.reverse(),this._pageInfo={page:t,startCursor:p.pageInfo.startCursor,endCursor:p.pageInfo.endCursor,sort:r,perPage:o},{count:p.totalCount,page:t,perPage:o,data:p.nodes.map(Sr)}}async postComment({accessToken:n,content:e}){const{data:t}=await this.$http.post("graphql",{variables:{issueNodeId:this._issueNodeId,content:e},query:"mutation postComment(\n  $issueNodeId: ID!\n  $content: String!\n) {\n  addComment(\n    input: {\n      subjectId: $issueNodeId\n      body: $content\n    }\n  ) {\n    commentEdge {\n      node {\n        id\n        body\n        bodyHTML\n        createdAt\n        updatedAt\n        author {\n          avatarUrl\n          login\n          url\n        }\n        reactionGroups {\n          users (first: 0) {\n            totalCount\n          }\n          content\n        }\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+n}});return Sr(t.data.addComment.commentEdge.node)}async putComment({accessToken:n,commentId:e,content:t}){const{data:o}=await this.$http.post("graphql",{variables:{commentId:e,content:t},query:"mutation putComment(\n  $commentId: ID!,\n  $content: String!,\n) {\n  updateIssueComment(input: {\n    id: $commentId\n    body: $content\n  }) {\n    issueComment {\n      id\n      body\n      bodyHTML\n      createdAt\n      updatedAt\n      author {\n        avatarUrl\n        login\n        url\n      }\n      reactionGroups {\n        users (first: 0) {\n          totalCount\n        }\n        content\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+n}});return Sr(o.data.updateIssueComment.issueComment)}async deleteComment({accessToken:n,commentId:e}){return await this.$http.post("graphql",{variables:{commentId:e},query:"mutation deleteComment(\n  $commentId: ID!,\n) {\n  deleteIssueComment(input: {\n    id: $commentId\n  }) {\n    clientMutationId\n  }\n}"},{headers:{Authorization:"token "+n}}),!0}async getCommentReactions({accessToken:n,issueId:e,commentId:t}){const{firstOrLast:o,afterOrBefore:r,cursor:a}=this._getQueryParams(),{data:i}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:e,perPage:this._pageInfo.perPage},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${o}: $perPage\n        ${null===r?"":`${r}: "${a}"`}\n      ) {\n        nodes {\n          id\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},{headers:{Authorization:"token "+n}});return Er(i.data.repository.issue.comments.nodes.find(n=>n.id===t).reactionGroups)}async postCommentReaction({accessToken:n,commentId:e,reaction:t}){return await this.$http.post("graphql",{variables:{commentId:e,content:Ar(t)},query:"mutation postCommentReaction(\n  $commentId: ID!,\n  $content: ReactionContent!,\n) {\n  addReaction(input: {\n    subjectId: $commentId\n    content: $content\n  }) {\n    reaction {\n      databaseId\n    }\n  }\n}"},{headers:{Authorization:"token "+n}}),!0}_getQueryParams({page:n=this._pageInfo.page,sort:e=this._pageInfo.sort}={}){let t,o,r;return 1===n?(t="asc"===e?"first":"last",o=null,r=null):"asc"===e?n>this._pageInfo.page?(t="first",o="after",r=this._pageInfo.endCursor):(t="last",o="before",r=this._pageInfo.startCursor):n>this._pageInfo.page?(t="last",o="before",r=this._pageInfo.startCursor):(t="first",o="after",r=this._pageInfo.endCursor),{firstOrLast:t,afterOrBefore:o,cursor:r}}}function Tr(n){return{username:n.username,avatar:n.avatar_url,homepage:n.web_url}}function Or(n){return{id:n.iid,title:n.title,content:n.description,link:n.web_url}}function Cr(n){return{id:n.id,content:n.body_html||"",contentRaw:n.body,author:Tr(n.author),createdAt:n.created_at,updatedAt:n.updated_at,reactions:n.reactions}}function Ir(n){return{like:n.filter(n=>"thumbsup"===n.name).length,unlike:n.filter(n=>"thumbsdown"===n.name).length,heart:n.filter(n=>"heart"===n.name).length}}function $r(n){return"like"===n?"thumbsup":"unlike"===n?"thumbsdown":n}class Pr{constructor({baseURL:n="https://gitlab.com",owner:e,repo:t,labels:o,clientId:r,state:a}){this.baseURL=n,this.owner=e,this.repo=t,this.labels=o,this.clientId=r,this.state=a,this._encodedRepo=encodeURIComponent(`${this.owner}/${this.repo}`),this.$http=vr.a.create({baseURL:$t(n,"api/v4"),headers:{Accept:"application/json"}})}get platform(){return{name:"GitLab",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=It($t(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const n=Dt(window.location.hash.slice(1));if(!n.access_token||n.state!==this.state)return null;const e=n.access_token;delete n.access_token,delete n.token_type,delete n.expires_in,delete n.state;const t=Ct(n),o=t?"#"+t:"",r=`${Rt(window.location.href)}${window.location.search}${o}`;return window.history.replaceState(null,"",r),e}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"Bearer "+n}});return Tr(e)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const o={};if(n&&(o.headers={Authorization:"Bearer "+n}),!e){o.params={labels:this.labels.join(","),order_by:"created_at",sort:"asc",search:t};const{data:n}=await this.$http.get(`projects/${this._encodedRepo}/issues`,o);return n.map(Or).find(n=>n.title===t)||null}try{const{data:n}=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}`,o);return Or(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:o}=await this.$http.post(`projects/${this._encodedRepo}/issues`,{title:e,description:t,labels:this.labels.join(",")},{headers:{Authorization:"Bearer "+n}});return Or(o)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:o=10,sort:r="desc"}={}}){const a={params:{page:t,per_page:o,order_by:"created_at",sort:r}};n&&(a.headers={Authorization:"Bearer "+n});const i=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}/notes`,a),s=i.data,l=[];for(const t of s)l.push((async()=>{t.body_html=await this.getMarkdownContent({accessToken:n,contentRaw:t.body})})()),l.push((async()=>{t.reactions=await this.getCommentReactions({accessToken:n,issueId:e,commentId:t.id})})());return await Promise.all(l),{count:Number(i.headers["x-total"]),page:Number(i.headers["x-page"]),perPage:Number(i.headers["x-per-page"]),data:s.map(Cr)}}async postComment({accessToken:n,issueId:e,content:t}){const{data:o}=await this.$http.post(`projects/${this._encodedRepo}/issues/${e}/notes`,{body:t},{headers:{Authorization:"Bearer "+n}});return Cr(o)}async putComment({accessToken:n,issueId:e,commentId:t,content:o}){const{data:r}=await this.$http.put(`projects/${this._encodedRepo}/issues/${e}/notes/${t}`,{body:o},{headers:{Authorization:"Bearer "+n}}),[a,i]=await Promise.all([this.getMarkdownContent({accessToken:n,contentRaw:r.body}),this.getCommentReactions({accessToken:n,issueId:e,commentId:r.id})]);return r.body_html=a,r.reactions=i,Cr(r)}async deleteComment({accessToken:n,issueId:e,commentId:t}){const{status:o}=await this.$http.delete(`projects/${this._encodedRepo}/issues/${e}/notes/${t}`,{headers:{Authorization:"Bearer "+n}});return 204===o}async getCommentReactions({accessToken:n,issueId:e,commentId:t}){const{data:o}=await this.$http.get(`projects/${this._encodedRepo}/issues/${e}/notes/${t}/award_emoji`,{headers:{Authorization:"Bearer "+n}});return Ir(o)}async postCommentReaction({issueId:n,commentId:e,reaction:t,accessToken:o}){try{return 201===(await this.$http.post(`projects/${this._encodedRepo}/issues/${n}/notes/${e}/award_emoji`,{name:$r(t)},{headers:{Authorization:"Bearer "+o}})).status}catch(n){if(n.response&&404===n.response.status)return!1;throw n}}async getMarkdownContent({accessToken:n,contentRaw:e}){const t={};n&&(t.headers={Authorization:"Bearer "+n});const{data:o}=await this.$http.post("markdown",{text:e,gfm:!0},t);return o.html}}function Mr(n){return{username:n.nickname,avatar:n.links.avatar.href,homepage:n.links.html.href}}function qr(n){return{id:n.id,title:n.title,content:n.content.raw,link:n.links.html.href}}function Rr(n){return{id:n.id,content:n.content.html,contentRaw:n.content.raw,author:Mr(n.user),createdAt:n.created_on,updatedAt:n.updated_on,reactions:null}}class Dr{constructor({baseURL:n="https://bitbucket.org",owner:e,repo:t,clientId:o,state:r}){this.baseURL=n,this.owner=e,this.repo=t,this.clientId=o,this.state=r,this.$http=vr.a.create({baseURL:"https://api.bitbucket.org/2.0",headers:{Accept:"application/json"}})}get platform(){return{name:"Bitbucket",link:this.baseURL,version:"v2",meta:{reactable:!1,sortable:!0}}}redirectAuth(){window.location.href=It($t(this.baseURL,"site/oauth2/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const n=Dt(window.location.hash.slice(1));if(!n.access_token||n.state!==this.state)return null;const e=n.access_token;delete n.access_token,delete n.token_type,delete n.expires_in,delete n.state,delete n.scopes;const t=Ct(n),o=t?"#"+t:"",r=`${Rt(window.location.href)}${window.location.search}${o}`;return window.history.replaceState(null,"",r),e}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{headers:{Authorization:"Bearer "+n}});return Mr(e)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const o={};if(n&&(o.headers={Authorization:"Bearer "+n}),!e){o.params={sort:"created_on",q:`title="${t}"`,timestamp:Date.now()};const{data:n}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues`,o);return n.size>0?qr(n.values[0]):null}try{o.params={timestamp:Date.now()};const{data:n}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${e}`,o);return qr(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:o}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues`,{title:e,content:{raw:t},priority:"trivial",kind:"task"},{headers:{Authorization:"Bearer "+n}});return o.links.html={href:$t(this.baseURL,`${this.owner}/${this.repo}/issues/${o.id}`)},qr(o)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:o=10,sort:r="desc"}={}}){const a={params:{page:t,pagelen:o,sort:"desc"===r?"-created_on":"created_on",timestamp:Date.now()}};n&&(a.headers={Authorization:"Bearer "+n});const{data:i}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${e}/comments`,a);return{count:i.size,page:i.page,perPage:i.pagelen,data:i.values.filter(n=>null!==n.content.raw).map(Rr)}}async postComment({accessToken:n,issueId:e,content:t}){const{data:o}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues/${e}/comments`,{content:{raw:t}},{headers:{Authorization:"Bearer "+n}});return Rr(o)}async putComment({accessToken:n,issueId:e,commentId:t,content:o}){const{data:r}=await this.$http.put(`repositories/${this.owner}/${this.repo}/issues/${e}/comments/${t}`,{content:{raw:o}},{headers:{Authorization:"Bearer "+n}});return Rr(r)}async deleteComment({accessToken:n,issueId:e,commentId:t}){const{status:o}=await this.$http.delete(`repositories/${this.owner}/${this.repo}/issues/${e}/comments/${t}`,{headers:{Authorization:"Bearer "+n}});return 204===o}async getCommentReactions(n){throw new Error("501 Not Implemented")}async postCommentReaction(n){throw new Error("501 Not Implemented")}}function Lr(n){return{username:n.login,avatar:n.avatar_url,homepage:n.html_url}}function Br(n){return{id:n.number,title:n.title,content:n.body,link:n.html_url}}function Nr(n){return{id:n.id,content:n.body_html||"",contentRaw:n.body,author:Lr(n.user),createdAt:n.created_at,updatedAt:n.updated_at||"",reactions:null}}class Hr{constructor({baseURL:n="https://gitee.com",owner:e,repo:t,labels:o,clientId:r,clientSecret:a,state:i,proxy:s}){if(void 0===a||void 0===s)throw new Error("clientSecret and proxy is required for Gitee V5");this.baseURL=n,this.owner=e,this.repo=t,this.labels=o,this.clientId=r,this.clientSecret=a,this.state=i,this.proxy=s,this.$http=vr.a.create({baseURL:$t(n,"api/v5")}),this.$http.interceptors.response.use(n=>n,n=>(n.response.data&&n.response.data.message&&(n.message=n.response.data.message),Promise.reject(n)))}get platform(){return{name:"Gitee",link:this.baseURL,version:"v5",meta:{reactable:!1,sortable:!1}}}redirectAuth(){window.location.href=It($t(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"user_info issues notes",response_type:"code",state:this.state})}async handleAuth(){const n=Dt(window.location.search);if(n.code){if(n.state!==this.state)return null;const e=n.code;delete n.code,delete n.state;const t=It(Rt(window.location.href),n)+window.location.hash;window.history.replaceState(null,"",t);return await this.getAccessToken({code:e})}return null}async getAccessToken({code:n}){const e=$t(this.baseURL,"oauth/token"),t="function"==typeof this.proxy?this.proxy(e):this.proxy,{data:o}=await this.$http.post(t,{client_id:this.clientId,client_secret:this.clientSecret,code:n,grant_type:"authorization_code",redirect_uri:window.location.href});return o.access_token}async getUser({accessToken:n}){const{data:e}=await this.$http.get("user",{params:{access_token:n}});return Lr(e)}async getIssue({accessToken:n,issueId:e,issueTitle:t}){const o={params:{timestamp:Date.now()}};if(n&&(o.params.access_token=n),!e){Object.assign(o.params,{q:t,repo:`${this.owner}/${this.repo}`,per_page:1});const{data:n}=await this.$http.get("search/issues",o);return n.map(Br).find(n=>n.title===t)||null}try{const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}`,o);return Br(n)}catch(n){if(n.response&&404===n.response.status)return null;throw n}}async postIssue({accessToken:n,title:e,content:t}){const{data:o}=await this.$http.post(`repos/${this.owner}/issues`,{access_token:n,repo:this.repo,title:e,body:t,labels:this.labels.join(",")});return Br(o)}async getComments({accessToken:n,issueId:e,query:{page:t=1,perPage:o=10}={}}){const r={params:{page:t,per_page:o,timestamp:Date.now()},headers:{Accept:["application/vnd.gitee.html+json"]}};n&&(r.params.access_token=n);const a=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,r);return{count:Number(a.headers.total_count),page:t,perPage:o,data:a.data.map(Nr)}}async postComment({accessToken:n,issueId:e,content:t}){const{data:o}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${e}/comments`,{body:t,access_token:n},{headers:{Accept:["application/vnd.gitee.html+json"]}});return Nr(o)}async putComment({accessToken:n,commentId:e,content:t}){const{data:o}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{body:t,access_token:n},{headers:{Accept:["application/vnd.gitee.html+json"]}});return Nr(o)}async deleteComment({accessToken:n,commentId:e}){const{status:t}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${e}`,{params:{access_token:n}});return 204===t}async getCommentReactions(n){throw new Error("501 Not Implemented")}async postCommentReaction(n){throw new Error("501 Not Implemented")}}t(507);var Fr={name:"Vssue",components:{VssueComponent:hr},props:{options:{type:Object,default:function(){return{}}}},data:function(){return{key:"key",platformOptions:{github:kr,"github-v4":zr,gitlab:Pr,bitbucket:Dr,gitee:Hr}}},computed:{vssueOptions:function(){var n=this.platformOptions,e=this.options,t=n[e.platform];return Object(Ne.a)(Object(Ne.a)({},e),{},{api:t})}},watch:{$route:function(n,e){var t=this;n.path!==e.path&&setTimeout((function(){t.key="reco-".concat((new Date).getTime())}),300)}}},Ur=(t(508),{components:{Valine:st,Vssue:Object(Ce.a)(Fr,(function(){var n=this.$createElement;return(this._self._c||n)("VssueComponent",{key:this.key,staticClass:"vssue-wrapper",attrs:{options:this.vssueOptions}})}),[],!1,null,null,null).exports},props:{isShowComments:{type:Boolean,default:!0}},data:function(){return{commentsOptions:{}}},computed:{solution:function(){var n=this.commentsOptions.solution,e=this.$themeConfig,t=e.valineConfig,o=e.vssueConfig,r=this.$themeLocaleConfig,a=r.valineConfig,i=r.vssueConfig,s="";return void 0!==n?s=n:void 0!==a||void 0!==t?s="valine":void 0===i&&void 0===o||(s="vssue"),s},options:function(){var n=this.commentsOptions.options,e=this.$themeConfig,t=e.valineConfig,o=e.vssueConfig,r=this.$themeLocaleConfig,a=r.valineConfig,i=r.vssueConfig;return void 0!==n?n:void 0!==a||void 0!==t?a||t:void 0!==i||void 0!==o?i||o:null},componentName:function(){var n=this.solution;return"valine"===n?"Valine":"vssue"===n?"Vssue":""}},mounted:function(){this.$themeConfig.commentsSolution=this.solution}}),Vr=Object(Ce.a)(Ur,(function(){var n=this.$createElement,e=this._self._c||n;return e("div",{directives:[{name:"show",rawName:"v-show",value:this.isShowComments,expression:"isShowComments"}],staticClass:"comments-wrapper"},[e("ClientOnly",[e(this.componentName,{tag:"component",attrs:{options:this.options}})],1)],1)}),[],!1,null,null,null).exports,Wr={props:{idVal:String,numStyle:Object,flagTitle:{type:String,default:"Your Article Title"}},methods:{getIdVal:function(n){var e=this.$site.base;return e.slice(0,e.length-1)+n}}},Kr=Object(Ce.a)(Wr,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",{staticClass:"leancloud-visitors",attrs:{id:this.getIdVal(this.idVal),"data-flag-title":this.flagTitle}},[e("a",{staticClass:"leancloud-visitors-count",style:this.numStyle})])}),[],!1,null,null,null).exports,Gr=(t(509),t(79));function Jr(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t(103);function Yr(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}function Xr(n,e,t){return e&&Yr(n.prototype,e),t&&Yr(n,t),n}var Qr={tags:{Git:{key:"Git",scope:"tags",path:"/tag/Git/",pageKeys:["v-4d64a25c"]},MyBatis:{key:"MyBatis",scope:"tags",path:"/tag/MyBatis/",pageKeys:["v-6db14b88"]},"MyBatis-Plus":{key:"MyBatis-Plus",scope:"tags",path:"/tag/MyBatis-Plus/",pageKeys:["v-6db14b88"]},spring:{key:"spring",scope:"tags",path:"/tag/spring/",pageKeys:["v-31c8e948"]},"工具":{key:"工具",scope:"tags",path:"/tag/工具/",pageKeys:["v-20d1bd8f","v-ed415422","v-f1875250"]},"置顶":{key:"置顶",scope:"tags",path:"/tag/置顶/",pageKeys:["v-5ce04cb6"]},vuepress:{key:"vuepress",scope:"tags",path:"/tag/vuepress/",pageKeys:["v-5a7a86af","v-07f3dd22"]},log4:{key:"log4",scope:"tags",path:"/tag/log4/",pageKeys:["v-74d4bdbb"]},springboot:{key:"springboot",scope:"tags",path:"/tag/springboot/",pageKeys:["v-5c35c01c"]},Es6:{key:"Es6",scope:"tags",path:"/tag/Es6/",pageKeys:["v-6fac1a4f"]},vue:{key:"vue",scope:"tags",path:"/tag/vue/",pageKeys:["v-8a36e722","v-398a4a4f","v-2e5792a2"]},vuex:{key:"vuex",scope:"tags",path:"/tag/vuex/",pageKeys:["v-2e5792a2"]},Echarts:{key:"Echarts",scope:"tags",path:"/tag/Echarts/",pageKeys:["v-7476a83e"]},"安装":{key:"安装",scope:"tags",path:"/tag/安装/",pageKeys:["v-7e771070","v-132be533","v-3ce254cc","v-d63eacf6","v-4c624479","v-7851ce0c","v-76aea4b8","v-3a771900"]},websorcket:{key:"websorcket",scope:"tags",path:"/tag/websorcket/",pageKeys:["v-0089f5e2"]},sqoop:{key:"sqoop",scope:"tags",path:"/tag/sqoop/",pageKeys:["v-7743345c"]},kafka:{key:"kafka",scope:"tags",path:"/tag/kafka/",pageKeys:["v-23ba8d92"]},Oozie:{key:"Oozie",scope:"tags",path:"/tag/Oozie/",pageKeys:["v-7a3989dc"]},azkaban:{key:"azkaban",scope:"tags",path:"/tag/azkaban/",pageKeys:["v-56fded9c"]},Hue:{key:"Hue",scope:"tags",path:"/tag/Hue/",pageKeys:["v-5c6715f2"]},Kylin:{key:"Kylin",scope:"tags",path:"/tag/Kylin/",pageKeys:["v-c119c20c"]},scala:{key:"scala",scope:"tags",path:"/tag/scala/",pageKeys:["v-553f9a5c"]},hbase:{key:"hbase",scope:"tags",path:"/tag/hbase/",pageKeys:["v-377761dc"]},Presto:{key:"Presto",scope:"tags",path:"/tag/Presto/",pageKeys:["v-1d22ef68"]},zabbix:{key:"zabbix",scope:"tags",path:"/tag/zabbix/",pageKeys:["v-ff763138"]},superset:{key:"superset",scope:"tags",path:"/tag/superset/",pageKeys:["v-1500dd1e"]},Kerberos:{key:"Kerberos",scope:"tags",path:"/tag/Kerberos/",pageKeys:["v-464eb01e"]},es:{key:"es",scope:"tags",path:"/tag/es/",pageKeys:["v-9a9115a4"]},hive:{key:"hive",scope:"tags",path:"/tag/hive/",pageKeys:["v-5fede7f9","v-3ce3331c"]},Redis:{key:"Redis",scope:"tags",path:"/tag/Redis/",pageKeys:["v-0f87b710"]},"离线数仓":{key:"离线数仓",scope:"tags",path:"/tag/离线数仓/",pageKeys:["v-cb7920d6"]},spark:{key:"spark",scope:"tags",path:"/tag/spark/",pageKeys:["v-225e74a0"]}},categories:{java:{key:"java",scope:"categories",path:"/categories/java/",pageKeys:["v-4d64a25c","v-6db14b88","v-31c8e948","v-5c35c01c"]},"其他":{key:"其他",scope:"categories",path:"/categories/其他/",pageKeys:["v-4d64a25c","v-20d1bd8f","v-ed415422","v-5a7a86af","v-74d4bdbb","v-07f3dd22"]},"收藏":{key:"收藏",scope:"categories",path:"/categories/收藏/",pageKeys:["v-5ce04cb6","v-f1875250"]},"前端":{key:"前端",scope:"categories",path:"/categories/前端/",pageKeys:["v-6fac1a4f","v-8a36e722","v-398a4a4f","v-2e5792a2","v-7476a83e","v-0089f5e2"]},"安装":{key:"安装",scope:"categories",path:"/categories/安装/",pageKeys:["v-7e771070","v-132be533","v-3ce254cc","v-d63eacf6","v-4c624479","v-7851ce0c","v-76aea4b8","v-3a771900"]},"笔记":{key:"笔记",scope:"categories",path:"/categories/笔记/",pageKeys:["v-7743345c","v-23ba8d92","v-7a3989dc","v-56fded9c","v-5c6715f2","v-c119c20c","v-553f9a5c","v-377761dc","v-1d22ef68","v-ff763138","v-1500dd1e","v-464eb01e","v-9a9115a4","v-0f87b710","v-cb7920d6"]},"踩坑":{key:"踩坑",scope:"categories",path:"/categories/踩坑/",pageKeys:["v-5fede7f9","v-225e74a0","v-3ce3331c"]}},timeline:{},about:{}},Zr=function(){function n(e,t){var o=this;Jr(this,n),this._metaMap=Object.assign({},e),Object.keys(this._metaMap).forEach((function(n){var e=o._metaMap[n].pageKeys;o._metaMap[n].pages=e.map((function(n){return Object(Xn.b)(t,n)}))}))}return Xr(n,[{key:"length",get:function(){return Object.keys(this._metaMap).length}},{key:"map",get:function(){return this._metaMap}},{key:"pages",get:function(){return this.list}},{key:"list",get:function(){return this.toArray()}},{key:"toArray",value:function(){var n=this,e=[];return Object.keys(this._metaMap).forEach((function(t){var o=n._metaMap[t],r=o.pages,a=o.path;e.push({name:t,pages:r,path:a})})),e}},{key:"getItemByName",value:function(n){return this._metaMap[n]}}]),n}(),na=(t(246),{tags:function(n,e){var o=t(264);return o(n.frontmatter.date)-o(e.frontmatter.date)>0?-1:1},categories:function(n,e){var o=t(264);return o(n.frontmatter.date)-o(e.frontmatter.date)>0?-1:1}}),ea={tags:function(n,e,t){var o=e;return["tags"].some((function(e){var t=n.frontmatter[e];return Array.isArray(t)?t.some((function(n){return n===o})):t===o}))},categories:function(n,e,t){var o=e;return["categories"].some((function(e){var t=n.frontmatter[e];return Array.isArray(t)?t.some((function(n){return n===o})):t===o}))}},ta=[{pid:"tags",id:"Git",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/Git/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"MyBatis",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/MyBatis/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"MyBatis-Plus",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/MyBatis-Plus/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"spring",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/spring/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"工具",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/工具/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"置顶",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/置顶/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"vuepress",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/vuepress/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"log4",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/log4/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"springboot",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/springboot/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Es6",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/Es6/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"vue",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/vue/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"vuex",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/vuex/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Echarts",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/Echarts/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"安装",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/安装/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"websorcket",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/websorcket/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"sqoop",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/sqoop/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"kafka",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/kafka/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Oozie",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/Oozie/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"azkaban",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/azkaban/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Hue",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/Hue/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Kylin",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/Kylin/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"scala",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/scala/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"hbase",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/hbase/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Presto",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/Presto/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"zabbix",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/zabbix/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"superset",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/superset/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Kerberos",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/Kerberos/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"es",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/es/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"hive",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/hive/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Redis",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/Redis/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"离线数仓",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/离线数仓/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"spark",filter:ea.tags,sorter:na.tags,pages:[{path:"/tag/spark/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"java",filter:ea.categories,sorter:na.categories,pages:[{path:"/categories/java/",interval:[0,4]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"其他",filter:ea.categories,sorter:na.categories,pages:[{path:"/categories/其他/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"收藏",filter:ea.categories,sorter:na.categories,pages:[{path:"/categories/收藏/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"前端",filter:ea.categories,sorter:na.categories,pages:[{path:"/categories/前端/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"安装",filter:ea.categories,sorter:na.categories,pages:[{path:"/categories/安装/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"笔记",filter:ea.categories,sorter:na.categories,pages:[{path:"/categories/笔记/",interval:[0,9]},{path:"/categories/笔记/page/2/",interval:[10,15]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"踩坑",filter:ea.categories,sorter:na.categories,pages:[{path:"/categories/踩坑/",interval:[0,3]}],prevText:"Prev",nextText:"Next"}],oa=t(276),ra=t.n(oa)()("plugin-blog:pagination"),aa=function(){function n(e,t,o){Jr(this,n),ra("pagination",e);var r=e.pages,a=e.prevText,i=e.nextText,s=o.path;this._prevText=a,this._nextText=i;for(var l=0,c=r.length;l<c;l++){if(r[l].path===s){this.paginationIndex=l;break}}this.paginationIndex||(this.paginationIndex=0),this._paginationPages=r,this._currentPage=r[this.paginationIndex],this._matchedPages=t.filter((function(n){return e.filter(n,e.id,e.pid)})).sort(e.sorter)}return Xr(n,[{key:"setIndexPage",value:function(n){this._indexPage=n}},{key:"length",get:function(){return this._paginationPages.length}},{key:"pages",get:function(){var n=ne(this._currentPage.interval,2),e=n[0],t=n[1];return this._matchedPages.slice(e,t+1)}},{key:"hasPrev",get:function(){return 0!==this.paginationIndex}},{key:"prevLink",get:function(){return this.hasPrev?this.paginationIndex-1==0&&this._indexPage?this._indexPage:this._paginationPages[this.paginationIndex-1].path:null}},{key:"hasNext",get:function(){return this.paginationIndex!==this.length-1}},{key:"nextLink",get:function(){return this.hasNext?this._paginationPages[this.paginationIndex+1].path:null}},{key:"prevText",get:function(){return this._prevText}},{key:"nextText",get:function(){return this._nextText}},{key:"getSpecificPageLink",value:function(n){return this._paginationPages[n].path}}]),n}(),ia=new(function(){function n(e){Jr(this,n),this.paginations=e}return Xr(n,[{key:"pages",get:function(){return r.a.$vuepress.$get("siteData").pages}},{key:"getPagination",value:function(n,e,t){ra("id",e),ra("pid",n);var o=this.paginations.filter((function(t){return t.id===e&&t.pid===n}))[0];return new aa(o,this.pages,t)}}]),n}())(ta),sa={comment:{enabled:!1,service:""},email:{enabled:!1},feed:{rss:!1,atom:!1,json:!1}};t(512);var la=function(){function n(e){Jr(this,n),Object.defineProperty(this,"registration",{value:e,configurable:!0,writable:!0})}return Xr(n,[{key:"update",value:function(){return this.registration.update()}},{key:"skipWaiting",value:function(){var n=this.registration.waiting;return n?(console.log("[vuepress:sw] Doing worker.skipWaiting()."),new Promise((function(e,t){var o=new MessageChannel;o.port1.onmessage=function(n){console.log("[vuepress:sw] Done worker.skipWaiting()."),n.data.error?t(n.data.error):e(n.data)},n.postMessage({type:"skip-waiting"},[o.port2])}))):Promise.resolve()}}]),n}(),ca=t(58);r.a.component("SWUpdatePopup",(function(){return Promise.all([t.e(0),t.e(12)]).then(t.bind(null,619))}));var pa=function(){var n=Object(o.a)(regeneratorRuntime.mark((function n(e){var o,r,a;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(o=e.router,e.isServer){n.next=7;break}return n.next=4,t.e(64).then(t.bind(null,617));case 4:r=n.sent,a=r.register,o.onReady((function(){a("".concat("/","service-worker.js"),{registrationOptions:{},ready:function(){console.log("[vuepress:sw] Service worker is active."),ca.a.$emit("sw-ready")},cached:function(n){console.log("[vuepress:sw] Content has been cached for offline use."),ca.a.$emit("sw-cached",new la(n))},updated:function(n){console.log("[vuepress:sw] Content updated."),ca.a.$emit("sw-updated",new la(n))},offline:function(){console.log("[vuepress:sw] No internet connection found. App is running in offline mode."),ca.a.$emit("sw-offline")},error:function(n){console.error("[vuepress:sw] Error during service worker registration:",n),ca.a.$emit("sw-error",n),GA_ID&&ga("send","exception",{exDescription:n.message,exFatal:!1})}})}));case 7:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}(),da=(t(513),{props:{title:String,content:String,time:{type:Number,default:3e3}},data:function(){return{show:!0}},created:function(){var n=this;Number.isFinite(this.time)&&setTimeout((function(){n.show=!1}),this.time)}}),ua=(t(515),t(516),Object(Ce.a)(da,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("transition",{attrs:{name:"slide-fade",appear:""}},[n.show?t("div",{staticClass:"v-notification__group"},[n.title?t("h2",{staticClass:"v-notification__title"},[n._v(n._s(n.title))]):n._e(),n._v(" "),t("div",{staticClass:"v-notification__content"},[t("p",[n._v(n._s(n.content))])])]):n._e()])}),[],!1,null,"03751380",null).exports),ma={props:{type:{type:String,default:""},title:{type:String,default:""},content:{type:String,default:""},blockStyle:{type:Object,default:null},titleStyle:{type:Object,default:null},contentStyle:{type:Object,default:null},changeTime:{type:String,default:"false"}},data:function(){return{boxx:{},class_boxx:"",list:fa,type_boxx_list:ha,show_content:!0,show_title:!0,style_boxx:{},style_title:{},style_content:{},interval:{}}},mounted:function(){this.getContent(),this.checkTitleAndConten(),this.checkStyleWithTitleAndContenAndBlock(),this.getShowType(this.type),this.dynamicUpdateType(this.changeTime)},watch:{changeTime:function(n,e){this.dynamicUpdateType(n)}},methods:{getContent:function(){var n=this;this.list.length>=100||(vr.a.get("https://v1.jinrishici.com/all.json").then((function(e){var t=" • <span style='font-size: 13px;'>"+e.data.author+"</span>";n.list.push({title:e.data.origin+t,content:e.data.content})})),vr.a.get("https://v1.hitokoto.cn").then((function(e){if(!(""==e.data.hitokoto||e.data.hitokoto.length>40)){var t="";null!=e.data.from_who&&(t=" • <span style='font-size: 13px;'>"+e.data.from_who+"</span>"),n.list.push({title:e.data.from+t,content:e.data.hitokoto})}})))},getShowType:function(n){n!=ha[2].type?n!=ha[1].type?this.class_boxx=ha[0].class:this.class_boxx=ha[1].class:this.class_boxx=ha[2].class},getboxx:function(){return this.boxx=fa[Math.floor(Math.random()*fa.length)]},checkTitleAndConten:function(){return""!=this.title&&""==this.content?(this.boxx.title=this.title,void(this.show_content=!1)):""==this.title&&""!=this.content?(this.boxx.content=this.content,this.style_content={"margin-top":"1rem","margin-bottom":"0.4rem"},void(this.show_title=!1)):void(""==this.title||""==this.content?this.getboxx():(this.boxx.title=this.title,this.boxx.content=this.content))},checkStyleWithTitleAndContenAndBlock:function(){null!=this.titleStyle&&(this.style_title=this.titleStyle),null!=this.contentStyle&&(this.style_content=this.contentStyle),null!=this.blockStyle&&(this.style_boxx=this.blockStyle)},dynamicUpdateType:function(n){var e=this;if(this.getContent(),""!=n&&"false"!=n&&/^\d+$/.test(n)){var t=0;for(var o in ha)this.type==ha[o].type&&(t=o);clearInterval(this.interval),this.interval=setInterval((function(){++t==ha.length&&(t=0),e.getShowType(ha[t].type),e.checkTitleAndConten()}),n)}}}},ha=[{type:"tip",class:"tip custom-block"},{type:"warning",class:"warning custom-block"},{type:"danger",class:"danger custom-block"}],fa=[{title:"佚名",content:"勇敢不是不害怕，而是害怕的时候你还能坚持去做"}],va=ma,ya=Object(Ce.a)(va,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{attrs:{id:"boxx"}},[t("div",{class:n.class_boxx,style:n.style_boxx},[t("p",{staticClass:"custom-block-title",style:n.style_title,attrs:{"v-if":n.show_title},domProps:{innerHTML:n._s(n.boxx.title)}}),n._v(" "),t("p",{style:n.style_content,attrs:{"v-if":n.show_content},domProps:{innerHTML:n._s(n.boxx.content)}})])])}),[],!1,null,"f4ca0dac",null).exports,ba=[function(n){var e=n.Vue,t=n.siteData,o=n.isServer;e.mixin(Le),e.mixin(Ke),o||(Object(Ge.a)("//at.alicdn.com/t/font_1030519_2ciwdtb4x65.css"),Object(Je.b)(t.themeConfig.codeTheme))},{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},function(n){n.Vue.component("BackToTop",Xe)},function(n){n.Vue.component("LoadingPage",Qe)},function(n){n.Vue.component("Pagation",at)},function(n){n.Vue.mixin({computed:{$perPage:function(){return 10}}})},function(n){var e=n.Vue;e.component("Comments",Vr),e.component("AccessNumber",Kr)},{},function(n){var e=n.Vue,t=Object.keys(Qr).map((function(n){var e,t=Qr[n],o="$".concat(n);return e={},Object(Gr.a)(e,o,(function(){var n=this.$site.pages;return new Zr(t,n)})),Object(Gr.a)(e,"$current".concat(n.charAt(0).toUpperCase()+n.slice(1)),(function(){var n=this.$route.meta.id;return this[o].getItemByName(n)})),e})).reduce((function(n,e){return Object.assign(n,e),n}),{});t.$frontmatterKey=function(){var n=this["$".concat(this.$route.meta.id)];return n||null},e.mixin({computed:t})},function(n){n.Vue.mixin({computed:{$pagination:function(){return this.$route.meta.pid&&this.$route.meta.id?this.$getPagination(this.$route.meta.pid,this.$route.meta.id):null}},methods:{$getPagination:function(n,e){return e=e||n,ia.getPagination(n,e,this.$route)}}})},function(n){var e={$service:function(){return sa}};n.Vue.mixin({computed:e})},function(n){var e=n.Vue;n.router.options.scrollBehavior=function(n,t,o){if(o)return window.scrollTo({top:o.y,behavior:"smooth"});if(n.hash){if(e.$vuepress.$get("disableScrollBehavior"))return!1;var r=document.querySelector(n.hash);return!!r&&window.scrollTo({top:(a=r,i=document.documentElement,s=i.getBoundingClientRect(),l=a.getBoundingClientRect(),{x:l.left-s.left,y:l.top-s.top}).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"});var a,i,s,l}},pa,function(n){var e=n.Vue;e.prototype.$message=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=document.querySelector(".alert-list");t||((t=document.createElement("div")).className="alert-list",document.body.appendChild(t));var o=e.extend(ua),r=new o;Object.assign(r,n),r.$mount(),t.appendChild(r.$el)}},function(n){n.Vue.component("Boxx",ya)}],xa=["BackToTop","SWUpdatePopup"];t(82);t(219),t(267);function _a(n,e){return(_a=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}t(268);function ka(n){return(ka=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}var wa=t(277),ja=t.n(wa);function Ea(n,e){if(e&&("object"===ja()(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}function Sa(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,o=ka(n);if(e){var r=ka(this).constructor;t=Reflect.construct(o,arguments,r)}else t=o.apply(this,arguments);return Ea(this,t)}}var Aa=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&_a(n,e)}(t,n);var e=Sa(t);function t(){return Jr(this,t),e.apply(this,arguments)}return t}(function(){function n(){Jr(this,n),this.store=new r.a({data:{state:{}}})}return Xr(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){r.a.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(Aa.prototype,{getPageAsyncComponent:Xn.e,getLayoutAsyncComponent:Xn.d,getAsyncComponent:Xn.c,getVueComponent:Xn.f});var za={install:function(n){var e=new Aa;n.$vuepress=e,n.prototype.$vuepress=e}};function Ta(n){n.beforeEach((function(e,t,o){if(Oa(n,e.path))o();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var r=e.path.replace(/\/$/,"")+".html";Oa(n,r)?o(r):o()}else o();else{var a=e.path+"/",i=e.path+".html";Oa(n,i)?o(i):Oa(n,a)?o(a):o()}}))}function Oa(n,e){var t=e.toLowerCase();return n.options.routes.some((function(n){return n.path.toLowerCase()===t}))}var Ca={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return Object(Xn.i)("pageKey",e),r.a.component(e)||r.a.component(e,Object(Xn.e)(e)),r.a.component(e)?n(e):n("")}},Ia={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,o=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},o()[t.slotKey])}},$a={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Pa=(t(518),t(519),Object(Ce.a)($a,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function Ma(){return(Ma=Object(o.a)(regeneratorRuntime.mark((function n(e){var t,o,a,i;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Re.routerBase||Re.base,Ta(o=new Jn({base:t,mode:"history",fallback:!1,routes:qe,scrollBehavior:function(n,e,t){return t||(n.hash?!r.a.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),a={},n.prev=4,n.next=7,Promise.all(ba.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:r.a,options:a,router:o,siteData:Re,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return i=new r.a(Object.assign(a,{router:o,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},xa.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:i,router:o});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}r.a.config.productionTip=!1,r.a.use(Jn),r.a.use(za),r.a.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r.a;Yn(e),t.$vuepress.$set("siteData",e);var o=n(t.$vuepress.$get("siteData")),a=new o,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),s={};return Object.keys(i).reduce((function(n,e){return e.startsWith("$")&&(n[e]=i[e].get),n}),s),{computed:s}}((function(n){return function(){function e(){Jr(this,e)}return Xr(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,o=void 0===t?{}:t;for(var r in o)"/"===r?e=o[r]:0===this.$page.path.indexOf(r)&&(n=o[r]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,o=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?o?o+" | "+t:t:o||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var o=n[t];if(o.path.toLowerCase()===e.toLowerCase())return o}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),Re)),r.a.component("Content",Ca),r.a.component("ContentSlotsDistributor",Ia),r.a.component("OutboundLink",Pa),r.a.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,o=e.children;if(t._isMounted)return o;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),r.a.component("Layout",Object(Xn.d)("Layout")),r.a.component("NotFound",Object(Xn.d)("NotFound")),r.a.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.8.2",hash:"9a8d0d5"},function(n){return Ma.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);